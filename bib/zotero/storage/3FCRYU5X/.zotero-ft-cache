IEEE/ASME TRANSACTIONS ON MECHATRONICS, VOL. 23, NO. 2, APRIL 2018

735

Complete and Time-Optimal Path-Constrained Trajectory Planning With Torque and Velocity
Constraints: Theory and Applications
Peiyao Shen , Xuebo Zhang , Member, IEEE, and Yongchun Fang , Senior Member, IEEE

Abstract—Time optimality and completeness are desired properties for robot trajectory planning, which ensure that robotic systems work reliably and efﬁciently. However, there is great difﬁculty to design planning algorithms that simultaneously guarantee time optimality and completeness. In this paper, a complete, time-optimal and real-time algorithm for path-constrained trajectory planning is proposed under both torque and velocity constraints. The time optimality and completeness of the proposed algorithm are theoretically proven with rigorous mathematical analysis. Moreover, the proposed approach is general and applicable on different robotic systems, and two examples are given on a two-link manipulator and an active-caster-based omnidirectional wheeled mobile robot. Comparative simulation and experimental results are provided to demonstrate the superior performance of the proposed algorithm.
Index Terms—Completeness, manipulator, omnidirectional wheeled mobile robot (OWMR), time-optimal trajectory planning.
I. INTRODUCTION
P LANNING without predeﬁned paths is a complex task [1]–[5]. Therefore, the decoupled planning, also called “path-velocity decomposition” [6], gains popularity for its lower computational complexity. The decoupled planning divides the motion planning into two stages. The ﬁrst stage uses path planning methods to generate a geometric path satisfying high-level constraints, including obstacle avoidance, curvature, etc. The second stage assigns a feasible or optimal velocity proﬁle to the obtained path from the ﬁrst stage, under various constraints including velocity [7]–[12], acceleration [7]–[9], [11], jerk [13], force [5], [14], [15], torque [5], [10], [12], [14], [16]–[22], torque rate [17], etc. In this paper, we will focus on the second stage
Manuscript received April 25, 2017; revised August 21, 2017 and January 19, 2018; accepted February 3, 2018. Date of publication February 28, 2018; date of current version April 16, 2018. Recommended by Technical Editor Y. Guo. This work was supported by the National Natural Science Foundation of China under Grant 61573195 and Grant U1613210. (Corresponding author: Xuebo Zhang.)
The authors are with the Institute of Robotics and Automatic Information System, Nankai University, Tianjin 300071, China, and also with the Tianjin Key Laboratory of Intelligent Robotics, Nankai University, Tianjin 300071, China (e-mail: 1120140100@mail.nankai.edu.cn; zhangxuebo@nankai.edu.cn; fangyc@nankai.edu.cn).
This paper has supplementary downloadable material available at http://ieeexplore.ieee.org.
Color versions of one or more of the ﬁgures in this paper are available online at http://ieeexplore.ieee.org.
Digital Object Identiﬁer 10.1109/TMECH.2018.2810828

to study the time-optimal path-constrained trajectory planning (TOPCTP).
Time optimality is important to increase the working efﬁciency of robots, which implies to assign as high as possible path velocity s˙ along the given path. To this end, the work in [5] proposes an ofﬂine approach with cable tension and motor torque constraints for cable-driven parallel mechanisms. The works in [14], [23], and [24] use dynamic programming techniques on the grid plane (s, s˙) to guarantee the optimality of generated velocity proﬁles. With convex optimization techniques, a time-optimal velocity proﬁle along the given path, is also obtained in [7], [16], [25], and [26]. The work in [17] proposes to generate a smooth and time-optimal velocity proﬁle with torque and torque rate constraints along speciﬁed paths. In task space, quintic polynomials are used in [27] to yield optimal trajectories. Alternately, the proposed method [13] obtains a near time-optimal velocity proﬁle with jerk constraints in real time. The work in [28] provides a simultaneous design of an online planner and a control system to generate and track feasible trajectories. Recently, a planning trajectory is obtained for an industrial biaxial gantry by considering acceleration and velocity constraints [29]–[31]. It is highly computationally efﬁcient since the optimal solution is analytical, and thus shows the obvious advantages comparing with traditional numerical trajectory planning schemes. The work in [8] proposes an online planner in the operational space to generate a feasible velocity proﬁle with kinematic and dynamic constraints. Among these works, the numerical integration (NI) method [18], [19] is able to generate the time-optimal velocity proﬁle along the given path in a real-time manner [22], which attracts signiﬁcant attention.
The original version of NI [18], [19] aims to generate a timeoptimal velocity proﬁle along a speciﬁed path in the presence of only torque constraints for industrial manipulators. Based on Pontryagin maximum principle, TOPCTP possesses a bang– bang structure of torque inputs, thus, the key problem is the computation of switch points, which is successfully solved by NI. The accelerating and decelerating curves, integrated from those switch points, constitute the time-optimal velocity proﬁle. The works in [20]–[22], and [32] provide the detection methods for three types of switch points: tangent, discontinuity, and zero-inertia points. In addition to manipulators [9], [15], NI is also applied to spacecrafts [33] and humanoid robots [34]. In real applications, velocity constraints should also be considered. Under torque/acceleration and velocity constraints, the works in

1083-4435 © 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications standards/publications/rights/index.html for more information.

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on May 24,2022 at 11:05:32 UTC from IEEE Xplore. Restrictions apply.

736

IEEE/ASME TRANSACTIONS ON MECHATRONICS, VOL. 23, NO. 2, APRIL 2018

[10]–[12] indicate that the original NI method [18] that only considers torque constraints may fail to output a feasible velocity proﬁle. The works in [10] and [11] independently suggest their methods to generate feasible velocity proﬁles, yet time optimality and completeness proofs of these methods have not been reported in existing literatures. In robot motion planning, the completeness of an algorithm guarantees that a feasible solution is returned when one exists, otherwise failure is reported in a ﬁnite time [35]. If a planning algorithm is not complete, then this algorithm may return failure for a speciﬁc problem that actually has feasible solutions, or it may not return failure in a ﬁnite time for a problem that has no feasible solutions. Thus, an incomplete planning algorithm may seriously restrict the work capability of robots in complex environments, even leading to unsafe motions, such as a missing grasping [36] and crossroad collision [37]. It is important and highly demanded to design a complete and time-optimal trajectory planning algorithm.
For the TOPCTP problem, this paper proposes a complete, time-optimal, and real-time algorithm under both torque and velocity constraints (CTOA-TV), along with rigorous mathematical proofs on completeness and optimality. In particular, the proposed approach introduces a novel concept of “switch arc” on the part of the speed limit curve determined by velocity constraints, which presents an appealing property for decelerating curves with rigorous mathematical proof. Then, these switch arcs are used together with switch points to generate time-optimal velocity proﬁles. With the aid of these switch arcs, it is proven that under both torque and velocity constraints, the proposed approach can guarantee both completeness and time optimality. Several simulation and experimental results on a two-link manipulator and an active-caster-based omnidirectional wheeled mobile robot (OWMR) are provided to verify the proposed approach and related properties. The major contributions of this paper are as follows.
1) A novel concept of “switch arc” is deﬁned on the part of the speed limit curve decided by velocity constraints, and a property of decelerating curves from switch arcs is discovered and proven. Thus, a real-time, complete, and TOPCTP algorithm is proposed.
2) Time optimality and completeness of the proposed algorithm are shown with rigorous mathematical proofs. These theoretical results, lacked in the previous works, make the proposed algorithm more rigorous and help users to construct a more safe motion planning system that could report a time-optimal solution or a failure in a real-time manner.
3) The proposed algorithm is general and it can be applied on different robotic systems to generate time-optimal velocity proﬁles along speciﬁed paths. This is demonstrated by simulation and experiments on two example systems: two-link manipulators and active-caster-based OWMRs.
This paper is organized as follows. Section II introduces related works of NI under both torque and velocity constraints. In Section III, the switch arc is newly deﬁned, and the CTOA-TV using switch arcs is proposed to generate time-optimal trajectories under torque and velocity constraints. The mathematical proofs on completeness and optimality of CTOA-TV are

Fig. 1. Upper and lower limits of path acceleration s¨ on the plane (s, s˙): red arrows represent upper limits and green arrows represent lower limits. The symbol se is the total length of a speciﬁed path.

provided in Section IV. The detailed application examples on manipulators and OWMRs are provided in Section V. Simulation and experimental results are provided in Section VI. Some conclusions are given in Section VII.

II. RELATED WORKS ON NI WITH TORQUE AND VELOCITY CONSTRAINTS

A. NI with Torque Constraints

In original NI [18], [19] with only torque constraints, along a speciﬁed path, the robot model is parameterized by s(t) instead of time t, with s being the path coordinate on the given path. Accordingly, the time-optimal trajectory planning is simpliﬁed as a planning problem in two dimensional path parameterization space (s, s˙), with s˙ = ds/dt being the path velocity. Then, torque constraints of robotic systems are formulated as an inequality in terms of s, s˙, s¨ as follows:

α(s, s˙) ≤ s¨ ≤ β(s, s˙)

(1)

where s¨ is the path acceleration, α(s, s˙) and β(s, s˙) denote the minimum path acceleration and maximum path acceleration, respectively. The path acceleration s¨ = α(s, s˙) or s¨ = β(s, s˙) indicates that some of actuators touch torque bounds. The more detailed description of (1) can be found in [12]. On the phase plane (s, s˙), α(s, s˙), and β(s, s˙) are depicted as a pair of arrows as shown in Fig. 1. The cyan dash line represents maximum velocity curve (MVC), where all pairs of arrows close. The core of NI is the computation of switch points on MVC, which include tangent, discontinuity and zero-inertia points [20]–[22], [32]. From the starting point (s = 0, s˙ = s˙0), terminal point (s = se , s˙ = s˙e ) and these switch points, accelerating curves are integrated forward with maximum path acceleration β(s, s˙) (red solid curves β1, β2 in Fig. 2), and decelerating curves are integrated backward with minimum path acceleration α(s, s˙) (green solid curves α1, α2 in Fig. 2). Finally, these accelerating and decelerating curves constitute a time-optimal velocity proﬁle on the plane (s, s˙). In this paper, the terms “minimum path acceleration” and “maximum path deceleration” have the same meaning of the lower bound for path acceleration s¨. In addition, as lower and upper bounds of s¨, α(s, s˙), and β(s, s˙) may possess the same sign, which has been mentioned in [18] and [19].

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on May 24,2022 at 11:05:32 UTC from IEEE Xplore. Restrictions apply.

SHEN et al.: COMPLETE AND TIME-OPTIMAL PATH-CONSTRAINED TRAJECTORY PLANNING WITH TORQUE AND VELOCITY CONSTRAINTS

737

Fig. 2. Failure case: when velocity constraints are considered, the original version of NI with torque constraints fails to output a feasible velocity proﬁle. The symbols s˙0, s˙e are, respectively, starting path velocity and terminal path velocity. The cyan dash line represents the limit curve with torque constraints, and the purple dash-dot line is the limit curve with velocity constraints.
B. NI With Torque and Velocity Constraints
The original NI generates a time-optimal velocity proﬁle with only torque constraints. Yet, when velocity constraints are also considered, it may fail to output a feasible trajectory [10]–[12]. The concrete failure conditions are provided with detailed mathematical proofs in [12]. Speciﬁcally, due to velocity constraints V (s), the MVC is altered as
MVC∗(s) = min (MVC (s), V (s)), s ∈ [0, se ] (2)
where se is the total length of the given path. In addition, the part of MVC∗, which is different from MVC, is described as

Fig. 3. From the intersection point p0 of β1 and MVC∗, the switch arc

pa4lopn5gisMthVeCﬁ∗.rsTthoenecufrovuensdαa1m, αo2n,gαs3w, aitncdhαp4oainrtes

and switch all possible

arcs forward decelerating

curves from p4. The cyan dash and purple dash-dot curves are, respec-

tively, MVC(s) with only torque constraints and V (s) with only velocity

constraints. The slope of red arrows represents maximum path acceler-

ation β(s, s˙). The slope of green arrows represents minimum path accel-

eration α(s, s˙). The slope of orange arrows represents path acceleration

s¨ of MVC† (purple dash-dot curve p2p6).

From the above-mentioned analysis, there is still a lack of a complete and TOPCTP algorithm under both torque and velocity constraints, which is explored in this paper.

III. COMPLETE AND TIME-OPTIMAL TRAJECTORY PLANNING
In this section, a novel concept of “switch arc” is deﬁned on the part of the curve MVC†(s). With the aid of an appealing property of integrated backward decelerating curves from switch arcs, the CTOA-TV is proposed, which could guarantee the completeness and time optimality.

MVC†(s) = {MVC∗(s)|MVC∗(s)<MVC(s), s ∈ [0, se ]}. (3)
For instance, the purple dash-dot curve p1p2 is MVC† in Fig. 2. It is shown that, switch points are nonexistent on MVC†, thus it breaks the intersection between the accelerating and decelerating curves, which results in failure of trajectory planning tasks for the original NI with only torque constraints.
In order to generate feasible velocity proﬁles under torque/acceleration and velocity constraints, the works in [10] and [11] provide some solutions. The trap regions on the plane (s, s˙) are discovered in the method [10]. On this basis, the method generates feasible velocity proﬁles under torque and velocity constraints, and it has been implemented in the codes [22]. The method in [11] requires two searching stages to generate feasible velocity proﬁles: ﬁrst, it searches switch points along the given path and outputs one feasible velocity proﬁle that only satisﬁes acceleration constraints; second, taking into account the obtained feasible velocity proﬁle from the ﬁrst search, together with the velocity constraint curve, it searches velocity characteristic points along the given path again, then a feasible velocity proﬁle is generated. Recently, the work in [38] provides the probabilistic completeness proofs of the “AVP-RRT” method with torque constraints for a kinodynamic motion planning problem, wherein the trajectory planning part uses the approach in [10], yet the completeness of the method [10] is not guaranteed.

A. Switch Arc
Deﬁnition 1: A switch arc is a continuous segment of MVC†
(3) that satisﬁes path acceleration constraints (1).
Satisfying path acceleration constraints (1) indicates that, for
any point lying on a switch arc, the slope s¨ of the tangent line to MVC† is between the slopes [α(s, s˙), β(s, s˙)]. As shown in Fig. 3, orange arrows tangent to MVC† are between green and
red arrows on the switch arc (purple solid p4p5). It is noted that many switch arcs may exist on the curve
MVC†. In addition, the switch arc may degenerate into a single
point at which path acceleration constraints are guaranteed.
Property 1: From the intersection point of one accelerating curve and MVC∗, if a switch arc is the ﬁrst one found among switch points and switch arcs forward along MVC∗, then from
its left endpoint, the integrated backward decelerating curve
intersects one of lines: the previous accelerating curve, s˙ = 0, and s = 0 with s˙<s˙0.
Proof: As shown in Fig. 3, from the intersection point p0 of β1 and MVC∗, the switch arc p4p5 is the ﬁrst one found among switch points and switch arcs forward along MVC∗. Then, from
the left endpoint p4 of p4p5, all possible integrated backward decelerating curves are described as follows.
Case 1: The decelerating curve (α1) intersects the line s˙ = 0, or the line s = 0 with s˙<s˙0.

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on May 24,2022 at 11:05:32 UTC from IEEE Xplore. Restrictions apply.

738

IEEE/ASME TRANSACTIONS ON MECHATRONICS, VOL. 23, NO. 2, APRIL 2018

Case 2: The decelerating curve (α2) intersects the previous accelerating curve.
Case 3: The decelerating curve (α3 or α4) intersects MVC∗. In the following, we will prove that Case 3 cannot occur by contradiction. Assume that Case 3 occurs. Then, the integrated backward decelerating curve α∗ from p4 is one of α3, α4. When α∗ is α3, there exists at least one switch point on p0p1 due to the continuity of the slope of red and green arrows [38].
It contradicts with the condition that the switch arc p4p5 is ﬁrst found along MVC∗ from p0.
When α∗ is α4, the green arrow at p3 is below MVC† (the purple dash-dot curve p2p6). The red and green arrows at p2 exceed MVC, otherwise, there exists at least one switch point
on p0p2, which contradicts with the given condition. Based on the deﬁnition of MVC† in (2), MVC† is below MVC, which indicates that the red and green arrows exceed MVC† at p2. Since the slope of green arrows is continuous, there exists at
least one point p7 on p2p3, where the green arrow is tangent to MVC†. Moreover, red and green arrows cannot close at p7 as shown in Fig. 1, which indicates that the slope of the orange tangent arrow to MVC† satisﬁes the inequality constraints (1) at p7. Thus, p7 is the point of another switch arc on MVC†, which contradicts with the condition that the switch arc p4p5 is ﬁrst found along MVC∗ from p0. Note that α∗ may hit MVC∗ at p4 immediately, and its analysis is same with α4.
From the above-mentioned analysis, this assumption is invalid, and Case 3 cannot occur. Therefore, Case 1 and Case 2 possibly occur for the integrated backward decelerating curve from the left endpoint of the switch arc.
Remark 1: Property 1 still holds, if the ﬁrst found switch arc degenerates into one point where (1) is guaranteed. In addition, if the terminal point (s = se , s˙ = s˙e ) or a switch point on MVC† is ﬁrst found instead of switch arcs, Property 1 also holds. The corresponding proof is similar with the above-mentioned procedure. In addition, it has been proven that from switch points on MVC with only torque constraints, integrated backward decelerating curves cannot intersect MVC in [38].
B. Algorithm Procedure
Based on the switch arc in Deﬁnition 1, detailed procedures of the proposed approach are given in Algorithm 1. The output arguments include “failure” and “solution,” wherein the failure indicates that there is no physically feasible velocity proﬁle for TOPCTP, while the solution consisting of accelerating curves, decelerating curves, and switch arcs, represents a time-optimal velocity proﬁle under torque and velocity constraints. The subfunctions are described as.
1) accP rof ile(p) calculates one accelerating curve by forward direction integral with maximum path acceleration β(s, s˙) from p or the right endpoint of p if p is a switch arc, until the accelerating curve hits one of lines: MVC∗, s˙ = 0 and s = se . The hitting point is returned.
2) decP rof ile(p) calculates one decelerating curve by backward direction integral with minimum path acceleration α(s, s˙) from p or the left endpoint of p if p is a switch arc, until the decelerating curve hits one of lines:

Algorithm 1: A Complete and Time-Optimal Algorithm

with Torque and Velocity Constraints (CTOA-TV).

Input: se , s˙0, s˙e , MVC∗.

Output: a solution or failure.

1: p ← (0, s˙0) 2: h ← accP rof ile(p)

3: if h is in one of lines: s˙ = 0, s = se with s˙<s˙e then

4: return failure

5: else if h is in the line s = se with s˙ ≥ s˙e then 6: p ← (se , s˙e ) and go to 17

7: else if h is in a switch arc then

8: p ← the right endpoint of the switch arc, and go to 2

9: else 10: s ← searchSwitch(h, MVC∗)

11: if s is NULL then

12:

p ← (se , s˙e )

13: else

14: p ← s

15: end if

16: end if

17: h ← decP rof ile(p)

18: if h is in one of lines: s˙ = 0, s = 0 with s˙<s˙0 then 19: return failure

20: else if p is (se , s˙e ) then

21: return solution

22: else

23: go to 2

24: end if

s˙ = 0, s = 0 with s˙<s˙0, and the previously generated accelerating curve. The hitting point is returned. 3) searchSwitch(h, MVC∗) searches forward the ﬁrst switch point or switch arc along MVC∗ from the point h. If some switch points or switch arcs are found, then the ﬁrst detected one (the most left one searching from h) is returned, otherwise NULL is returned. Remark 2: In C++ implementation of the proposed approach, three subfunctions are called in sequence to do simple numerical computation along the given path that is divided into n pieces. Suppose there exists a constant T such that the computational time of each subfunction at each discrete point less than or equal to T . The point sets Pacc , Pdec , Pswitch consist of discrete points where subfunctions accP rof ile, decP rof ile, switchSearch are recalled, respectively. accP rof ile and searchSwitch both do computation forward along the given path. Moreover, the starting point of Pacc is the terminal point of Pswitch in term of the line 2–10 in Algorithm 1. Thus, Pacc and Pswitch have no overlapped parts. However, decP rof ile does computation backward along the given path, thus Pdec may be overlapped with Pacc or Pswitch . From the above-mentioned analysis, a solution or failure will be returned by the proposed approach in a fast and ﬁnite computational time δ · n · T with δ ∈ [1, 2]. In addition, the lines 18 and 19 in Algorithm 1 show that Case 1 in proof of Property 1 is one sufﬁcient condition for the failure of TOPCTP.

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on May 24,2022 at 11:05:32 UTC from IEEE Xplore. Restrictions apply.

SHEN et al.: COMPLETE AND TIME-OPTIMAL PATH-CONSTRAINED TRAJECTORY PLANNING WITH TORQUE AND VELOCITY CONSTRAINTS

739

IV. TIME OPTIMALITY AND COMPLETENESS
In this section, based on Property 1 of switch arcs, it is proven that the generated velocity proﬁles by the proposed approach are time-optimal. Then, we give sufﬁcient and necessary conditions with mathematical proofs for the proposed approach to generate time-optimal velocity proﬁles under both torque and velocity constraints. Furthermore, it is proven that under torque and velocity constraints, the proposed approach is complete for TOPCTP.

A. Time Optimality
Under torque and velocity constraints, the obtained solution by Algorithm 1 consists of switch arcs, accelerating curves, and decelerating curves. In this section, the following theorem is presented to prove the optimality of the solution.
Theorem 1: Under both torque and velocity constraints, the solution generated by the proposed CTOA-TV in Algorithm 1 is time-optimal.
Proof: This theorem is proven by contradiction. It is assumed that on the plane (s, s˙) the solution Φ(s) generated by CTOATV is not time-optimal from the starting point (0, s˙0) to the terminal point (se , s˙e ), while Ψ(s) is the optimal trajectory. Then, along the given path, there exists at least one s = s∗ where Ψ(s∗) > Φ(s∗) holds. If Φ(s) is accelerating at s∗, then in order to reach (s∗, Ψ(s∗)), Ψ(s) must be accelerating before s∗ with the path acceleration β (s, s˙) that is greater than β(s, s˙) in (1). It contradicts with the deﬁnition of maximum path acceleration β(s, s˙). If Φ(s) is decelerating at s∗, then in order to leave (s∗, Ψ(s∗)) for (se , Ψ(se )), Ψ(s) must be decelerating after s∗ with the path acceleration α (s, s˙) that is less than α(s, s˙) in (1). It contradicts with the deﬁnition of minimum path acceleration α(s, s˙). If Φ(s) is in a switch arc at s∗, then Ψ(s) is beyond MVC∗ at s∗. It contradicts with torque and velocity constraints represented by MVC∗. Therefore, this assumption is invalid, and Φ(s) is time-optimal.
B. Feasibility Conditions and Completeness
We ﬁrst present Theorem 2 to show working conditions of the proposed approach under torque and velocity constraints. On the basis of Theorem 2, we give the detailed proof on completeness of this approach in Theorem 3.
Theorem 2: The sufﬁcient and necessary conditions of the proposed CTOA-TV in Algorithm 1 to generate a time-optimal velocity proﬁle under torque and velocity constraints are given as follows.
C1: Starting from (s = 0, s˙ = s˙0), switch points and right endpoints of switch arcs, all integrated forward accelerating curves do not hit the line s˙ = 0 and the line s = se with s˙<s˙e .
C2: Starting from (s = se , s˙ = s˙e ), switch points and left endpoints of switch arcs, all integrated backward decelerating curves do not hit the line s˙ = 0 and the line s = 0 with s˙<s˙0.
Proof: (Sufﬁciency) In order to prove sufﬁciency, we analyze procedures of CTOA-TV when both conditions C1, C2 hold, and it is shown that this algorithm outputs a time-optimal velocity proﬁle Φ(s) with torque and velocity constraints. According to C1, from the starting point (s = 0, s˙ = s˙0), the integrated

Fig. 4. Proposed approach outputs a time-optimal velocity proﬁle under torque and velocity constraints, which consists of red solid curves (β0, β1, β2), green solid curves (α1, α2, αe ), and the purple solid curve p2p3. The cyan dash and purple dash-dot curves are, respectively, MVC(s) with only torque constraints and V (s) with only velocity constraints. Note that the green dot curve α˜1 and blue solid curve Ω are only used in the proofs of Theorem 3 and necessity in Theorem 2. α˜1 represents the backward extended part of α1, and Ω represents one possible time-optimal velocity proﬁle for TOPCTP under torque and velocity constraints.
forward accelerating curve in accP rof ile hits either MVC∗ or the line s = se with s˙ ≥ s˙e . If the line s = se with s˙ ≥ s˙e is hit, then decP rof ile is called. In term of C2 and Property 1, the integrated backward decelerating curve from the terminal point (s = se , s˙ = s˙e ) intersects the previously generated accelerating curve, and the algorithm outputs Φ(s). If the curve MVC∗ is hit, then the hitting point is within a switch arc or not. For this hitting point being in the switch arc, starting from the right endpoint of the switch arc, one new accelerating curve is integrated forward in accP rof ile. For this hitting point being not in the switch arc, searchSwitch is called to search forward the ﬁrst one among switch points and switch arcs along MVC∗ from the hitting point. When the ﬁrst one is found, decP rof ile is called to generate one decelerating curve that intersects the previously generated accelerating curve due to C2 and Property 1, and accP rof ile is called to generate one new accelerating curve. When no one is found, the integrated backward decelerating curve from (s = se , s˙ = s˙e ) in decP rof ile intersects the previously generated accelerating curve to output Φ(s). For instance, Fig. 4 shows one case of the above-mentioned proce-
dures, wherein Φ(s) consists of the switch arc p2p3, accelerating curves (β0, β1, β2) and decelerating curves (α1, α2, αe ). From the above-mentioned analysis, sufﬁciency is proven.
(Necessity) We prove necessity by contradiction. CTOA-TV outputs a time-optimal velocity proﬁle Φ(s) with torque and velocity constraints. This velocity proﬁle satisﬁes path acceleration constraints (1), and it consists of accelerating curves, decelerating curves, and switch arcs. It is assumed that one of conditions C1, C2 does not hold. If C1 is violated, then in order to hit the line s˙ = 0 or the line s = se with s˙<s˙e , there exists at least one integrated forward accelerating curve from (s = 0, s˙ = s˙0), switch points and right endpoints of switch arcs, which intersects Φ(s). If C2 is violated, then in order to hit the line s˙ = 0 or the line s = 0 with s˙<s˙0, there exists at least one integrated backward decelerating curve from (s = se , s˙ = s˙e ), switch points and left endpoints of switch arcs, which intersects Φ(s). At these intersection points, the path acceleration of Φ(s) violates

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on May 24,2022 at 11:05:32 UTC from IEEE Xplore. Restrictions apply.

740

IEEE/ASME TRANSACTIONS ON MECHATRONICS, VOL. 23, NO. 2, APRIL 2018

path constraints (1), which contradicts with Φ(s) satisfying (1). Therefore, this assumption is invalid, and both conditions C1, C2 hold. For instance, as shown in Fig. 4, under torque and velocity constraints, this algorithm outputs a time-optimal velocity proﬁle β0 − α1− p2p3 −β1 − α2 − β2 − αe . Starting from p2, the integrated backward decelerating curve α˜1 (the backward extended part of α1) intersects β0 at p7 if C2 is violated. At p7, the slope of the accelerating curve β0 is less than the slope of the decelerating curve α˜1, which indicates that (1) is violated. From the above-mentioned analysis, necessity is proven. In summary, this theorem is proven.
Remark 3: The conditions C1, C2 in Theorem 2 have straightforward physical interpretations. The C1 indicates that along the given path, the given s˙0 is too slow to reach the given s˙e despite of maximum path acceleration β(s, s˙). The C2 indicates that along the given path, the given s˙0 is too fast to reach the given s˙e despite of minimum path acceleration α(s, s˙).
Based on Theorem 2, the completeness of the proposed approach for TOPCTP is proven as follows.
Theorem 3: Under torque and velocity constraints, the proposed CTOA-TV in Algorithm 1 is complete for TOPCTP.
Proof: In robot motion planning, an algorithm is complete for a problem when the following two conditions hold [35]:
1) a solution is returned if one exists; and 2) failure is returned in a ﬁnite time otherwise. As shown in Fig. 4, under torque and velocity constraints, for TOPCTP, if a time-optimal velocity proﬁle Ω exists, then this proﬁle satisﬁes path acceleration constraints (1), and Ω is a continuous curve between (0, s˙0) and (se , s˙e ) that is enclosed by the lines: MVC∗, s = 0, s = se , and s˙ = 0. All of switch points, switch arcs, starting point (0, s˙0), and terminal point (se , s˙e ) are on Ω or above Ω. It is assumed that one of conditions C1, C2 does not hold. If C1 is violated, then, starting from (s = 0, s˙ = s˙0), switch points and right endpoints of switch arcs, there exists at least one integrated forward accelerating curve that intersects Ω, in order to hit one of lines below Ω: s˙ = 0, and s = se with s˙<s˙e . If C2 is violated, then starting from (s = se , s˙ = s˙e ), switch points and left endpoints of switch arcs, there exists at least one integrated backward decelerating curve that intersects Ω, in order to hit one of lines below Ω: s˙ = 0, and s = 0 with s˙<s˙0. At these intersection points, the path acceleration of Ω violates path acceleration constraints (1), which indicates that the assumption is invalid and both conditions C1, C2 hold if a solution exists for TOPCTP. Based on sufﬁciency in Theorem 2, a time-optimal velocity proﬁle is returned by CTOA-TV. From these analysis, the condition 1) holds. As described in Remark 2, a time-optimal velocity proﬁle or failure is obtained by CTOA-TV in a ﬁnite time. Therefore, if there is no feasible velocity proﬁle for TOPCTP under torque and velocity constraints, then CTOA-TV will return failure in a ﬁnite time. The condition 2) holds.
V. APPLICATIONS
This section provides two application examples of the proposed approach on a two-link manipulator and an active-casterbased OWMR.

Fig. 5. OWMR with two blue active casters and one red passive caster.

A. Omnidirectional Wheeled Mobile Robot

Omnidirectional wheeled mobile robots with active casters

possess high degree of maneuverability [39], [40]. In Fig. 5,

the vehicle has three casters: one passive caster and two active

casters. F (Xr Or Yr ) and F (Xw Ow Yw ) represent the robot co-

ordinate system and reference coordinate system, respectively.

R ∈ R+ represents the radius of the robot frame. r ∈ R+ stands

for the radius of three wheels. d ∈ R+ stands for the length of

the steering link FiOi, i ∈ [1, 3], wherein Oi is the center point of the wheel. x ∈ R and y ∈ R represent the position of Or in Fw , with θ ∈ S being the robot orientation. The angles of three casters ηi ∈ S are the angles from Or Fi to FiOi, i ∈ [1, 3], with

anticlockwise being positive.

The kinematic model of the vehicle [39] is described as

ω = Jξ˙

(4)

a = ω˙

(5)

wherein the vector ξ ∈ R3 is the pose of the vehicle, and the

4 × 1 vectors ω, a are the velocity and acceleration of active

casters, respectively. Other variables are described as

ξ = [x y θ]T

J = [J 1 J 2 J 3 J 4]T

J1 =

−cos(θ + η1 + 2π/3) −sin(θ + η1 + 2π/3) −Rsin(η1) T

r

r

r

J2 =

sin(θ+η1 +2π/3) −cos(θ+η1 +2π/3) −d − Rcos (η1) T

d

d

d

J3 =

−cos(θ + η2 − 2π/3) −sin(θ + η2 − 2π/3) −Rsin(η2) T

r

r

r

J4 =

sin(θ+η2 −2π/3) −cos(θ+η2 − 2π/3) −d−Rcos (η2) T

d

d

d

where J i ∈ R3, i ∈ [1, 4] constitute the matrix J ∈ R4×3.

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on May 24,2022 at 11:05:32 UTC from IEEE Xplore. Restrictions apply.

SHEN et al.: COMPLETE AND TIME-OPTIMAL PATH-CONSTRAINED TRAJECTORY PLANNING WITH TORQUE AND VELOCITY CONSTRAINTS

741

Along the speciﬁed path, the pose of the vehicle is represented as ξ(s). Taking the time derivative of ξ(s) yields that

ξ˙ = ξs s˙

(6)

ξs = [xs ys θs ]T

(7)

where xs = dx/ds, ys = dy/ds, and θs = dθ/ds. Substituting (6) and (7) into (4) and (5), we obtain

ω = Jξs s˙

(8)

a = J ξs s¨ + (J †ξs + J ξss )s˙2

(9)

where ξss = ∂ξs /∂s, and the 4 × 3 matrix J† = ∂J/∂s. During the motion along the speciﬁed path, due to nonholo-
nomic constraints of each active caster, there are only two possible angles for each active caster: ηi or ηi + π. The angles η1, η2 are computed as

η1 = atan2(−ys − Rθs cos(θ + 2π/3), −xs

+ Rθssin(θ + 2π/3)) − θ − 2π/3

(10)

η2 = atan2(−ys − Rθs cos(θ − 2π/3), −xs

+ Rθssin(θ − 2π/3)) − θ + 2π/3.

(11)

Because of the stabilizability of active casters in the motion [40], the angles η1, η2 are chosen. In addition, initial angles of active casters at the starting pose with s = 0 are arbitrary. However, for convenience, we suppose that the initial angles of active casters equal to η1, η2 in (10) and (11) with s = 0. Velocity and acceleration constraints of active casters are given as

−ω max ≤ ω ≤ ωmax

(12)

−amax ≤ a ≤ amax

(13)

where ωmax, amax ∈ R4. In order to satisfy acceleration constraints, substituting (9) into (13) yields that

A(s)s¨ + B(s)s˙2 + C(s) ≤ 0

(14)

with A(s) = [(J ξs )T (−J ξs )T ]T B(s) = [(J †ξs + J ξss )T (−J †ξs − J ξss )T ]T

C(s) = [−aTmax − aTmax]T .

Then, according to (14), on the plane (s, s˙), the limits of path acceleration s¨ are computed as

α(s, s˙) = max

−Bi

(s)s˙2 − Ai (s)

Ci (s)

|Ai

(s)<0,

i

∈

[1,

8]

β(s, s˙) = min

−Bi

(s)s˙2 − Ai (s)

Ci (s)

|Ai (s)

>

0,

i

∈

[1,

8]

.

In terms of α(s, s˙) and β(s, s˙), the velocity limit curve with acceleration constraints is computed as

MVC(s) = min{s˙ ≥ 0|α(s, s˙) = β(s, s˙)}. (15)

In order to satisfy velocity constraints, substituting (8) into (12) yields that

A(s)s˙ + D(s) ≤ 0

(16)

Fig. 6. End-effector motion of a two-link manipulator along a given path.

with A(s) = [(J ξs )T (−J ξs )T ]T
D(s) = [−ωTmax − ωTmax]T .
According to (16), the velocity limit curve with velocity constraints is computed as
V (s) = min{−Di(s)/Ai(s)|Ai(s) > 0, i ∈ [1, 8]}. (17) Finally, substituting (15) and (17) into (2) yields the MVC∗. With these α(s, s˙), β(s, s˙), and MVC∗, the proposed approach is applied to the OWMR to generate a time-optimal velocity proﬁle under both acceleration and velocity constraints.

B. Two-Link Manipulator

Fig. 6 shows that a two-link manipulator end effector moves along a given path. The l1 and l2 represent the link length. The θ1 and θ2 represent the joint angle. For simplicity, it is assumed that the endpoint of each link is its mass point, and they are represented as m1 and m2. The τ1 and τ2 represent the joint torque.
The dynamic equation of the manipulator is described as

τ = M (q)q¨ + H(q, q˙ ) + G(q)

(18)

where τ = [τ1 τ2]T

q = [θ1 θ2]T

M (q) = H(q, q˙ ) =

Γ + l1l2m2 cos (θ2) + l12(m1 + m2) Γ

Γ

l22m2

−m2l1l2 sin (θ2)θ˙22 − 2m2l1l2 sin (θ2)θ˙1θ˙2 m2l1l2 sin (θ2)θ˙12

G(q) =

m2l2g cos (θ1 + θ2) + (m1 + m2)l1g cos (θ1) m2l2g cos(θ1 + θ2)

wherein

Γ

=

l

2 2

m

2+l1l2m 2

cos(θ2),

g

is

the

gravitational

acceleration.

For the joints of the manipulator, torque and angular velocity

constraints are set as

− τ max ≤ τ ≤ τ max

(19)

− q˙ max ≤ q˙ ≤ q˙ max

(20)

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on May 24,2022 at 11:05:32 UTC from IEEE Xplore. Restrictions apply.

742

IEEE/ASME TRANSACTIONS ON MECHATRONICS, VOL. 23, NO. 2, APRIL 2018

wherein q˙ max ∈ R2 is a constant vector representing the angular velocity boundary, and τ max ∈ R2 is a constant vector representing the torque boundary.
With inverse kinematic techniques [32], vectors q, q˙ , and q¨ are represented as

q = q(s)

(21)

q˙ = qs s˙

(22)

q¨ = qs s¨ + qss s˙2

(23)

wherein qs = ∂q/∂s and qss = ∂qs /∂s. Then, we substitute (18) and (21)–(23) into (19)–(20), and do similar computational
procedures with OWMR to obtain the path acceleration limits α(s, s˙), β(s, s˙), and the MVC∗ of manipulators. With these α(s, s˙), β(s, s˙), MVC∗, the proposed approach generates a timeoptimal velocity proﬁle for the two-link manipulator under both
torque and velocity constraints. In addition, interested readers
can follow the same procedures to implement the proposed ap-
proach on a six-DOF manipulator.

Fig. 7. OWMR: the original NI method fails to output a feasible velocity proﬁle with constraints ωmax and amax.

VI. SIMULATION AND EXPERIMENTAL RESULTS

In order to verify the proposed approach and related properties, this section provides simulation and experimental results on a two-link manipulator and an active-caster-based OWMR, comparing with the original NI approach [18]. Both simulation and experiment are conducted on an Intel i3 processor at 2.93 GHz. This section chooses nth order Be´zier curves as the position paths

n
P (λ) =

n i

(1 − λ)n−i λi P i

(24)

i=0

where

n i

is the binomial coefﬁcient, λ ∈ [0, 1] is the path pa-

rameter, and P i = [xi yi]T , i ∈ [0, n] is the path control point.

Note that the scalars λ and s obey a nonlinear scaling relation.

For the choice of the given path, in fact, any smooth paths from

existing path planning algorithms can be used in the proposed

approach. Without loss of generality, we use Be´zier curves be-

cause of its simplicity, closed-form expression, and successful

applications in existing path planners [41], [42].

Fig. 8. OWMR: the proposed approach outputs a time-optimal velocity proﬁle with constraints ωmax and amax.

A. Simulation Results on OWMR
In this simulation, the center point Or of robot moves along a cubic Be´zier curve with n = 3 in (24). The robot orientation is speciﬁed as θ(s) = π sin (s). The starting and terminal path velocities are set as s˙0 = 0.2 and s˙e = 0.4, respectively. Each element of velocity constraints ωmax in (12) is set as 18 rad/s and each element of acceleration constraints amax in (13) is set as 20 rad/s2. In Figs. 7 and 8, cyan dash curves represent MVC(s) with acceleration constraints, and purple dash-dot curves represent V (s) with velocity constraints. According to (2), the MVC is obtained as MVC∗, which is represented as the boundary between gray and blank regions.
Simulation results of original NI [18] in Fig. 7 shows that the original NI fails to output a feasible velocity proﬁle along the speciﬁed path under both acceleration and velocity constraints.

In Fig. 7, when the accelerating curve β0 hits MVC∗ at p0, it cannot intersect either the decelerating curve α1 from the switch point p1, the decelerating curve α2 from the switch point p2, or the decelerating curve αe from the point (s = se , s˙ = s˙e ). Therefore, the original NI fails to output a feasible velocity proﬁle.
The time cost of the proposed CTOA-TV is 35 ms, which shows good real-time performance. With the aid of switch arcs
(purple solid curves: q1q2 and q3q4 in Fig. 8), the proposed approach generates a time-optimal velocity proﬁle along the speciﬁed path under both velocity and acceleration constraints.
When the accelerating curve β0 hits the switch arc q1q2, starting from q2, the integrated forward accelerating curve β3 hits MVC∗ at p5. Starting from p5, the switch arc q3q4 is ﬁrst found along MVC∗. From the point q3, the integrated backward decelerating

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on May 24,2022 at 11:05:32 UTC from IEEE Xplore. Restrictions apply.

SHEN et al.: COMPLETE AND TIME-OPTIMAL PATH-CONSTRAINED TRAJECTORY PLANNING WITH TORQUE AND VELOCITY CONSTRAINTS

743

Fig. 9. Manipulator: the original NI method fails to output a feasible Fig. 10. Manipulator: the proposed approach outputs a time-optimal

velocity proﬁle with constraints q˙ max and τmax.

velocity proﬁle with constraints q˙ max and τmax.

curve α3 intersects β3 at o3, which veriﬁes Property 1. Starting from q4, the integrated forward accelerating curve hits MVC∗ at q4 immediately. From q4, the switch point p1 is ﬁrst found along MVC∗. The integrated backward decelerating curve α1 from p1 intersects q3q4. Then, the integrated forward accelerating curve β1 from p1 hits MVC∗ at p3. Staring from p3, the switch point p2 is ﬁrst found along MVC∗. Starting from p2, the integrated backward decelerating curve α2 intersects β1 at o1, and the integrated forward accelerating curve β2 hits MVC∗ at p4. From p4, no switch point and switch arc is detected, therefore starting from the point (s = se , s˙ = s˙e ), the decelerating curve αe is integrated backward and intersects β2 at o2. Finally, the proposed approach generates a time-optimal velocity proﬁle:
β0-q1q2-β3-α3-q3q4-α1-β1-α2-β2-αe . These results on OWMR verify Theorem 2 and Theorem 3.
B. Simulation Results on Manipulator
In this simulation, the two-link manipulator end effector moves along a ﬁfth-order Be´zier curve with n = 5 in (24) as shown in Fig. 6. Each element of torque constraints τ max in (19) is set as 5 Nm, and each element of velocity constraints q˙ max in (20) is set as 30 rad/s. The starting and terminal path velocities equal to zero. In Figs. 9 and 10, cyan dash curves represent MVC(s) with torque constraints, and purple dash-dot curves represent V (s) with velocity constraints. According to (2), the MVC∗ is represented as the boundary between gray and blank regions.
Fig. 9 shows that accelerating curves β0, β1 and decelerating curves α1, αe generated by the original NI do not constitute a feasible velocity proﬁle under both torque and velocity constraints. However, with the aid of switch arcs (purple solid
curves: q1q2, q3q4 and q5q6 in Fig. 10), the proposed approach generates a time-optimal velocity proﬁle β0-q1q2-α1-β1-q3q4β2-q5q6-β3-αe . The corresponding computational time is 31 ms. These simulation results on manipulators verify Theorem 2 and Theorem 3 of the proposed approach again.

Fig. 11. Experimental platform “NK-OMNI I” [39].
C. Experimental Results
This section provides experimental results of the proposed approach on an active-caster-based OWMR “NK-OMNI I” [39] in Fig. 11. The robot center point Or moves along a cubic Be´zier curve (see the blue solid curve in Fig. 12), and the robot orientation is set as θ = 0. Each element of velocity constraints ωmax in (12) is set as 6 rad/s and each element of acceleration constraints amax in (13) is set as 1 rad/s2. The starting and terminal path velocities equal to zero.
The experimental results show that with the aid of switch arcs deﬁned in Section III-A, the proposed approach generates a time-optimal velocity proﬁle under acceleration and velocity constraints, which consists of one red accelerating curve β1, one purple switch arc q1q2, and one green decelerating curve αe in Fig. 13. It is worth mentioning that the proposed approach costs 39 ms to output the time-optimal solution, which shows that the proposed approach can be applied in real-time planning tasks.
With a simple proportional-integral-derivative controller, the robot tracks this time-optimal velocity proﬁle, and the tracking errors go to zero in Fig. 14. The velocity and acceleration of active casters are shown in Figs. 15 and 16, which satisfy the

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on May 24,2022 at 11:05:32 UTC from IEEE Xplore. Restrictions apply.

744

IEEE/ASME TRANSACTIONS ON MECHATRONICS, VOL. 23, NO. 2, APRIL 2018

Fig. 12. Experimental path: the blue solid line represents the given path, and the red dash-dot line represents the obtained path from the laser positioning equipment.

Fig. 15. Velocities of active casters: dark dash lines represent velocity
constraints ωmax and other solid lines represent driving and steering velocities of active casters.

Fig. 13. Proposed approach with constraints ωmax and amax, generates a time-optimal velocity proﬁle: β0-q1q2-αe .

Fig. 16. Accelerations of active casters: dark dash lines represent acceleration constraints amax and other solid lines represent driving and steering accelerations of active casters.

Fig. 14. Tracking errors for x, y, and θ.

corresponding constraints. When the robot tracks the accelerating curve β0, the driving accelerations of active casters equal to 1 rad/s2. When the robot tracks q1q2, the driving velocities of active casters are limited by 6 rad/s, and the corresponding driving accelerations are close to zero. When the robot tracks the decelerating curve αe , the driving accelerations of active casters equal to −1 rad/s2. From the above-mentioned analysis, some active casters touch either velocity bounds or acceleration bounds, thus the robot achieves time-optimal trajectory planning while satisfying both acceleration and velocity constraints.
VII. CONCLUSION
We have proposed a complete, time-optimal and real-time algorithm for path-constrained trajectory planning under both torque and velocity constraints. The contribution is both

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on May 24,2022 at 11:05:32 UTC from IEEE Xplore. Restrictions apply.

SHEN et al.: COMPLETE AND TIME-OPTIMAL PATH-CONSTRAINED TRAJECTORY PLANNING WITH TORQUE AND VELOCITY CONSTRAINTS

745

theoretically and practically important. Theoretically, with rig-
orous mathematical proofs, we show the completeness and time
optimality of the presented algorithm, which guarantee safe
and efﬁcient motion of robotic systems in the presence of both
torque and velocity constraints. Practically, the presented al-
gorithm is general and it is implemented on different robotic
systems to obtain time-optimal trajectories in real time. Compar-
ative simulation and experimental results on manipulators and
OWMRs demonstrate the superior performance of the presented
algorithm.
REFERENCES
[1] C. Lin, P. Chang, and J. Luh, “Formulation and optimization of cubic polynomial joint trajectories for industrial robots,” IEEE Trans. Automat. Control, vol. AC-28, no. 12, pp. 1066–1074, Dec. 1983.
[2] O. Stryk and R. Bulirsch, “Direct and indirect methods for trajectory optimization,” Ann. Oper. Res., vol. 37, no. 1, pp. 357–373, 1992.
[3] M. Steinbach, H. Bock, and R. Longman, “Time optimal extension and retraction of robots: Numerical analysis of the switching structure,” J. Optim. Theory Appl., vol. 84, no. 3, pp. 589–616, 1995.
[4] K. Kim and B. Kim, “Minimum-time trajectory for three-wheeled omnidirectional mobile robots following a bounded-curvature path with a referenced heading proﬁle,” IEEE Trans. Robot., vol. 27, no. 4, pp. 800–808, Aug. 2011.
[5] E. Barnett and C. Gosselin, “Time-optimal trajectory planning of cabledriven parallel mechanisms for fully-speciﬁed paths with G1 discontinuities,” J. Dyn. Syst. Meas. Control, vol. 137, no. 7, pp. 603–617, 2015.
[6] K. Kant and S. Zucker, “Toward efﬁcient trajectory planning: The velocity decomposition,” Int. J. Robot. Res., vol. 5, no. 3, pp. 72–89, 1986.
[7] K. Hauser, “Fast interpolation and time-optimization with contact,” Int. J. Robot. Res., vol. 33, no. 9, pp. 1231–1250, 2014.
[8] C. Bianco and F. Ghilardelli, “Real-time planner in the operational space for the automatic handling of kinematic constraints,” IEEE Trans. Autom. Sci. Eng., vol. 11, no. 3, pp. 730–739, Jul. 2014.
[9] T. Kunz and M. Stilman, “Time-optimal trajectory generation for path following with bounded acceleration and velocity,” in Proc. Robot., Sci. Syst., pp. 9–13, 2012.
[10] L. Zˇ lajpah, “On time optimal path control of manipulators with bounded joint velocities and torques,” in Proc. IEEE Int. Conf. Robot. Autom., 1996, pp. 1572–1577.
[11] F. Lamiraux and J. Laumond, “From paths to trajectories for multibody mobile robots,” in Proc. 5th Int. Symp. Exp. Robot., 1998, pp. 301–309.
[12] P. Shen, X. Zhang, and Y. Fang, “Essential properties of numerical integration for time-optimal trajectory planning along a speciﬁed path,” IEEE Robot. Autom. Lett., vol. 2, no. 2, pp. 888–895, Apr. 2017.
[13] S. Macfarlane and E. Croft, “Jerk-bounded manipulator trajectory planning: Design for real-time applications,” IEEE Trans. Robot. Autom., vol. 19, no. 1, pp. 42–52, Feb. 2003.
[14] K. Shin and N. McKay, “A dynamic programming approach to trajectory planning of robotic manipulators,” IEEE Trans. Automat. Control, vol. 31, no. 6, pp. 491–500, Jun. 1986.
[15] S. Behzadipour and A. Khajepour, “Time-optimal trajectory planning in cable-based manipulators,” IEEE Trans. Robot., vol. 22, no. 3, pp. 559– 563, Jun. 2006.
[16] D. Verscheure, B. Demeulenaere, J. Swevers, J. Schutter, and M. Diehl, “Time-optimal path tracking for robots: A convex optimization approach,” IEEE Trans. Automat. Control, vol. 54, no. 10, pp. 2318–2327, Oct. 2009.
[17] D. Constantinescu and E. Croft, “Smooth and time-optimal trajectory planning for industrial manipulators along speciﬁed paths,” J. Robot. Syst., vol. 17, no. 5, pp. 233–249, 2000.
[18] K. Shin and N. Mckay, “Minimum-time control of robotic manipulators with geometric path constraints,” IEEE Trans. Automatic Control, vol. AC30, no. 6, pp. 531–541, Jun. 1985.
[19] J. Bobrow, S. Dubowsky, and J. Gibson, “Time-optimal control of robotic manipulators along speciﬁed paths,” Int. J. Robot. Res., vol. 4, no. 3, pp. 3–17, 1985.

[20] J. Slotine and H. Yang, “Improving the efﬁciency of time-optimal pathfollowing algorithms,” IEEE Trans. Robot. Autom., vol. 5, no. 1, pp. 118– 124, Feb. 1989.
[21] F. Pfeiffer and R. Johanni, “A concept for manipulator trajectory planning,” IEEE J. Robot. Autom., vol. 3, no. 2, pp. 115–123, Apr. 1987.
[22] Q. Pham, “A general, fast, and robust implementation of the time-optimal path parameterization algorithm,” IEEE Trans. Robot., vol. 30, no. 6, pp. 1533–1540, 2014.
[23] K. Shin and N. McKay, “Selection of near-minimum time geometric paths for robotic manipulators,” IEEE Trans. Automat. Control, vol. AC-31, no. 6, pp. 501–511, Jun. 1986.
[24] S. Singh and M. Leu, “Optimal trajectory generation for robotic manipulators using dynamic programming,” J. Dyn. Syst. Meas. Control, vol. 109, no. 2, pp. 88–96, 1987.
[25] F. Debrouwere et al., “Time-optimal path following for robots with convex-concave constraints using sequential convex programming,” IEEE Trans. Robot., vol. 29, no. 6, pp. 1485–1495, Dec. 2013.
[26] A. Singh and K. Krishna, “A class of non-linear time scaling functions for smooth time optimal control along speciﬁed paths,” in Proc. 2015 IEEE/RSJ Int. Conf. Intell. Robots Syst., 2015, pp. 5809–5816.
[27] D. Hujic, E. Croft, G. Zak, R. Fenton, J. Mills, and B. Benhabib, “The robotic interception of moving objects in industrial settings: Strategy development and experiment,” IEEE/ASME Trans. Mechatronics, vol. 3, no. 3, pp. 225–239, Sep. 1998.
[28] A. Matsushita and T. Tsuchiya, “Control system design with on-line planning for a desired signal and its application to robot manipulators,” IEEE/ASME Trans. Mechatronics, vol. 3, no. 2, pp. 149–152, Jun. 1998.
[29] M. Yuan, Z. Chen, B. Yao, and X. Zhu, “Time optimal contouring control of industrial biaxial gantry: A highly efﬁcient analytical solution of trajectory planning,” IEEE/ASME Trans. Mechatronics, vol. 22, no. 1, pp. 247–257, Feb. 2017.
[30] Z. Chen, B. Yao, and Q. Wang, “μ-synthesis-based adaptive robust control of linear motor driven stages with high-frequency dynamics: A case study,” IEEE/ASME Trans. Mechatronics, vol. 20, no. 3, pp. 1482–1490, Jun. 2015.
[31] Z. Chen, B. Yao, and Q. Wang, “Accurate motion control of linear motors with adaptive robust compensation of nonlinear electromagnetic ﬁeld effect,” IEEE/ASME Trans. Mechatronics, vol. 18, no. 3, pp. 1122–1129, Jun. 2013.
[32] Z. Shiller, “On singular time-optimal control along speciﬁed paths,” IEEE Trans. Robot. Autom., vol. 10, no. 4, pp. 561–566, Aug. 1994.
[33] H. Nguyen and Q. Pham, “Time-optimal path parameterization of rigidbody motions: Applications to spacecraft reorientation,” J. Guid. Control Dyn., vol. 39, no. 7, pp. 1667–1671, 2016.
[34] Q. Pham and O. Stasse, “Time-optimal path parameterization for redundantly actuated robots: A numerical integration approach,” IEEE/ASME Trans. Mechatronics, vol. 20, no. 6, pp. 3257–3263, 2015.
[35] K. Goldberg, “Completeness in robot motion planning,” in Proc. Workshop Algorithmic Found. Robot., San Francisco, CA, USA, pp. 419–429, 1994.
[36] M. Dogar, A. Spielberg, S. Baker, and D. Rus, “Multi-robot grasp planning for sequential assembly operations,” in Proc. 2015 IEEE Int. Conf. Robot. Autom., 2015, pp. 193–200.
[37] E. Masehian and M. Amin-Naseri, “Mobile robot online motion planning using generalized Voronoi graphs,” J. Ind. Eng., vol. 4, no. 5, pp. 1–15, 2010.
[38] Q. Pham, S. Caron, P. Lertkultanon, and Y. Nakamura, “Admissible velocity propagation: Beyond quasi-static path planning for high-dimensional robots,” Int. J. Robot. Res., vol. 36, no. 1, pp. 44–67, 2017.
[39] P. Shen, Y. Fang, and X. Zhang, “Trajectory planning of omnidirectional mobile robots with active casters: Multi-motor coordination and singularity avoidance,” in Proc. 2015 IEEE Int. Conf. Cyber Technol. Autom., Control Intell. Syst., 2015, pp. 151–156.
[40] G. Campion, G. Bastin, and B. D’Andre´a-Novel, “Structural properties and classiﬁcation of kinematic and dynamic models of wheeled mobile robots,” IEEE Trans. Robot. Autom., vol. 12, no. 1, pp. 47–62, Feb. 1996.
[41] Y. Chen, Y. Cai, J. Zheng, and D. Thalmann, “Accurate and efﬁcient approximation of clothoids using Be´zier curves for path planning,” IEEE Trans. Robot., vol. 33, no. 5, pp. 1242–1247, Oct. 2017.
[42] K. Yang and S. Sukkarieh, “An analytical continuous-curvature pathsmoothing algorithm,” IEEE Trans. Robot., vol. 26, no. 3, pp. 561–568, Jun. 2010.

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on May 24,2022 at 11:05:32 UTC from IEEE Xplore. Restrictions apply.

746

IEEE/ASME TRANSACTIONS ON MECHATRONICS, VOL. 23, NO. 2, APRIL 2018

Peiyao Shen received the B.S. degree in intelligence science and technology from Xidian University, Xi’an, China, in 2014. He is currently working toward the Ph.D. degree at the Institute of Robotics and Automatic Information Systems, Nankai University, Tianjin, China. His research interests include motion planning of omnidirectional wheeled mobile robots.
Xuebo Zhang (M’12) received the B.Eng. degree in automation from Tianjin University, Tianjin, China, in 2002, and the Ph.D. degree in control theory and control engineering from Nankai University, Nankai, China, in 2011.
He is currently an Associate Professor with the Institute of Robotics and Automatic Information Systems and also the Tianjin Key Laboratory of Intelligent Robotics, Nankai University. His research interests include mobile robotics, motion planning, and visual servoing.

Yongchun Fang (S’00–M’02–SM’08) received the B.S. and M.S. degrees in control theory and applications from Zhejiang University, Hangzhou, China, in 1996 and 1999, respectively, and the Ph.D. degree in electrical engineering from Clemson University, Clemson, SC, USA, in 2002.
From 2002 to 2003, he was a Postdoctoral Fellow with the Sibley School of Mechanical and Aerospace Engineering, Cornell University, Ithaca, NY, USA. He is currently a Professor with the Institute of Robotics and Automatic Information Systems, Nankai University, Tianjin, China. His research interests include nonlinear control, visual servoing, control of underactuated systems, and AFM-based nano-systems. Dr. Fang is an Associate Editor of the ASME Journal of Dynamic Systems, Measurement, and Control and Journal of Control Theory and Applications.

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on May 24,2022 at 11:05:32 UTC from IEEE Xplore. Restrictions apply.

