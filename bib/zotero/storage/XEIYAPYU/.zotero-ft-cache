2021 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS) September 27 - October 1, 2021. Prague, Czech Republic

2021 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS) | 978-1-6654-1714-3/21/$31.00 ©2021 IEEE | DOI: 10.1109/IROS51168.2021.9636762

Variable-Speed Traveling Salesman Problem for Vehicles with Curvature Constrained Trajectories

Kristy´na Kucˇerova´

Petr Va´nˇa

Jan Faigl

Abstract— This paper presents a novel approach to the multigoal trajectory planning for vehicles with curvature-constrained trajectories such as ﬁxed-wing aircraft. In the existing formulation called the Dubins Traveling Salesman Problem (DTSP), the vehicle speed is assumed to be constant over the whole trajectory, and that does not allow adaptation of the turning radius of the trajectory between the target locations. It does not support optimization of the overall ﬂight time of the multigoal trajectory by exploiting higher speeds for longer turning radii. Therefore, we propose a novel problem formulation called the Variable-Speed Traveling Salesman Problem (VS-TSP) that employs time-efﬁcient trajectories with variable speed based on a generalization of the Dubins vehicle model, allowing multiple turning radii and change of the forward speed of the vehicle. The VS-TSP allows the vehicle to slow down if high maneuverability is necessary and speed up if high-speed turns with a large radius are beneﬁcial to the overall tour cost. Based on the evaluation results for Cessna 172 aircraft model, the proposed VNS-based algorithm with variable speed provides up to about 20 % faster trajectories than a solution of the DTSP with a single turning radius.
I. INTRODUCTION
Multi-goal trajectory planning for a vehicle with the minimum turning radius and ﬁxed forward velocity is known as the Dubins Traveling Salesman Problem (DTSP) [1] with several existing approaches such as [2], [3]. The Dubins vehicle model [4] constrains the vehicle to move forward at a constant speed, and individual point-to-point shortest paths can be found analytically. Furthermore, the cost of the multi-goal tour can be further bounded by the lower bound estimation of the optimal solution value [5]. However, the ﬁxed speed prevents the vehicle’s acceleration capabilities from using the variable speed that directly inﬂuences the minimum turning radius. Therefore, the model is not sufﬁcient for planning time-optimal trajectories for a vehicle that can change its speed.
In this paper, we propose to generalize the DTSP for optimizing the vehicle speed to determine faster trajectories than those with a ﬁxed speed and a minimum turning radius. The newly introduced problem formulation is called the Variable-Speed Traveling Salesman Problem (VS-TSP), and an example of its solution is depicted in Fig. 1.
The authors are with the Faculty of Electrical Engineering, Czech Technical University, 166 27 Prague, Czech Republic. E-mails: {kucerkr1,vanapet1,faiglj}@fel.cvut.cz
The presented work has been supported by the Czech Science Foundation (GACˇ R) under research project No. 19-20238S. The support of the Ministry of Education Youth and Sports (MEYS) of the Czech Republic under project No. LTAIZ19013 is also acknowledged. The access to the computational infrastructure of the OP VVV funded project CZ.02.1.01/0.0/0.0/16 019/0000765 “Research Center for Informatics” is also gratefully acknowledged.

vmin

vmax

VS-TSP

Fig. 1. An example of the VS-TSP instance with eight target locations (small black disks). The variable-speed trajectory (blue) found by the proposed VNS-based algorithm provides superior travel time TVS-TSP = 95 s compared to ﬁxed minimum (green) and maximum (orange) speed trajectories the with costs Tvmin = 116 s and Tvmax = 100 s, respectively.
The VS-TSP formulation enables determining the optimal speed according to the mutual distance between the target locations. The minimum speed allows the vehicle to take advantage of its maximum possible maneuverability for very close locations. On the other hand, the maximum speed reduces the overall travel time on a trajectory between mutually distant locations.
The introduced VS-TSP formulation allows reducing the total time needed to travel the whole multi-goal trajectory. Contrary to the solution of the DTSP, a solution of the VSTSP requires determining the speed problem between the target locations that, however, depends on the sequence of targets being found as a solution of the underlying TSP. The VS-TSP also contains two main optimization parts, as in the DTSP. First, a combinatorial part to determine the optimal sequence of visits to the given set of target locations. The second is a continuous optimization to ﬁnd the fastest trajectory to visit the locations in the sequence.
We propose to solve the VS-TSP by the Variable Neighbourhood Search (VNS) based algorithm [6] initially developed for the DTSP, which faces the computational challenges with fast sequence rejection. The extended Dubins vehicle model [7] with time-efﬁcient trajectories is employed in the proposed solution of the continuous part of the VSTSP. Based on the reported evaluation results, the proposed combination of the approaches [6] and [7] represents an efﬁcient solution of the introduced VS-TSP. The method allows exploiting capabilities of the vehicle better than for the DTSP formulation. Hence, more time-efﬁcient trajectories are determined by the solution of the VS-TSP than the DTSP.
The paper is organized as follows. Related work is sum-

978-1-6654-1714-3/21/$31.00 ©2021 IEEE

4714

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on May 18,2022 at 14:25:34 UTC from IEEE Xplore. Restrictions apply.

marized in the following section. The VS-TSP formulation is introduced in Section III, and the proposed VNS-based method using time-efﬁcient trajectories is described in Section IV. The computational results are reported in Section V. Conclusion and ﬁnal remarks are in Section VI.
II. RELATED WORK
The most related problem to the proposed Variable-Speed Traveling Salesman Problem (VS-TSP) is the Dubins TSP (DTSP) [8]. The DTSP stands to determine the shortest closed-loop path that visits the given set of target locations while the minimum turning radius constraint of Dubins vehicle is met. The turning radius limits the vehicle speed, and thus a larger radius might allow faster speed at the cost of a prolonged path. A longer path might not necessarily result in a longer traveling time because of a higher allowed speed. Even though the DTSP formulation does not provide a direct way to optimize the vehicle speed according to variable turning radius, it provides a way to solve the addressed problem. Therefore, a brief overview of the DTSP and the most related approaches are presented here.
A solution of the DTSP consists of combinatorial optimization to select the optimal sequence of visits to the target locations and continuous optimization to ﬁnd a curvatureconstrained path for Dubins vehicle [4]. Explicit separation of these subproblems is utilized in decoupled approaches [8]– [10], where a sequence of visits is determined before ﬁnding the ﬁnal Dubins tour. The sequence is determined as a solution of the Euclidean TSP, which does not consider the minimum turning radius. Both optimization parts need to be addressed simultaneously to ﬁnd a near-optimal solution, e.g., using genetic algorithm [11], memetic algorithm with local optimization [12], unsupervised learning [3], or sampling heading angles and transformation to the TSP [2].
The currently best performing DTSP algorithm is based on the pre-learned surrogate model to estimate the Dubins tour cost employed in an evolutionary algorithm [13]. The generalization of the surrogate model to an arbitrarily long sequence of visits is based on a sliding window scheme that allows estimating the cost of the ﬁnal trajectory using short trajectory segments called windows. Short windows enable efﬁcient reuse of already computed trajectory segments because trajectories near the optimum often share some subsequences. The sliding window scheme has been utilized in the Variable Neighbourhood Search (VNS) based algorithm for the DTSP [6], where a fast sequence rejection steers the search towards the optimum by quick sequence assessment. The VNS is a combinatorial meta-heuristic, which searches the neighborhood of the current solution using local search and shaking operators [14].
The optimization of the vehicle speed has been addressed in ﬁnding time-optimal trajectories [15] that provides a list of all candidates to the optimal solution. However, the approach allows discontinuities in the vehicle speed. The authors of [7] address the acceleration limits in Dubins path that is further generalized using two different radii for the turn ends with the allowed acceleration/deceleration on the straight part of

Dubins maneuver. Thus, a time-optimized speed proﬁle is computed, and faster, albeit longer, trajectories than Dubins path with the minimum turning radius are reported.
Despite multi-goal trajectory planning with variable vehicle speeds have been proposed for multi-rotor drones [16], [17], there is not (to the best of the authors’ knowledge) an approach for multi-goal variable-speed trajectory planning with a minimum turning radius constraint that ﬁt motion constraints of ﬁxed-wing vehicles. Based on the computational efﬁciency of the VNS-based algorithm [6], we propose to combine it with the time-efﬁcient trajectories [7] in the solution of the VS-TSP.

III. PROBLEM STATEMENT
The Variable-Speed Traveling Salesman Problem (VSTSP) stands to ﬁnd the fastest curvature-constrained trajectory visiting a given set of target locations. The problem can be seen as a generalization of the DTSP [8] where a vehicle with a constraint on the path curvature, such as a ﬁxed-wing aircraft, has to visit a set of target locations with a constant speed and limited minimum turning radius. Unlike in the DTSP, a variable speed in the VS-TSP combines the beneﬁt of the high maneuverability at low vehicle speed with highspeed trajectories for mutually distant target locations.
The employed vehicle model originates from the Dubins vehicle [4] for which a variable speed is allowed. The state of the vehicle q = (x, y, θ, v) consists of its location (x, y), the heading angle θ, and speed v, i.e., q ∈ SE(2) × R. The vehicle motion can be described by the equation

 x˙   v cos θ 

q˙

=

 



y˙ θ˙

 

=

 



v sin θ vκ

 

,



(1)

v˙

a

where κ is a control input representing the current curvature

of the trajectory, and a representing acceleration. The curva-

ture κ can be computed at any given point of the trajectory

as

κ

=

x˙ y¨ − y˙x¨

(x˙ 2

+

y˙ 2 )

3 2

.

(2)

The speed of the vehicle is limited by its minimum and

maximum value

v ∈ [vmin, vmax],

(3)

and minimum/maximum acceleration

a ∈ [amin, amax].

(4)

In the addressed problem, a high speed is possible only when the curvature is low, and therefore, the speed is also limited by the curvature of the trajectory κ

v≤

Kv |κ|

,

(5)

where Kv is a constant determining turning capability of the speciﬁc vehicle. Alternatively, the constraint might be seen such that the curvature is inﬂuenced by the speed. For

4715

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on May 18,2022 at 14:25:34 UTC from IEEE Xplore. Restrictions apply.

ﬁxed-wing vehicles, such as Cessna 172, the constant can be determined based on the maximum bang angle ϕmax and gravitational acceleration g,

Kv = g tan ϕmax.

(6)

Having the model of the vehicle and constraints on the
vehicle trajectory, the VS-TSP can formally be deﬁned as a problem to ﬁnd cost-efﬁcient tour visiting a given set of n target locations P = {p1, . . . , pn}, pi ∈ R2. It is an optimization problem to ﬁnd the fastest trajectory Γ consisting of n trajectory segments Γ1, . . . , Γn , Γi : [0, Ti] → SE(2) × R, where Ti is the travel time of the i-th segment. The trajectory segments are connected into a closed-loop. Each connection
between two consecutive trajectory segments is located at
the one target location, i.e., each trajectory starts (ends) at
one target location. The sequence of target locations visits is denoted Σ = σ1, . . . , σn and the visiting conﬁgurations to the target locations are denoted Q = q1, . . . , qn . The VS-TSP thus stands to determine the optimal sequence of visiting the targets Σ, individual visiting conﬁgurations Q, and trajectory Γ with the minimum total travel time cost T .
The problem is formally deﬁned as Problem 1.

Problem 1 (Variable-Speed TSP (VS-TSP)):

n

min T =
Σ,Q,Γ

Ti,

(7)

i=1

s.t.

Γ = Γ1, . . . , Γn ,

(8)

Γi : [0, Ti] → SE(2) × R,

(9)

Γi(0) = qi, Γi(Ti) = qi+1,

(10)

qi = (pσi , θi, vi)

(11)

Constraints (1) − (5) are met, (12)

where qn+1 d=ef q1 to close the trajectory into a loop.
IV. PROPOSED SOLUTION TO THE VS-TSP
The proposed method for solving the newly introduced Variable-Speed TSP (VS-TSP) is based on the VNS [18] for the DTSP [6] where time-efﬁcient trajectories [7] reduce the travel time to visit the targets by selecting an appropriate turning radius separately for each turn in comparison to a single ﬁxed radius of the DTSP. The method is summarized in Algorithm 1, and it works as follows.
First, individual trajectories connecting the n target locations are determined for discretized vehicle states at each target location. Let have k heading angles and l speeds for each target location; then, there are nkl samples in the total. For a target location pσi , the samples are denoted by the speciﬁc heading angle θia and speed vib, where a ∈ {1, . . . , k}, b ∈ {1, . . . , l}. The mutual connections between samples are determined in computeTrajectories(P) as the costefﬁcient trajectories [7]. The trajectories are computed by the closed-form solution of the generalized Dubins vehicle model with different turning radii at the initial and ﬁnal

Algorithm 1: Proposed VNS-based solver to the VS-TSP

Input: P – A set of target locations. Parameters: k – The number of heading samples,
l – The number of speed samples. Output: Γ – The ﬁnal trajectory with sequence Σ.

1 G ← computeTrajectories(P)

2 Σ ← initialization(G)

3 while t < tmax do 4 Σ ← shake(Σ, l)

5 Σ ← localSearch(Σ , l)

6 if T (Σ ) ≤ T (Σ) then

7

Σ←Σ

8 end

9 end

10 Γ ← retrieveTrajectory(Σ)

endpoint of the particular trajectory segment, allowing two
different speeds, the initial vI and terminal speed vF, see Fig. 2. In the total, Θ(n2k2l2) connections are possible.

Speed

vmax vF
vI vmin
Travel Time
Fig. 2. Speed proﬁles (bottom) with different initial and terminal speed for the corresponding trajectories with different turning radius at the initial and terminal endpoint of the trajectory segment (top).
The maximum curvature (or the minimum turning radius) can be determined based on the actual speed using (5). The vehicle speed is increased for the straight segment, if possible, to reduce the ﬁnal travel time. An example of sampling for the VS-TSP is depicted in Fig. 3.

q1

q3

q2

Fig. 3. An example of sampling possible vehicle states in the VS-TSP with k = 8 heading samples and l = 3 speed samples for each target location. Computed candidate trajectories are represented by blue curves for a single selected heading angle. The dotted circles represent turning radii corresponding to the examined speeds.
The computed costs of the trajectories between the sampled states are stored in a graph G, and a solution of the VS-TSP is found by searching for the best sequence of visits to the target locations among possible sequences. For a

4716

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on May 18,2022 at 14:25:34 UTC from IEEE Xplore. Restrictions apply.

pσ1 θ11, v11
θ12, v11 ...
θ1k, v11
θ11, v12 ...
θ1k, v1l

pσ2 θ21, v21
θ22, v21 ...
θ2k, v21
θ21, v22 ...
θ2k, v2l

pσ3 θ31, v31

pσn θn1 , vn1

θ32, v31

θn2 , vn1

...

...

θ3k, v31 . . . θnk , vn1

θ31, v32
... θ3k, v3l

θn1 , vn2
... θnk , vnl

for the whole sequence
Fig. 4. Search graph structure to determine the fastest trajectory with cost T (Σ) for the utilized discretization of heading angles and vehicle speeds.
selected sequence Σ, the fastest trajectory is determined using dynamic programming that takes O(nk3l3) time because the trajectory is closed-loop. The structure of the search is depicted in Fig. 4.
The initial sequence Σ is determined using the best insertion method [19] in initialization() (Line 2, Algorithm 1). It randomly inserts the ﬁrst three locations into the sequence. The remaining locations are gradually inserted into the best possible place to minimize the cost.
The initial solution is then improved by the VNS-based algorithm using the shake and local search procedures. For each iteration, the current sequence Σ is randomly changed to Σ in shake to try to escape from a local minimum. Then, the local search procedure improves Σ via searching the sequence neighborhood. A systematic search would be too expensive, and therefore, a randomized VNS [20] is utilized that examines n2 randomly selected changes in Σ , and applies each change that is found to be beneﬁcial. The same neighborhood operators as in [6] are used.
The local search procedure is the most demanding part of the algorithm because, at each iteration, n2 candidate sequences are examined to test if such a sequence is better than the current sequence Σ . The computational burden is reduced by applying the fast rejection scheme [6]. It takes advantage of two principles to assess sequence quality using results of the short subtours quickly. First, determining the fastest trajectory for an open-loop subtour takes only O(wk2l2) where w is the length of the subtour. Secondly, there is an increased probability that a speciﬁc subtour is queried repetitively, and thus the already computed results are saved and reused later, which provides signiﬁcant speedup, see [6] for further details.

V. COMPUTATIONAL RESULTS
The introduced VS-TSP formulation of the multi-goal trajectory planning is expected to reduce the travel time compared to the DTSP with a ﬁxed speed that has been empirically evaluated in several test scenarios. The performance of the employed VNS-based algorithm is compared in generating both the constant and variable speed trajectories. Then, the scalability of the proposed approach in terms of density of the target locations ρ, the number of locations n,

and the number of heading samples k is reported. Finally, the effect of the fast sequence rejection scheme [6] is examined.

All the test instances are based on the model of the

Cessna 172 aircraft to evaluate the VS-TSP formulation

in realistic scenarios. The vehicle speed is limited to

vmin = 30 m s−1, vmax = 67 m s−1, and based on the

maximum

banking

angle

ϕmax

=

π 3

,

the

minimum

and

max-

imum turning radii are rmin = 65.7 m and rmax = 264.2 m,

respectively. The acceleration limits are amin = −3 m s−2

and amax = 2 m s−2.

The test instances have been randomly generated, and n

target locations are distributed randomly in a square area

with the side D according to the density ρ as

D = rmin

n ρ

.

(13)

For each testing scenario deﬁned by ρ, n, and k, twenty random instances have been generated, and the median value is reported with its 60 % non-parametric conﬁdence interval.
All the optimization methods have been implemented in
Julia v1.5 and executed on a single core of the Intel Xeon Gold 6146 running at 3.2 GHz. The computational time for solving each interval by a partial algorithm has been limited to tmax = 3600 s. The speed is sampled into l discrete values from the range [vmin, vmax], and both speed limits are always part of the speed set for l > 2. The heading angles are sampled into k values uniformly from [0, 2π). If not speciﬁed, k = 10.

A. Inﬂuence of Variable-Speed Trajectories
The effect of variable-speed trajectories on the solution cost is examined for ﬁve different speed settings. Using only ﬁxed speed vmin or vmax might be seen as the solution of the DTSP, but acceleration/deceleration is allowed during straight segments for the vmin case. The variable-speed variant is computed for l ∈ {3, 5, 10} speed samples.

vmin

280

vmax

l=3

260

l=5

l = 10

240

Cost [s]

220

200

180

101

102

103

Computational Time [s]

Fig. 5. Evolution of the solution cost with increasing computational time for various speed samples for n = 30, ρ = 0.05, and k = 10. The bold curves represent median over twenty random instances, the semi-transparent area represent 60 % conﬁdence interval around the median.

4717

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on May 18,2022 at 14:25:34 UTC from IEEE Xplore. Restrictions apply.

1500

y [m]

1000

500

0

0

1000

0

1000

0

1000

0

1000

0

1000

vmax

x [m]

60

speed [m/s]

50

40 vmin
0

100

200 0

100

200 0

100

200 0

time [s]

100

200 0

100

200

(a) v = vmin,

(b) l = 3,

(c) l = 5,

(d) l = 10,

(e) v = vmax,

T = 224 s, L = 8065 m T = 196 s, L = 10 267 m T = 187 s, L = 9254 m T = 179 s, L = 10 940 m T = 213 s, L = 14 278 m

Fig. 6. Best found trajectories (top) for the VS-TSP instances with n = 30, ρ = 0.05, and k = 10. The trajectories are accompanied with corresponding speed proﬁles (bottom) from which the solution cost T is computed together with the trajectory length L.

Evolution of the solution cost with increasing computational time tmax for n = 30 with the density ρ = 0.05 is depicted in Fig. 5. The results indicate that a single-speed does not need a signiﬁcant time to pre-compute all possible trajectories. However, once the trajectories are computed, the variable speed beneﬁts from faster trajectories, and the overall solution cost is signiﬁcantly better than for the solution of the DTSP with the ﬁxed speed vmin or vmax.
An example of the best-found solutions together with the corresponding speed proﬁles are depicted in Fig. 6. Although the minimum-speed trajectory v = vmin is the shortest one L = 8065 m, it requires the longest time to travel T = 224 s. For the maximum-speed trajectory v = vmax, the travel time is only slightly lower T = 213 s because the trajectory is almost twice longer than for v = vmin. On the other hand, the variable-speed model provides signiﬁcantly better results even for l = 3 because it can utilize slower and faster speeds in one multi-goal trajectory.
B. Inﬂuence of Heading Angles Sampling
The inﬂuence of the number of heading samples k is studied for k ∈ {4, 6, 8, 10, 12, 16, 20} and l = 5 in twenty random instances with n = 30, ρ = 0.05. The computational time has been limited to tmax = 10 000 s, and the solution cost for the selected time stamps of the execution time is depicted in Fig. 7. The results suggest that increasing number of heading samples improves the solution quality. A small improvement in the solution cost can be seen from k = 16 to k = 20 compared to k = 4 and k = 6, because more samples are more computationally demanding.
C. Inﬂuence of the Target Density
An inﬂuence of the target density ρ is shown in Fig. 8. In all scenarios, the variable-speed approach yields better results than using a single speed. For sparse instances, vmax leads to better solutions than vmin, which is reverted for denser

150

Cost [s]

100

tmax

100 s

300 s

50

1000 s

3000 s

10000 s

0

4

6

8

10

12

16

20

Heading Samples [s]

Fig. 7. Solution cost over 20 random instances with n = 30, ρ = 0.05, l = 5, and increasing number of heading samples k. A solution is not found within the given time limit for k = 20 and tmax = 100 s, which is
represented by the unbounded bar.

400

vmin

l=3

vmax

l=5

300

l = 10

Cost [s]

200

100

0

0.01

0.03

0.05

0.07

0.09

Goal Density

Fig. 8. Solution cost in 20 random instances with n = 30 for increasing target density ρ.

instances. For ρ = 0.05, the solution cost of the both vmin and vmax is almost identical, which explains the results for vmin and vmax presented in Fig. 5.

D. Scalability with the Number of Targets
Results on the scalability of the proposed VNS-based solver to the VS-TSP are depicted in Fig. 9 for n ∈ {10, 20, 30, 40} targets. The improvement in the solution cost

4718

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on May 18,2022 at 14:25:34 UTC from IEEE Xplore. Restrictions apply.

by exploiting variable speed is noticeable for all test cases. It is expected behavior because even for a small number of targets, the mutual distances between locations vary, and there is a potential for improvement when using multiple speeds, i.e., multiple turning radii. Therefore, the results can be generalized for instances with different n.

Num. goals

400

40

30

20

300

10

Speeds
vmin vmax l=5

Cost [s]

200

100

100

101

102

103

Computational Time [s]

Fig. 9. Scalability of the proposed VS-TSP solver with an increasing number of targets n. The results are summarized from 20 random instances.

E. Iterations Over Time
The effect of fast sequence rejection [6] on average computational time per a single comparison between the best solution found so far and newly examined solution is depicted in Fig. 10. The comparison is less demanding with increasing runtime because more results on short subsequences are reused. Hence, the computational time is spent in examining more sequences and thus ﬁnding a better solution.

Avg. Time of Comparison [s]

10−1 10−2 10−3

vmin vmax l=3 l=5 l = 10

10−4

10−5 100

101

102

103

Computational Time [s]

Fig. 10. Average time per single comparison of two candidate sequences.

VI. CONCLUSION
In the paper, a novel problem formulation called the Variable-Speed Traveling Salesman Problem (VS-TSP) is introduced as a generalization of the existing DTSP to utilize variable vehicle speed and thus determine faster trajectories by an efﬁcient selection of turning radius according to the density of target locations. The proposed VNS-based method utilizes discretization of the possible vehicle speed utilized in the multi-radius extension of the Dubins vehicle model to ﬁnd time-efﬁcient trajectories. Based on the presented computational results, a relatively high number of speed samples are needed to signiﬁcantly improve the solution

of the herein addressed multi-goal trajectory planning with
curvature-constrained trajectories. However, the employed
fast sequence rejection method based on the sliding window
scheme reduces the computational load. It thus enables
searching a larger search space than for a single-vehicle
speed of the regular DTSP. Overall, the proposed VS-TSPbased method produces up to about 20 % faster trajectories
compared to the utilization of a single constant speed.
REFERENCES
[1] J. Ny, E. Feron, and E. Frazzoli, “On the dubins traveling salesman problem,” IEEE Transactions on Automatic Control, vol. 57, no. 1, pp. 265–270, 2011.
[2] K. Obermeyer, P. Oberlin, and S. Darbha, “Sampling-Based Roadmap Methods for a Visual Reconnaissance UAV*,” in AIAA Guidance, Navigation, and Control Conference, 2010.
[3] J. Faigl, P. Va´nˇa, R. Peˇnicˇka, and M. Saska, “Unsupervised learningbased ﬂexible framework for surveillance planning with aerial vehicles,” Journal of Field Robotics, vol. 36, no. 1, pp. 270–301, 2019.
[4] L. E. Dubins, “On curves of minimal length with a constraint on average curvature, and with prescribed initial and terminal positions and tangents,” American Journal of mathematics, vol. 79, no. 3, pp. 497–516, 1957.
[5] S. G. Manyam and S. Rathinam, “On Tightly Bounding the Dubins Traveling Salesman’s Optimum,” Journal of Dynamic Systems, Measurement, and Control, vol. 140, no. 7, p. 071013, 2018.
[6] J. Faigl, P. Va´nˇa, and J. Drchal, “Fast sequence rejection for multi-goal planning with dubins vehicle,” in IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS), 2020, pp. 6773–6780.
[7] K. Kucˇerova´, P. Va´nˇa, and J. Faigl, “On ﬁnding time-efﬁcient trajectories for ﬁxed-wing aircraft using dubins paths with multiple radii,” in Proceedings of the 35th Annual ACM Symposium on Applied Computing, 2020, pp. 829–831.
[8] K. Savla, E. Frazzoli, and F. Bullo, “On the point-to-point and traveling salesperson problems for dubins’ vehicle,” in American Control Conference. IEEE, 2005, pp. 786–791.
[9] X. Ma and D. A. Castanon, “Receding horizon planning for Dubins traveling salesman problems,” in 45th IEEE Conference on Decision and Control, 2006, pp. 5453–5458.
[10] J. Faigl, P. Va´nˇa, M. Saska, T. Ba´cˇa, and V. Spurny`, “On solution of the dubins touring problem,” in 2017 European Conference on Mobile Robots (ECMR). IEEE, 2017, pp. 1–6.
[11] K. Obermeyer, “Path planning for a uav performing reconnaissance of static ground targets in terrain,” in AIAA Guidance, Navigation, and Control Conference, 2009, pp. 10–13.
[12] X. Zhang, J. Chen, B. Xin, and Z. Peng, “A memetic algorithm for path planning of curvature-constrained uavs performing surveillance of multiple ground targets,” Chinese Journal of Aeronautics, vol. 27, no. 3, pp. 622–633, 2014.
[13] J. Drchal, P. Va´nˇa, and J. Faigl, “Wism: Windowing surrogate model for evaluation of curvature-constrained tours with dubins vehicle,” IEEE Transactions on Cybernetics, 2020.
[14] N. Mladenovic´ and P. Hansen, “Variable neighborhood search,” Computers & operations research, vol. 24, no. 11, pp. 1097–1100, 1997.
[15] A. Wolek, E. M. Cliff, and C. A. Woolsey, “Time-optimal path planning for a kinematic car with variable speed,” Journal of Guidance, Control, and Dynamics, pp. 2374–2390, 2016.
[16] J. Faigl, P. Va´nˇa, and R. Peˇnicˇka, “Multi-vehicle close enough orienteering problem with be´zier curves and multi-rotor aerial vehicles,” in IEEE International Conference on Robotics and Automation (ICRA), 2019, pp. 3039–3044.
[17] R. Raj and C. Murray, “The multiple ﬂying sidekicks traveling salesman problem with variable drone speeds,” Transportation Research Part C: Emerging Technologies, vol. 120, p. 102813, 2020.
[18] N. Mladenovic´ and P. Hansen, “Variable neighborhood search,” Computers & Operations Research, vol. 24, no. 11, pp. 1097–1100, 1997.
[19] D. J. Rosenkrantz, R. E. Stearns, and P. M. Lewis, II, “An analysis of several heuristics for the traveling salesman problem,” SIAM journal on computing, vol. 6, no. 3, pp. 563–581, 1977.
[20] P. Hansen and N. Mladenovic´, “Variable neighborhood search: Principles and applications,” European Journal of Operational Research, vol. 130, no. 3, pp. 449–467, 2001.

4719

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on May 18,2022 at 14:25:34 UTC from IEEE Xplore. Restrictions apply.

