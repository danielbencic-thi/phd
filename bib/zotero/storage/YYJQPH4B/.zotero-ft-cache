Choset-79066 book February 22, 2005 17:37
3 Conﬁguration Space
TO CREATE motion plans for robots, we must be able to specify the position of the robot. More speciﬁcally, we must be able to give a speciﬁcation of the location of every point on the robot, since we need to ensure that no point on the robot collides with an obstacle. This raises some fundamental questions: How much information is required to completely specify the position of every point on the robot? How should this information be represented? What are the mathematical properties of these representations? How can obstacles in the robot’s world be taken into consideration while planning the path of a robot?
In this chapter, we begin to address these questions. We ﬁrst discuss exactly what is meant by a conﬁguration of a robot and introduce the concept of the conﬁguration space, one of the most important concepts in robot motion planning. We then brieﬂy discuss how obstacles in the robot’s environment restrict the set of admissible paths. We then begin a more rigorous investigation of the properties of the conﬁguration space, including its dimension, how it sometimes can be represented by a differentiable manifold, and how manifolds can be represented by embeddings and parameterizations. We conclude the chapter by discussing mappings between different representations of the conﬁguration, and the Jacobian of these mappings, which relates velocities in the different representations.

Choset-79066 book February 22, 2005 17:37

40

3 Conﬁguration Space

3.1 Specifying a Robot’s Conﬁguration
To make our discussion more precise, we introduce the following deﬁnitions. The conﬁguration of a robot system is a complete speciﬁcation of the position of every point of that system. The conﬁguration space, or C-space, of the robot system is the space of all possible conﬁgurations of the system. Thus a conﬁguration is simply a point in this abstract conﬁguration space. Throughout the text, we use q to denote a conﬁguration and Q to denote the conﬁguration space.1 The number of degrees of freedom of a robot system is the dimension of the conﬁguration space, or the minimum number of parameters needed to specify the conﬁguration.
To illustrate these deﬁnitions, consider a circular mobile robot that can translate without rotating in the plane. A simple way to represent the robot’s conﬁguration is to specify the location of its center, (x, y), relative to some ﬁxed coordinate frame. If we know the radius r of the robot, we can easily determine from the conﬁguration q = (x, y) the set of points occupied by the robot. We will use the notation R(q) to denote this set. When we deﬁne the conﬁguration as q = (x, y), we have
R(x, y) = {(x , y ) | (x − x )2 + ( y − y )2 ≤ r 2},
and we see that these two parameters, x and y, are sufﬁcient to completely determine the conﬁguration of the circular robot. Therefore, for the circular mobile robot, we can represent the conﬁguration space by R2 once we have chosen a coordinate frame in the plane.
Robots move in a two- or three-dimensional Euclidean ambient space, represented by R2 or R3, respectively. We sometimes refer to this ambient space as the workspace. Other times we have a more speciﬁc meaning for “workspace.” For example, for a robot arm, often we call the workspace the set of points of the ambient space reachable by a point on the hand or end effector (see ﬁgure 3.3). For the translating mobile robot described above, the workspace and the conﬁguration space are both two-dimensional Euclidean spaces, but it is important to keep in mind that these are different spaces. This becomes clear when we consider even slightly more complicated robots, as we see next.
Consider a two-joint planar robot arm, as shown in ﬁgure 3.1. A point on the ﬁrst link of the arm is pinned, so that the only possible motion of the ﬁrst link is a rotation about this joint. Likewise, the base of the second link is pinned to a point at the end of the ﬁrst link, and the only possible motion of the second link is a rotation about this joint. Therefore, if we specify the parameters θ1 and θ2, as shown in ﬁgure 3.1, we
1. While q is used almost universally to denote a conﬁguration, the conﬁguration space is sometimes denoted by C, particularly in the path-planning community.

Choset-79066 book February 22, 2005 17:37

3.1 Specifying a Robot’s Conﬁguration

41

End effector

Link 1

Link 2 q2

q1

Figure 3.1 The angles θ1 and θ2 specify the conﬁguration of the two-joint robot.
have speciﬁed the conﬁguration of the arm. For now we will assume no joint limits, so the two links can move over each other.
Each joint angle θi corresponds to a point on the unit circle S1, and the conﬁguration space is S1 × S1 = T 2, the two-dimensional torus. It is common to picture a torus as the surface of a doughnut because a torus has a natural embedding in R3, just as a circle S1 has a natural embedding in R2. By cutting the torus along the θ1 = 0 and θ2 = 0 curves, we can ﬂatten the torus onto the plane, as shown in ﬁgure 3.2. With this planar representation, we are identifying points on S1 by points in the interval [0, 2π ) ⊂ R. While this representation covers all points in S1, the interval [0, 2π), being a subset of the real line, does not naturally wrap around like S1, so there is a discontinuity in the representation. As we discuss in section 3.4, this is because S1 is topologically different from any interval of R.
We deﬁne the workspace of the two-joint manipulator to be the reachable points by the end effector. The workspace for our two-joint manipulator is an annulus (ﬁgure 3.3), which is a subset of R2. All points in the interior of the annulus are reachable in two ways, with the arm in a right-arm and a left-arm conﬁguration, sometimes called elbow-up and elbow-down. Therefore, the position of the end effector is not a valid conﬁguration (not a complete description of the location of all points of the robot), so the annulus is not a conﬁguration space for this robot.
So we have seen that the conﬁguration spaces of both the translating mobile robot and the two-joint manipulator are two-dimensional, but they are quite different. The torus T 2 is doughnut-shaped with ﬁnite area, while R2 is ﬂat with inﬁnite area. We delve further into these sorts of differences when we discuss topology in section 3.4.

Choset-79066 book March 22, 2005 9:59

42 q2

q1 (a)

2π R

P

q2 q1
GF PR
(b)

q2 0F 0

G

q1

2π

(c)

Figure 3.2 (a) A two-joint manipulator. (b) The conﬁguration of the robot is represented as a point on the toral conﬁguration space. (c) The torus can be cut and ﬂattened onto the plane. This planar representation has “wraparound” features where the edge F R is connected to G P, etc.

Figure 3.3 The workspace for this two-joint manipulator is an annulus, a disk with a smaller disk removed from it. Note that all points in the interior of the annulus are reachable with a right-arm conﬁguration and a left-arm conﬁguration.

Choset-79066 book February 22, 2005 17:37

3.2 Obstacles and the Conﬁguration Space

43

3.2 Obstacles and the Conﬁguration Space

Equipped with our understanding of conﬁgurations and of conﬁguration spaces, we can deﬁne the path-planning problem to be that of determining a continuous mapping, c : [0, 1] → Q, such that no conﬁguration in the path causes a collision between the robot and an obstacle. It is useful to deﬁne explicitly the set of conﬁgurations for which such a collision occurs. We deﬁne a conﬁguration space obstacle QOi to be the set of conﬁgurations at which the robot intersects an obstacle WOi in the workspace, i.e.,

QOi = {q ∈ Q | R(q) WOi = ∅}.

The free space or free conﬁguration space Qfree is the set of conﬁgurations at which the robot does not intersect any obstacle, i.e.,

Qfree = Q\

QOi .

i

With this notation, we deﬁne a free path to be a continuous mapping c : [0, 1] →

Qfree, and a semifree path to be a continuous mapping c : [0, 1] → cl(Qfree), in which cl(Qfree) denotes the closure of Qfree. A free path does not allow contact between the

robot and obstacles, while a semifree path allows the robot to contact the boundary

of an obstacle. We assume that Qfree is open unless otherwise noted. We now examine how obstacles in the workspace can be mapped into the conﬁg-

uration space for the robots that we discussed above.

3.2.1 Circular Mobile Robot
Consider the circular mobile robot in an environment with a single polygonal obstacle in the workspace, as shown in ﬁgure 3.4. In ﬁgure 3.4(b), we slide the robot around the obstacle to ﬁnd the constraints the obstacle places on the conﬁguration of the robot, i.e., the possible locations of the robot’s reference point. We have chosen to use the center of the robot, but could easily choose another point. Figure 3.4(c) shows the resulting obstacle in the conﬁguration space. Motion planning for the circular robot in ﬁgure 3.4(a) is now equivalent to motion planning for a point in the conﬁguration space, as shown in ﬁgure 3.4(c).
Figure 3.5 shows three mobile robots of different radii in the same environment. In each case, the robot is trying to ﬁnd a path from one conﬁguration to another. To transform the workspace obstacles into conﬁguration obstacles, we “grow” the polygon outward and the walls inward. The problem is now to ﬁnd a path for the point robot in the conﬁguration space. We see that the growing process has disconnected the free conﬁguration space Qfree for the largest robot, showing that there is no solution for this robot.

Choset-79066 book February 22, 2005 17:37
44

3 Conﬁguration Space

(a)

(b)

(c)

Figure 3.4 (a) The circular mobile robot approaches the workspace obstacle. (b) By sliding the mobile robot around the obstacle and keeping track of the curve traced out by the reference point, we construct the conﬁguration space obstacle. (c) Motion planning for the robot in the workspace representation in (a) has been transformed into motion planning for a point robot in the conﬁguration space.

Workspace

C-space

(a)

(b)

(c)

Figure 3.5 The top row shows the workspace and the bottom row shows the conﬁguration space for (a) a point mobile robot, (b) a circular mobile robot, and (c) a larger circular mobile robot.

Although the example in ﬁgure 3.5 is quite simple, the main point is that it is easier to think about points moving around than bodies with volume. Keep in mind that although both the workspace and the conﬁguration space for this system can be represented by R2, and the obstacles appear to simply “grow” in this example, the conﬁguration space and workspace are different spaces, and the transformation from workspace obstacles to conﬁguration space obstacles is not always so simple.

Choset-79066 book February 22, 2005 17:37

3.2 Obstacles and the Conﬁguration Space

45

For example, appendix F discusses how to generate conﬁguration space obstacles for a polygon that translates and rotates among polygonal obstacles in the plane. The two-joint arm example is examined next.
3.2.2 Two-Joint Planar Arm
For the case of the circular mobile robot in a world populated with polygonal obstacles, it is easy to compute conﬁguration space obstacles. When the robot is even slightly more complex, it becomes much more difﬁcult to do so. For this reason, grid-based representations of the conﬁguration space are sometimes used. Consider the case of the two-joint planar arm, for which Q = T 2. We can deﬁne a grid on the surface of the torus, and for each point on this grid we can perform a fairly simple test to see if the corresponding conﬁguration causes a collision between the arm and any obstacle in the workspace. If we let each grid point be represented by a pixel, we can visualize the conﬁguration space obstacle by “coloring” pixels appropriately. This method was used to obtain ﬁgures 3.6, 3.7, and 3.8.2 In each of the ﬁgures, the image on the left depicts a two-joint arm in a planar workspace, while the image on the right depicts the conﬁguration space. In each case, the arm on the left is depicted in several conﬁgurations, and these are indicated in the conﬁguration spaces on the right.

Figure 3.6 (Left) A path for the two-joint manipulator through its workspace, where the start and goal conﬁgurations are darkened. (Right) The path in the conﬁguration space.
2. These ﬁgures were obtained using the applet at http://ford.ieor.berkeley.edu/cspace/.

Choset-79066 book February 22, 2005 17:37
46

3 Conﬁguration Space

Figure 3.7 (Left) The workspace for a two-joint manipulator where the start and goal conﬁgurations are shown. (Right) The conﬁguration space shows there is no free path between the start and goal conﬁgurations.
Figure 3.8 (Left) The workspace for a two-joint manipulator where the start and goal conﬁgurations are darkened. (Right) The path shows the wraparound of the planar representation of the conﬁguration space.
While pictures such as those in ﬁgures 3.6, 3.7, and 3.8 are useful for visualizing conﬁguration space obstacles, they are not sufﬁcient for planning collision-free motions. The reason for this is that the grid only encodes collision information for the discrete set of points lying on the grid. A path includes not only grid points, but also the points on the curves that connect the grid points. One possible remedy for this problem is to “thicken” the robot when we test it at a grid point, so that if the thickened

Choset-79066 book February 22, 2005 17:37

3.3 The Dimension of the Conﬁguration Space

47

robot is collision-free, then paths to adjacent grid points are also collision-free.3 We could also choose to ignore this problem by choosing a grid resolution that is “high enough.”

3.3 The Dimension of the Conﬁguration Space
In our introduction to conﬁguration space above, we restricted our attention to twodimensional conﬁguration spaces that are easy to visualize. For each example, it was fairly straightforward to conclude that there were only two degrees of freedom: for a translating robot, the conﬁguration was speciﬁed by a point in the familiar Euclidean plane, while for the two-joint arm the two joint angles gave a complete speciﬁcation of the arm’s position. In this section we determine the number of degrees of freedom of more complex systems by considering constraints on the motions of individual points of the systems.
As a ﬁrst example, suppose the robot is a point that can move in the plane. The conﬁguration can be given by two coordinates, typically q = (x, y) ∈ Q = R2, once we have chosen a reference coordinate frame ﬁxed somewhere in space. Thus the robot has two degrees of freedom; the conﬁguration space is two-dimensional.
Now consider a system consisting of three point robots, A, B, and C, that are free to move in the plane. Since the points can move independently, in order to specify the conﬁguration of the system we need to specify the conﬁguration of each of A, B, and C. By simply generalizing the case for a single point, we see that a conﬁguration for this system can be given by the six coordinates xA, yA, xB, yB, xC , and yC (assuming that the points can overlap). The system has six degrees of freedom, and in this case we have Q = R6.
Real robots are typically modeled as a set of rigid bodies connected by joints (or a single rigid body for the case of most mobile robots), not a set of points that are free to move independently. So, suppose now that the robot is a planar rigid body that can both translate and rotate in the plane. Deﬁne A, B, and C to be three distinct points that are ﬁxed to the body. To place the body in the plane, we are ﬁrst free to choose the position of A by choosing its coordinates (xA, yA). Now we wish to choose the coordinates of B, (xB, yB), but the rigidity of the body requires that this point maintain a constant distance d( A, B) from A:
d( A, B) = (xA − xB)2 + (yA − yB)2.
3. This approach is called conservative, as a motion planner using this approach will never ﬁnd an incorrect solution, but it might miss solutions when they exist. As a result, the planner can only be resolution complete, not complete.

Choset-79066 book February 22, 2005 17:37

48

3 Conﬁguration Space

This equation constrains B to lie somewhere on a circle of radius d( A, B) centered at (xA, yA), and our only freedom in placing B is the angle θ from A to B.
Now when we try to choose coordinates (xC , yC ) for C, we see that our choice is subject to two constraints:
d( A, C) = (x A − xC )2 + ( yA − yC )2 d( B, C) = (xB − xC )2 + ( yB − yC )2
In other words, C has already been placed for us. In fact, every point on the body has been placed once we have chosen (xA, yA, θ ), making this a good representation of the conﬁguration. The body has three degrees of freedom, and its conﬁguration space is R2 × S1.
Each of the distance constraints above is an example of a holonomic constraint. A holonomic constraint is one that can be expressed purely as a function g of the conﬁguration variables (and possibly time), i.e., of the form
g(q, t) = 0.
Each linearly independent holonomic constraint on a system reduces the dimension of the system’s conﬁguration space by one. Thus a system described by n coordinates subject to m independent holonomic constraints has an (n − m)-dimensional conﬁguration space. In this case, we normally attempt to represent the conﬁguration space by a smaller set of n − m coordinates subject to no constraints, e.g., the coordinates (xA, yA, θ ) for the planar body above.
Nonholonomic constraints are velocity constraints of the form
g(q, q˙, t) = 0
which do not reduce the dimension of the conﬁguration space. Nonholonomic constraints are left to chapter 12.
We can apply the counting method above to determine the number of degrees of freedom of a three-dimensional rigid body. Choose three noncollinear points on the body, A, B, C. The coordinates (xA, yA, z A) of point A are ﬁrst chosen arbitrarily. After ﬁxing A, the distance constraint from A forces B to lie on the two-dimensional surface of a sphere centered at A. After both A and B are ﬁxed, the distance constraints from A and B force C to lie on a one-dimensional circle about the axis formed by A and B. Once this point is chosen, all other points on the body are ﬁxed. Thus the conﬁguration of a rigid body in space can be described by nine coordinates subject to three constraints, yielding a six-dimensional conﬁguration space.
We have already seen that a rigid body moving in a plane has three degrees of freedom, but we can arrive at this same conclusion if we imagine a spatial rigid body

Choset-79066 book February 22, 2005 17:37

3.3 The Dimension of the Conﬁguration Space

49

with six degrees of freedom with a set of constraints that restricts it to a plane. Choose this book as an example, using three corners of the back cover as points A, B and C. The book can be conﬁned to a plane (e.g., the plane of a tabletop) using the three holonomic constraints

z A = zB = zC = 0.

The two-joint planar arm can be shown to have two degrees of freedom by this (somewhat indirect) counting method. Each of the two links can be thought of as a rigid spatial body with six degrees of freedom. Six constraints restrict the bodies to a plane (three for each link), two constraints restrict a point on the ﬁrst link (the ﬁrst joint) to be at a ﬁxed location in the plane, and once the angle of the ﬁrst link is chosen, two constraints restrict a point on the second link (the second joint) to be at a ﬁxed location. Therefore we have (12 coordinates) − (10 constraints) = 2 degrees of freedom.
Of course we usually count the degrees of freedom of an open-chain jointed robot, also known as a serial mechanism, by adding the degrees of freedom at each joint. Common joints with one degree of freedom are revolute (R) joints, joints which rotate about an axis, and prismatic (P) joints, joints which allow translational motion along an axis. Our two-joint robot is sometimes called an RR or 2R robot, indicating that both joints are revolute. An RP robot, on the other hand, has a revolute joint followed by a prismatic joint. Another common joint is a spherical (ball-and-socket) joint, which has three degrees of freedom.
A closed-chain robot, also known as a parallel mechanism, is one where the links form one or more closed loops. If the mechanism has k links, then one is designated as a stationary “ground” link, and k − 1 links are movable. To determine the number of degrees of freedom, note that each movable link has N degrees of freedom, where N = 6 for a spatial mechanism and N = 3 for a planar mechanism. Therefore the system has N (k − 1) degrees of freedom before the joints are taken into account. Now each of the n joints between the links places N − fi constraints on the feasible motions of the links, where fi is the number of degrees of freedom at joint i (e.g., fi = 1 for a revolute joint, and fi = 3 for a spherical joint). Therefore, the mobility M of the mechanism, or its number of degrees of freedom, is given by

(3.1)

n
M = N (k − 1) − ( N − fi )
i =1 n
= N (k − n − 1) + fi .
i =1

Choset-79066 book February 22, 2005 17:37

50

3 Conﬁguration Space

E

F

C

B

A

D

Figure 3.9 A planar mechanism with six links (A through F), seven revolute joints, and one degree of freedom.
This is known as Gru¨bler’s formula for closed chains, and it is only valid if the constraints due to the joints are independent. In the planar mechanism of ﬁgure 3.9, there are seven joints, each with one degree of freedom, and six links, yielding a mobility of 3(6 − 7 − 1) + 7 = 1.
As an application of the ideas in this section, determine the number of degrees of freedom of your arm by adding the degrees of freedom at your shoulder, elbow, and wrist. To test your answer, place your palm ﬂat down on a table with your elbow bent. Without moving your torso or your palm, you should ﬁnd that it is still possible to move your arm. This internal freedom means that your arm is redundant with respect to the task of positioning your hand (or a rigid body grasped by your hand) in space; an inﬁnity of arm conﬁgurations puts your hand in the same place.4 How many internal degrees of freedom do you have? How many holonomic constraints were placed on your arm’s conﬁguration when you ﬁxed your hand’s position and orientation? The sum of the number of constraints and internal degrees of freedom is the number of degrees of freedom of your (unconstrained) arm, and you should ﬁnd that your arm has more than six degrees of freedom. A robot is said to be hyper-redundant with respect to a task if it has many more degrees of freedom than required for the task. (There is no strict deﬁnition of “many” here.)

3.4 The Topology of the Conﬁguration Space
Now that we understand how to determine the dimension of a conﬁguration space, we can begin to explore its topology and geometry, each of which plays a vital role in developing and analyzing motion-planning algorithms. Some basic concepts from topology are discussed in appendixes B and C.
4. Provided your arm is away from its joint limits.

Choset-79066 book February 22, 2005 17:37

3.4 The Topology of the Conﬁguration Space

51

Figure 3.10 The surfaces of the coffee mug and the torus are topologically equivalent.
Topology is a branch of mathematics that considers properties of objects that do not change when the objects are subjected to arbitrary continuous transformations, such as stretching or bending. For this reason, topology is sometimes referred to as “rubber sheet geometry.” Imagine a polygon drawn on a rubber sheet. As the sheet is stretched in various directions, the polygon’s shape changes; however, certain properties of the polygon do not change. For example, points that are inside the polygon do not move to the outside of the polygon simply because the sheet is stretched.
Two spaces are topologically different if cutting or pasting is required to turn one into the other, as cutting and pasting are not continuous transformations. For example, the conﬁguration spaces of the circular mobile robot (R2) and the two-joint planar arm (T 2) are topologically different. If we imagine T 2 as the surface of a rubber doughnut, we see that no matter how we stretch or deform the doughnut (without tearing it), the doughnut will always have a hole in it. Also, if we imagine R2 as an inﬁnite rubber sheet, there is no way to stretch it (without tearing it) such that a hole will appear in the sheet. To a topologist, all rubber doughnuts are the same, regardless of how they are stretched or deformed (ﬁgure 3.10). Likewise, all rubber sheet versions of R2 are the same.
One reason that we care about the topology of conﬁguration space is that it will affect our representation of the space. Another reason is that if we can derive a pathplanning algorithm for one kind of topological space, then that algorithm may carry over to other spaces that are topologically equivalent (see, e.g., chapter 4, section 4.6).
Since topology is concerned with properties that are preserved under continuous transformations, we begin our study of the topology of conﬁguration spaces by describing two types of continuous transformations: homeomorphisms and diffeomorphisms. Appendix C provides an introduction to differentiable transformations.
3.4.1 Homeomorphisms and Diffeomorphisms
A mapping φ : S → T is a rule that places elements of S into correspondence with elements of T . We respectively deﬁne the image of S under φ and the preimage

Choset-79066 book February 22, 2005 17:37

52

3 Conﬁguration Space

f(s)

f(s)

f(s)

T

T

T

S

s

Surjection

S

s

Injection

S

s

Bijection

f(s)

f(s)

f(s)

T

T

T

S

s

Discontinuous bijection (isomorphism)

S

s

Homeomorphism

S

s

Diffeomorphism

Figure 3.11 Representative ways of looking at surjective, injective, and bijective mappings. Bijections may become homeomorphisms or diffeomorphisms if they are sufﬁciently differentiable.

of T by

φ(S) = {φ(s) | s ∈ S} and φ−1(T ) = {s | φ(s) ∈ T }.

If φ(S) = T (i.e., every element of T is covered by the mapping) then we say that

φ is surjective or onto. If φ puts each element of T into correspondence with at most one element of S, i.e., for any t ∈ T , φ−1(t) consists of at most one element in S,

then we say that φ is injective (one-to-one). If φ is injective, then when s1 = s2 we

have φ(s1) = φ(s2) for s1, s2 ∈ S. Maps that are both surjective and injective are

said to be bijective. Figure 3.11 illustrates these deﬁnitions. As another example, the

map

sin

:

(−

π 2

,

π 2

)

→ (−1,

1) is bijective, whereas sin : R → [−1,

1] is only surjective.

Bijective maps have the property that their inverse exists at all points in the range T ,

and thus they allow us to move easily back and forth between the two spaces S and T .

In our case, we will use bijective maps to move back and forth between conﬁguration

spaces (whose geometry can be quite complicated) and Euclidean spaces.

We will consider two important classes of bijective mappings.

DEFINITION 3.4.1 If φ : S → T is a bijection, and both φ and φ−1 are continuous, then φ is a homeomorphism. When such a φ exists, S and T are said to be homeomorphic.

Choset-79066 book February 22, 2005 17:37

3.4 The Topology of the Conﬁguration Space

53

Circle

Ellipse

Racetrack

Figure 3.12 A circle, an ellipse, and a racetrack.

A mapping φ : U → V is said to be smooth if all partial derivatives of φ, of all orders, are well deﬁned (i.e., φ is of class C∞). With the notion of smoothness, we
deﬁne a second type of bijection.

DEFINITION 3.4.2 A smooth map φ : U → V is a diffeomorphism if φ is bijective and φ−1 is smooth. When such a φ exists, U and V are said to be diffeomorphic.

The condition for diffeomorphisms (smoothness) is stronger that the condition for homeomorphisms (continuity), and thus all diffeomorphisms are homeomorphisms.
To illustrate these ideas, consider three one-dimensional surfaces: a circle, denoted by Mc; an ellipse, denoted by Me; and a “racetrack,” denoted by Mr . The racetrack consists of two half-circles connected by straight lines (ﬁgure 3.12). We deﬁne these shapes mathematically as

(3.2) Mc = {(x, y) | fc(x, y) = x2 + y2 − 1 = 0}

(3.3)

Me

= {(x,

y)

|

fe(x, y) =

x2 4

+ y2 − 1 = 0}

(3.4) Mr = {(x, y) | fr (x, y) = 0}

with



(3.5)

fr (x ,

y)

=

 ( y  ( y

x −1 + 1)2 + x2 − 1)2 + x2

−1 −1

: : :

−1

≤ y ≤ 1, x y < −1 y>1

>

0

.

x +1

: −1 ≤ y ≤ 1, x < 0

Note that these surfaces are implicitly deﬁned as being the set of points that satisfy some equation f (x, y) = 0.
In some ways, these three surfaces are similar. For example, they are all simple, closed curves in the plane; all of fc(x, y), fe(x, y), and fr (x, y) are continuous. In other ways, they seem quite different. For example, both fc(x, y) and fe(x, y) are

Choset-79066 book February 22, 2005 17:37

54

3 Conﬁguration Space

continuously differentiable, while fr (x, y) is not. We can more precisely state the similarities and differences between these surfaces using the concepts of homeomor-

phism and diffeomorphism. In particular, it can be shown that Mc, Me, and Mr are all homeomorphic to each other. For example, the map φ : Me → Mc given by

φ(x, y) =

x ,
x2 + y2

T
y
x2 + y2

is a homeomorphism. For this choice of φ, both φ and φ−1 are smooth, and therefore, Mc is diffeomorphic
to Me. Neither Mc nor Me is diffeomorphic to Mr , however. This is because fr (x, y) is not continuously differentiable, while both fc(x, y) and fe(x, y) are. This can be seen by examining the curvatures of the circle, ellipse, and racetrack. For the circle, the curvature is constant (and thus continuous), and for the ellipse, curvature is continuous. For the racetrack, there are discontinuities in curvature (at the points (−1, 1), (−1, −1), (1, 1), (1, −1)), and therefore there is no smooth mapping from either the circle or the ellipse to the racetrack.
We are often concerned only with the local properties of conﬁguration spaces. Local properties are deﬁned on neighborhoods. For metric spaces5, neighborhoods are most easily deﬁned in terms of open balls. For a point p of some manifold M, we deﬁne an open ball of radius by

B ( p) = { p ∈ M | d( p, p ) < },

where d is a metric on M.6 A neighborhood of a point p ∈ M is any subset U ⊆ M with p ∈ U such that for every p ∈ U, there exists an open ball B ( p ) ⊂ U. Any open ball is itself a neighborhood. The open disk in the plane is an example. For the point (x0, y0) in the plane, an open ball deﬁned by the Euclidean metric is
B (x0, y0) = {(x, y) | (x − x0)2 + ( y − y0)2 < 2}.

We say that S is locally diffeomorphic (resp. locally homeomorphic) to T if for each p ∈ S there exists a diffeomorphism (resp. homeomorphism) f from S to T on some neighborhood U with p ∈ U.
The sphere presents a familiar example of these concepts. At any point on the sphere, there exists a neighborhood of that point that is diffeomorphic to the plane. It is not surprising that people once believed the world was ﬂat — they were only looking at their neighborhoods!

5. A metric space is a space equipped with a distance metric. See appendix C. 6. One can deﬁne all topological properties, including neighborhoods, without resorting to the use of metrics, but for our purposes, it will be easier to assume a metric on the conﬁguration space and exploit the metric properties.

Choset-79066 book February 22, 2005 17:37

3.4 The Topology of the Conﬁguration Space

55

Let us now reﬂect on the two examples from the beginning of this chapter. For the

circular mobile robot, the workspace and the conﬁguration space are diffeomorphic.

This is easy to see, since both are copies of R2. In this case, the identity map φ(x) = x

is a perfectly ﬁne global diffeomorphism between the workspace and conﬁguration

space. In contrast, the two-joint manipulator has a conﬁguration space that is T 2, the

torus. The torus T 2 is not diffeomorphic to R2, but it is locally diffeomorphic. If the

revolute joints in the two-joint manipulator have lower and upper limits, θi < θi < θiu, so that they cannot perform a complete revolution, however, then the conﬁguration

space of the two-joint manipulator becomes an open subset of the torus, which is

diffeomorphic to R2 (globally). This follows from the fact that each joint angle lies

in an open interval of R1, and we can “stretch” that open interval to cover the line.

An

example

of

such

a

stretching

function

is

tan

:

(

−

π 2

,

π 2

)

→ R.

3.4.2 Differentiable Manifolds
For all of the conﬁguration spaces that we have seen so far, we have been able to uniquely specify a conﬁguration by n parameters, where n is the dimension of the conﬁguration space (two for the planar two-joint arm, three for a polygon in the plane, etc.). The reason that we could do so was that these conﬁguration spaces were all “locally like” n -dimensional Euclidean spaces. Such spaces, called manifolds, are a central topic of topology.

DEFINITION 3.4.3 (Manifold) A set S is a k-dimensional manifold if it is locally homeomorphic to Rk, meaning that each point in S possesses a neighborhood that is homeomorphic to an open set in Rk.
While a general k-dimensional manifold is locally homeomorphic to Rk, the conﬁguration spaces that we will consider are locally diffeomorphic to Rk, an even stronger relationship. In fact, when we parameterized conﬁgurations in section 3.1, we were merely constructing diffeomorphisms from conﬁguration spaces to R2. If we construct enough of these diffeomorphisms (so that every conﬁguration in Q is in the domain of at least one of them), and if these diffeomorphisms are compatible with one another (an idea that we will formalize shortly), then this set of diffeomorphisms together with the conﬁguration space deﬁne a differentiable manifold. We now make these ideas more precise.
DEFINITION 3.4.4 (Chart) A pair (U, φ), such that U is an open set in a kdimensional manifold and φ is a diffeomorphism from U to some open set in Rk, is called a chart.

Choset-79066 book February 22, 2005 17:37

56

3 Conﬁguration Space

The use of the term chart is analogous to its use in cartography, since the subset

U is “charted” onto Rk in much the same way that cartographers chart subsets of

the globe onto a plane when creating maps. Charts are sometimes referred to as

coordinate systems because each point in the set U is assigned a set of coordinates in a Euclidean space [410]. The inverse diffeomorphism, φ−1 : Rk → U , is referred to

as a parameterization of the manifold.

As an example, consider the one-dimensional manifold S1 = {x = (x1, x2) ∈ R2 | x12 + x22 = 1}. For any point x ∈ S1 we can deﬁne a neighborhood that is diffeomorphic to R. For example, consider the upper portion of the circle, U1 = {x ∈ S1 | x2 > 0}.
The chart φ1 : U1 → (0, 1) is given by φ1(x) = x1, and thus x1 can be used to

deﬁne a local coordinate system for the upper semicircle. In the other direction, the

upper portion of the circle can be parameterized by z ∈ (0, 1) ⊂ R, with φ1−1(z) =

(z,

(1

−

z)

1 2

),

which

maps

the

open

unit

interval

to

the

upper

semicircle.

But

S1

is

not

globally diffeomorphic to R1; we cannot ﬁnd a single chart whose domain includes

all of S1.

We have already used this terminology in section 3.1, when we referred to θ1, θ2 as parameters that represent a conﬁguration of the two-joint arm. Recall that (θ1, θ2) ∈ R2, and that when considered as a representation of the conﬁguration, they deﬁne a

point in T 2, the conﬁguration space, which is a manifold. We now see that in sec-

tion 3.1, when we represented a conﬁguration of the planar arm by the pair (θ1, θ2), we were in fact creating a chart from a subset of the conﬁguration space to a subset of R2.

A single mapping from T 2 to R2 shown in ﬁgure 3.2 encounters continuity prob-

lems at θi = {0, 2π }. For many interesting conﬁguration spaces, it will be the case

that we cannot construct a single chart whose domain contains the entire conﬁguration

space. In these cases, we construct a collection of charts that cover the conﬁguration

space. We are not free to choose these charts arbitrarily; any two charts in this col-

lection must be compatible for parts of the manifold on which their domains overlap. Two charts with such compatibility are said to be C∞-related (ﬁgure 3.13).

DEFINITION 3.4.5 (C∞-related) Let (U, φ) and (V , ψ) be two charts on a kdimensional manifold. Let X be the image of U ∩ V under φ, and Y be the image of U ∩ V under ψ, i.e.,
X = {φ(x) ∈ Rk | x ∈ U ∩ V } Y = {ψ( y) ∈ Rk | y ∈ U ∩ V }.
These two charts are said to be C∞-related if both of the composite functions
ψ ◦ φ−1 : X → Y, φ ◦ ψ−1 : Y → X
are C∞.

Choset-79066 book February 22, 2005 17:37

3.4 The Topology of the Conﬁguration Space

57

f

U

V

f ° y-1

X

y ° f-1

Y

y

Figure 3.13 The charts (U, φ) and (V, ψ) map open sets on the k-dimensional manifold to open sets in Rk.

If two charts are C∞-related, we can switch back and forth between them in a smooth
way when their domains overlap. This idea will be made more concrete in the example of S1 below.
A set of charts that are C∞-related, and whose domains cover the entire conﬁguration space Q, form an atlas for Q. An atlas is sometimes referred to as the differentiable structure for Q. Together, the atlas and Q comprise a differentiable manifold. There are other ways to deﬁne differentiable manifolds, as we will see in sec-
tion 3.5. As an example, consider again the one-dimensional manifold S1. Above, we deﬁned
a single chart, (U1, φ1). If we deﬁne three more charts, we can construct an atlas for S1. These four charts are given by

U1 = {x ∈ S1 | x2 > 0}, U2 = {x ∈ S1 | x2 < 0}, U3 = {x ∈ S1 | x1 > 0}, U4 = {x ∈ S1 | x1 < 0},

φ1(x) = x1 φ2(x) = x1 φ3(x) = x2 φ4(x) = x2.

The corresponding parameterizations are given by φi−1 : (−1, 1) → Ui , with

φ1−1(z) = (z, 1 − z2) φ2−1(z) = (z, z2 − 1) φ3−1(z) = (1 − z2, z) φ4−1(z) = (z2 − 1, z).

It is clear that the Ui cover S1, so to verify that these charts form an atlas it is only necessary to show that they are C∞-related (ﬁgure 3.14). Note that

Choset-79066 book February 22, 2005 17:37

58

3 Conﬁguration Space

U1

U4

U3

U2 Figure 3.14 Four charts covering the circle S1.

U1 ∩ U2 = U3 ∩ U4 = ∅, so we need only check the four pairs of composite maps:

φ1 ◦ φ3−1 : (0, 1) → (0, 1), φ1 ◦ φ4−1 : (0, 1) → (−1, 0), φ2 ◦ φ3−1 : (−1, 0) → (0, 1), φ2 ◦ φ4−1 : (−1, 0) → (−1, 0),

φ3 ◦ φ1−1 : (0, 1) → (0, 1) φ4 ◦ φ1−1 : (−1, 0) → (0, 1) φ3 ◦ φ2−1 : (0, 1) → (−1, 0) φ4 ◦ φ2−1 : (−1, 0) → (−1, 0).

In

each

case,

φi

◦

φ

−1 j

(z)

is

smooth

on

each

of

the

open

unit

intervals

that

deﬁne

the

domains for the composite mappings given above. For example, φ1 ◦ φ3−1(z) = 1 − z2.

This collection of four charts is not minimal; it is straightforward to ﬁnd two charts

to cover S1 (see problem 9).

3.4.3 Connectedness and Compactness
We say that a manifold is path-connected, or just connected, if there exists a path between any two points of the manifold.7 All of the obstacle-free conﬁguration spaces that we will consider in this text, e.g., Rn, Sn, and T n, are connected. The presence of obstacles, however, can disconnect the free conﬁguration space Qfree. In this case, the free conﬁguration space is broken into a set of connected components, the maximal connected subspaces. In ﬁgure 3.5(c), for example, obstacles break the mobile robot’s free conﬁguration space into two connected components. There can be no solution to a motion-planning problem if qstart and qgoal do not lie in the same connected component of Qfree.
7. For more general spaces, the concepts of path-connectedness and connectedness are not equivalent, but for a manifold they are the same. More generally, a space is connected if there is no continuous mapping from the space to a discrete set of more than one element.

Choset-79066 book February 22, 2005 17:37

3.5 Embeddings of Manifolds in Rn

59

A space is compact8 if it resembles a closed, bounded subset of Rn. A space is closed if it includes all of its limit points. As examples, the half-open interval [0, 1) ⊂ R is bounded but not compact, while the closed interval [0, 1] is bounded and compact. The space Rn is not bounded and therefore not compact. The spaces Sn and T n are both compact, as they can be expressed as closed and bounded subsets of Euclidean spaces. The unit circle S1, e.g., can be expressed as a closed and bounded subset of R2.
In conﬁguration spaces with obstacles or joint limits, the modeling of the obstacles may affect whether the space is compact or not. For a revolute joint subject to joint limits, the set of joint conﬁgurations is compact if the joint is allowed to hit the limits, but not compact if the joint can only approach the limits arbitrarily closely.
The product of compact conﬁguration spaces is also compact. For a noncompact space M1 × M2, if M1 is compact, then it is called the compact factor of the space. Compact and noncompact spaces cannot be diffeomorphic.
3.4.4 Not All Conﬁguration Spaces Are Manifolds
We are focusing on conﬁguration spaces that are manifolds, and more speciﬁcally differentiable manifolds, but it is important to keep in mind that not all conﬁguration spaces are manifolds. As a simple example, the closed unit square [0, 1] × [0, 1] ⊂ R2 is not a manifold, but a manifold with boundary obtained by pasting the onedimensional boundary on the two-dimensional open set (0, 1) × (0, 1). Also, some parallel mechanisms with one degree of freedom have conﬁgurations from which there are two distinct possible motion directions (i.e., the conﬁguration space is a self-intersecting ﬁgure eight). It is beyond the scope of this chapter to discuss other types of conﬁguration spaces, but be aware: if you cannot show it to be a manifold, it may not be!

3.5 Embeddings of Manifolds in Rn
Although a k-dimensional manifold can be represented using as few as k parameters, we have seen above that doing so may require multiple charts. An alternative is to use a representation with “extra” numbers, subject to constraints, to achieve a single global representation. As an example, S1 is a one-dimensional manifold that we can
8. In topology, a space is deﬁned to be compact if every open cover of the space admits a ﬁnite subcover, but we will not use these concepts here.

Choset-79066 book February 22, 2005 17:37

60

3 Conﬁguration Space

represent as S1 = {(x, y) | x2 + y2 = 1}; we “embed” S1 in R2. The fact that we cannot ﬁnd a single chart for all of S1 tells us that we cannot embed S1 in R1. Likewise, although the torus T 2 is a two-dimensional manifold, it is not possible to embed the torus in R2, which is why we typically illustrate the torus as a doughnut shape in R3.
The manifolds S1 and T 2 can be viewed as submanifolds of R2 and R3, respectively. Submanifolds are smooth subsets of an ambient space that inherit the differentiability properties of the ambient space. Submanifolds are often created by a smooth set of equality constraints on Rn, as we see in the example of the circle S1 above. Any differentiable manifold can be viewed as an embedded submanifold of Rn for large enough n .
When we are confronted with a conﬁguration space that does not permit a single global coordinate chart, we are faced with a choice. We can either use a single set of parameters and suffer the consequences of singularities and discontinuities in the representation, use multiple charts to construct an atlas, or use a single global representation by embedding the conﬁguration space in a higher-dimensional space. One advantage of the last approach is that the representation can facilitate other operations. Important examples are representations of orientation using complex numbers and quaternions (see appendix E) and matrix representations for the conﬁguration of a rigid body in the plane or in space, as discussed next.
3.5.1 Matrix Representations of Rigid-Body Conﬁguration
It is often convenient to represent the position and orientation of a rigid body using an m × m matrix of real numbers. The m2 entries of this matrix must satisfy a number of smooth equality constraints, making the manifold of such matrices a submanifold of Rm2 . One advantage of such a representation is that these matrices can be multiplied to get another matrix in the manifold. More precisely, these matrices form a group with the group operation of matrix multiplication.9 Simple matrix multiplication can be used to change the reference frame of a representation or to rotate and translate a conﬁguration.
We describe the orientation of a rigid body in n-dimensional space (n = 2 or 3) by the matrix groups S O(n), and the position and orientation by the matrix groups S E(n). After describing these representations abstractly, we look in detail at examples
9. In fact, the matrix representations in this section are Lie groups, as (1) they are differentiable manifolds which are also groups, (2) the group operation is C∞, and (3) the mapping from an element of the group to its inverse is C∞.

Choset-79066 book February 22, 2005 17:37

3.5 Embeddings of Manifolds in Rn

61

zs

~z ~y

ys

xs

~x

Figure 3.15 The rotation matrix for a body is obtained by expressing the unit vectors x˜, y˜, and z˜ of the body x-y-z frame in a stationary frame xs-ys-zs.
of the use of S E(n) for representing the conﬁguration of a body, for changing the reference frame of the representation, and for translating and rotating a conﬁguration.

Orientation: S O(2) and S O(3)

Figure 3.15 shows a rigid body with a frame x-y-z attached to it. Our representation

of the orientation of the body will be as a 3 × 3 matrix







x˜1 y˜1 z˜1

R11 R12 R13

R =  x˜2 y˜2 z˜2  =  R21 R22 R23  ∈ S O(3),

x˜3 y˜3 z˜3

R31 R32 R33

where x˜ = [x˜1, x˜2, x˜3]T is the unit vector in the body x-direction expressed in a stationary coordinate frame xs-ys-zs. The vectors y˜ and z˜ are deﬁned similarly (see ﬁgure 3.15).
The matrix R is often called the rotation matrix representation of the orientation. This representation uses nine numbers to represent the three angular degrees of freedom, so there are six independent constraints on the matrix entries: each column (and row) is a unit vector,

||x˜|| = ||y˜|| = ||z˜|| = 1,

yielding three constraints, and the columns (and rows) are orthogonal to each other, x˜ T y˜ = y˜ T z˜ = z˜T x˜ = 0,

Choset-79066 book February 22, 2005 17:37

62

3 Conﬁguration Space

yielding three more constraints. Because we are assuming right-handed frames,10 the determinant of R is +1. Matrices satisfying these conditions belong to the special orthogonal group of 3 × 3 matrices S O(3). “Special” refers to the fact that the determinant is +1, not −1.
In the planar case, R is the 2 × 2 matrix

R=

x˜ 1 x˜ 2

y˜ 1 y˜ 2

=

cos θ sin θ

−sinθ cos θ

∈ S O(2),

where θ is the orientation of the x-y frame relative to the xs-ys frame. Generalizing, orientations in n-dimensional space can be written

S O(n) = {R ∈ Rn×n | R RT = I, det( R) = 1},

where I is the identity matrix. This implies the relation RT = R−1.

Position and Orientation: S E(2) and S E(3)
Figure 3.16 shows a rigid body with an attached x-y-z coordinate frame relative to a stationary frame xs-ys-zs. Let p = [ p1, p2, p3]T ∈ R3 be the vector from the origin of the stationary frame to the body frame, as measured in the stationary frame, and let R ∈ S O(3) be the rotation matrix as described above, as if the body frame were translated back to the stationary frame. Then we represent the position and orientation of the body frame relative to the stationary frame as the 4 × 4 transform matrix
T = R p ∈ S E(3), 01
where the bottom row consists of three zeros and a one. (These “extra” numbers will be needed to allow us to perform matrix multiplications, as we will see shortly.) Since R and p both have three degrees of freedom, the conﬁguration of a rigid body in three-space has six degrees of freedom, as we discovered earlier in the chapter.
Generalizing, the position and orientation of a rigid body in n-dimensional space can be written as an element of the special Euclidean group S E(n):
S E(n) ≡ S O(n) Rn , 01
where the bottom row consists of n zeros and a one.
10. To make a right-handed frame, point straight ahead with your right index ﬁnger, point your middle ﬁnger 90 degrees to the left, and stick your thumb straight up. Your index ﬁnger is pointing in the +x direction, your middle ﬁnger is pointing in the +y direction, and your thumb is pointing in the +z direction.

Choset-79066 book February 22, 2005 17:37

3.5 Embeddings of Manifolds in Rn

63

zs

~z

~y

~x p
ys

xs

Figure 3.16 The body frame x-y-z relative to a stationary world frame xs-ys-zs.

Uses of the Matrix Representations The matrix groups S O(n) and S E(n) can be used to 1. represent rigid-body conﬁgurations,

2. change the reference frame for the representation of a conﬁguration or a point, and

3. displace (move) a conﬁguration or a point.

When the matrix is used for representing a conﬁguration, we often call it a frame.

When it is used for displacement or coordinate change, we often call it a transform.

The various uses are best demonstrated by example.

Figure 3.17 shows three coordinate frames on a regular grid of unit spacing. These

frames are conﬁned to a plane with their z-axes pointing out of the page. Let TAB be

the conﬁguration of frame B relative to frame A, and let TBC be the conﬁguration of

frame C relative to frame B. It is clear from the ﬁgure that

 −1 0 0 −2 

 0 1 0 −4 

TAB =

RAB 0

pAB 1

= 

0 0

−1 0

0 1

0 0



,

TBC

=



−1 0

0 0

0 1

−1 0



.

0 00 1

000 1

From these, we can ﬁnd TAC , the frame C relative to the frame A, by performing a change of reference frame on TBC . This involves premutliplying by TAB, based on

Choset-79066 book February 22, 2005 17:37

64

3 Conﬁguration Space

~xB B ~yB

~xC

~yA

~yC C

A ~xA

w

Figure 3.17 Three frames in a plane with their z-axes pointing out of the page.

the rule for coordinate transformations that the second subscript of the matrix on the left cancels with the ﬁrst subscript of the matrix on the right, if they are the same subscript. In other words,

TAB TBC = TAB TBC = TAC .

We ﬁnd that

 −1

0 0 −2   0 1 0 −4 

 0

−1

0

 2

TAC = 

0 0

−1 0

0 1

0 0





−1 0

0 0

0 1

−1 0



=



1 0

0 0

0 1

1 0



,

0 00 1 000 1

0 001

which we can verify by inspection. The representation of the point w in the coordinates of frame C is written wC . From
ﬁgure 3.17, we can see that the coordinates of w in C are [−2, 1, 0]T . To facilitate matrix multiplications, however, we will express points in homogeneous coordinates by appending a 1 to the end of the vector, i.e.,

wC = [−2, 1, 0, 1]T .

To ﬁnd the representation of the point w in other frames, we use a modiﬁcation of the subscript canceling rule to get

TBC wC = TBC wC = w B = [−3, 1, 0, 1]T

and

TAB TBC wC = TAC wC = wA = [1, −1, 0, 1]T ,

which can be veriﬁed by inspection. Elements of S E(n) can also be used to displace a point. For example, TABwA does
not satisfy the subscript canceling rule, and the result is not simply a representation

Choset-79066 book February 22, 2005 17:37

3.5 Embeddings of Manifolds in Rn

65

w'

BA

A

w

(a)

(b)

(c)

(d)

Figure 3.18 Displacing a point by the transformation TAB. (a) The frames A and B and the point w. (b) Rotating frame A to the orientation of frame B, carrying the point w along with it. (c) Translating frame A to the location of frame B, carrying w along with it. (d) The ﬁnal point wA = TAB wA.

of the point w in a new frame. Instead, the point w is rotated about the origin of the frame A by RAB (expressed in the A frame), and then translated by pAB in the A frame. This is the same motion required to take frame A to frame B. The result is

wA = TAB wA = [−3, 1, 0, 1]T ,

the location of the transformed point in the frame A. This transformation is shown graphically in ﬁgure 3.18.
Finally, we can use elements of S E(3) to displace frames, not just points. For example, given a frame B represented by TAB relative to frame A, and a transform T1 ∈ S E(3), then

TAB = TAB T1 =

RAB R1 0

RAB p1 + pAB 1

is the representation of the transformed frame B relative to A after rotating B about its origin by R1 (expressed in the B frame) and then translating by p1 in the original B frame (before it was rotated). On the other hand,

TAB = T1TAB =

R1 RAB 0

R1 pAB + p1 1

is the representation of the transformed frame B relative to A after rotating B about the origin of A by R1 (expressed in the A frame) and then translating by p1 in the A frame. Note that TAB and TAB are generally different, as matrix multiplication is not commutative.
If we consider frame B to be attached to a moving body, we call T1 a body-frame transformation if it is multiplied on the right, as the rotation and translation are expressed relative to the body frame B. If A is a stationary world frame, we call T1 a world-frame transformation if it is multiplied on the left, as the rotation and translation

Choset-79066 book February 22, 2005 17:37

66

3 Conﬁguration Space

B A

A B'

B'' A

Figure 3.19 (a) The initial frame B relative to A. (b) B is obtained by rotating about B and then translating in the original yB-direction. (c) B is obtained by rotating about A and then translating in the yA-direction.

are expressed relative to the ﬁxed A frame. An example is shown in ﬁgure 3.19 for

 −1 0 0 −2 

 −1

 000

TAB = 

0 0

−1 0

0 1

0 0



T1 = 

0 0

−1 0

0 1

1 0



,

0 00 1

0 001

giving

 1

0

0

−2 

TAB

=

TAB T1

=



0 0

1 0

0 1

−1 0



000 1





1002

TAB

=

T1 TA B

=



0 0

1 0

0 1

1 0



.

0001

Applying n world-frame transformations yields TAB = Tn . . . T2T1TAB, while n body-frame transformations yields TAB = TAB T1T2 . . . Tn.

3.6 Parameterizations of S O(3)
We have seen that the nine elements Ri j of a rotation matrix R ∈ S O(3) are subject to six constraints, leaving three rotational degrees of freedom. Thus, we expect that S O(3) can be locally parameterized using three variables. Euler angles are a common parameterization. However, just as we see we cannot ﬁnd a global parameterization for a circle with a single variable, we cannot build a global parameterization of S O(3) with Euler angles.
Given two coordinate frames F0 and F1, we can specify the orientation of frame F1 relative to frame F0 by three angles (φ, θ, ψ), known as Z-Y-Z Euler angles. These Euler angles are deﬁned by three successive rotations as follows. Initially, the two

Choset-79066 book February 22, 2005 17:37

3.6 Parameterizations of S O(3)

z0, za

zb, z1

67
y1 ya, yb

x0

xa

xb

x1

Figure 3.20 Euler angle representation.

frames are coincident. Rotate F0 about the z-axis by the angle φ to obtain frame Fa. Next, rotate frame Fa about its y-axis by the angle θ to obtain frame Fb. Finally, rotate frame Fb about its z-axis by the angle ψ to obtain frame F1. This is illustrated in ﬁgure 3.20.
The corresponding rotation matrix R can thus be generated by successive multiplication of rotation matrices that deﬁne rotations about coordinate axes,

(3.6) (3.7) (3.8)

R = Rz,φ Ry,θ Rz,ψ





cφ −sφ 0

cθ

=  sφ cφ 0   0





0 sθ cψ −sψ 0

1 0   sψ cψ 0 

0 01 
cφcθ cψ − sφsψ =  sφcθ cψ + cφsψ

−sθ 0 cθ 0 0 1 
−cφcθ sψ − sφcψ cφsθ −sφcθ sψ + cφcψ sφsθ  .

−sθ cψ

sθ sψ

cθ

Note that successive rotation matrices are multiplied on the right, as successive rotations are deﬁned about axes in the changing “body” frame.
Parameterization of S O(3) using Euler angles, along with some other representations of S O(3), are described in detail in appendix E.

Choset-79066 book February 22, 2005 17:37

68

3 Conﬁguration Space

3.7 Example Conﬁguration Spaces
In most cases, we can model robots as rigid bodies, articulated chains, or combinations of these two. Some common robots and representations of their conﬁguration spaces are given in table 3.1.
When designing a motion planner, it is often important to understand the underlying structure of the robot’s conﬁguration space. In particular, we note the following.
S1 × S1 × · · · × S1 (n times) = T n, the n-dimensional torus
S1 × S1 × · · · × S1 (n times) = Sn, the n-dimensional sphere in Rn+1
S1 × S1 × S1 = S O(3)
S E(2) = R3
S E(3) = R6 It is sometimes important to know whether a manifold is compact. The manifolds Sn, T n, and S O(n) are all compact, as are all of their direct products. The manifolds Rn and S E(n) are not compact, and therefore Rn × M is not compact, regardless of whether or not the manifold M is compact. Despite their differences, all of these conﬁguration spaces have an important similarity. When equipped with an atlas, each is a differentiable manifold. In particular, R1 and S O(2) are one-dimensional manifolds;
R2, S2 and T 2 are two-dimensional manifolds;

Type of robot Mobile robot translating in the plane Mobile robot translating and rotating in the plane Rigid body translating in the three-space A spacecraft An n-joint revolute arm A planar mobile robot with an attached n-joint arm

Representation of Q R2
S E(2) or R2 × S1
R3 S E(3) or R3 × S O(3)
Tn S E(2) × T n

Table 3.1 Some common robots and their conﬁguration spaces.

Choset-79066 book February 22, 2005 17:37

3.8 Transforming Conﬁguration and Velocity Representations

69

R3, S E(2) and S O(3) are three-dimensional manifolds;
R6, T 6 and S E(3) are six-dimensional manifolds. Thus, for example, all of R3, S E(2), and S O(3) can be represented locally by a set of three coordinates.

3.8 Transforming Conﬁguration and Velocity Representations

We often need to transform from one representation of the conﬁguration of a robot

q ∈ Q to some other representation x ∈ M. A common example occurs when q

represents the joint angles of a robot arm and x represents the conﬁguration of the

end effector as a rigid body in the ambient space. The representation x is more

convenient when planning manipulation tasks in the world, but control of the robot

arm is more easily expressed in q variables, so we need an easy way of switching back

and forth. It is often the case that Q and M are not homeomorphic; the dimension of

the two spaces may not even be equal.

Using the robot arm as inspiration, we deﬁne the forward kinematics map φ : Q → M and the inverse kinematics map φ−1 : M → Q. These maps may not be homeo-

morphisms even if the dimensions of Q and M are equal. As the robot system moves,

the

time

derivative

x˙

=

dx dt

is

related

to

the

time

derivative

q˙

=

dq dt

by

x˙

=

∂φ ∂q

q˙

=

J (q)q˙,

where J is the Jacobian of the map φ, also known as the differential Dφ (see appendix C). The Jacobian is also useful for transforming forces expressed in one set of coordinates to another (see chapter 4, section 4.7, and chapter 10).

EXAMPLE 3.8.1 The 2R robot arm of ﬁgure 3.21 has link lengths L1 and L2. Its conﬁguration space is Q = T 2, and we represent the conﬁguration by the two joint angles q = [θ1, θ2]T . The endpoint of the hand in the Cartesian space is x = [x1, x2]T ∈ M ⊂ R2. In this case, the dimensions of Q and M are equal, but they are not homeomorphic. The forward kinematics map φ : Q → M is

φ(q) =

φ1 (q ) φ2 (q )

=

L1 cos θ1 + L2 cos(θ1 + θ2) L1 sin θ1 + L2 sin(θ1 + θ2)

.

The inverse kinematics map φ−1 is one-to-two at most points of M, meaning that the robot can be chosen to be in either the right-arm or left-arm conﬁguration. The inverse kinematics of the 2R arm is most easily found geometrically using the law of cosines and is left for problem 20.

Choset-79066 book February 22, 2005 17:37

70

3 Conﬁguration Space

(x1, x2) L2

q2

L1

q1

Figure 3.21 The 2R robot arm and the velocity at its endpoint.

The Jacobian of the forward kinematics map is

J (q)

=

∂φ ∂q

=

∂ φ1 ∂ θ1
∂ φ2

∂ φ1 ∂ θ2
∂ φ2

∂θ1 ∂θ2

=

−L1 sin θ1 − L2 sin(θ1 + θ2) L1 cos θ1 + L2 cos(θ1 + θ2)

−L2 sin(θ1 + θ2) L2 cos(θ1 + θ2)

.

Plugging in L1 = L2 = 1, θ1 = π/4, θ2 = π/2, and q˙ = [1, 0]T , as shown in

ﬁgure 3.21, we ﬁnd that

√√

x˙ = J (q)q˙ =

−2 0

−√2/2 − 2/2

√

1 = −2,

0

0

matching the motion seen in the ﬁgure. When sin θ2 = 0, the Jacobian J (q) loses rank, and the robot is said to be in a
singular conﬁguration. In this case, the two-dimensional set of joint velocities q˙ maps to a one-dimensional set of endpoint velocities x˙ — instantaneous endpoint motion is impossible in one direction.

EXAMPLE 3.8.2 A polygon moving in the plane is represented by the conﬁguration q = [q1, q2, q3]T ∈ Q = R2 × S1, where (q1, q2) gives the position of a reference frame Fp attached to the polygon relative to a world frame F , and q3 gives the

Choset-79066 book February 22, 2005 17:37

Problems

71 (x1, x2)

r

Fp

q3

(q1, q2)

F
Figure 3.22 The point on the polygon is at r in the polygon frame Fp and x in the world frame F.

orientation of Fp relative to F (see ﬁgure 3.22). A point is ﬁxed on the polygon at r = [r1, r2]T in the polygon frame Fp, and let x = [x1, x2]T ∈ M = R2 be the
position of this point in the plane. Then the forward kinematics mapping is

x1 = φ(q) = q1 + cos q3 −sinq3 r1 ,

x2

q2

sin q3 cos q3 r2

where we recognize the 2 × 2 rotation matrix. The inverse map φ−1 in this example is one-to-many, as the dimension of Q is greater than the dimension of M. The velocities x˙ and q˙ are related by the Jacobian

J (q)

=

∂φ ∂q

=

∂ φ1 ∂ q1
∂ φ2

∂ q1

∂ φ1 ∂ q2
∂ φ2 ∂ q2

∂ φ1 ∂ q3
∂ φ3 ∂ q2

=

1 0

0 1

−r1 sin q3 − r2 cos q3 r1 cos q3 − r2 sin q3

.

Problems
1. Invent your own nontrivial robot system. It could consist of one or more robot arms, mobile platforms, conveyor belts, ﬁxed obstacles, movable objects, etc. Describe the conﬁguration space mathematically. Explain whether or not the conﬁguration space is compact, and if not, describe the compact factors. Describe the connected components of the conﬁguration space. Draw a rough picture of your robot system.

Choset-79066 book February 22, 2005 17:37

72

3 Conﬁguration Space

2. Give the dimension of the conﬁguration spaces of the following systems. Explain your answers.
(a) Two mobile robots rotating and translating in the plane. (b) Two translating and rotating planar mobile robots tied together by a rope. (c) Two translating and rotating planar mobile robots connected rigidly by a bar. (d) The two arms of a single person (with torso stationary) holding on ﬁrmly to a car’s
steering wheel. (e) A train on train tracks. What if we include the wheel angles? (The wheels roll without
slipping.) (f) A spacecraft with a 6R robot arm. (g) The end effector of the 6R robot arm of a spacecraft. (h) Your legs as you pedal a bicycle (remaining seated with feet ﬁxed to the pedals). (i) A sheet of paper.
3. Describe the Bug2 algorithm for a two-joint manipulator. What are the critical differences between the Bug2 algorithm for a mobile base and the two-joint manipulator? What does a straight line mean in the arm’s conﬁguration space? Can Bug2 be made to work for the two-joint arm?
4. Prove the conﬁguration space obstacle of a convex mobile robot translating in a plane with a convex obstacle is convex.
5. Prove the union operator propagates from the workspace to the conﬁguration space. That is, the union of two conﬁguration space obstacles is the conﬁguration space obstacle of the union of two workspace obstacles. In other words, assuming Q is a conﬁguration space operator, show that
Q(WOi WO j ) = QOi QO j .
6. How many degrees of freedom does a rigid body in n-space have? How many of them are rotational? Prove these two ways: (a) using the method of choosing a number of points on the body and sequentially adding their independent degrees of freedom until each point on the body is ﬁxed, and (b) using the deﬁnitions of S E(n) and S O(n).
7. Use cardboard and pushpins to create a closed chain with four links, a four-bar mechanism. One of these bars is considered stationary, or ﬁxed to the ground. Going around the loop, the link lengths between joints are 6.5 (the ground link), 3.0, 1.5, and 3.0 inches (or centimeters) in length. Poke a hole at the midpoint of the 1.5 inch link and trace the path that the hole traces. Describe a good representation of the conﬁguration space of the linkage.
8. Give a homeomorphism from the racetrack to the ellipse in ﬁgure 3.12.
9. Find two charts for the unit circle S1 and prove they form an atlas.

Choset-79066 book February 22, 2005 17:37

Problems

73

10. Explain why the latitude-longitude chart we often place on the Earth is not a global parameterization. Find two charts for the sphere and prove that they form an atlas.
11. The set of right-arm and left-arm conﬁgurations of the 2R manipulator in ﬁgure 3.3 each give an annulus of reachable positions by the end effector, neither of which is diffeomorphic to the robot’s conﬁguration space. Consider the right-arm and left-arm workspaces as two separate annuluses, and describe how they can be glued together to make a single space that is a valid representation of the conﬁguration space. Comment on the topology of this glued space.
12. For the 2R manipulator of ﬁgure 3.7, how many connected components of free conﬁguration space are there? Copy the ﬁgure, color each of the connected components a different color, and give a drawing of the robot in each of these connected components.
13. Show that compact and noncompact spaces are never diffeomorphic.
14. Find a diffeomorphism from any open interval (a, b) ∈ R to the whole real line R.
15. Give an implicit constraint equation f (x, y, z) = 0 that embeds a torus in R3.
16. For T ∈ S E(3) consisting of the rotation matrix R ∈ S O(3) and the translation p ∈ R3, ﬁnd the inverse transform T −1, so that T T −1 = T −1T = I. Your answer should not contain any matrix inverses.
17. Consider two three-dimensional frames aligned with each other, called A and B. Rotate B 90 degrees about the x-axis of A, then rotate again by 90 degrees about the y-axis of A, then move the origin of B by three units in the z-direction of A. (Make sure you rotate in the right direction! Use the right-hand rule: thumb points along the positive axis, ﬁngers curl in the direction of positive rotation.) Give the matrix TAB ∈ S E(3) describing the frame B relative to the frame A. Consider the point xB = [4, 3, 1, 1]T in homogeneous coordinates in frame B. What is the point xA (expressed in the frame A)? Consider the point yA = [1, 2, 3, 1]T in homogeneous coordinates in frame A, and perform the transformation TAB . Where is the new point yA?
18. Write a program to calculate the conﬁguration space for a convex polygonal robot translating in an environment with convex obstacles. The program should read in from a ﬁle a counterclockwise list of vertices representing the robot, where (0, 0) is the robot reference point. From a second ﬁle, the program should read in a set of obstacles in the workspace. The user enters an orientation for the robot and the program calculates the conﬁguration space obstacles (see, e.g., appendix F). Display the conﬁguration space for different orientations of the robot to show that translating paths between two points may exist for some orientations of the robot, but not for others.
19. Write a program to display the conﬁguration space for a 2R manipulator in a polygonal environment. The program should read in a ﬁle containing the location of the base of the robot, the length of the links, and the lists of vertices representing the obstacles. The

Choset-79066 book February 22, 2005 17:37

74

3 Conﬁguration Space

L3

q3

L2

u1

q2 q1

L1

fixed base

Figure 3.23 A 3R planar robot with a frame attached to the end effector.
program should check for collision at 1 degree increments for each joint and create a plot similar to that shown in ﬁgure 3.7.
20. Find the inverse kinematics φ−1 mapping the end-effector coordinates x to the joint coordinates q for the 2R robot arm in example 3.8.1. Note that for most reachable points x, there will be two solutions, corresponding to the right- and left-arm conﬁgurations. Your solution will likely make use of the two-argument arctangent atan2(x2, x1), which returns the unique angle in [−π, π ) to the point (x1, x2) in the plane, as well as the law of cosines a2 = b2 + c2 − 2bc cos A, where a, b, and c are the lengths of the three edges of a triangle and A is the angle opposite to edge a. Solve for general L1, L2 (do not plug in numbers).
21. Give the forward kinematics φ for the planar 3R arm shown in ﬁgure 3.23, from joint angles q to the position and orientation of the end effector frame in the plane. Find the manipulator Jacobian.
22. For the problem above, show that the forward kinematics mapping is injective, surjective, bijective, or none of these, when viewed as a mapping from T 3 to R2 × S1. Find a “large” set of joint angle ranges U ⊂ T 3 and a set of end-effector conﬁgurations V ⊂ R2 × S1 for which the mapping is a diffeomorphism.
23. The topology of S E(2) is equivalent to R2 × S O(2). Let’s represent an element of R2 × S O(2) by (x, R), where x ∈ R2, R ∈ S O(2). As we have seen, we can make S E(2) a group by giving it a group operation, namely, matrix multiplication. We can also make

Choset-79066 book February 22, 2005 17:37

Problems

75

R2 × S O(2) a group by using the direct product structure to deﬁne composition of two elements:
(x1, R1)(x2, R2) = (x1 + x2, R1 R2) ∈ R2 × S O(2)
We are using vector addition as the group operation on R2 and matrix multiplication on S O(2). With this group operation, is R2 × S O(2) commutative? Is S E(2) commutative? The spaces S E(2) and R2 × S O(2) are topologically equivalent, but are they equivalent as groups?

