IEEE websites place cookies on your device to give you the best user experience. By using our websites, you agree to the placement of these cookies. To learn more, read our Privacy Policy.
Accept & Close
Loading [MathJax]/extensions/MathZoom.js

Skip to Main Content

    IEEE.org
    IEEE Xplore
    IEEE SA
    IEEE Spectrum
    More Sites 

        Cart 
        Create Account
        Personal Sign In 

IEEE Xplore logo - Link to home

    Browse
    My Settings
    Help

Access provided by:
Technische Hochschule Ingolstadt
Sign Out
IEEE logo - Link to IEEE main site homepage
Access provided by:
Technische Hochschule Ingolstadt
Sign Out
ADVANCED SEARCH
Conferences > IECON 2019 - 45th Annual Conf...
A Survey on Smooth Path Generation Techniques for Nonholonomic Autonomous Vehicle Systems
Publisher: IEEE
Cite This
PDF
Omveer Sharma ; N C Sahoo ; N B Puhan
All Authors
View Document
2
Paper
Citations
501
Full
Text Views

    Alerts
    Alerts
    Manage Content Alerts
    Add to Citation Alerts

Abstract
Document Sections

    I.
    Introduction
    II.
    Path Planning: State-of-the-Art
    III.
    Trajectory Planning: State-of-the-Art
    IV.
    Future Research Directions
    V.
    Conclusions

Authors
Figures
References
Citations
Keywords
Metrics
More Like This

    Download PDF
    View References
    Request Permissions
    Save to
    Alerts 

Abstract: Autonomous vehicles (AVs) are at the heart of academic and industry research because of various advantages such as safety improvement, lower energy and fuel consumption, ... View more
Metadata
Abstract:
Autonomous vehicles (AVs) are at the heart of academic and industry research because of various advantages such as safety improvement, lower energy and fuel consumption, exploitation of the road network, reduced congestion and greater mobility. Obstacle avoidance, searching the safest path to follow, generation of suitable manoeuver, optimization based most comfortable trajectory along with road boundaries and traffic rules are important concerns in motion planning. The purpose of this paper is to review the existing approaches for trajectory planning in terms of their feasibility, dynamic constraints, handling obstacles, and optimality for comfort.
Published in: IECON 2019 - 45th Annual Conference of the IEEE Industrial Electronics Society
Date of Conference: 14-17 October 2019
Date Added to IEEE Xplore : 09 December 2019
ISBN Information:
ISSN Information:
INSPEC Accession Number: 19242183
DOI: 10.1109/IECON.2019.8926946
Publisher: IEEE
Conference Location: Lisbon, Portugal
Contents
SECTION I.
Introduction

Traffic accidents are mainly caused due to driver's distraction and wrong decisions. These accidents can be reduced by using AVs. AVs can also improve the capacity of highway, increase safety and decrease traffic congestion [1] . The motion planning architecture of an AV is based upon the discrete parameters of driving environment and continuous parameters of traffic participants. The software architecture of an AV consists of three layers, (1) perception layer, (2) planning layer, and (3) trajectory control layer. In perception layer, estimation about surrounding scenarios is the main concern by combining information generated by real-time data from multiple sensors like camera, RADAR, LIDAR, LASER sensors etc. This information is used to define search space (where vehicle can move) or driving corridor for planning. Planning layer is the core layer of the architecture of AV. There are three main features of planning layer: (1) route planning, (2) behavior decision-making, and (3) motion planning (path planning and trajectory planning) as shown in Fig. 1 . The route planner generates optimal global routes according to traffic and distance from starting point to destination by using sensor information which is provided by the perception layer. The behavior decision-making module provides reasonable abstraction to avoid collision and safe driving actions. According to action generated by the behavior decision-making module, path planning modules generate optimal local trajectories in terms of safety, comfort and accuracy.

The understanding of driving environment depends upon both discrete and continuous parameters. The sampling and searching based models are suitable for the discrete elements of the driving environment because of its advantage of the free-cost function. On the other hand, numerical optimization based models are mainly used for the continuous parameters' estimation for smooth trajectory generation. Path planning and trajectory planning play the main role in the motion of AVs. The path planner generates a path to avoid collision with static and dynamic obstacles by taking environmental constraints into account. The path generated by path planner works as a reference path for the trajectory planner. The trajectory planner considers the vehicle dynamics and associated constraints to generate safe and comfort trajectory. Continuous parameters and vehicle dynamic constraints (vehicle model) based cost function is optimized to generate smooth and comfort trajectory. This optimized trajectory is followed by AVs. The motion planning strategies along with the classification of path planning and trajectory planning are shown in Fig. 1 .

This paper is organized as follows. An overview of path planning algorithms is presented in Section II . In Section III , the trajectory planning techniques are described. In Section IV , future research is highlighted. Finally, a conclusion is outlined in Section V .
SECTION II.
Path Planning: State-of-the-Art

The path planner constructs a feasible path from initial configuration to the goal configuration with consideration of road boundary and geometry. The strategy to generate this path may be based upon the lowest length of the path or lowest time for traveling from initial stage to goal stage with considering the obstacles and time to collision (TC). The planner tries to find the best sequence of vehicle states. Path planning approaches can be divided into two categories: (1) sampling-based approach and (2) searching-based approach.
Fig. 1.

System architecture of the motion planning strategies

Show All

A. Sampling-Based Approach

Sampling-based methods can be further divided into random sampling-based methods and deterministic sampling-based methods. Probabilistic road map [2] – [3] [4] and rapidly exploring random tree (RRT) [5] techniques are widely used for robot motion. The RRT algorithm constructs a randomized data structure tree which is iteratively expanding by adding new configuration node with control input until it reaches goal configuration. The RRT algorithm and its variants quickly expand in the search space to generate collision free path. RRTs can be used in state space where the tree has grown with the sampled state. The RRT planner has been used in autonomous driving with particle-based extension like prediction step of a particle filter to address the issue of uncertainty [6] . RRT has quick exploration in free space, but it creates a jerky path [7] to solve this problem. RRT algorithm with B-spline is used in which random configuration state sample has orientation angle, sampling time, acceleration and acceleration duration [8] .

To solve the time constraints, a Dual-Tree RRT (DT-RRT) method is implemented for path generation in case of two-wheeled mobile robots [9] . In this work, path generation scheme consists of two trees, one for workspace and another for state space. A closed loop controller is used with the RRT in CL-RRT algorithm. The RRT algorithm with a closed loop controller is able to generate smooth path with satisfying vehicle dynamics constraints. Each node in the tree is extended by using low-level controller with closed-loop dynamics so that each edge in the tree is dynamically feasible [10] – [11] [12] . Improved CL-RRT approach (named RRT-Reach) has been implemented by combining Cl-RRT with threat assessment in game theory framework. Threat level can be defined as the remaining time to the earliest possible collision between host and errant vehicles [12] . Gaussian process (GP) is used to improve CL-RRT for obstacle handling for safe extension of the tree (named RR-GP) [13] . In this work, a motion pattern is generated to learn this model by combining the flexibility of GP with efficiency of RRT-Reach.

In RRT*, a new node will connect with low-cost node (it has a minimum cost path to each new node) rather than the nearest node (like RRT) [14] . Thus, RRT* algorithm gives guarantee of the low-cost path. A variant of RRT* with two modification in routines (one for extension and one for collision-free) is used for obstacle avoidance in [15] . The RRT* algorithm with half car dynamic model is implemented to generate dynamically feasible path for a circular road [16] . Minimum Violation RRT* algorithm (MVRRT*) is proposed in [17] . In this study, Kripke structure is used to form the road network and vehicle dynamics. Variants of RRT have some advantages like quick search of free space, collision checking by using advanced techniques with real-time feasibility etc. However, these approaches generate the jerky path with heavy dependency on the nearest nodes. Perfect knowledge is presupposed to check collision.

Deterministic sampling-based methods are considered as local search methods. Searching the complete graph in the time period is not efficient; so, a number of approaches use a restricted horizon in terms of time and space. Partial motion planning (PMP) can be used for path generation rather than searching entire state space. In [18] , PMP is used with RRT and Inevitable Collision States (ICS) (a state where a collision cannot be avoided) concept. A bicycle model and non-holonomic continuous curvature (CC) metric are used in [19] . PMP and a Probabilistic Collision State (PCS) (probabilistic generalization of an ICS) concept is introduced to give guarantee about no collision [20] .
B. Search-Based Approach

Graph-based search methods such as A*, state lattice, hybrid A*, Dijkstra and their variants are considered as Search-based methods. A-star (A*) is a heuristic-based search algorithm in an informed environment with best first search concept to fulfill the limited time constraint [21] – [22] [23] [24] . These algorithms quickly generate high sub-optimal solution initially rather than improved solution within the limited deliberating time. Anytime Dynamic A* (AD*) and a heuristic function with an inflation weight factor (value greater than 1) work many times faster than normal algorithm [25] . ALT (A* search, landmarks, and the triangle inequality) algorithm and risk heuristics are combined to search path on a probabilistic grid cost map [7] . The dynamic graph is generated with fixed time differences and flexible distances between nodes in Flexible Unit A* (FU-A*) algorithm [26] . In this study, a cubic polynomial is used to connect the parent node with the child node in the adjacent lane. A hybrid A* algorithm is implemented for optimal speed generation by taking speed and acceleration constraints into account [27] . In this work, behavioral path planning (upper) generates the macro trajectory based on the discrete information of objects and traffic control device (TCD). On the other hand, the lower trajectory planning algorithm optimizes the local trajectory for energy, safety, and driving comfort by using numerical optimization.

To solve the parking problem, global planning is done by A* while the local planner uses adapted Hybrid A* (AHA*) algorithm in which two extra costs, changes in steering and changes in direction, are added in A* [28] . Integration of global and local planning has been done according to the distance between nodes. Hybrid A* algorithm and conjugate-gradient descent path smoother are used to generate smooth path by expanding four node patterns in circular manner [29] . An input sampled lattice is proposed by using coordinate transformation into chained form coordinates for vehicle model [30] – [31] . The state lattice is a discretization of the configuration space into a set of states. The connection between states represents a path. According to discretization property for a state lattice, two constituent paths split at a node or in other words we can say, two paths meet at a lattice node. The lattice creation for resolution can utilize parallel computation resulting in computation time savings [32] . Lattice edges can be pre-computed offline for online real-time planning. The best trajectory from a finite set of trajectories is then selected [33] . State Lattice is well suitable for a complex environment like road and non-holonomic system [25] . The approach is based on Anytime Dynamic A* with multi-resolution of dynamic feasible state lattice space. Fixed state lattices restrict the movement of vehicles and search time will increase because of small differentiation in lattice set trajectories. To overcome this issue, spatio-temporal state lattices are proposed [34] in which time and configuration space are combined into a single manifold. An algorithm to generate input & state space lattices is proposed to address the curvature issue [35] . Quartic curvature polynomials are used and both path & speed are iteratively optimized during trajectory optimization [36] . State lattice is also used for road coordinate system, in which spatiotemporal space is explored by dynamic programming algorithm to find trajectory that encodes manoeuvers [37] .

A focused spatio-temporal search lattice planner is used to generate smooth and comfort trajectory in a safe space [38] . A new graph structure namely time-bounded lattice in which short term planning in time and long term planning without time are merged to generate two-stage path [25] . Lattice planners have some advantages like low computation power, feasibility of path in dynamic environments, guarantee of smoothness, capability to handle vehicle dynamic constraints, pre-computed offline lattice edges for online real-time planning etc. However, lattice planners may lead to time inefficiency and exhaustive oscillations.
SECTION III.
Trajectory Planning: State-of-the-Art

A trajectory should fulfill the requirements of state constraints of vehicle dynamics and traffic environment with consideration of smooth trip & comfort for passengers after predicting best manoeuver and the best path to follow by the vehicle. Trajectory planning considers the continuous elements of the environment. The trajectory planning methods can be divided into two categories, (1) continuous geometric curve based methods and (2) Model Predictive Control (MPC).
A. Continuous Geometric Curve-Based Methods

First, a smooth geometric curve with required properties of smoothness & controllability is selected according to generated path and manoeuver. Then, a best trajectory is selected by cost function optimization and a sequence of control inputs is provided to the actuator for following the trajectory by AV. Most popular curves are Bezier curves [39] – [40] , Spline curves [41] – [42] [43] , polynomial spirals [38] , [44] , Nelson polynomials [45] , arcs [46] , and clothoids [47] .
(a) Bezier Curves

The shape of brazier curves depends upon control point P 0 through P n , where n is the order of the curve. The curvature of the curve depends upon the number of control points ( n = 1 for linear, n = 2 for quadratic, etc.). The first and last control points will always be the endpoints of the curve. Generally, intermediate control points do not lie on the curve.
Fig. 2.

Bezier curves: (a) 1 st order, (b) 2 nd order and (c) 3 rd order.

Show All

The equation of the curve is defined as:
B ( f ) = ∑ n i = 0 C n i t i ( 1 − t ) n − i P i , 0 ≤ t ≤ 1 ; 1 st order   B ( t ) = ( 1 − t ) P 0 + t P 1 ( 1 − t ) 2 nd order   B ( t ) = ( 1 − t ) 2 P 0 + 2 ( 1 − t ) t P 1 + t 2 P 2 3 rd order   B ( t ) = ( 1 − t ) 3 P 0 + 3 ( 1 − t ) 2 t P 1 + 6 ( 1 − t ) t 2 P 2 + t 3 P 3 (1)
View Source Right-click on figure for MathML and additional features. \begin{align*} & B(f)=\sum\nolimits_{i=0}^{n}\mathrm{C}_{i}^{n}t^{i}(1-t)^{n-i} P_{i}, 0\leq t\leq 1;1^{\text{st}}\text{order}\ B(t)=(1-t) P_{0}+ tP_{1}(1-t) \\ & 2^{\text{nd}}\text{order}\ \mathrm{B}(t)=(1-t)^{2} P_{0}+2(1-t) tP_{1}+\mathrm{t}^{2} P_{2} \\ & 3^{\text{rd}}\text{order}\ \mathrm{B}(t)=(1-t)^{3} P_{0}+3(1-t)^{2} tP_{1}+6(1-t)\mathrm{t}^{2} P_{2}+\mathrm{t}^{3} P_{3} \tag{1} \end{align*}

Bezier curve is able to fulfill the properties of smoothness and controllability. The cost function of the curve takes into account of smoothness, curvature, arc length of the path along with distance between path and the lane centerline. Cubic Bezier curves have been used as a path generator in [40] . 4 th -order Bezier curve for smooth trajectory generation with obstacle avoidance capabilities is used in [48] . Road constraints and static obstacles are considered to generate control points for the Bezier curve. A comparative analysis between 5 th and 3 rd order Bezier curves for single and double lane change manoeuvers is presented in [49] . In this study, 5 th order curves give more feasible and smooth path in a dynamic environment. The curvature from the generated trajectory is used to find the steering rate control input.
(b) Spline Curves

A minimum jerk level for desires path is the key to feasible trajectory for vehicle control and comfort. A spline path can be used to fulfill constraints and minimum jerk. The equations for cubic spline for segment (i) are given by [32] :
d 3 y d x 3 = ( − 1 ) i + 1 k , d 2 y d x 2 = ( − 1 ) i + 1 k x + C i , 1 d y d x = ( − 1 ) i + 1 k x 2 2 + C i , 1 x + C i , 2 , y = ( − 1 ) i + 1 k x 3 6 + C i , 1 x 2 2 + C i , 2 x + C i , 3 (2)
View Source Right-click on figure for MathML and additional features. \begin{align*} & \frac{d^{3}y}{dx^{3}}=(-1)^{i+1}k,\frac{d^{2}y}{dx^{2}}=(-1)^{i+1}kx+C_{i, 1} \\ & \frac{dy}{dx}=\frac{(-1)^{i+1}kx^{2}}{2}+C_{i, 1}x+C_{i, 2}, \\ & y= \frac{(-1)^{i+1}kx^{3}}{6}+C_{i, 1}\frac{x^{2}}{2}+C_{i, 2}x+C_{i, 3} \tag{2} \end{align*}

Third derivative of the position is piecewise constant with equal magnitude and alternate sign. While the second derivative is piecewise linear and continuous, the first derivative is also differentiable and continuous. The jerk is minimized by considering the specified constant. The cubic polynomial spline is used to generate multiple trajectories along these splines with the lateral shift and rollout capability [43] . The edge track is also considered to add information about the span of the spline. The cost function considers obstacles along the trajectory and gives them high penalty. The B-spline results in the Reproducing Kernel Hilbert Space (RKHS) provide a smooth and controllable trajectory [50] . The cubic spline based trajectory representation has been considered and cost function is associated with constraint of path within the safe driving corridor [41] . In this study, the trajectory is divided into shared path segment and contingency path with considering all constraints. Spline with distance and velocity constraints is implemented to generate a safe trajectory for autonomous driving in no lane road condition [42] .
Fig. 3:

Spline with objects and barrier [32]

Show All

Cubic Splines and Quintic Splines are used to keep the jerk level low. After optimization, a minimum jerk trajectory is chosen [32] .
(c) Polynomial Spirals

For constant acceleration profile, polynomial spirals can be used. 4th order polynomial for position is represented as [51] :
x = a 1 t 4 + a 2 t 3 + a 3 t 2 + a 4 t + a 5 y = f ( x ) = f ( a 1 t 4 + a 2 t 3 + a 3 t 2 + a 4 t + a 5 ) (3)
View Source Right-click on figure for MathML and additional features. \begin{align*} & x= a_{1}t^{4}+ a_{2}t^{3}+ a_{3}t^{2}+ a_{4}t+ a_{5} \\ & y=f(x)=f(a_{1}t^{4}+ a_{2}t^{3}+ a_{3}t^{2}+ a_{4}t+ a_{5}) \tag{3} \end{align*}

A path as a cubic polynomial spiral is defined in [44] . In this study, the cubic polynomial function is used to join spatiotemporal lattice. They consider curvature in the state lattice vector. Two-step motion planning system is also used for both urban and highway driving to compensate the planning time [38] . In first step, the reference trajectory according to road geometry is generated by using dense lattice sampling and optimization. Cubic interpolation here generates the seeding path. During the second step, further trajectories that satisfy dynamic constraints for execution are generated and evaluated.

Nonlinear optimization algorithm is used to calculate local minima in this work. 4th order polynomials of time based on differential flatness and dynamic bicycle model are used for autonomous driving in the presence of moving obstacles [51] . A tree graph with three classes is used in trajectory planning according to different conditions on highway driving. Maximum longitudinal & lateral acceleration and maximum driving force are considered as constraints. Overtaking and car following are carried out based on vehicle presence, lane availability, and distance. Constant velocity is assumed in this work which is not suitable in the real world scenario. A new trajectory generation scheme (named as TiJi) is presented in [52] . A second order polynomial is used as control inputs: ( a ( t ) = α 1 + 2 β 1 t + 3 γ 1 t 2 and ζ ( t ) = α 1 + 2 β 1 t + 3 γ 1 t 2 ) to compute the trajectory from a start state to goal state. The trajectory optimization is based on an error between the current and final state. In this approach, first, acceleration profile is computed according to vehicle acceleration constraint. After that velocity profile is computed taking acceleration into account. Then velocity profile is also adjusted according to the vehicle constraint. Quintic polynomials on longitudinal and lateral axes respectively are used to trajectory generation for overtaking on the highway [53] . This optimization requires less computation power due to simplicity of polynomial functions.
(d) Arcs

An arc can be used for constant curvature. An arc is shown in Fig. 4 for the current period. Position ‘ A ’ is the start point, ‘ B ’ is the endpoint, ‘ θ ’ is the orientation of the vehicle and ‘ R ’ is the radius of the arc. Two symmetrical circulars are joined to make the trajectory for lane changing. So, Δ y should be less than half of the lane width.
Fig. 4.

Trajectory planning for lane change maneuver [46]

Show All

Two symmetrical circulars are used for trajectory planning mainly based on lane change maneuvers [46] . According to collision probability, best trajectory is chosen from a cluster of trajectories with consideration of safety and comfort. In this work, the uncertainty is based upon Gaussian distribution and prediction time. Arcs are more suitable to solve car parking problems; however the selection of start and end points is somewhat difficult. A combination of line and arc are used in searching of hybrid A* algorithm to solve car parking problem [28] .
(e) Clothoids

If the curvature is constant, than the vehicle will follow circular trajectories. However, because of turning of the steering wheel, curvature variation is also introduced. Thus, the vehicle motion can be approximated as a clothoid path because of curvature variation. Clothoids are used to represent the path in [47] . The trajectory is generated from the evaluation of a subset of possible acceptable vehicle trajectories on a cost map. A new trajectory based on clothoids is used, which joins previously planned trajectory to avoid obstacles in [54] . The new trajectory is smooth up to second derivative (curvature) which provides the ability to track emergency manoeuver.
B. Optimization Based Model Predictive Control (MPC)

Model Predictive Control (MPC) is a trajectory planning approach that combines different aspects of control engineering. The trajectory planning is considered as a nonlinear optimization problem with nonlinear constraints. In this approach, first, identify a safe driving corridor and then conveys the vehicle to move in this corridor. The approach considers all constraints during planning of each step rather than planning a certain path and controlling the vehicle along with it. A constraint planner predicts driving corridor over a horizon by using sensor data, predicted behaviors of the target vehicle and traffic participants. The driving corridor can be presented by lateral position vector with the dynamic constraint produced by the vehicle dynamic prediction model. It computes an optimal control input sequence according to the optimized trajectory. Three path planning methods are compared: a state lattice path planner, predictive constraint-based planning and spline-based search tree [32] . MPC is used to generate the sequence of control input in predictive constraint-based planning. A linear bicycle model with considering lateral and yaw dynamics is used for continuous trajectory generation [32] . MPC is also used to trajectory generation for lane changing manoeuver by selecting an appropriate inter-vehicle traffic gap and time instance [55] . A fast trajectory generated by MPC with Reference Horizon Generator (RHG) is used for racing car [56] .
Fig. 5.

Clothoids; (blue) not feasible global trajectory due obstacle (red circle). (Green) The optimal escaping manoeuver, (black) the feasible candidates for different choices of P 1 [54] .

Show All

A new state space sampling-based model is introduced in predictive motion planner framework [57] , in which four-dimensional state-space (position ( x ,   y ), heading θ , and curvature k) are used to represent continuous curvature of the path. Maximum speed, maximum lateral & longitudinal acceleration and curvature are considered as the constraints. Cubic polynomial spirals are used to represent the control inputs. The cost function considers distance to obstacles, distance from reference path, smoothness and prediction distance. Only static obstacles are tested in this study. A variant of the RRT based on particle filtering (PF) is also considered for generating complex trajectories. Afterwards MPC is used to generate control input sequence. The experiment is performed on a small robotic car [58] . In [59] , a driving corridor to limit the action space is prepared. Sensor and map-based representations are used to describe the situation and trajectory. The trajectory is time parametrized with consideration of moving obstacles. The cost function has offset from the reference path, speed, acceleration, jerk, and yaw rate. Computational complexity to generate driving corridor becomes high with the increase of obstacles in this work. MPC is capable to solve optimization problem for best trajectory generation due to presence of dynamic model of vehicle. However, MPC is also sensitive to the number of constraints and variables during optimization process.
SECTION IV.
Future Research Directions

AVs operate in a dynamic environment with uncertainty. This happens due to continuous movement of AVs and other vehicles at high speed. Road signals and disappearance & appearance of obstacles create a complex dynamic environment. Noise in measurement also creates computation time and prediction problem. Good amount of research has been done to determine status and position of the target vehicle to understand static environment with respect to the local environment. More research is required for tracking and determining the intention of traffic moving participants such as pedestrians, bikes, and other vehicles. Online vehicle to vehicle communication can be used to simplify these complex scenarios. Model predictive control has been used to ensure the required input data to follow desired trajectory under certain manoeuver with using feedback control. But the computation complexity increases in MPC because of large number of dynamic parameters. The sampling of state space can be quicker for efficient planning of complex manoeuvers.
SECTION V.
Conclusions

The path which is followed by self-driving or autonomous vehicles should be comfortable and safe. The planning layer should put the vehicle in right behavior and motion with respect to constraints. This paper represents a critical review of different planning techniques which have been applied for path planning and trajectory planning to road driving of AVs. Most approaches to the trajectory level optimize a given geometric curve with respect to dynamic and static obstacles. The real world performance of current approaches can be improved by incorporation of dynamic modelling into planning.
ACKNOWLEDGEMENT

The research in this paper is supported by the KPIT Technologies Ltd, India under research grant for the project entitled “Driver behavior modelling for autonomous driving”.

Authors
Figures
References
Citations
Keywords
Metrics
More Like This
Communication Latency and Speed-Dependent Minimum Time Headway for Connected Heavy Road Vehicle Collision Avoidance

IEEE Transactions on Intelligent Transportation Systems

Published: 2020
Comparison of linear and non-linear control schemes for collision avoidance in heavy road vehicles

2014 IEEE International Conference on Vehicular Electronics and Safety

Published: 2014
Show More
References
References is not available for this document.
IEEE Personal Account

    Change username/password 

Purchase Details

    Payment Options
    View Purchased Documents 

Profile Information

    Communications Preferences
    Profession and Education
    Technical interests 

Need Help?

    US & Canada: +1 800 678 4333
    Worldwide: +1 732 981 0060
    Contact & Support 

Follow

About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | Privacy & Opting Out of Cookies

A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity.

© Copyright 2022 IEEE - All rights reserved.
IEEE Account

    Change Username/Password
    Update Address

Purchase Details

    Payment Options
    Order History
    View Purchased Documents

Profile Information

    Communications Preferences
    Profession and Education
    Technical Interests

Need Help?

    US & Canada: +1 800 678 4333
    Worldwide: +1 732 981 0060
    Contact & Support

    About IEEE Xplore
    Contact Us
    Help
    Accessibility
    Terms of Use
    Nondiscrimination Policy
    Sitemap
    Privacy & Opting Out of Cookies

A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity.
© Copyright 2022 IEEE - All rights reserved. Use of this web site signifies your agreement to the terms and conditions.
