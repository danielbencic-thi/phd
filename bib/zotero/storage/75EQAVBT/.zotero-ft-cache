Zotero automatically redirected your request to ieeexplore.ieee.org through the proxy at thi.idm.oclc.org. Don’t Proxy This Site Proxy Settings ✕
IEEE websites place cookies on your device to give you the best user experience. By using our websites, you agree to the placement of these cookies. To learn more, read our Privacy Policy.
Accept & Close
Typesetting math: 83%

Skip to Main Content

    IEEE.org
    IEEE Xplore
    IEEE SA
    IEEE Spectrum
    More Sites 

        Cart 
        Create Account
        Personal Sign In 

IEEE Xplore logo - Link to home

    Browse
    My Settings
    Help

Access provided by:
Technische Hochschule Ingolstadt
Sign Out
IEEE logo - Link to IEEE main site homepage
ADVANCED SEARCH
Conferences > 2016 IEEE International Confe...
High-dimensional Winding-Augmented Motion Planning with 2D topological task projections and persistent homology
Publisher: IEEE
Cite This
PDF
Florian T. Pokorny ; Danica Kragic ; Lydia E. Kavraki ; Ken Goldberg
All Authors
6
Paper
Citations
461
Full
Text Views

    Alerts

Abstract
Document Sections

    I.
    Introduction
    II.
    Background
    III.
    Methodology
    IV.
    Algorithmic Details and Implementation
    V.
    Experiments

Show Full Outline
Authors
Figures
References
Citations
Keywords
Metrics
Media
Abstract:
Recent progress in motion planning has made it possible to determine homotopy inequivalent trajectories between an initial and terminal configuration in a robot configuration space. Current approaches have however either assumed the knowledge of differential one-forms related to a skeletonization of the collision space, or have relied on a simplicial representation of the free space. Both of these approaches are currently however not yet practical for higher dimensional configuration spaces. We propose 2D topological task projections (TTPs): mappings from the configuration space to 2-dimensional spaces where simplicial complex filtrations and persistent homology can identify topological properties of the high-dimensional free configuration space. Our approach only requires the availability of collision free samples to identify winding centers that can be used to determine homotopy inequivalent trajectories. We propose the Winding Augmented RRT and RRT* (WA-RRT/RRT*) algorithms using which homotopy inequivalent trajectories can be found. We evaluate our approach in experiments with configuration spaces of planar linkages with 2-10 degrees of freedom. Results indicate that our approach can reliably identify suitable topological task projections and our proposed WA-RRT and WA-RRT* algorithms were able to identify a collection of homotopy inequivalent trajectories in each considered configuration space dimension.
Published in: 2016 IEEE International Conference on Robotics and Automation (ICRA)
Date of Conference: 16-21 May 2016
Date Added to IEEE Xplore : 09 June 2016
Electronic ISBN: 978-1-4673-8026-3
INSPEC Accession Number: 16055402
DOI: 10.1109/ICRA.2016.7487113
Publisher: IEEE
Conference Location: Stockholm, Sweden
SECTION I.
Introduction

Over the last two decades, sampling based motion planning approaches have enabled the planning of complex motions even for robotic systems with a many degrees of freedom. Algorithms such as Rapidly Exploring Random Trees (RRT) [13] and Probabilistic Roadmaps (PRM) [12] proceed by incrementally constructing a sampling based graph-representation G of the environment using which the connectivity of the free configuration space C f can be approximated as the number of samples increases. These algorithms can determine feasible trajectories between an initial and a terminal configuration in C f and recent variants such as RRT * and RRG [11] can asymptotically determine a shortest path. While these methods approximate the path-connectivity of C f as the number of samples is increased, they do not capture all topological information about the space of continuous paths in C f . More precisely, the graph G does not capture higher order topological information about C f which is contained in the first homology and homotopy groups of C f . These algorithms are hence currently not able to distinguish homotopy classes of trajectories - where two trajectories are called homotopy inequivalent if they cannot be continuously deformed into one another (see Fig. 1 ).
Fig. 1:

Illustration of our approach: the top left part of the figure illustrates a configuration space C f with two cylindrical obstacles. Collision free samples X ⊂ C f in black are projected along two task-projections Π 1 , Π 2 onto the ( x , y ) ) and ( y ,   z ) coordinates. Our persistent homology approach determines that each projection carries non-trivial information about homotopy classes in C f by computing a persistence diagram for each (red and blue points in the diagram in the bottom right). The projection of C f is approximated by a simplicial complex and winding centers lying in the projection of the collision space are automatically found (red points in the projections). Our WA-rrt* algorithm is initialized with these winding centers and determines four homotopy inequivalent trajectories in C f .

Show All

We study the problem of finding a collection of several homotopy inequivalent trajectories between pairs of points in the configuration space. Let us highlight two benefits of being able to find such motions: Since continuous trajectory optimization approaches can deform a given initial trajectory only within its homotopy class, an initialization of these algorithms with several sub-optimal trajectories in distinct homotopy classes holds promise to avoid local minima. Furthermore, the ability to reason about homotopy classes, can be useful, for example to replan a trajectory in a different homotopy class when a given trajectory becomes infeasible due to changing environment conditions as homotopy inequivalent trajectories provide a knowledge of alternative motion classes to the robot. We propose the use of continuous projections Π i : C f → R 2 , i ∈ { 1 , … , n } to 2-dimensional spaces for the purpose of determining homotopy inequivalent trajectories between two points s , t ∈ C f in a collision free configuration space C f . Our approach uses a finite set of samples X ⊂ C f that are mapped to Π i ( X ) ⊂ R 2 and utilizes persistent homology to test whether nontrivial topological information about the fundamental group π 1 ( C f ) is captured by Π i . We use persistent homology to determine ‘winding centers’ using which we formulate the topological motion planning problem and we introduce an adaptation of RRT and RRT*-based motion planners which we call WA-RRT and WA-RRT* (Winding Augmented - RRT/RRT*). These algorithms allow incorporating the determined topological information to find homotopy inequivalent trajectories and we present an experimental evaluation in configuration spaces of dimension 2–10 using planar linkages.
SECTION II.
Background
Homotopy-Aware Motion Planning

We consider the problem of determining homotopy inequivalent trajectories between two points in a configuration space C f . Early work on synthesizing homotopy inequivalent trajectories has focused on two dimensional configuration spaces for planar robot motion planning. Jenkins [10] decomposed a 2D configuration space using wedge-sectors around a central point to describe trajectories as words classifying the transition of a path with respect to these wedges. Grigoriev et al [6] considered planar cuts to construct homotopy inequivalent trajectories in the plane while [18] suggested a PRM based approach called Homotopy Preserving Roadmaps in 2D. In [17] , homology classes are advocated instead of homotopy classes to plan homotopy inequivalent trajectories by means of winding angles in 2D which was later generalized to higher dimensions [3] . This approach relied on an initial graph representation of the free configuration space which was then augmented by a topological signature integrating a differential one-form along a given path. This differential one-form, capturing information about the topology of the collision space, was assumed to be given and in 2D corresponded to a winding angle and relied on a representative given winding center in the interior of each obstacle surrounded by free space. We build on these prior works, but here only assume the ability to sample collision free points in C f . We furthermore propose the use of continuous projections to 2 dimensional space Π i : C f → R 2 and a first method to automatically extract winding points in a sampling driven manner by using persistent homology.

Topological approaches have inspired the work of [20] uti-lizing writhe to form a representation for motion planning to efficiently plan twisting motions. This work has however not studied the generation of homotopy inequivalent trajectories. Our work [16] utilizes winding angles to plan enveloping motions of a hand to cage an object, but homotopy classes of motions are not the focus of this work. Our work is related to these approaches in that we also use winding angles. Our approach utilizes a winding augmented covering space on which our RRT/RRT* based planners perform incremental search resulting in homotopy inequivalent trajectories. A further difference to our approach is that we only assume the availability of collision free samples in C f without analytic information about the obstacles.

In [15] , we used persistent cohomology and represented the free configuration space of a robot in a sampling based manner by means of a filtration of simplicial complexes to plan trajectories in distinct homology classes in dimensions up to 4. The construction of these simplicial complexes is however currently impractical in higher dimensions since these methods are based on Delaunay triangulations of samples X whose complexity in dimensions higher than 4 quickly becomes infeasible for large numbers of samples. In this work, we also utilize persistent homology, but only under a projection to 2D task spaces. We thus avoid the ‘curse of dimensionality’ of constructing high-dimensional simplicial approximations of C f itself. Our approach to use projections is also inspired by the planner KPIECE [19] that utilizes projections to lower dimensions to efficiently guide a tree-based motion planner.
Path Homotopy Classes and Homology

In order to identify whether two trajectories are homotopy inequivalent, we require topological information about the free configuration space C f beyond the path-connectivity of C f . The fundamental group π 1 ( C f ,   x 0 ) , whose elements are given by equivalence classes of closed trajectories based at a point x 0 ∈ C f can distinguish homotopy classes of trajectories because two trajectories γ 1 , γ 2 : [ 0 , 1 ] → C f between x 0 and another point x 1 ∈ C f yield a closed loop l = γ 1 ∘ − γ 2 : [ 0 , 1 ] → C f following γ 1 from x 0 to x 1 and then γ 2 from x 1 to x 0 . The loop l corresponds to the identity element in π 1 ( C f ,   x 0 ) precisely if γ 1 , γ 2 are homotopy equivalent. When C f is path-connected, π 1 ( C f ,   x 0 ) is independent of the base point [7] . Typically, the fundamental group has infinite cardinality and forms a highly complex group that is typically non-commutative. To avoid the complexity of π 1 ( C f ) , we consider a commutative version of π 1 ( C f ) which is provided by the first homology group H 1 ( C f ) [17] .
Simplicial Complexes and Persistent Homology

One of the key problems we address in this paper is the detection of topologically non-trivial information as identified by π 1 ( C f ) . In order to detect that π 1 ( C f ) is non-trivial based on collision free samples - and to therefore detect the fact that homotopically distinct trajectories exist - we will utilize persistent homology [4] which we review now.

Given a sample of points X ⊂ R d , we can consider the family of union of balls spaces X r = ⋃ x ∈ X { y ∈ R d : ∥ x − y ∥ ≤ r } , for r ≥ 0 as in prior work [15] . For each r ,   X r is homotopy equivalent to the Delaunay − C ˇ ech complex D C r ( X ) [1] , which is a simplicial complex defined for the finite set X ⊂ R d and a radius parameter r which in this context is called the filtration value. Let us recall here that a geometric k-simplex σ = [ v 0 , … , v k ] in R d is a convex hull of k + 1 ordered affinely independent elements v 0 , … , v k ∈ R d and a convex hull of an ordered subset of these elements is called a face τ of σ , indicated by τ ≤ σ . We call k the dimension of a k-simplex. A (finite) simplicial complex K is a non-empty set of simplices such that if σ ∈ K and τ ≤ σ , then τ ∈ K and if σ , σ ′ ∈ K then σ ∩ σ ′ is empty or an element of K . We write | K | for set of points in R d contained in the union of all simplices in K . The set | K | is a topological space with the subspace topology from R d . Let D ( X ) denote the simplicial complex corresponding to the Delaunay triangulation of X with simplices defined by D ( X ) = { [ v 0 , … , v k ] : v i ∈ X , ⋂ k i = 0 V v i ≠ ∅ for k ∈ { 0 , 1 ,   … ,   d } } , where V x denotes the Voronoi cell containing x . For each k-simplex σ = [ v 0 , … , v k ] ∈ D ( X ) , define f ( σ ) = min { r   ⋂ k i = 0 B r ( v i )   ≠   ∅ } , where B r ( x ) = { y ∈ R d : ∥ x − y ∥ ≤ r } . The Delaunay − C ˇ ech complex D C r ( X ) , for r ≥ 0 is the sub-complex of D ( X ) defined by D C r ( X ) = f − 1 ( ( − ∞ ,   r ⌋ ) . The key point about this construction is that, since D C r ( X ) is homotopy equivalent to X r , we can now compute topological information about X r from D C r ( X ) at all scales r ≥ 0 using persistent homology.
Persistent Homology

Whenever the first homology group H 1 ( X r ) is non-trivial, π 1 ( X r ) is also non-trivial, since homology yields an Abelianization of the fundamental group [7] . As a result, we can conclude that X r contains distinct homotopy classes if the first homology group H 1 ( X r ) is non-trivial (but the converse does not hold in general). Our approach is to investigate H 1 ( X r ) at all radii r > 0 by means of the first persistent homology of D C r ( X ) . We omit the technical details of persistence here, more details can be found in [4] , [15] . Fig. 2 illustrates the output of the persistence algorithm, called the first persistence diagram. The diagram displays along the horizontal axis the birth radius r b at which a given holes in X r are first formed (voids that are fully enclosed by X r ). Along the vertical axis, the death ‘filtration value’ r d at which a given hole disappear because it is fully covered by X r is also recorded (formally, this corresponds to rank changes in the first persistent homology groups). Since r b ≤ r d , all points in the diagram lie above the diagonal and the number of voids at radius r (formally the dimension of H 1 ( X r ) can be read off by counting the number of points ( r b ,   r d ) with r b ≤ r and r d > r . In the example, there exists one such point in the shown dashed quadrant for r = 0.1 . A point ( r b ,   r d ) in the persistence diagram is also referred to as a persistence interval. The difference ε = r d − r b is called the persistence of the topological feature corresponding to ( r b ,   r d ) . Points with large persistence have a large vertical distance to the diagonal and are noise-robust [5] . Points close to the diagonal can be considered as topological noise - e.g. small voids that appear and disappear quickly as r changes. In the example, a single large void exists in the point-cloud, corresponding to the red point in the first persistence diagram. Corresponding to each point in the diagram, the computation of persistence also returns one or more closed paths of edges (1-simplices) called a 1-cycle which represents a non-trivial element in the first homology group H 1 ( D C r ( X ) ) with coefficients in Z 2 . The 1-cycle is displayed in red in the figure to the left and surrounds the non-trivial hole which is identified by the cycle. For more details, see [4] , [15] .
Fig. 2:

Persistent homology analysis for a point-cloud x ⊂ R 2 where samples are given by vertices (black dots) of the depicted simplicial complex. The union of balls-space X r for r = 0.1 as illustrated by blue discs is approximated by the gray and black simplicial complex D C r ( X ) . We use the first persistence diagram shown on the right to identify a radius parameter r = 0.1 such that X r contains a single hole (there exists just one point ( x ,   y )   in the diagram with x ≤ r and y > r . The hole corresponds to a computed collection of 1-simplices (a 1-cycle) displayed in red which surround the identified hole.

Show All

Winding Numbers

Given a continuous curve γ : [ 0 , 1 ] → R 2 − { 0 } , where ( r ( t ) ,   θ ( t ) ) ∈ R > 0 × R denote continuous polar coordinates of γ , we define
W ( γ ) = 1 2 π ( θ ( 1 ) − θ ( 0 ) ) .
View Source Right-click on figure for MathML and additional features. \begin{equation*} W(\displaystyle \gamma)=\frac{1}{2\pi}(\theta(1)-\theta(0)). \end{equation*}

If γ is a closed curve, W ( γ ) ∈ Z is called the winding number and measures the total number ot times γ winds around the origin (with sign). In Cartesian coordinates γ ( t ) = ( x ( t ) ,   y ( t ) ) and for differentiable γ , we can compute W by the integral formula W ( γ ) = 1 2 π ∫ 1 0 y ˙ ( t ) x ( t ) − x ˙ ( t ) y ( t ) x ( t ) 2 + v ( t ) 2 d t while if γ is a piecewise-linear curve W ( γ ) can be computed by an explicit formula involving tan − 1 [8] .

For a point w ∈ R 2 and a continuous curve γ : [ 0 , 1 ] → R 2 − { w } , we define the winding around the winding center w by W ( γ ,   w ) = W ( γ − w ) , where γ − w denotes the translated curve t ↦ γ ( t ) − w for t ∈ ⌊ 0 , 1 ⌋ . For x ∈ R 2 , π 1 ( R 2 − { x } ) = Z and W in fact provides an isomorphism, mapping any closed curve in R 2 − { x } to an integer. Winding numbers have been used classically, e.g. in complex analysis (Cauchy's residue theorem). We will use the following result:
Lemma 2.1

Let S = { w 1 ,   … ,   w k } ⊂ R 2 . And let α ,   β : [ 0 , 1 ] → R 2 − S be continuous curves such that a α ( 0 ) = β ( 0 ) and α ( 1 ) = β ( 1 ) . If there exists i ∈ { 1 ,   … ,   k } such that W ( α ,   w i ) ≠ W ( β ,   w i ) , then α and β are homotopy inequivalent.
Proof

We observe that the closed curve γ following α from α ( 0 ) to α ( 1 ) and then β from β ( 1 ) = α ( 1 ) backwards to β ( 0 ) = α ( 0 ) satisfies W ( γ ,   w i ) = W ( α ,   w i ) − W ( β ,   w i ) ≠ 0 . Therefore γ is a non-trivial element of π 1 ( R 2 − { w i } ) and hence α , β are homotopy inequivalent in R 2 − { w i } . Since R 2 − S ⊆ R 2 − { w i } this implies that α , β are homotopy inequivalent in R 2 − S also. ■
SECTION III.
Methodology

We now formalize the planning problem and propose to determine a collection of homotopy inequivalent trajectories between given initial and terminal positions, x , y ∈ C f by considering a purely sampling-driven approach. To accommodate high-dimensional spaces C f , we propose to utilize a finite collection of topological task projections Π 1 , … , Π k : C f → R 2 to identify non-trivial topological information about the fundamental group π i ( C f ) . We now discuss how such projections Π i can be defined and identified by means of persistent homology before focusing on our Winding-Augmented RRT and RRT* algorithms.
Topological Task Projection and Winding Centers

We observe that Lemma 2.1 is useful in order to distinguish homotopy classes in a general 2D free configuration space C f ⊂ R 2 if we can identify suitable representative points S = { w 1 , … , w k } ⊂ R 2 − C f . In order to generalize this idea to higher dimensions, we observe:
Lemma 3.1

Let X ,   Y be topological spaces and let ∏: X → Y be a continuous function. Consider two continuous curves α ,   β : [ 0 , 1 ] → X such that α ( 0 ) = β ( 0 ) and α ( 1 ) = β ( 1 ) . Suppose that the curves Π ∘ α , Π ∘ β : [ 0 , 1 ] → Y are homotopy inequivalent in Y . Then α ,   β must be homotopy inequivalent in X .
Proof

Suppose there was a homotopy H : [ 0 , 1 ]   × [ 0 , 1 ] → X , H ( s ,   0 ) = α ( s ) , H ( s ,   1 ) = β ( s ) for all s ∈ [ 0 , 1 ] , then ( s ,   t ) → π ( H ( s ,   t ) ) yields a homotopy between π ∘ α and π ∘ β , which leads to a contradiction. ■ . The above lemma opens a possibility to detect homotopy inequivalence by means of continuous maps Π : C f → R 2 . However, this approach is only feasible if Π ( C f ) contains non-trivial homotopy classes of curves which we can test by considering π 1 ( Π ( C f ) ) :
Definition 3.2

For a path-connected topological space C f , let Π : C f → R n be a continuous map such that π 1 ( Π ( C f ) ) is non-trivial. We call ∏ an n-dimensional topological task projection of C f .

Here, we utilize 2-dimensional topological task projections. Since H 1 ( Π ( C f ) ) ≠ 0 , computed over finite field coefficients implies that π 1 ( Π ( C f ) ) is non-trivial, we use the computationally more amenable first homology group H 1 ( C f ) to test whether a map Π   C f   →   R 2 is in fact a topological task projection. While it might be possible to compute H 1 ( Π ( C f ) ) when Π ( C f ) is analytically determined, we work under the assumption that we are only able to obtain samples in C f .
Topological Task Projection Identification

Given a collection of samples X ⊂ C f and a continuous candidate map Π : C f → R 2 , we would like to evaluate whether H 1 ( Π ( C f ) ) is non-trivial. We recall the following manifold reconstruction result of Niyogi:
Theorem 3.3 Nivogi [14]

Let X = { x 1 , … , x n } ⊂ R d such that X is r 2 -dense and let M ⊂ R d be a compact Riemannian manifold with condition number τ . Then for any r ⩽ 3 5 − − √ τ ,   X r deformation retracts to M . Therefore the homology of M is isomorphic to the homology of X r .

In the above, the condition number τ encodes the tameness of M , quantified in local and global curvature conditions. Thus, if we can obtain a sufficiently dense sample X = { x 1 , … , x n }   ⊂   C f such that the projected sample Y = Π ( X ) satisfies the conditions above, H 1 ( Π ( C f ) ) = H 1 ( Y r ) = H 1 ( D C r ( Y ) ) for appropriate r and Y r = ⋃ n i = 1 ] B r ( Y ) . Since τ is however typically not computable in practice, we rely on the identification of noise-robust homological information and appropriate radii r > 0 by means of the persistence diagram of H 1 ( D C r ( X ) , for all r > 0 . Persistent homology generators with large persistence have been proven to provide features that are robust to noise, see [5] . In summary, to evaluate a candidate projection Π : C f → R 2 in practice, we compute a sample X ⊂ C f and determine the first persistence diagram of Y = Π ( X ) . Given a threshold ε > 0 , we deem the projection to be a topological task projection if there exist points in the persistence diagram with persistence larger than ε . For example, if we obtain samples Y ⊂ R 2 and a persistence diagram with a single point with large persistence as in Fig. 2 , we empirically deem the projection a valid topological task projection.
Fig. 3:

Identification of winding centers with persistent homology. Top: collision free samples (in blue) and simplicial approximation of X r at r = 0.05 where two holes are identified by two points in the first persistence diagram shown to the right. Each of the two red points yields a l-cycle shown as a red closed curve in the bottom row. The 2-boundary corresponding to each l-cycle yield triangles in the interior of the 1-cycle. The triangles in each 2-boundary with filtration larger than r yield green approximations of obstacles. While l-cycles may enclose more than a single hole, there exists a unique triangle of maximal filtration index/filtration value for each corresponding 2-boundary. For each l-cycle this triangle is shaded in dark green in the bottom figures and its barycenter is chosen as a winding center (one blue point for each figure in the bottom row).

Show All

Winding Centers

Given a topological task projection ∏: C f → R 2 , we will require representative winding points w 1 , … , w k ∈ R 2 such that Π − 1 ( w i ) lies in the collision space for each i ∈ { 1 , … , k } . To identify such points, we first attempt to identify a fixed filtration value r > 0 such that only points of large persistence are alive in Y r ≃ D C r ( Y ) . When H 1 ( Y r ) is n-dimensional, we compute a resulting basis of 1-cycles c 1 , … , c n such that [ c 1 ] , … [ c n ] form a basis of H 1 ( X r ) . This basis can be extracted from the standard matrix reduction algorithm for persistent homology, for example. Since H 1 ( X R )   =   0 for sufficiently large R > 0 , we can furthermore extract a collection of 2-boundaries b 1 , … , b n , such that ∂ b i = c i [15] . Each 2-boundary intuitively corresponds to the triangulated surface interior to each 1-cycle (see Fig 3 ).
Fig. 4:

Left: planning problem from x s t a r t to x e n d with central winding point w and disc obstacle in blue. Right: expansive tree (our WA-rrt*) in winding covering space modulo 2. The z-coordinate corresponds to the winding angle around w and is taken modulo 2, so that the ends of the spiral are ‘glued together’. The blue path in the covering space jumps from the top layer of the covering space to the bottom layer and we can distinguish between the two red and green homotopy inequivalent trajectories since they have differing terminal z-coordinate in the winding augmented covering space. Path length in the winding augmented space is given by the path length of the resulting projection onto C f .

Show All

By considering the subset of triangles in b i that have filtration values larger than r , we obtain a geometric representation of the holes in Y r as shown in green in Fig. 3 . While cycles can surround more than a single obstacle as in the case of the bottom left cycle, each obstacle contains a unique triangle of maximal filtration index whose barycentric center we use as a winding point for the obstacle. This triangle is shaded in dark green in the figure and the resulting winding points are displayed in blue.
Planning with Winding Augmentation

Let us now consider the topological motion planning problem. We first discuss the 2-dimensional case before proposing our algorithm utilizing topological task projections. Given a 2D-configuration space C f ⊂ R 2 and a collection of points w 1 , … , w k , Bhattacharya et al. [2] consider representing C f by a fixed graph representation and to plan trajectories in a type of covering space over the graph in C f to plan homotopically distinct trajectories. For each path γ : [ 0 , 1 ] → C f , a point γ ( t ) = ( x ( t ) ,   y ( t ) ) on the graph is represented by an augmented topological coordinate: γ ^ ( t ) = ( x ( t ) ,   y ( t ) ,   W 1 ( t ) ,   … ,   W k ( t ) ) , where W l ( t ) = W l ( γ ( [ 0 , 1 ] ) ) mod   m k denotes the winding angle from γ ( 0 ) to γ ( 1 ) modulo a chosen integer m k ≥ 2 .

We observe now that this construction can be generalized to higher dimensions by using topological task projections. Furthermore, we observe here that we can utilize this representation not just on a fixed graph, but for any curve in C f . We hence propose to instead dynamically explore a winding augmented space based on task-projections with RRT-based incremental algorithms:
Projections and Winding Augmentation

Consider a configuration space C f given by a topological space, and a number of k topological task projections Π 1 , … , Π k C f → R 2 and corresponding winding centers w i , 1 , … , w i , n i for each projection Π i and consider integers m i , j > 2 for each winding center. Denote by M = ∑ k i = 1 n i the total number of winding centers across all projections. Consider an initial configuration x 0 ∈ C f and a continuous path γ : [ 0 , 1 ] → C f , and define W i , j ( γ ,   t ) to be the total winding angle W ( Π i ( γ ( [ 0 ,   t ] ) ) ) of the projected path segment Π i ( γ ( [ 0 ,   t ] ) ) ⊆ R 2 under the projection Π i   C f → R 2 modulo m i , j and with respect to the winding point w i , j ∈ R 2 . We define the augmented winding coordinates of γ ( t ) ∈ C f to be γ ^ ( t ) = ( γ ( t ) ,   W 1 , 1 ( γ ,   t ) ,   … ,   W k , n k ( γ ,   t ) ) ∈ C f × Z , where Z = [ 0 ,   m 1 , 1 ) × … × [ 0 ,   m k , n k ) ∈ R M . We observe
Lemma 3.4

Let α , β   [ 0 , 1 ] → C f be two continuous paths such that α ( 0 ) = β ( 0 ) = x 0 and α ( 1 ) = β ( 1 ) , but α ^ ( 1 ) ≠ β ^ ( 1 ) . Then α and β are homotopy inequivalent.
Proof

We have W i , j ( α ,   1 ) ≠ W i , j ( β ,   1 ) for some i ∈ { 1 , … , k } and j ∈ { 1 ,   … ,   n i } . But then, by Lemma 2.1 , the projections Π i ( α ) and Π i ( β ) are homotopy inequivalent. By Lemma 3.1 , this implies that α , β are themselves homotopy inequivalent. ■

Note that since we consider the winding coordinates modulo m i , j , our lifted coordinates can only distinguish between paths winding up to m i , j − 1 times around each corresponding winding point w i , j however, as a result, the space of all possible lifting coordinates is bounded and of volume that can be controlled by empirically setting the size of m i , j .

We propose to use winding augmented coordinates to perform incremental motion planning, using RRT-based algorithms in dimension 2 and higher . Fig. 4 visualizes an example application of WA-RRT* an RRT* based algorithm in the trivial case with a 2-dimensional space C f and a single winding point and task projection equal to the identity map, while Fig. 1 illustrates a 3 dimensional case with two linear task projections ( m 1 , 1 = m 2 , 1 = 2 ) . Note that linear projections to R 2 are not sufficient in all cases, as in the case of a torus obstacle in R 3 and more general non-linear task projection to R n , n > 2 might in such cases be of interest. For the current work, we will however focus on 2D projections.
SECTION IV.
Algorithmic Details and Implementation

Given C f , we denote our winding augmentation by A = ( ∏ 1 , … , ∏ k , ( w 1 , 1 , m 1 , 1 ) , … , ( w k , n k , m k , n k ) ) , where Π i : C f → R 2 denotes the i-th topological task projection, w i , j the j -th winding center for Π i and m i , g denotes the integer modulo which we consider winding around w i , j . We consider an initial state q 0 ∈ C f and a goal region Ω ⊂ C f that we would like to reach via a path from q 0 .
Winding Augmented RRT (WA-RRT)

Like the standard RRT motion planner [13] , WA-RRT consists of a main for loop shown in Alg. 1 which incrementally constructs a tree. However, our tree ( V ,   E ) consists of vertices V ⊆ C f × Z and edges E ⊆ C f × Z augmented by winding angles with respect to all chosen winding centers w i , j in Z . Alg. 1 is similar to the RRT algorithm with goal set Ω and goal bias P G o a l B i a s , but at each iteration we sample both a state q r a n d ∈ C f , either from the goal set Ω or uniformly from C f , and an appropriate winding coordinate tuple w r a n d ∈ Z . To sample winding coordinates for a new point q r a n d , Random WindingLayer ( q 0 ,   q r a n d ) determines, for each i , j the winding λ i , j of the straight line segment from Π i ( q 0 ) to Π i ( q r a n d ) with respect to w i , j ∈ R 2 and adds a random (chosen with equal probability) to each λ i , j before returning the resulting tuple w r a n d of winding coordinates modulo m i , j . The purpose of this procedure is to yield random samples x r a n d = ( q r a n d ,   w r a n d ) covering the winding augmented covering space. In the simplest case of a single winding coordinate as in Fig. 4 and m 1 , 1 = 2 , the procedure first selects a random sample from C f and then chooses a ‘height level’ in { 0 , 1 } that is added modulo 2 to the winding from q 0 . The Extend-WA-RRT ( Alg. 2 ) method is structurally identical to the RRT extension method, however since we are passing tuples x r a n d = ( q r a n d ,   w r a n d ) we need to adapt the function calls to consider points in the winding augmented covering space and in particular, the Nearest function. The purpose of Nearest ( ( V ,   E ) ,   x r a n d ) is to return a nearest vertex x n e a r e s t ∈ V to x r a n d = ( q r a n d , w r a n d ) in the winding augmented space. Since a computation of geodesic distances in the full winding space is challenging between points whose winding difference exceeds 0.5, we instead return the C f -nearest neighbor only within a chart (see also Atlas RRT [9] ) defined by the set N ( q r a n d ,   w r a n d ,   A ) of vertices that have a winding difference smaller than 0.5 (i.e. < ± π in polar coordinates) to any of the winding coordinates of q r a n d , where N ( q r a n d ,   w r a n d ) = { ( q ,   w ) ∈ V   max i , j | w i , j − w r a n d i , j | < 0.5 } .
Algorithm 1 WA- RRT ( q 0 ,   Ω ,   A = ( { Π i } ,   { w i , j ,   m i , j } ) )

Algorithm 2 Extend-WA-RRT ( ( V ,   E ) ,   x r a n d ,   A )

The distance between x r a n d = ( q r a n d ,   w r a n d ) and any point x = ( q ,   w ) in N ( q r a n d , w r a n d ) is then given by the distance of q r a n d and q in C f . The nearest neighbor query when restricted to N ( q r a n d , w r a n d ) hence reduces to the standard nearest neighbor problem in C f . When no neighbor exists within this set, the algorithm proceeds by resampling a new x r a n d . For a returned nearest neighbor with winding differences less than 0.5, Steer returns a new state by locally steering towards x n e w = ( q n e w ,   w n e w ) as in the standard RRT Steer method but also returns the winding coordinates w n e w ∈ Z by adding the winding angle of the new path segment to the winding coordinates of X n e a r e s t in each topological task projection. CollisionFree ( x n e a r e s t ,   x n e w ) , for x n e w = ( q n e w , w n e w ) , X n e a r e s t = ( q n e a r e s t , w n e a r e s t ) returns True if the path segment from q n e a r e s t to q n e w is collision free.
Fig. 5:

Top: we display the mean ratio of identified winding centers (y-axis) under the projection Π 1   in   C ( r ) corresponding to persistence intervals with persistence of at least r / 2 as the number of samples (x-axis) and radius r is changed. Bottom: mean number of false positives under the projection Π 2 as defined by the ratio of times a persistence interval with persistence larger than r / 2 exists under the projection Π 2 . Both ratios converge as the number of samples increases.

Show All

Winding Augmented RRT* (WA-RRT*)

WA-RRT* is based on RRT* and utilizes the WA-RRT main loop, but then calls a modified Extend method that at the notational level is identical Extend-RRT* of RRT* (please see Alg. 4 [11] ). Instead of a state in \mathcal{C}_{f} , our x_{rand} however lies in the winding augmented covering space and we utilize the previously discussed modifications of CollisionFree, Nearest and Steer. RRT* further requires a method Near ((V,\ E),\ x_{new},\ \vert V\vert)) returning all nearest neighbors within a ball of radius \varepsilon(\vert V\vert) depending on \vert V\vert [11] . We adapted Near to return all vertices of distance less than \varepsilon(\vert V\vert) and lying within the set N(x_{new}) . Recall here \varepsilon(\vert V\vert) indicates a radius parameter that asymptotically tends to zero as the number of vertices \vert V\vert is increased [11] .
SECTION V.
Experiments
Topological Task Projections and Winding Centers
Sample and Obstacle Size Dependence

We investigate the reliability and parameter dependence of our topological task projection and winding angle detection algorithm. Denote by \mathcal{C}(r)=\{x=(x_{1},\ \ldots,\ x_{d})\in[-1,1]^{d}:x_{1}^{2}+x_{2}^{2} > r^{2}\}\subset \mathbb{R}^{d}, \mathcal{B}(r)=\{x=(x_{1},\ \ldots,\ x_{d})\in[-1,1]^{d}: \Vert x\Vert\leq1, x_{1}^{2}+x_{2}^{2} > r^{2}\}\quad\subset\quad \mathbb{R}^{d} , the unit cube and ball with a cylindrical hole of radius r along the x_{1},\ x_{2} axes. We first considered d\ =\ 5 , varied r\ \in\ \{0.03,0.05,0.1,0.2\} and sampled between n=100 and n= 10000 samples uniformly from \mathcal{C}(r) . We study the linear projections \Pi_{1}, \Pi_{2} of \mathcal{C}(r) onto (x_{1},\ x_{2}) by \Pi_{1} and onto (x_{2},\ x_{3}) by \Pi_{2} . Note that \Pi_{1} reveals the cylindrical void, while \Pi_{2} can only result in false positives as the hole is not revealed by \Pi_{2} . For 50 trials per parameter setting, Fig. 5 displays the mean fraction of times a winding center with persistence larger than \frac{r}{2} was correctly identified in the projection of \mathcal{C}(r) under \Pi_{1} as the radius r and the sample size is varied. The bottom part displays the analogous results for \Pi_{2} as an approximation to the false positive rate. As the number of samples increases to 10000 we obtain a success rate of one and false positive rate of zero. The mean time to compute the persistence diagram and winding centers increases from 0.9ms for 100 samples to 0.36s for 10000 samples.
Fig. 6:

Success ratio of recovering a winding coordinate with persistence larger than 0.1 by means of random orthogonal linear task projection from \mathcal{C}(r) (top figure) and \mathcal{B}(r) (bottom figure) for dimensions 2 to 6 (x-axis). While on average 26% of projections from \mathcal{C}(0.9) still revealed the cylindrical hole, none of the 100 trials per setting revealed the hole for \mathcal{B}(r) for dimensions larger than 4.

Show All

Choosing Projection Candidates

We now investigate identifying a topological task projection by random linear orthogonal projections from \mathcal{C}(r) and \mathcal{B}(r) to \mathbb{R}^{2} . For 10000 samples from \mathcal{C}(r), \mathcal{B}(r) and in 100 trials per parameter setting respectively, Fig. 6 displays the fraction of times a persistence interval with persistence larger than 0.1 was recovered as the dimension d is varied. Since \mathcal{C}(r) degenerates to a thin ring as r tends to one, we can recover the hole even for d=6 , while for \mathcal{B}(r) many projections do not reveal the cylindrical hole in higher dimensions (bottom figure), and we were not able to find a projection with persistence larger than 0.1 over 100 trials for dimensions larger than 4. This exemplifies that the probability of determining topological task projections in a randomized manner is highly configuration-space dependent. In practice, the use of domain knowledge can be employed to determine the number and type of projections. Natural projections along the i^{th} and j^{th} joint-angles of a robotic system as well as non-linear maps to end-effector positions can serve as an alternative approach to random search for finding an initial candidate set of projections.
Planning with Multi-Joint Planar Linkages

We evaluate our WA-RRT/RRT* algorithms using simulated planar linkages that are attached to the origin and with 2\leq d\leq 10 degrees of freedom. The linkages consist of a segment of length 1.5 followed by a segment of length 1 and between 0 and 8 segments of length 0.5. The arm is placed in an environment with the obstacles displayed by disks in Fig. 7 and arm self-collisions as well as collisions with the obstacles are disallowed. Joint angles are denoted by \theta=(\theta_{1},\ \ldots,\ \theta_{d}) and \theta_{j}\in(-\pi,\ \pi) . From an initial position with \displaystyle \theta_{start}=(\frac{\pi}{4},0,\ \ldots,\ 0) to \theta_{goal}=(-\frac{\pi}{4},0,\ \ldots, 0) , the arm is required to move from a straightened position just left of the top obstacle to a straightened position just right of the top obstacle. Fig. 7 illustrates one such arm for d=6 and 30.000 samples from \mathcal{C}_{\text{f}} are visualized.
Homotopy Classes for Planar Linkages

Note that even for simple planar linkages, there exists a wealth of distinct topological task projections and homotopy classes. Firstly, if we consider a goal region defined by \Omega=\Pi^{-1}(x) , where \Pi\: \ \mathcal{C}_{f}\rightarrow \mathbb{R}^{2} denotes the map to the endeffector position, winding coordinates around any winding point in the interior of an obstacle determine homotopy inequivalent trajectories in end-effector space that wind differently around the obstacle, as illustrated in the right part of Fig. 9 . Similarly, if self-collisions are allowed and without joint-limits (e.g. corresponding to a 3D robot with joints stacked along {z}- coordinate), we can consider the i -th joint angle \theta_{i} embedded onto a unit circle centered at the origin and with winding center given by the origin. The resulting map \Pi_{i}\: \ \mathcal{C}_{\text{f}}\rightarrow\mathbb{R}^{2} is a topological task projection and trajectories planned with \Pi_{i} allow us to control the number of times the i-th link rotates around the i-th joint. For animations of some examples of homotopy inequivalent motions planned with our approach, please see the supplementary video.
Fig. 7:

Planar 6DOF robot arm from our family of 2–10 DOF arms and 30.000 sampled joint-configurations displayed by color coded endpoint positions of the resulting link placements (top left). Bottom left: first persistence diagram (computed in 0.52s) for these samples reveals three holes in the (\theta_{1},\ \theta_{2}) projection \Pi . The projected samples X correspond to vertices of DC_{0.1}(X) shown in the top right figure. The three large colored points in the persistence diagram correspond to the colored winding centers in the top right. Bottom right: projections of WA-RRT* trajectories in (\theta_{1},\ \theta_{2}) -coordinates for a 2 DOF arm, illustrating different found homotopy classes. Please see the supplementary video for animations.

Show All

For our main experimental evaluation, we focus on the complexity of our approach in various dimensions and chose to investigate the projection \Pi\: \ \mathcal{C}_{f}\rightarrow \mathbb{R}^{2} onto (\theta_{1},\ \theta_{2}) ( Fig. 7 ). For this projection \Pi , each hole corresponds to one of the three obstacles in \mathcal{C}_{f} and a path moving above a corresponding hole in (\theta_{1},\ \theta_{2}) corresponds to rotating the second link to the left as we pass the narrow passage created by the obstacle while passing below moves the second link to the right as the obstacle is passed. Winding around a hole clockwise corresponds to passing the narrow passage near the obstacle with the second link angled to the right and then returning, passing the passage with the second link angled to the left. Fig. 7 displays found examples from different homotopy classes in the 2DOF case, for higher DOF, the remaining links fold to avoid the obstacles, but the topological winding under \Pi only depends only on (\theta_{1},\ \theta_{2}) .
Complexity of WA-RRT

For a maximal RRT stepsize of 200, collision tests in steps of 0.1, a linear steering function in joint space and with a goal bias of 0.01, we studied the mean time to determine the k homotopy classes for the three winding points for our robot arms for various dimensions using our \text{C}++ implementation of WA-RRT /RRT* on an Intel i7 laptop with 8GB RAM. Fig. 8 (left) displays the result for m_{1,1}=m_{1,9}=m_{1,3}=2 winding layers per winding center (2^{3}=8 classes). For m_{i,j}=3 , we obtain at most 3^{3}=27 classes in the middle part of of Fig. 8 . In this case some classes are more difficult to find due to the increased size of the winding augmented space for m_{i,j}=3 .
Fig. 8:

Left: we investigated the mean time in seconds (y-axis) to find k homotopy inequivalent solution trajectories (x-axis) with WA-RRT for m_{i,j}=2 (left) and the three found winding centers for planar linkages with 2 to 10 DOF and averaged over 5 trials. While, for d=(2,3,4,5) , all 8 classes were found \text{in}\ (0.36, 0.55, 0.48, 1.97) seconds on average, for d=6, 8, 10 (black, blue, red) we obtain the performance shown in the left plot for the chosen maximal step size of 200 and goal bias 0.01. Middle figure: for m_{i,j}\ =\ 3 , the winding augmented search space increases in volume and there are up to 3^{3}=2{7} homotopy classes. The figure displays the mean time over 5 trials to find k homotopy inequivalent trajectories in dimensions d=2, 3, 4, 5, 6, 8, 10 with plots steepening with the dimension. Right: A projection of a found 10DOF arm trajectory for m_{i,j}=3 which winds more than once around the rightmost winding point.

Show All
Fig. 9:

Left: typical incremental path length (y-axis) reduction of WA-RRT* against runtime in seconds (x-axis) illustrating how paths in separate homotopy classes can converge to distinct path lengths under WA- rrt*. In this experiment, we considered a 4DOF linkage, \varepsilon(1)=0.005 and our three winding centers resulting in 2^{3}=8 homotopy classes (m_{i,j}=2) . Right: our approach can also be applied to obtain homotopy classes under forward-kinematics. A 4DOF planar linkage and a winding center w\ \text{in}\ \mathbb{R}^{2} corresponding to the cross in the smallest obstacle and a goal set \Omega=\Pi^{-1}({x}) is used. Here, x denotes the blue point to the right of the red cross and \Pi denotes the end-effector forward kinematics map. Using \Pi, w and m_{1,1}=2 , we obtain two solution trajectories of the arm that are homotopy inequivalent \text{in}\ \mathbb{R}^{2} as visualized by end-effector trajectories in red and blue.

Show All

Convergence of WA-RRT*

WA-RRT* discovers trajectories at the same iteration as WA-RRT for identical samples, but additionally optimizes the path incrementally. Fig. 9 displays convergence of the length of various homotopy classes for a 4DOF planar linkage and with an initial RRT* neighborhood radius of \varepsilon(1)=0.005 .
SECTION VI.
Conclusions

We have introduced topological task projections (TTPs) and a persistence based approach to detect winding centers for high-dimensional homotopy aware motion planning. We introduced two incremental algorithms, WA-RRT and WA-RRT* which enable us to determine homotopy inequivalent trajectories and demonstrated our approach with 2–10 DOF planar linkages resulting in a novel demonstration of topological motion planning in configuration spaces of dimension higher than 4. In future work, we intend to investigate the probabilistic completeness of the proposed algorithms.

Authors
Figures
References
Citations
Keywords
Metrics
Media
More Like This
A Deterministic Improved Q-Learning for Path Planning of a Mobile Robot

IEEE Transactions on Systems, Man, and Cybernetics: Systems

Published: 2013
Real-Time Robot Path Planning Based on a Modified Pulse-Coupled Neural Network Model

IEEE Transactions on Neural Networks

Published: 2009
Show More
References
1.
U. Bauer and H. Edelsbrunner, "The Morse theory of Čech and Delaunay filtrations", Proc. of the Thirtieth Annual Symp. on Comp. Geometry ser. SOCG'14 , 2014.
Show in Context Google Scholar
2.
S. Bhattacharya, R. Ghrist and V. Kumar, "Persistent homology for path planning in uncertain environments", Robotics IEEE Trans. , vol. 31, no. 3, pp. 578-590, June 2015.
Show in Context CrossRef Google Scholar
3.
S. Bhattacharya, D. Lipsky, R. Ghrist and V. Kumar, "Invariants for homology classes with application to optimal search and planning problem in robotics", Annals of Math. and Artif. Intell. (AMAI) , 2013.
Show in Context CrossRef Google Scholar
4.
H. Edelsbrunner and J. Harer, "Persistent homology-a survey", Contemporary mathematics , vol. 453, pp. 257-282, 2008.
Show in Context CrossRef Google Scholar
5.
H. Edelsbrunner and J. L. Harer, Computational topology: an introduction, AMS Bookstore, 2010.
Show in Context Google Scholar
6.
D. Grigoriev and A. Slissenko, "Polytime algorithm for the shortest path in a homotopy class amidst semi-algebraic obstacles in the plane", ISSAC '98 , 1998.
Show in Context CrossRef Google Scholar
7.
A. Hatcher, Algebraic topology, Cambridge University Press, 2002.
Show in Context Google Scholar
8.
K. Hormann and A. Agathos, "The point in polygon problem for arbitrary polygons", Computational Geometry. Theory and Applications , vol. 20, no. 3, pp. 131-144, Nov. 2001.
Show in Context CrossRef Google Scholar
9.
L. G. Jaillet and P. Pleite, "Path planning with loop closure constraints using an atlas-based rrt", 2011.
Show in Context Google Scholar
10.
K. D. Jenkins, "The shortest path problem in the plane with obstacles: A graph modeling approach to producing finite search lists of homotopy classes" in , DTIC Document, Tech, 1991.
Show in Context Google Scholar
11.
S. Karaman and E. Frazzoli, "Incremental sampling-based algorithms for optimal motion planning", Proceedings of Robotics: Science and Systems , June 2010.
Show in Context CrossRef Google Scholar
12.
L. E. Kavraki, P. Svestka, J.-C. Latombe and M. H. Overmars, "Prob-abilistic roadmaps for path planning in high-dimensional configuration spaces", IEEE Trans. on Robotics and Automation , vol. 12, no. 4, pp. 566-580, 1996.
Show in Context View Article
Google Scholar
13.
S. M. LaValle and S. A. Hutchinson, "Optimal motion planning for multiple robots having independent goals", Robotics and Automation IEEE Transactions on , vol. 14, no. 6, pp. 912-925, 1998.
Show in Context View Article
Google Scholar
14.
P. Niyogi, S. Smale and S. Weinberger, "Finding the homology of submanifolds with high confidence from random samples", Discrete and Comp. Geometry , vol. 39, no. 1-3, pp. 419-441, 2008.
CrossRef Google Scholar
15.
F. T. Pokorny and D. Kragic, "Data-driven topological motion planning with persistent cohomology", Proceedings of Robotics: Science and Systems , July 2015.
Show in Context CrossRef Google Scholar
16.
F. T. Pokorny, J. A. Stork and D. Kragic, "Grasping objects with holes: A topological approach", Proc. of the IEEE International Conference on Robotics and Automation (ICRA) , 2013.
Show in Context CrossRef Google Scholar
17.
M. L. S. Bhattacharya and V. Kumar, "Search-based path planning with homotopy class constraints", Proc. of The Twenty-Fourth AAAI Conf. on Artificial Intelligence , 11–15 July 2010.
Show in Context Google Scholar
18.
E. Schmitzberger, J. L. Bouchet, M. Dufaut, D. Wolf and R. Husson, "Capture of homotopy classes with probabilistic road map", Intelligent Robots and Systems 2002. IEEE/RSJ International Conference on , vol. 3, no. 3, pp. 2317-2322, 2002.
Show in Context View Article
Google Scholar
19.
I. Sucan and L. E. Kavraki, "A sampling-based tree planner for systems with complex dynamics", IEEE Trans. on Robotics , vol. 28, no. 1, pp. 116-131, 2012.
Show in Context View Article
Google Scholar
20.
D. Zarubin, V. Ivan, M. Toussaint, T. Komura and S. Vijayakumar, "Hierarchical motion planning in topological representations", Proceedings of Robotics: Science and Systems , July 2012.
Show in Context CrossRef Google Scholar
IEEE Personal Account

    Change username/password 

Purchase Details

    Payment Options
    View Purchased Documents 

Profile Information

    Communications Preferences
    Profession and Education
    Technical interests 

Need Help?

    US & Canada: +1 800 678 4333
    Worldwide: +1 732 981 0060
    Contact & Support 

Follow

About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | Privacy & Opting Out of Cookies

A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity.

© Copyright 2022 IEEE - All rights reserved.
