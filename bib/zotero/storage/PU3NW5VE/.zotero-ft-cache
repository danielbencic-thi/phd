Received December 25, 2020, accepted January 20, 2021, date of publication January 25, 2021, date of current version February 4, 2021. Digital Object Identifier 10.1109/ACCESS.2021.3054179
Improved Bat Algorithm for UAV Path Planning in Three-Dimensional Space
XIANJIN ZHOU 1, FEI GAO 1, XI FANG 1, AND ZEHONG LAN2
1School of Science, Wuhan University of Technology, Wuhan 430070, China 2School of Economics and Management, Wuhan University, Wuhan 430072, China
Corresponding author: Fei Gao (gaof@whut.edu.cn) This work was supported in part by the Equipment Pre-Research Ministry of Education Joint Fund under Grant 6141A02033703 and in part by the Fundamental Research Funds for the Central Universities under Grant 2018IB017.

ABSTRACT This paper describes the ﬂight path planning for unmanned aerial vehicles (UAVs) based on the advanced swarm optimization algorithm of the bat algorithm (BA) in a static environment. The main purpose of this work is that the UAVs can obtain an accident-free, shorter, and safer ﬂight path between the starting point and the endpoint in the complex three-dimensional battleﬁeld environment. Based on the characteristics of the standard BA and the artiﬁcial bee colony algorithm (ABC), a new modiﬁcation of the BA algorithm is proposed in this work, namely, the improved bat algorithm integrated into the ABC algorithm (IBA). The IBA mainly uses ABC to modify the BA and solves the problem of poor local search ability of the BA. This article demonstrates the convergence of the IBA and performs simulations in MATLAB environment to verify its effectiveness. The simulations showed that the time required for the IBA to obtain the optimum solution is approximately 50% lower than the BA, and that the quality of the optimum solution is about 14% higher than the ABC. Furthermore, by comparing with other traditional and improved swarm intelligent path planning algorithms, the IBA can plan a faster, shorter, safer, accident-free ﬂight path for UAVs. Finally, this article proves that IBA also has good performance in optimizing functions and has broad application potential.

INDEX TERMS Battleﬁeld environment, path planning, improved bat algorithm, convergence, local search.

I. INTRODUCTION As life and military needs continue to grow, unmanned aerial vehicles (UAVs) play an increasingly important role in many areas. Compared with manned aircraft, UAVs have the advantages of high optical resolution, short warning time, low cost, and high maneuverability [1]. Therefore, UAVs typically perform dangerous, boring, complex tasks in a variety of areas [2], [3]. In the history of UAVs development, path planning has been thought of as a key factor in the process of performing tasks. A path with strong security, good feasibility, high computational efﬁciency, and low cost can greatly improve the efﬁciency of completing the UAVs missions [4].
In fact, planning the ﬂight path of UAVs usually requires optimization algorithms to optimize the ﬂight path. Optimization methods generally fall in deterministic mathematical programming methods and stochastic metaheuristic algorithms [5]. However, deterministic methods of mathematical programming are prone to stagnation in nonlinear space research, which requires high preparation for
The associate editor coordinating the review of this manuscript and approving it for publication was Xiwang Dong.

mathematics [6]. Over the past years, stochastic metaheuristic algorithms have been increasingly used to solve UAV path planning problems due to their ﬂexibility, simplicity, and ability to avoid local optimization. In general, stochastic metaheuristic algorithms may be classiﬁed into evolutionary, physics-based, and swarm intelligence (SI) [7]. Evolutionary algorithms generally generate better new populations through combinations and mutations between earlier generations of individuals, such as Genetic Algorithm (GA) [8], Differential Evolution Algorithm (DE) [9], and Biogeography-based Optimization (BBO) [10], et al. Physics-based methods are to use rules extracted from different physical phenomena in nature in search of objectives [6]. Some well-known algorithms are the Simulated Annealing Algorithm (SA) [11], Gravity Cable Algorithm (GSA) [12], Central Force Optimization Algorithm (CFO) [13]. SI algorithms usually mimic and foraging activities of animals in nature. It can save the solution obtained so far, uses fewer operators, and is easy to implement than the evolutionary algorithm [7]. Therefore, SI is more widely used in UAV path planning problems. Popular SI includes Artiﬁcial Bee Colony Algorithm (ABC) [14], Particle Swarm Optimization Algorithm (PSO) [15],

20100

This work is licensed under a Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 License. For more information, see https://creativecommons.org/licenses/by-nc-nd/4.0/

VOLUME 9, 2021

X. Zhou et al.: Improved Bat Algorithm for UAV Path Planning in Three-Dimensional Space

Ant Colony Algorithm (ACO) [16], [18], Bat Algorithm (BA) [19], [20], et al.
However, stochastic metaheuristic algorithms also have unavoidable disadvantages. David H.Wolpert and William G.Macready [21] proposed no free lunch (NFL) theorems in 1997. They logically proved that no metaheuristic algorithm could best solve all optimization problems. In other words, an intelligent algorithm can obtain the desired result in a particular optimization problem, but it misbehaves in other problems. Therefore, people are trying to integrate different intelligent algorithms into UAV path planning to ﬁnd better solutions. In terms of the theoretical design of the controller, in [22], a 6-degree of freedom nonlinear PID controller (NLPID), which combines the GA, is designed to meet the system stability and tracking requirements of a fourwing UAV. The improved active disturbance rejection control (IADRC) proposed in [23], [24] can stabilize and suppress external interference and system uncertainty, and minimize the control energy, adjustment time, and steady-state error. The decentralized control scheme based on IADRC also provides good performance [25]. In addition, other new controllers have been designed recently, and can better solve the problems in the corresponding ﬁelds, such as a consistent control system for three quadrotor intelligent bodies [26], a new classic adaptive controller based on a synergetic theory [27], a model-free active input-output feedback linearization technique based on IADRC [28]. On the other hand, a large number of papers show that improved swarm intelligence algorithms can also better solve the ﬂight path planning problem. Cristian Ramirez Atencia proposes a new weighted random generator that reduces the convergence speed of the multi-objective evolutionary algorithm (MOEA) [9]. The algorithm based on disturbed ﬂuid and trajectory proposed by Yao Peng can effectively avoid obstacles to a certain extent [4]. Moreover, there is a large volume of published studies showing that improved intelligent algorithms can succeed in route planning. For instance, an aging-based ant colony optimization algorithm (ABACO) is proposed in [29], which considers the aging of the individual and releases different pheromones according to different ages. [30] conducts further research on [29] and solves the path planning problem of a dynamic environment. Despite there are many types of intelligent algorithms in the planning of UAVs, they suffer from different main drawbacks. For example, in the process of planning the ﬂight path, the lack of mutation mechanism of standard BA is easy to fall into local optimum, resulting in the population losing subsequent evolutionary capacity.
In order to solve the problem of poor local search ability of BA, which was ﬁrst proposed by Xin-She Yang in 2010 [31], there has been an increasing amount of literature on improved BA in recent years. People proposed a new directional bat algorithm, which improved the classic bat algorithm in four ways and greatly improved the performance of BA in [32]. Amir H. Gandomi and Xin-She Yang tried to combine the BA algorithm with chaos, which uses four different variations to replace the invariant parameters in the BA, and is veriﬁed
VOLUME 9, 2021

by thirteen different chaotic maps [33]. Trong-The Nguyen proposed the bat-bee colony algorithm (BA-ABC) [34]. The algorithm mainly iterates the results of the BA algorithm and the ABC algorithm, then replaces the better results of the both parties with the poor results of the other to realize the evolution of the group. In [35], a hybrid particle swarm optimization-improved frequency bat algorithm (PSO-MFB) and obstacle detection and avoidance algorithm (ODA) are proposed, which effectively solves the path planning problem in a dynamic environment. After that, [36] further improved the algorithm of [35] and proposed a conﬂict-free shortest path planning algorithm. Furthermore, in the ﬁeld of path planning, in order to increase the diversity of the population, Gaige Wang applied the bat algorithm with a mutation to UAVs path planning [18]. N.Lin’s studies have reported that the enhanced artiﬁcial potential ﬁeld method combined with the chaotic bat algorithm may enhance the robustness of the algorithm [37].
Although the standard BA can provide a better quality solution, it takes a lot of time. However, the ABC can quickly obtain the solution, and the quality of the solution is poor. The main contribution of this paper is to propose a new algorithm to solve the problem of UAVs ﬂight path planning, which mainly combines the characteristics of BA and ABC to achieve the purpose of improving the local search ability and obtaining a crash-free, safer and shorter ﬂight path. The IBA algorithm proposed in this article mainly contains two modules. The ﬁrst module involves the generation of points, which is implemented through the BA. In order to improve the local search ability, the mutation factor is taken into consideration. Then, ABC is used to modify the results of the ﬁrst module, so as to further enhance the local search ability of the algorithm.
The overall structure of the study takes the form of six chapters, including this introductory chapter. Section 2 introduces the mathematical model of 3D space in UVA path planning. In section 3, the principle of the classic BA is described. Subsequently, BA with mutation added ABC for UAV path planning is presented and its convergence is proven in detail in section 4. The ﬁfth chapter tests 9 parameters that appear in the IBA algorithm, compares IBA with other swarm intelligence algorithms, and uses IBA to solve UAVs path planning and benchmark function optimization problems. The ﬁnal section gives a summary and identiﬁes areas for further research.
II. UAV MATHEMATICAL MODEL In the history of the development of UAVs, path planning has been thought of as a key factor in the process of performing tasks. This chapter mainly describes the comprehensive cost model of UAVs under different threats and the selection method of random path nodes.
A. PATH PREPROCESSING To accelerate the convergence of the algorithm, the initial UAVs path planning is shown in Fig.1. It is assumed that UAV
20101

X. Zhou et al.: Improved Bat Algorithm for UAV Path Planning in Three-Dimensional Space

FIGURE 1. 3D battlefield environment model.

needs to ﬂy from the starting point S(x0, y0, z0) to the ending point E(xE , yE , zE ). There are some threat areas during the ﬂight. We convert the original start and end points to new
coordinates in the x-axis direction by using Eq.1, where (x, y, z) represents the original coordinates, (x , y , z ) is the rotated coordinates, θ is the angles between line SE and XOY plane, and ϕ is the angle between the projection of SE on the XOY plane and the X -axis.

tanθ =

|zE − Z0|

(xE − x0)2 + (yE − y0)2

 x  cosϕcosθ −sinϕ −cosϕsinθ   x 

 y =  sinϕcosθ cosϕ −sinϕsinθ   y 

z

sinθ

0

cosθ

z

 x0

+  y0

(1)

z0

Then, we divide the rotated line segment SE into (D + 1) segments (include S and E) and passing each node except S and E to make planes L1, L2, . . . , LD perpendicular to the straight line SE [18], [38], [39]. After that, randomly select a point on each plane. Obviously, we can get D points and connect them with S node and E node. So that the three-dimensional path planning problem can be turned into a D-dimensional function optimization problem.

B. COMPREHENSIVE COST MODEL
The battleﬁeld environment is complex and changeable with various threats such as radar, climate, missiles, anti-aircraft guns, et al. These threats will affect the mission completion of UAV’s missions. In addition, UAV maneuverability is also a non-negligible poppy that affects path selection.
The scope of the threat on the battleﬁeld is typically dependent on the combination of different cylindrical or conical geometry [1]. Assuming that the ranges of various threats are spherical areas with different radius. Eq.2 is the probability

of radar threat detecting UAVs [39].



 0, 

dR > dRmax

P(dR)

=

 
 

1 dR4

,

dRmin ≤ dR ≤ dRmax

(2)

 

1,

dR < dRmin .

where dRmin , dRmax are the minimum and maximum range of the radar threat. dR is the distance between UAV and radar source.
In order to facilitate the experimental simulation, the climatic threats, anti-aircraft threats, missile threats and the probability of destroying the UAV are as follows:

 0, 

di > dimax

 

1

Pi(di) =  di , dimin ≤ di ≤ dimax

(3)

 

1,

dR < dimin .

where PA (dA ), PM (dM ), PC (dC ) are the threat probability of antiaircraft guns, missiles, and atmosphere to UAV. di is the distance from the UAV to the threat source. dimin , dimax are the minimum and maximum range of the threat.
Apart from these threats, UAV also threatens to crash when ﬂying over mountains. Supposing that the terrain model is composed of several mountains with different center positions, and the mountains are approximately replaced by cones. Eq.4 is the expression of mountain height [1].

zi(x, y)

=

hie−

(x

−ai )2 10

−

(y−bi 10

)2

(4)

hi is the height of the mountain and (ai, bi) is the center of the mountain. If the ﬂying height is lower than the mountain height, the probability of UAV (PT (dT )) being destroyed is 1. Conversely, PT (dT ) is 0.
According to the maneuverability of the UAVs, this paper considers the constraints of fuel consumption and maximum climb angle. Fuel consumption is usually measured by ﬂight distance. Assume there are n segments in the path and each segment is li. lmax is the maximum path length. Therefore, the path constraints are:

n

li ≤ lmax

(5)

i=1

This article primarily simulates the path planning of UAVs in 3D space. In order to better integrate the real situation, we consider that the maneuvering performance can affect the maximum angle of climb and altitude limitation. Therefore, this paper assumes the maximum climb angle is 45◦ and the maximum height of the ﬂight is 6 kilometers. When the UAV’s path is beyond the maximum climb angle, the probability of the UAV crash PB = 1. On the contrary, PB = 0. Similarly, When the UAV’s ﬂight altitude exceeds the maximum ﬂight altitude limit, the probability of the

20102

VOLUME 9, 2021

X. Zhou et al.: Improved Bat Algorithm for UAV Path Planning in Three-Dimensional Space

FIGURE 2. Sub-path calculation method.

UAV crash PH = 1. On the contrary, PB = 0. The comprehensive track cost can be measured by using Eq.6.

L

minW = min

δw(s)ds

(6)

0

where δw(s) = δOwO(s) + δRwR(s) + δM wM (s) + δC wC (s) + δA wA (s) + wB(s) + wH (s). L is track path length. W is optimization objective function. wO(s), wR(s), wM (s), wA (s), wC (s), wT (s), wH (s) are the cost of path, radar threat, missile threat, anti-aircraft threat, climate threat, terrain threat, maximum climb angle and maximum height. δO, δR, δM , δA , δC are the weight of each threat cost and their sum is 1.
For simplicity, each path is divided into ﬁve segments on average and the threat cost is calculated at the end of each discrete segment (as shown in Fig.2). At last, the average value of the discrete segments is assumed to be the threat cost of this segment. We can calculate the cost according to the following Eq.7.

1 wLi,j = 5

5
k=1 wk,Li,j

wk,Li,j = δRPR(dR) + δM PM (dM ) + δA PA (dA )

+ δC PC (dC ) + PT (dT ) + PB(dB) + PH (dH ) (7)

where Li,j represents the process of UAV ﬂying from node i
to node j. wk,Li,j is the threat cost of UAV at the k − th point of the sub-segment.

III. CLASSICAL BAT ALGORITHM The classic bat algorithm is a swarm intelligence algorithm. Its search strategy is inspired by the social behavior of bats and the use of echo in foraging and avoiding obstacles. Besides, the bat algorithm is a promising algorithm, which combines the advantages of PSO, GA, and harmony search algorithm to a certain extent [31].

VOLUME 9, 2021

In nature, some bats not only use echolocation, but also use their vision and smell to ﬁnd food and avoid obstacles. Even the loudness and frequency emitted by bats are constantly changing. For simplicity, we idealize some of the echo characteristics of the bat and follow the rules [18].
(1) All bats only use echolocation to perceive distance, then ﬁnd targets and avoid obstacles.
(2) Bats can automatically adjust the wavelength and frequency of their transmitted pulses while preying on prey. They ﬂy randomly at position Xi with speed Vi, ﬁxed frequency fmin, loudness A0, and continuously adjust the pulse transmission frequency r ∈ [0, 1] depending on the proximity to the target.
(3) The bat loudness varies from the smallest constant value Amin to A0.
This study set out to simulate three-dimensional space UAV ﬂight. Thus, we use Eq.8 to deﬁne the update rule for the ith bat’s speed Vit , frequency fi and new solution Xit at time step t.

fi = fmin + (fmax − fmin)β

Vit = Vit−1 + (Xit−1 − X ∗)fi

Xit = Xit−1 + Vit

(8)

where β ∈ [0, 1] is a random number. Here, X ∗ is the optimal solution from time step 1 to time step t −1, and then X ∗ is only updated when all bats have determined their position in time step t. Generally speaking, the frequency of the ultrasonic

waves emitted by each bat is different. Therefore, each bat
was randomly assigned a frequency fi ∈ [0, 100].
For the local search section, we generate a random number
rand1 ∈ [0, 1]. Once rand1 > ri, the new solution Xnew to replace the original solution Xit , which is obtained by randomly walking on the current optimal solution.

Xnew = X ∗ + εAt

(9)

where random number ε ∈ [−1, 1], while At is the average
loudness of all bats at time step t.
Furthermore, we create another random number rand2 ∈ [0, 1]. If rand2 < Ati and the ﬁtness of the new solution f (Xit ) is less than the ﬁtness of the current optimal solution f (X ∗), Ati+1 and rit+1 are updated on the basis of Eq.10.

Ati+1 = αAti

rit+1 = r0[1 − exp(−γ t)]

(10)

where α, γ , r0 are constants. Based on the above analysis, the main part of the classic bat algorithm is described in Algorithm 1 and in Fig.3.

IV. IMPROVED BAT ALGORITHM (IBA) This paper intends to integrate the advantages of ABC and mutation operators into the BA. ABC inspired by bee colony foraging behavior, used by Dervis Karaboga earlier and compared with other algorithms [14]. ABC is mainly divided into three steps [40], [41]. Beginning, bees randomly search for honey sources. Bees with high quality honey sources

20103

X. Zhou et al.: Improved Bat Algorithm for UAV Path Planning in Three-Dimensional Space

Algorithm 1 BA Algorithm
Begin: 1: Initialization. Set the number of bat populations NP,
the maximum number of iterations Tmax , initialize the loudness A0, initial speed V 0, frequency r, constant α, γ , and generate counter t = 1 of each bat. 2: Calculate the ﬁtness of each bat f (Xi0) 3: For t = 1 : Tmax 4: For i = 1 : NP
Vit = Vit−1 + (Xit−1 − X ∗)fi Xit = Xit−1 + Vii
5: If rand1 > rit , generate a new solution Xnew instead of Xit Xnew = X ∗ + εAt
End if 6:Calculate the ﬁtness of the new solution f (Xit ). 7: If rand2 < Ati and f (Xit ) < f (X ∗)
Accept the new solutions and update rit , Ati . End if End for 8: Update the current optimal solution X ∗. End for 9: Choose the optimal solution as the ﬁnal result. End

are called employed bees and bees with poor quality honey sources are called onlooker bees. Then, the employed bees recruit the onlooker bees at the honey source and search together near the honey source. If an improved honey source is found, the original honey source is replaced. Otherwise, the honey source remains unchanged. Finally, if the suboptimal honey source does not improve over a period of time, the employed bees become a scout bee and randomly searches for the honey source to replace the original honey source. Repeat these three steps continuously until the maximum number of repetitions is reached.
Generally speaking, we convert the three-dimensional problem of UAVs track planning into a D-dimensional function optimization problem, which means that each bat can represent a planning path. The main idea of IBA is that the bat population updates position Xi by using speed Vi, loudness Ai, frequency fi, et al. and then the local position is changed by using the characteristics of ABC.
To better combine the advantages of the BA and the ABC, we have improved the behavior of individuals. Each individual generates a random solution. The ﬁrst part of the individual with a smaller ﬁtness is selected as the employed bee and the remainder as the onlooker bee. Information update method of employed bees is based on the standard BA’s steps, namely through Vit , fi, Ati , et al to update the solution Xit . Then, the onlooker bees choose to employed bees through roulette and Eq.11.

p(i) =

f (Xi)

Ne k =1

f

(Xj)

(11)

20104

FIGURE 3. Flow chart of bat algorithm.

where f (Xi) = 1/W (Xi) is the ﬁtness function of the ith individual and Ne is the number of employed bees.
For onlooker bees behavior, we introduce mutation factor F [18] to enhance the local search ability of the algorithm and only change a certain node of the individual each time (except for the start and endpoints).

Xi,j = Xr1,j + F (Xr2,j − Xr3,j)

(12)

where Xi,j is j − th vector of the ith onlooker bee. Random number r1, r2, r3 are employed bee serial number and Xr1 = Xr2 = Xr3 = Xi, In order to improve the iterative speed of the algorithm, we only calculate the path cost of the path before
and after the replacement point.
To enhance the local search ability of the algorithm, when third random number rand3 > rit , local search based on Eq.13.

Xi,j = Xj∗ + εAt

(13)

where Xj∗ is the j − th vector of the current optimal solution. Through the greedy criterion, the best result is chosen to
replace the original path.

VOLUME 9, 2021

X. Zhou et al.: Improved Bat Algorithm for UAV Path Planning in Three-Dimensional Space

The detailed IBA algorithm steps are as follows: (1). Initialize the loudness Ai, frequency fi ∈ [fmin, fmax ], and speed Vi of each bat in the population, and generate a random solution Xi0 = [S, xi1 , xi2 , . . . , E] ∈ [Xmin, Xmax ]. (2). Calculate the ﬁtness of each bat f (Xi0), 1 ≤ i ≤ Np. All bats are arranged in order of ﬁtness, select the bat with
the smallest ﬁtness as the current optimal X ∗, the top 50%
small bats are selected as employed bees, and the remaining
bats are selected as onlooker bees. (3). Update the speed Vit and position Xit of the employed
bee according to Eq.8 (4). Generate a random number rand1. If rand1 > rit ,
generate a new solution Xnew instead of Xit through Eq.9 (5). Calculate the ﬁtness of the solution f (Xit ). (6). Generate a random number rand2. If rand2 < Ati and
f (Xit ) < f (X ∗), accept the solution Xit , and update Ati and rit by Eq.10.
(7). Repeat steps 3-6 to update all employed bees
information.
(8). onlooker bees choose employed bees through roulette,
and randomly select the node j that needs to be changed
(except for the start and end points).
(9). Randomly select three solutions r1 = r2 = r3 that are different from the onlooker bee, and update Xit,j of the onlooker bees according to Eq.12
(10). Generate a random number rand3. If rand3 > rit and generate a new solution Xit,j(new) near the optimal solution X ∗ to replace Xit,j by Eq.13.
(11). Calculate the ﬁtness of the onlooker bee. If the ﬁtness
of the onlooker bee is better than the corresponding employed
bee, then the solution of the onlooker bees can replace the
solution of the employed bee, otherwise, the solution of the
employed bee cannot change.
(12). Repeat steps 8-11 until all onlooker bees information
are updated.
(13). Update the optimal solution X ∗ again. (14). If the solution of the employed bee Xit does not change after a certain period of time Tlimit and is not the optimal solution X ∗, a random solution Xnew ∈ [Xmin, Xmax ] will be generated to replace the employed bee Xit , and initialize the corresponding speed Vit ,frequency fi, loudness Ati and pulse rate rit . (15). After the iteration is complete, choose the optimal
solution as the ﬁnal result. The main part of IBA is described
in Algorithm 2 and Fig.4.
Although this article mainly uses the IBA algorithm to
solve the UAV path planning problem in three-dimensional
space, the theory proves that the convergence of the IBA
algorithm is still very necessary. Analyzing the convergence
of the algorithm theoretically can promote the improvement
and development of the algorithm, and provide clear theo-
retical signiﬁcance for the improvement of the algorithm.
Similar to the proof in [44], we can get Theorem 1 Theorem 2,
and Theorem 3. The deﬁnition 1-6 are stated in detail in
Appendix.

Algorithm 2 IBA Algorithm
Begin: 1: Initialization. Set the number of bat populations NP, the
maximum number of iterations Tmax , initialize the loudness A0, initial speed V 0, pulse frequency r, constant α, γ , and generate counter t = 1 of each bat. 2: Calculate the ﬁtness of each bat f (Xi0), choose a part as the employed bees Ne and the rest as the onlooker bees Ns. 3: For t = 1 : Tmax 4: For i = 1 : Ne
Vit = Vit−1 + (Xit−1 − X ∗)fi Xit = Xit−1 + Vii
5: If rand1 > rit , generate a new solution Xnew instead of Xit
Xnew = X ∗ + εAt

End if

6: 7:

Calculate the If rand2 < Ati

ﬁtness of and f (Xit

the )<

new solution f (X ∗)

f

(Xit

).

Accept the new solutions and update rit , Ati .

End if

End for

8: Update the current optimal solution X ∗.

9: For i = 1 : Ns

10: Onlooker bee selects employed bee through roulette and

randomly determines the nodes j that need to

be changed.

11: Randomly choose three different paths from the employed

bee r1 = r2 = r3 and Update the position of the

employed bee node j

12: If rand3 > rit End if

Xi,j = Xr1,j + F (Xr2,j − Xr3,j) Xi,j = Xj∗ + εAt

13: Calculate the path cost and the best path replaces

the original path through the greedy criterion.

End for

14: Update the optimal solution.

15: Determine if any honey source is exhausted. If so, re-plan

the path to replace the original path, and initialize the
corresponding speed Vit , frequency fi, loudness Ati and pulse rate rit . End for

16: Choose the optimal solution as the ﬁnal result.

End

Theorem 1: In the IBA algorithm, the state sequence {S(t); t ≥ 0} of the group is a ﬁnite homogeneous Markov chain.
Proof: (1) In practical problems, the search space of any optimization algorithm is ﬁnite. In addition, the speed and spatial location of any individual can be

VOLUME 9, 2021

20105

X. Zhou et al.: Improved Bat Algorithm for UAV Path Planning in Three-Dimensional Space

FIGURE 4. Improved bat algorithm flow chart. TABLE 1. Parameter settings.

TABLE 2. Compared with other swarm intelligence algorithms.

limited, and the whole group is composed of Np individuals. Therefore, the state space of the algorithm is ﬁnite.
20106

(2) According to Deﬁnition 4 in Appendix, in the group state sequence s(t) : t > 0, for ∀s(t − 1), s(t) ∈ S, p(TS (S(t − 1)) = X (t)) affects p(TS (s(t − 1)) = s(t)). Then from individual state transition probability we know that p(TS (s(t − 1)) = X (t)) is only related to the state which is at t − 1, and is not related to time t − 1. So, the state sequence {s(t) : t > 0} is a ﬁnite homogeneous Markov chain.
VOLUME 9, 2021

X. Zhou et al.: Improved Bat Algorithm for UAV Path Planning in Three-Dimensional Space TABLE 3. Statistical results of different populations, ratios of employed bees and onlooker bees.

TABLE 4. Statistical results of IBA and ABC for different Tlimit .

Theorem 2: The optimal state set G composed of the optimal state of the individual is a closed set on the group state space S.
Proof: For ∀Si ∈ G, ∀Sj ∈/ G, any step l ≥ 1, we can get Eq.29 from Ckapman-Kolmogorov equation:

Plsi,sj =

···

p(TS (si) = sr1 )

sr1 ∈S srl−1 ∈S

·p(TS (sr1 ) = sr2 ) · · · p(TS (srl−1 ) = sj) (14)

where Plsi,sj is the probability of group state si transitioning to state sj after l step. There is p(TS (sra−1 ) = sra ) in each
product expression of the expansion of Eq.23, satisfying

VOLUME 9, 2021

sra−1 ∈ G, sra ∈/ G, where 1 ≤ a ≤ l. By Deﬁnition 4,

Np

p(TS (sra−1 ) = sra ) = p(TS (Xim ) = Xjm )

(15)

m=1

From sra−1 ∈ G and sra ∈/ G, there is f (Xa) > f (Xa−1) = f (g∗) = inf (f (c)), c ∈ A. Thus there is p(TS (sra−1 ) = sra ) = 0 at least, at this time Plsi,sj = 0. So, G is a closed set on S.
Theorem 3: The Markov chain population sequence of
the IBA algorithm can converge to the global optimum with
probability 1.
Proof: We can ﬁnd from the introduction of the IBA
that the evolution direction of the entire population is

20107

X. Zhou et al.: Improved Bat Algorithm for UAV Path Planning in Three-Dimensional Space TABLE 5. Statistical results of IBA, BA and BA-ABC for different r 0 and γ .

monotonous. Assuming that the state s(t) in which the group is in time t has entered the global optimal solution set G, then it is in state s(t + 1) at time t + 1, and P{s(t + 1) ∈ G| s(t) ∈ G} = 1 always holds. Thereby,

P{s(t + 1) ∈ G} = P{s(t) ∈/ G}P{s(t + 1) ∈ G|s(t) ∈/ G}
+ P{s(t + 1) ∈ G}P{s(t + 1) ∈ G|s(t) ∈/ G} = (1 − P{s(t) ∈ G})P{s(t + 1) ∈ G|s(t) ∈/ G}
+ P{s(t) ∈ G}

Let P{s(t + 1) ∈ G|s(t) ∈/ G} ≥ h(t) ≥ 0,

limt→∞

t i=1

(1

−

h(i))

=

0,

then:

1 − P{s(t + 1) ∈ G} = 1 − (1 − P{s(t) ∈ G})P{s(t + 1) ∈ G|s(t) ∈/ G}

−P{s(t) ∈ G} = (1 − P{s(t) ∈ G})(1 − P{s(t + 1) ∈ G|s(t) ∈/ G})

≤ (1 − P{s(t) ∈ G})(1 − h(t))
t
≤ (1 − h(i))(1 − P{s(0) ∈ G})
i=1

So,

t
P{s(t + 1) ∈ G} ≥ 1 − (1 − h(i))(1 − P{s(0) ∈ G})
i=1

When t → ∞, there is:

lim P{s(t + 1) ∈ G} ≥ 1
t →∞
However, 0 ≤ P{s(t + 1) ∈ G} ≤ 1. So,

lim P{s(t + 1) ∈ G} = 1
t →∞
Obviously, after iteration, the IBA can ﬁnally converge to the global optimal solution.

20108

TABLE 6. Comparison of different intelligent algorithms with different F .
V. RESULT A. UAV PATH PLANNING PROBLEM In order to verify the effectiveness of the algorithm in UAVs path planning. This chapter not only compares and analyzes the various parameters of the IBA, but also compares the IBA algorithm with other intelligent algorithms and the extended algorithm of the BA. In addition, this paper conducts experimental simulation based on MATLAB R2019b software with the computer processor Intel Core i5 2.40GHz, RAM 16.00GB, and 64-bit Windows 10 operating system.
In order to be closer to the real environment, this work constructs a three-dimensional ﬂight environment. We sets
VOLUME 9, 2021

X. Zhou et al.: Improved Bat Algorithm for UAV Path Planning in Three-Dimensional Space TABLE 7. Statistical results of iba and ba for different A0 and α.

TABLE 8. Comparison of different intelligent algorithms with different D.

the starting node S(10, 20, 0), the target node E(42, 50, 2.8), the radar threat point R1(26, 55, 0.2), R2(35, 26, 0.2), R3(35, 26, 0.2), R4(51.5, 31, 0.4), the missile threat point M1(17, 22, 0.2), M2(24, 35, 0.4), M3(30, 62, 0.2), the artillery threat point A1(17, 22, 0.2), A2(22, 26, 0.4), A3(14, 46, 0.6), the climate threat point C1(16, 40, 0.4), C2(24, 48, 0.6). In addition, we set the parameters in Table 1 [1]:
From Table 2 we can ﬁnd that compared with other swarm intelligence algorithms, the IBA greatly reduces the iteration time and can get a better optimal solution.
It is very necessary to explore the inﬂuence of parameters on the performance of IBA. The IBA proposed in this paper deals with establishing multiple parameters. So we have therefore conducted many experiments to determine the appropriate range of parameters. At the same time, other parameters remain consistent to ensure fairness in the experience. Furthermore, when the optimum value remains unchanged, the algorithm is thought to have achieved the

convergence value. In the experiment, when the parameters are set, we begin to record the iteration time of the algorithm. This article conducts 50 simulations experiments for each comparison test. Table 3 shows the inﬂuence of different population numbers and different ratios of employed bees and onlooker bees of the IBA.
From Table 3 we can ﬁnd when the population increases or the proportion of employed bees is large, the iteration time of the IBA can also increase. The main reason is that the search rules of employed bees and onlooker bees are different, and employed bees take longer to search for paths. In this article, the IBA is more suitable for the population size range of 20-50, and the ratio of employed bees to onlooker bees is 1:4. Within this range, IBA may obtain better results more quickly.
This article then tests parameters Tlimit , F, r0, and γ in the IBA algorithm in turn, and compares the IBA algorithm with other intelligent algorithms horizontally and vertically.

VOLUME 9, 2021

20109

X. Zhou et al.: Improved Bat Algorithm for UAV Path Planning in Three-Dimensional Space

FIGURE 5. The optimal solution convergence curve of BA algorithm and IBA algorithm with different γ and r 0 (a) r 0 = 0.3; (b) r 0 = 0.6; (c) r 0 = 0.9.

The statistics from the simulation experiments in Table 4-6 show that the parameters Tlimit , F, r0, and γ have a little impact on the performance of IBA, especially in the average
path cost and convergence time that we are concerned about. Then, we test the inﬂuence of parameters A0 and α on the
IBA. Table 7 shows that A0 and α have no obvious inﬂuence on the iteration time of IBA, but the larger the value of A0 and α, the smaller the average path cost obtained. In other words, the ﬂight path for the UAVs under the IBA is better.
At last, take Tlimit = 10, A0 = 0.95, α = 0.9, F = 0.5, r0 = 0.6, γ = 0.5 as an example, we explore the impact of the ﬁnal parameter, namely, the number of nodes D, on the
new algorithm.
From the experimental results in Table 8, the average iter-
ation time and average path cost of the algorithm increase
as D increases. This is reasonable from the introduction of
the method. Following numerous simulation experiments,
we ﬁnd that the appropriate number of nodes for the IBA in
this article is 15-20.
From Fig. 8, the IBA algorithm can plan a feasible, safe,
and effective ﬂight path for UAVs in a three-dimensional
environment that can effectively avoid no-ﬂy areas and moun-
tains. It also can be found that the IBA has good convergence
from Fig. 5-7.

In general, from the statistical results in Table 2-8, we can ﬁnd that the population size, the ratio of employed bees to onlooker bees, the number of nodes D, the initial loudness A0, and α, have a greater impact on the simulation results of the IBA algorithm, however, Tlimit , F, r0, and γ have a little effect on the results of the IBA algorithm. It can be seen from the comparison results of IBA with standard BA and ABC that IBA presents better advantages. The convergence speed of IBA is about 50% faster than classical BA, and the quality of the optimum solution is about 40% higher than that of ABC. In addition, compared to traditional swarm intelligence algorithms and improved intelligence algorithms, the optimum solution of IBA is better than them. In other words, the IBA can better solve the UAV ﬂight path-planning problem.
B. FUNCTION OPTIMIZATION PROBLEM This section mainly veriﬁes the performance of the IBA algorithm on continuous problems. We use four benchmark functions to test the accuracy and convergence of the IBA algorithm and compare it with other swarm intelligence algorithms. The goal of optimization is to minimize the test results of all benchmark functions. Moreover, we run each algorithm 20 times for signiﬁcant statistical analysis.

20110

VOLUME 9, 2021

X. Zhou et al.: Improved Bat Algorithm for UAV Path Planning in Three-Dimensional Space

FIGURE 6. The optimal solution convergence curve of BA algorithm and IBA algorithm with different A0 and α. (a) α = 0.3; (b) α = 0.5; (c) α = 0.7; (d) α = 0.9.

FIGURE 7. Histogram of the average path cost and average iteration time of different algorithms. (a) Average path cost; (b) Average iteration time.

There are many standard test functions for validating new algorithms. In this article, we choose the well-known Rosenbrock’s function [31]

d −1
f1(x) = (1 − xi2)2 + 100(xi+1 − xi2)2
i=1
VOLUME 9, 2021

(16)

and De Jong’s standard sphere function

d

f2(x) = xi2

(17)

i=1

We know that f1(x) has a global minimum f1min = 0 at (1, 1) in 2D and Minimum of f2(x) is f2min = 0 at (0, 0, . . . , 0) for any d ≥ 3.

20111

X. Zhou et al.: Improved Bat Algorithm for UAV Path Planning in Three-Dimensional Space FIGURE 8. Path planning of IBA and optimal value convergence curve (a) Path planning; (b) Optimal value convergence curve.

FIGURE 9. Four benchmark functions in 3D. (a) Rosenbrock’s function; (b)De Jong’s standard sphere function; (c) Michalewicz’s function; (d) Dixon-Price’s function.

Michalewicz’s function is also selected to test the algorithm.

f3(x) = −

d

sin(xi)[sin(

ixi2 π

)]2m

.

(18)

i=1

It is usually set m = 10, and the global minimum has been approximated by f3min ≈ −1.801 for d = 2 and f3min ≈ −4.687 for d = 5.
In addition, we also added a standard test function, Dixon-
Price’s function, to perform numerical global optimization, and its global minimum is f4min = 0 for xi = 0,

20112

VOLUME 9, 2021

X. Zhou et al.: Improved Bat Algorithm for UAV Path Planning in Three-Dimensional Space TABLE 9. Benchmark functions.
TABLE 10. Comparison of IBA with BA, ABC, PSO, IABC.

i = 1, 2, . . . , d.

d

f4(x) = (x1 − 1)2 + i(2xi2 − xi−1)2.

(19)

i=2

However, the minimum value of Michalewicz’s function can be less than 0, so we have modiﬁed the ﬁtness of the IBA algorithm by Eq 20.

 

1,

ﬁt(xi) = 1 + f (xi)

f (xi) > 0

(20)

 1 + |f (xi)|, otherwise.

where f (xi) is the function value of xi. Moreover, we add other benchmark functions in Table 9,
and set the initial xi, i = 1, 2, . . . , Np range of each benchmark function to [−100, 100].
We reset the maximum number of evaluations to 3 × 105, dimension d = 50, F ∈ [−1, 1] and other parameters are the same as the previous simulation experiment.
From the statistical results in Table 10, we can see that for each benchmark function, IBA can obtain a better quality solution and a lower standard deviation, compared to BA, ABC, PSO, and IABC. From the average of these 10 benchmark functions, IBA can also ensure that the obtained mean and standard deviation are the smallest. We believe that it is worthwhile to perform multiple changes and comparisons for individuals to obtain better solutions. Obviously,in the

process of ﬁnding the global minimum of different functions, IBA is more suitable for ﬁnding the global minimum solution within a ﬁxed number of evaluations.
VI. CONCLUSION The purpose of this paper is to make the UAV obtain a crash-free, safer, and shorter ﬂight path. An improved bat algorithm (IBA) is proposed that integrates elements of the ABC, employed bee, onlooker bees, and scout bees. In the IBA, the employed bee searches for the path according to the behavior of bats using sonar positioning. To increase the local search ability, a mutation factor is considered. When the individual falls into a local optimum, the scout bee searches for a new path to replace the old one. In addition, this work also proves in detail that the IBA is convergent and solves the function optimization problem to prove that the IBA algorithm has the potential for broad application.
We tested all the setting parameters in the IBA in this paper. Based on the statistical results, it can be found that when Tlimit , F, r0, and γ are changed, the average path cost and iteration time of IBA do not change signiﬁcantly, that is to say, Tlimit , F, r0, and γ have a little impact on the performance of the IBA. In other aspects, A0 and α mainly affect the updating of information from the bat algorithm part of the IBA, and the larger A0 and α, the better the result obtained

VOLUME 9, 2021

20113

X. Zhou et al.: Improved Bat Algorithm for UAV Path Planning in Three-Dimensional Space

by the IBA. Similarly, the ratio of employed bees to onlooker bees also affects the results of the IBA. This is mainly due to the different behaviors of employed bees and onlooker bees in the search paths. The increase in population size can inevitably increase the iteration time of the algorithm. The increase in D increases the path cost mainly because the method of calculating the cost of a path is ﬂawed, and the path cost cannot be calculated accurately. From a statistical data point of view, the ratio of employed bees to onlooker bees, population size, and D have greater inﬂuence than A0 and α.
In this article, a large number of simulation experiments have conﬁrmed that the IBA can quickly plan a ﬂight path for the UAVs, effectively avoiding mountains and various threatening no-ﬂy areas. Additionally, based on the comparison results, the IBA is superior to DE, BAM, ABC, PSO, BA, BA-ABC, IABC, and GFACO in the battleﬁeld environment of this article. The convergence speed of the IBA is about 50% lower than the standard BA. Moreover, compared to the ABC algorithm, the IBA sacriﬁces very little convergence time to improve the quality of the optimal solution by about 14%. In terms of function optimization, compared with ABC, BA, IABC, and PSO, IBA can get higher quality solutions, lower standard deviation. On the other hand, from the perspective of time complexity, suppose the number of populations is n, the problem solution is D-dimensional, and the ratio of employed bees to onlooker bees is Ra. After t iterations, the time complexity of the IBA is approximately O(nD+t(Ra· nD+(1−Ra)n)), which is less than the time complexity of the BA (O(nD+tnD)) and this is consistent with the experimental results. In future work, we will study the use of the IBA to solve the UAV ﬂight path-planning problem in a dynamic environment.
APPENDIX IBA ALGORITHM CONVERGENCE This chapter mainly proves the convergence of IBA through Markov chain. In order to illustrate the Markov chain model of IBA, we need to give some related mathematical descriptions and deﬁnitions.
Deﬁnition 1 [42]: State equivalence. Suppose S = {s = (X1, X2, . . . , XNP )|Xi ∈ X, 1 ≤ i ≤ NP} is the state space of the group which is composed of the set of all possible states of the group. X = {X |X ∈ A} is the individual state space, and is the feasible solution space. ϕ(s, X ) = χ|X|(Xi) is the number of group state contains individual state X , where χ|B|is the indicative function of set B, s ∈ S, X ∈ s. If ∃s1, s2 ∈ S, such that ∀X ∈ X, there is ϕ(s1, X ) = ϕ(s2, X ).
Deﬁnition 2 [43]: The group state equivalence class induced by the equivalence relation ‘‘∼’’ on S is denoted as L = S/ ∼. The equivalence class of this group has the following properties:
(1). Any group state in a certain equivalence class L is equivalent, that is, s1 ∼ s2, ∀s1, s2 ∈ L.

(2). The state of any group within L is not equivalent to the state of any group outside L, that is, s1 ∼ s2, ∀s1 ∈ L, s2 ∈ L.
(3). Any two different equivalence classes have no inter-
section, that is, L1 ∩ L2 = ∅, ∀L1 = L2. Deﬁnition 3: Group state transition. TX (Xi) = Xj is the
group state one-step transition from state Xi to state Xj, where Xi, Xj ∈ X .
After that, we discuss the state transition probability of
the IBA. According to the structure of the IBA, we can
get the one-step transition probability of the individual state
from Xi to Xj.

 

pba(TX

(Xi)

=

Xj),





 

realized

by

bats





   

pon(TX

(Xi)

=

Xj),



 

realized

by

onlooker

bees

p(TX

(Xi)

=

Xj)

=

 

psc(TX

(Xi)

=

Xj),



  

realized

by

scout

bees



   

pba(TX

(Xi)

=

Xj)

×

pon(TX

(Xi)

=

Xj),



 

realized

by

bats

and

onlooker

bees.

Without considering the population number and dimension in Eq.8, we can get

Vt = Vt−1 + (Xt−1 − Pg)fi

(21)

Thereby, Eq.22 is established.

Xt = (2 + fi)Xt−1 − Xt−2 − Pgfi

(22)

where Pg is global optimal position. According to Deﬁnition 3 and the geometric properties of
the IBA, the one-step transition probability of a bat from state Xi to state Xj is:

pba(TX (Xi) = Xj) = pba(Vi → Vj) × pba(Xi → Xj)pba(Pgi → Pgj ) (23)
Through individual iterative formula and location update criterion, we can get Eq.24

pba(Pgi → Pgj ) =

1, 0,

f (Pgi ) ≤ f (Pgj ) otherwise.

(24)

Assuming that the individual has n dimensions. Then the one-step transition probability of speed and position is:

pba(Vi → Vj)

1

 

,

 

|

1|

Vj ∈ [Vi, Vi + fi(Xi − Pgi )]

= 1,

j=i+1

(25)





 

0,

otherwise.

pba(Xi → Xj)

20114

VOLUME 9, 2021

X. Zhou et al.: Improved Bat Algorithm for UAV Path Planning in Three-Dimensional Space

1

 

,

 

|



2|



















  

1

,

= |Pgi +ε · rand|





















  

1,





 

0,

Xj ∈ [Vi + Xi, Vi +Xi +fi(Xi − Pgi )]
and rand1 < ri and rand2 < Ai and f (Xi) < fXj Xj ∈ [Pgi − ε · rand, Pgi +ε · rand]
and rand1 > ri and rand2 < Ai and f (Xi) < fXj j=i+1 otherwise.

(26)

where | 1|

xj1 xi1

xj2 xi2

·

··

=
xjn xin

dxn

vj1 vi1
··

·

vj2 vi2
dx2

··· dx1

vjn vin

dvn

·

·

·

dv2dv1,

|

2|

=

Similarly, we you can get

pon(Ts(Xi) = Xj)


  

|Xi

1 −

Xj| p1(Xi

→

Xj),

Xj ∈ [Xi − (Xi − Xk ),

= 

Xi + (Xi − Xk )]

(27)



 0,

otherwise.

psc(Ts(Xi) = Xj)



1



,

= |Xmax − Xmin|

Xj ∈ [Xmin, Xmax ]

(28)

 0,

otherwise.

where in Eq.21-28, X is multi-dimensional data, Xk is a randomly selected solution within the range of feasible solutions.

p1(Xi → Xj) =

1, 0,

f (Xi) < f (Xj) otherwise.

Deﬁnition 4 [42]: For ∀si, sj ∈ S, in the IBA, the individual state is one-step transferred from state si to state Sj, denoted as TS (si) = sj. The one-step transition probability for all individual states in-group si to simultaneously transfer to all individual states in group sj is:

Np

p(TS (si = sj)) = p(TS (Xim ) = Xjm )

(29)

m=1

Deﬁnition 5 [42]: Assume that Li = (si1 , si2 , . . . , sin ) and Lj = (sj1 , sj2 , . . . , sjn ) are the equivalence classes of any two
group states caused by the equivalence relation ‘‘∼’’ on S.

Li one-step transfers to Lj, denoted as TL (Li) = Lj, then the one-step transition probability of TL (Li) = Lj is:

nm

p(TL (Li) = Lj) =

p(TS (sia ) = sjb )

(30)

a=1 b=1

Deﬁnition 6 [44]: Assuming that the optimal solution of optimization problem A, f is g∗, deﬁne the group’s optimal state set G = {s∗ = (X )|f (X ) = f (g∗), s ∈ S}.
If G = S, then every solution in the feasible solution space is the optimal solution and feasible solution, and optimization is meaningless at this time. So we discuss the convergence of the IBA algorithm in the case of G ⊂ S.

VOLUME 9, 2021

REFERENCES
[1] Z. H. Hu, ‘‘Research on Some key techniques of UAV path planning based on intelligent optimization algorithm,’’ Ph.D. dissertation, Dept. Auto. Eng., NUAA Univ., Nanjing, China, 2011.
[2] Y. Meng, J. Su, J. Song, W.-H. Chen, and Y. Lan, ‘‘Experimental evaluation of UAV spraying for peach trees of different shapes: Effects of operational parameters on droplet distribution,’’ Comput. Electron. Agricult., vol. 170, Mar. 2020, Art. no. 105282, doi: 10.1016/j.compag.2020.105282.
[3] K. Yang, G. Y. Yang, and S. I. Huang Fu, ‘‘Research of control system for plant protection UAV based on pixhawk,’’ Procedia Comput. Sci., vol. 166, pp. 371–375, Jan. 2020, doi: 10.1016/j.procs.2020.02.082.
[4] P. Yao, H. Wang, and Z. Su, ‘‘UAV feasible path planning based on disturbed ﬂuid and trajectory propagation,’’ Chin. J. Aeronaut., vol. 28, no. 4, pp. 1163–1177, Aug. 2015, doi: 10.1016/j.cja.2015.06.014.
[5] Y. D. Sergeyev, D. E. Kvasov, and M. S. Mukhametzhanov, ‘‘On the efﬁciency of nature-inspired metaheuristics in expensive global optimization with limited budget,’’ Sci. Rep., vol. 8, no. 1, pp. 1–9, Jan. 2018, doi: 10.1038/s41598-017-18940-4.
[6] A. Faramarzi, M. Heidarinejad, S. Mirjalili, and A. H. Gandomi, ‘‘Marine predators algorithm: A nature-inspired Metaheuristic,’’ Expert Syst. Appl., vol. 152, Aug. 2020, Art. no. 113377, doi: 10.1016/j.eswa.2020.113377.
[7] S. Mirjalili, S. M. Mirjalili, and A. Lewis, ‘‘Grey wolf optimizer,’’ Adv. Eng. Softw., vol. 69, pp. 46–61, Mar. 2014, doi: 10.1016/j.advengsoft. 2013.12.007.
[8] Z. Wang, L. Liu, T. Long, and Y. Wen, ‘‘Multi-UAV reconnaissance task allocation for heterogeneous targets using an oppositionbased genetic algorithm with double-chromosome encoding,’’ Chin. J. Aeronaut., vol. 31, no. 2, pp. 339–350, Feb. 2018, doi: 10.1016/j.cja. 2017.09.005.
[9] C. R. Atencia, J. Del Ser, and D. Camacho, ‘‘Weighted strategies to guide a multi-objective evolutionary algorithm for multi-UAV mission planning,’’ Swarm Evol. Comput., vol. 44, pp. 480–495, Feb. 2019, doi: 10.1016/j.swevo.2018.06.005.
[10] D. Simon, ‘‘Biogeography-based optimization,’’ IEEE Trans. Evol. Comput., vol. 12, no. 6, pp. 702–713, Dec. 2008, doi: 10.1109/TEVC.2008. 919004.
[11] L. P. Behnck, D. Doering, C. E. Pereira, and A. Rettberg, ‘‘A modiﬁed simulated annealing algorithm for SUAVs path planning,’’ IFACPapersOnLine, vol. 48, no. 10, pp. 63–68, 2015, doi: 10.1016/j.ifacol. 2015.08.109.
[12] R. A. Formato, ‘‘Central force optimization: A new deterministic gradientlike optimization Metaheuristic,’’ Opsearch, vol. 46, no. 1, pp. 25–51, Mar. 2009, doi: 10.1007/s12597-009-0003-4.
[13] R. A. Formato, ‘‘Central force optimization with variable initial probes and adaptive decision space,’’ Appl. Math. Comput., vol. 217, no. 21, pp. 8866–8872, Jul. 2011, doi: 10.1016/j.amc.2011.03.151.
[14] D. Karaboga and B. Basturk, ‘‘A powerful and efﬁcient algorithm for numerical function optimization: Artiﬁcial bee colony (ABC) algorithm,’’ J. Global Optim., vol. 39, no. 3, pp. 459–471, Oct. 2007, doi: 10.1007/s10898-007-9149-x.
[15] J. Karimi and S. H. Pourtakdoust, ‘‘Optimal maneuver-based motion planning over terrain and threats using a dynamic hybrid PSO algorithm,’’ Aerosp. Sci. Technol., vol. 26, no. 1, pp. 60–71, Apr. 2013, doi: 10.1016/j.ast.2012.02.014.
[16] C. Pan, H. Wang, J. Li, and M. Korovkin, ‘‘Path planning of mobile robot based on an improved ant colony algorithm,’’ presented at the CCIS, Najing, China, 2018, doi: 10.1007/978-3-030-374365-11.
[17] T. Stützle and H. H. Hoos, ‘‘MAX-MIN ant system,’’ Future Generat. Comput. Syst., vol. 16, no. 8, pp. 889–914, Jun. 2000, doi: 10.1016/S0167739X(00)00043-1.
[18] G. Wang, L. Guo, H. Duan, L. Liu, and H. Wang, ‘‘A bat algorithm with mutation for UCAV path planning,’’ Sci. World J., vol. 2012, pp. 1–15, Nov. 2012, doi: 10.1100/2012/418946.
[19] C. Sur and A. Shukla, ‘‘Adaptive & discrete real bat algorithms for route search optimization of graph based road network,’’ presented at the IEEE Int. Conf. Mach. Intell. Res. Adv., Katra, India, Dec. 2013.
[20] Y. Wang, K. Li, Y. Han, F. Ge, W. Xu, and L. Liu, ‘‘Tracking a dynamic invading target by UAV in oilﬁeld inspection via an improved bat algorithm,’’ Appl. Soft Comput., vol. 90, May 2020, Art. no. 106150, doi: 10.1016/j.asoc.2020.106150.
[21] D. H. Wolpert and W. G. Macready, ‘‘No free lunch theorems for optimization,’’ IEEE Trans. Evol. Comput., vol. 1, no. 1, pp. 67–82, Apr. 1997, doi: 10.1109/4235.585893.
20115

X. Zhou et al.: Improved Bat Algorithm for UAV Path Planning in Three-Dimensional Space

[22] A. A. Najm and I. K. Ibraheem, ‘‘Nonlinear PID controller design for a 6-DOF UAV quadrotor system,’’ Eng. Sci. Technol., Int. J., vol. 22, no. 4, pp. 1087–1097, Aug. 2019, doi: 10.1016/j.jestch.2019.02.005.
[23] A. A. Najm and I. K. Ibraheem, ‘‘Altitude and attitude stabilization of UAV quadrotor system using improved active disturbance rejection control,’’ Arabian J. Sci. Eng., vol. 45, no. 3, pp. 1985–1999, Mar. 2020, doi: 10.1007/s13369-020-04355-3.
[24] I. K. Ibraheem, ‘‘Anti-disturbance compensator design for unmanned aerial vehicle,’’ J. Eng., vol. 26, no. 1, pp. 86–103, Dec. 2019, doi: 10.31026/ j.eng.2020.01.08.
[25] W. R. Abdul-Adheem, I. K. Ibraheem, A. T. Azar, and A. J. Humaidi, ‘‘Improved active disturbance rejection-based decentralized control for MIMO nonlinear systems: Comparison with the decoupled control scheme,’’ Appl. Sci., vol. 7, no. 10, pp. 1–29, Mar. 2020, doi: 10.3390/app10072515.
[26] A. A. Najm, I. K. Ibraheem, A. T. Azar, and A. J. Humaidi, ‘‘Genetic optimization-based consensus control of multi-agent 6-DoF UAV system,’’ Sensors, vol. 12, no. 20, pp. 86–103, Jun. 2020, doi: 10.3390/s20123576.
[27] A. J. Humaidi, I. K. Ibraheem, A. T. Azar, and M. E. Sadiq, ‘‘A new adaptive synergetic control design for single link robot arm actuated by pneumatic muscles,’’ Entropy, vol. 7, no. 22, pp. 1–24, Jun. 2020, doi: 10.3390/e22070723.
[28] W. R. Abdul-Adheem, I. K. Ibraheem, A. J. Humaidi, and A. T. Azar, ‘‘Model-free active input–output feedback linearization of a single-link ﬂexible joint manipulator: An improved active disturbance rejection control approach,’’ Meas. Control, Jun. 2020, Art. no. 002029402091717. [Online]. Available: https://journals.sagepub.com/doi/10.1177/ and in part by the Fundamental Research Funds for the Central Universities under Grant 2018IB0170020294020917171, doi: 10.1177/0020294020917171.
[29] I. K. Ibraheem and F. H. Ajeil, ‘‘Path planning of an autonomous mobile robot using swarm based optimization techniques,’’ Al-Khwarizmi Eng. J., vol. 12, no. 4, pp. 12–25, Dec. 2017, doi: 10.22153/kej.2016.08.002.
[30] F. H. Ajeil, I. K. Ibraheem, A. T. Azar, and A. J. Humaidi, ‘‘Grid-based mobile robot path planning using aging-based ant colony optimization algorithm in static and dynamic environments,’’ Sensors, vol. 7, no. 20, pp. 1–26, Mar. 2020, doi: 10.3390/s20071880.
[31] X. S. Yang, ‘‘A new metaheuristic bat-inspired algorithm,’’ in Nature Inspired Cooperative Strategies for Optimization (Studies in Computational Intelligence), vol. 284, J. R. González, D. A. Pelta, C. Cruz, G. Terrazas, and N. Krasnogor, Eds. Berlin, Germany: Springer, 2010, doi: 10.1007/978-3-642-12538-6_6.
[32] A. Chakri, R. Khelif, M. Benouaret, and X.-S. Yang, ‘‘New directional bat algorithm for continuous optimization problems,’’ Expert Syst. Appl., vol. 69, pp. 159–175, Mar. 2017, doi: 10.1016/j.eswa.2016.10.050.
[33] A. H. Gandomi and X.-S. Yang, ‘‘Chaotic bat algorithm,’’ J. Comput. Sci., vol. 5, no. 2, pp. 224–232, Mar. 2014, doi: 10.1016/j.jocs.2013.10.002.
[34] T. T. Nguyen, J. S. Pan, T. K. Dao, M. Y. Kuo, and M. F. Horng, ‘‘Hybrid bat algorithm with artiﬁcial bee colony,’’ in Intelligent Data Analysis and Its Applications, Volume II (Advances in Intelligent Systems and Computing), vol. 298, J. S. Pan, V. Snasel, E. Corchado, A. Abraham, and S. L. Wang, Eds. Cham, Switzerland: Springer, 2014, doi: 10.1007/978-3-319-077734_5.
[35] I. K. Ibraheem, F. H. Ajeil, and Z. H. Khan, ‘‘Path planning of an autonomous mobile robot in a dynamic environment using modiﬁed bat swarm optimization,’’ 2018, arXiv:1807.05352. [Online]. Available: https://arxiv.org/abs/1807.05352
[36] F. H. Ajeil, I. K. Ibraheem, A. T. Azar, and A. J. Humaidi, ‘‘Autonomous navigation and obstacle avoidance of an omnidirectional mobile robot using swarm optimization and sensors deployment,’’ Int. J. Adv. Robotic Syst., vol. 17, no. 3, May 2020, Art. no. 172988142092949, doi: 10.1177/ 1729881420929498.
[37] N. Lin, J. Tang, X. Li, and L. Zhao, ‘‘A novel improved bat algorithm in UAV path planning,’’ Comput., Mater. Continua, vol. 61, no. 1, pp. 323–344, 2019, doi: 10.32604/cmc.2019.05674.
[38] C. Xu, H. Duan, and F. Liu, ‘‘Chaotic artiﬁcial bee colony approach to uninhabited combat air vehicle (UCAV) path planning,’’ Aerosp. Sci. Technol., vol. 14, no. 8, pp. 535–541, Dec. 2010, doi: 10.1016/ j.ast.2010.04.008.
[39] G.-G. Wang, H. E. Chu, and S. Mirjalili, ‘‘Three-dimensional path planning for UCAV using an improved bat algorithm,’’ Aerosp. Sci. Technol., vol. 49, pp. 231–238, Feb. 2016, doi: 10.1016/j.ast.2015.11.040.
[40] S. Aslan and S. Demirci, ‘‘Solving UAV localization problem with artiﬁcial bee colony (ABC) algorithm,’’ in Proc. 4th Int. Conf. Comput. Sci. Eng. (UBMK), Sep. 2019, pp. 735–738, doi: 10.1109/UBMK.2019.8907034.
20116

[41] L. Lei and Q. Shiru, ‘‘Path planning for Unmanned Air Vehicles using an improved artiﬁcial bee colony algorithm,’’ presented at the 31st Chin. Control Decis. Conf., Hefei, China, 2012.
[42] R. Zi-hui, W. Jian, and G. Yue-lin, ‘‘The global convergence analysis of particle swarm optimization algorithm based on Markov chain,’’ Control Theory Appl., vol. 28, no. 4, pp. 462–466, Apr. 2011.
[43] N. Ai-ping and Z. Xue-ying, ‘‘Convergence analysis of artiﬁcial bee colony algorithm,’’ Control Decis., vol. 28, no. 10, pp. 1554–1558, Oct. 2013.
[44] S. Junna, C. Tao, Y. Keqiang, and L. Shen, ‘‘Markov chain model analysis of bat algorithm,’’ Comput. Eng., vol. 43, no. 7, pp. 198–202, Jul. 2017.
XIANJIN ZHOU was born in 1997. He received the bachelor’s degree in mathematics and applied mathematics from Anhui Normal University, in 2019. He is currently pursuing the M.S. degree with the Department of Mathematics, Wuhan University of Technology. His research interests include path planning of UAV and intelligence optimization algorithm.
FEI GAO received the B.S. degree in normal mathematics and the M.S. degree in applied mathematics from Wuhan University, Wuhan, China, in 1999 and 2002, respectively, and the Ph.D. degree in ﬂuid mechanics from the Wuhan University of Technology, Wuhan, China, in 2006. From 2008 to 2009, he held a postdoctoral position with the Future Of Beyond Human Intelligence Lab, Department of Electrical Engineering Computer Science, Korea Advanced Institute of Science and Technology (KAIST). From 2011 to 2012, he was a Marie-Curie Fellow with the Department of Electronics and Telecommunications, Norges teknisknaturvitenskapelige universitet (NTNU). He is currently a Professor with the Department of Mathematics, School of Science, Wuhan University of Technology. His current research interests include swarm intelligence (especially particle swarm optimizations, artiﬁcial bee colony algorithm, bacterial chemotaxis optimization algorithm, and ant colony optimizations), bioinformatics, intelligence optimization methods, evolutionary computation (differential evolution algorithm, genetic algorithms etc.), quantum intelligence computation, global optimization, and non-Lyapunov methods in chaos control, chaos synchronization, chaotic characters.
XI FANG was born in 1981. He received the Ph.D. degree from the Wuhan University of Technology, Wuhan, China, in 2011. He was an Associate Professor. His current research interests are swarm intelligence, mathematical modelling in engineering. He has published more than 12 journal articles as the major author, among them, ﬁve articles were retrieved by SCI/EI.
ZEHONG LAN was born in Zhongxiang, Hubei, China. He is currently pursuing the B.S. degree in mathematical science with Wuhan University, Wuhan, China. His research interests include computational mathematics, artiﬁcial intelligence, and topology.
VOLUME 9, 2021

