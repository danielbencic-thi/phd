2016 IEEE International Conference on Robotics and Automation (ICRA) Stockholm, Sweden, May 16-21, 2016
Topological Trajectory Clustering with Relative Persistent Homology
Florian T. Pokorny, Ken Goldberg and Danica Kragic

Abstract— Cloud Robotics techniques based on Learning from Demonstrations suggest promising alternatives to manual programming of robots and autonomous vehicles. One challenge is that demonstrated trajectories may vary dramatically: it can be very difﬁcult, if not impossible, for a system to learn control policies unless the trajectories are clustered into meaningful consistent subsets. Metric clustering methods, based on a distance measure, require quadratic time to compute a pairwise distance matrix and do not naturally distinguish topologically distinct trajectories. This paper presents an algorithm for topological clustering based on relative persistent homology, which, for a ﬁxed underlying simplicial representation and discretization of trajectories, requires only linear time in the number of trajectories. The algorithm incorporates global constraints formalized in terms of the topology of sublevel or superlevel sets of a function and can be extended to incorporate probabilistic motion models. In experiments with real automobile and ship GPS trajectories as well as pedestrian trajectories extracted from video, the algorithm clusters trajectories into meaningful consistent subsets and, as we show in an experiment with ship trajectories, results in a faster and more efﬁcient clustering than a metric clustering by Fre´chet distance.
I. INTRODUCTION
Very large datasets of vehicle, robot, and human trajectories from GPS and other sensors are increasingly available in the Cloud [26], [9]. Such Big Data has great potential for Cloud Robotics [19] techniques such as automated Learning from Demonstrations to provide an alternative to manual programming of robots and autonomous vehicles. This paper presents a new algorithm using results from topology to efﬁciently and effectively partition trajectories into meaningful clusters.
Some of the key difﬁculties in applying machine learning methods to large databases of trajectories arise from the fact that trajectories are naturally of varying length and hence not easily representable in a vector space of ﬁxed dimension – which is the natural domain for popular methods such as Support Vector Machines. Furthermore, probabilistic approaches to motion analysis such as Gaussian Processes [20] are smooth in nature, often making the formulation of discrete constraints, such as whether a trajectory passes an obstacle to the right or to the left, difﬁcult to encode. However, for an autonomous system to learn motion primitives and control policies, consistent subsets of training trajectory data that do not intermingle global behavior patterns
Florian T. Pokorny and Ken Goldberg are with the Department of Computer Science and Electrical Engineering, University of California, Berkeley. Ken Goldberg is also with the Department of Industrial Engineering and Operations Research, University of California, Berkeley. Danica Kragic is with CAS/CVAP, KTH Royal Institute of Technology ftpokorny@berkeley.edu, dani@kth.se, goldberg@berkeley.edu

Fig. 1. Distinguishing topologically distinct trajectories can facilitate learning of control policies for automated driving, ﬂying, and robot motion. As an example, this ﬁgure illustrates 177 automobile trajectories based on recorded GPS coordinates at a highway intersection (data from OpenStreetMap [26]). One can observe many distinct trajectories travelled between the lower left shaded entry zone and upper right shaded exit zone. The presented algorithm for topological trajectory clustering with relative persistent homology efﬁciently identiﬁed 24 distinct trajectory classes (colored accordingly) using the complex DCr(X, Y ) at r = 0.000109. Eight of these trajectory classes are shown in the lower ﬁgures.
are beneﬁcial. The topological clustering method proposed here (see Fig. 1) holds promise in this respect because we are able to respect global topological properties of the trajectory data and environment. Following the discovery of persistent homology [12], the incorporation of topological techniques with Machine Learning is now beginning to receive increased attention, for example at recent workshops at the ﬂagship machine learning conferences ICML and NIPS [17], [25]. While trajectories can be clustered geometrically using several distance measures such as the Hausdorff or Fre´chet metric, or using techniques such as string kernels [6], [31] and Dynamic Time Warping, the complexity of typical distance based approaches scales quadratically in the size of the trajectory dataset, making these methods challenging to apply with very large databases of trajectories. Furthermore, distance based clustering is rather sensitive to the chosen distance measure, with each such measure having beneﬁts and

978-1-4673-8026-3/16/$31.00 ©2016 IEEE

16

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on September 09,2022 at 05:17:14 UTC from IEEE Xplore. Restrictions apply.

drawbacks. The Hausdorff distance, for example, is highly sensitive to point-wise differences between trajectories, while L2 based averaging approaches are on the other hand rather insensitive to point-wise outliers, leading to ongoing research into trajectory distance measures [33]. In this work, we propose a topological rather than purely geometric approach to clustering trajectories into consistent subsets with potential future applications to anomaly detection and policy learning for robotics and autonomous driving. We show in experiments with GPS trajectories that the proposed method can yield fundamentally different clusters compared to a clustering by Fre´chet distance and show how our approach can be combined with probabilistic reasoning by considering sublevel sets of a probability density function for a pedestrian motion dataset.
II. BACKGROUND AND RELATED WORK
The processing, classiﬁcation and clustering of trajectory data is a sizable research area. Some of the current methods are reviewed in [33]. In the robotics domain, trajectories, recorded for example as sequences of joint-angles of a robotic arm, play an important role in the learning from demonstration framework [1], [5], [27]. There, trajectory sequences are recorded during a demonstration phase, where a human instructor ‘teaches’ a robot how to perform a certain task. The robot then uses the trajectory data to model motion primitives that can be adapted based on environment conditions. In [14], the automated extraction of clusters of trajectories in order to obtain vocabularies of motion was studied using a system comprising ﬁltering, segmentation and clustering using K-means. Jenkins et al. [18], focused on the extraction of behaviors for humanoid motion in particular.
Knepper et al. [21] studied classes of path segments to enable a robot to reason about motion alternatives and to plan trajectories efﬁciently. Trajectories have been clustered using local sub-trajectories in the work of Lee [22] and also Buchin [7], who focused on extracting commuting patterns using the Fre´chet distance.
Generally, previous clustering methods are either geometric in nature such as [22] or are based on probabilistic models, as in [15], who applied a mixture model for trajectory clustering and [24], who applied a hidden Markov model to detect activities from trajectories. Our work is distinct from these approaches, applying instead the topological techniques of persistent homology [12] to arrive at a trajectory classiﬁcation, which relies on global topological information extracted either from the trajectory data itself, or using a simplicial model of the environment containing these trajectories. Our current work extends our efforts [29] that introduced the use of persistent homology as a trajectory clustering technique, and showing how ﬁltrations of Delaunay-Cˇ ech complexes can be utilized to cluster trajectories with ﬁxed common start and end points. This work was recently extended to a construction in [30] to accommodate trajectories with varying start and end points. This construction however relied on an enlarged simplicial complex construction, substantially increasing the size of the required simplicial data structure.

Our present work generalizes [29] instead by means of relative persistent homology, allowing us to cluster trajectories with varying end-points based on the same simplicial complexes used for the classiﬁcation of trajectories with ﬁxed start and end points. The present work studies large datasets of real world GPS traces as a particular source of trajectory data, which, as well as trajectories extracted from video [32], forms a common real data-source studied for example in anomalous event detection problems [28].

A. Mathematical Background

The key tool used in this work is the machinery of relative

persistent homology with coefﬁcients in a ﬁeld F, a variant of persistent homology [12]. This requires a few deﬁnitions

from Algebraic Topology, requiring mathematical techniques

which are difﬁcult to fully explain and do justice in a short

paper. The book [13] provides an excellent introduction – we

shall only review the necessary key notation and ideas here.

We focus on persistence with binary coefﬁcient ﬁeld Z2 = {0, 1}, but more generally ﬁelds such as Zp for some prime p or the ﬁeld of rational numbers Q could be considered. The binary ﬁeld Z2 has the particular advantage of being simple and efﬁciently implementable on a computer. In 2

dimensions, the ﬁeld Zp allows us to distinguish, e.g. up to p − 1-fold winding of trajectories around obstacles – Z2 in particular only enables us to detect whether we move to the

left or right of voids/obstacles [16], [13].

1) Simplicial Complexes: A geometric k-simplex σ =

[v0, . . . , vk] in Rd is a convex hull of k + 1 afﬁnely independent ordered points v0, . . . , vk ∈ Rd. We call k the dimension of a k-simplex. If τ ⊆ σ, τ, σ ∈ K, then τ is called

a face of σ. In the special case of Z2 homology, the ordering can in fact be ignored. A geometric simplicial complex K

is a non-empty set of simplices such that if σ ∈ K and

∅ = τ ⊆ σ ∈ K, then τ ∈ K and the intersection of any two

simplices σ, τ ∈ K is a face of both σ and τ . We write |K|

for set of points in Rd contained in the union of all simplices in K. The set |K| is a topological space with the subspace

topology from Rd. A subset of simplices A ⊂ K that is itself a simplicial complex is called a subcomplex of K. Note

that 0-simplices just correspond to points, 1-simplices are

ﬁnite line segments and 2-simplices are triangles in Rd. The conditions in the deﬁnition of a simplicial complex ensure

that the simplices are assembled in a natural manner and the

notion of a simplicial complex generalizes both the notion

of a geometric graph and a triangulation.

2) Relative Homology: For a ﬁeld F, a p-chain c is a

formal sum c =

k i=1

λi

σi

of

p-simplices

{σi}ki=1

⊂

K

with λi ∈ F and Cp(K) denotes the F-vector space of all p-

chains. In particular, for ﬁnite simplicial complexes, 1-chains

are ﬁnite linear combinations of edges and 2-chains are

ﬁnite linear combinations of triangles. When no confusion

arises, we write Cp for Cp(K) to simplify notation. For every geometric p-simplex σ = [v0, . . . , vp] let ∂pσ be the p − 1-chain ∂pσ = pi=0(−1)i[v0, . . . , vi−1, vi+1, . . . , vp] consisting of a signed sum of faces of σ. For each p ∈

17

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on September 09,2022 at 05:17:14 UTC from IEEE Xplore. Restrictions apply.

{0, . . . , d}, ∂p extends to a linear map ∂ : Cp → Cp−1, called the boundary operator.
A p-chain c such that c = ∂p+1ω for some ω ∈ Cp+1 is called a p-boundary, and a p-chain c such that ∂pc = 0 is called a p-cycle. The vector spaces of p-boundaries and p-cycles are denoted Bp, and Zp, respectively. For a 1-chain c corresponding to an oriented path from s to t, ∂c = t − s. We have ∂c = 0, so that c is a 1-cycle, for any closed oriented 1-chain c. Similarly, the boundary ∂w of a 2-chain w corresponding to an oriented collection of triangles (2simplices) corresponds to the oriented geometric boundary of these triangles (however only modulo F) - the name boundary operator is hence also geometrically natural.
The p-th homology group of K is deﬁned by Hp = Hp(K) = Zp/Bp. For a cycle c ∈ Zp, we denote by [c] ∈ Hp the resulting element in homology. Note that each p-cycle c yields an element in Hp, but this representative is only unique up to elements in Bp. We are interested in H1 in particular, which consists of equivalence classes of closed 1-cycles up 1-cycles that are boundaries of 2-cycles. In the case of F = Z2, we can visualize 1-chains as a collection of edges in K which have non-zero coefﬁcients in the chain. See Fig. 2 for an example. The importance of homology in mathematics arises from the fact that it captures global topological properties about the topological space deﬁned by |K|. In particular homology remains invariant under continuous deformations of the space |K| (homotopy equivalences of |K|). In particular, bp = dim(Hp(K)) is called the pth Betti number and counts the number of connected components (b0), tunnels (b1), and higher dimensional voids in |K|. The left part of Fig. 2 illustrates an exemplary 1-cycle c lying in a simplicial complex K and forming a basis of H1(K), which is in this case 1-dimensional and where we pick F = Z2 coefﬁcients. There, |K| is in fact homotopy equivalent to a circle and dim(H1(K)) = 1.
In our prior work [29], we used a basis for H1(K) to topologically cluster trajectories α0, . . . , αn, represented as edge paths in K. There, it was initially necessary to assume that all trajectories had the same ﬁxed start and end vertices s, t ∈ K, respectively, in order to form Z2-cycles ci = α0 + αi that could then be classiﬁed in homology. We were only able to consider more general trajectories with general initial and terminal regions S, T ⊆ K, by introducing a cone construction [30], which increased the size and complexity of the approach.
Here we solve this problem with relative homology, which provides a generalization of standard homology: For a subcomplex A ⊂ K, we deﬁne the quotient vector space of relative p-cycles Cp(K, A) = Cp(K)/Cp(A) The boundary operator descends to a linear operator on relative chains. We denote it by ∂ˆp [16]. We deﬁne the set of relative p-boundaries by Bp(K, A) = im(∂ˆp+1 : Cp+1(K, A) → Cp(K, A)). These correspond to p-chains c ∈ Cp(K) such that c = ∂p+1w + a for some a ∈ Cp(A) and w ∈ Cp+1(K). Similarly, relative p-cycles are deﬁned by Bp(K, A) = ker(∂ˆp : Cp(K, A) → Cp−1(K, A)) and correspond to pchains c ∈ Cp(K) with ∂c ∈ Cp−1(A). In particular, a 1-

Fig. 2. We display a simplicial complex K in light and dark blue and a subcomplex A ⊂ K in dark blue. The closed red edge-path c1 on the left is a 1-cycle, which cannot be represented as the boundary of a 2-cycle due to the hole in K. In fact [c1] ∈ H1(K) forms a basis for the 1-dimensional ﬁrst homology group H1(K). On the right, we display a relative 1-cycle c2 in red. Both c1, c2 in fact form relative 1-cycles and [c1], [c2] ∈ H1(K, A) yield a basis for the 2-dimensional ﬁrst relative homology group H1(K, A). While |K| is homotopy equivalent (deformable) to a circle, the quotient space K/A is homotopy equivalent to two circles glued at a common point, called a wedge of two circles - for this imagine ﬁrst gluing the two shaded connected components of A together and then shrinking the resulting cylinder with a cut out hole until we obtain two circles. Since a wedge of 2 circles has a 2-dimensional H1(K/A), we can also reason geometrically to understand why dim(H1(K, A)) = dim(H1(K/A)) = 2.
chain corresponding to a connected oriented edge-path in K is a relative 1-cycle if the path is cyclic (zero boundary), or when its initial and terminal points lie in A. Finally, we have Bp(K, A) ⊆ Zp(K, A) and the p-th relative homology is deﬁned by Hp(K, A) = Zp(K, A)/Bp(K, A), describing equivalence classes of relative p-cycles modulo relative pboundaries. Relative homology is of importance since it allows us to consider properties of topological quotient spaces. Consider a simplicial complex K and a subcomplex A ⊂ K. We can consider the quotient space K/A, within which a point [x] corresponds to an equivalence class of a point x ∈ K modulo A and all of A ⊂ K is identiﬁed with a single point. An important result [16] states in particular that the ﬁrst reduced homology of K/A with ﬁeld coefﬁcients can be computed using the relative homology H1(K, A), so that we can think of relative ﬁrst homology in terms of the ﬁrst homology of the quotient space. The two parts of Fig. 2 illustrate a basis for H1(K) and H1(K, A), where A is the subcomplex of K containing all simplices of K whose vertices all lie in the shaded region (which is |A|). Here, dim(H1(K)) = 1, while dim(H1(K, A)) = 2.
3) Filtrations: Simplicial complexes have for many decades enjoyed popularity in pure mathematics [16] in order to model and approximate various spaces of interest. Only recently however has there been interest in constructing simplicial complexes from real world data which has lead to the development of persistent homology [12], [8] which studies the homology of an increasing sequence (a ﬁltration) of topological spaces. Persistence is related to Morse theory, where one studies the topology of sublevel (or superlevel) sets of a function f : X → R deﬁned on a topological space X. Each sublevel set Xr = f −1((−∞, r]) yields a topological space Xr, where Xr ⊆ Xr whenever r r .
As r increases, homological features can be ‘born’ and disappear or ‘die’ as the threshold r increases. Persistence

18

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on September 09,2022 at 05:17:14 UTC from IEEE Xplore. Restrictions apply.

provides a computational mechanism for understanding these

changes. To make this precise, we work with a ﬁltration K 0.3

0.3

of ﬁnite simplicial complexes in Rd, by which we mean

a sequence K : K1 ⊂ K2 ⊂ . . . ⊂ Kn = K∞ of

ﬁnite simplicial complexes. Typically, each ﬁltration index 0.15

0.15

i is associated to a real valued ﬁltration value r so that Ki = f −1(−∞, r]. For example, we can assign an arbitrary real valued scalar to each vertex of Kn. Then the function f (σ) = maxi∈{0,...,k} f (vi) for an arbitrary k-simplex σ = [v0, . . . , vk] ∈ Kn yields a valid ﬁltration function giving rise to a ﬁltration of simplicial complexes when its sublevel sets are considered. When Ki = f −1((−∞, r]) we call r the ﬁltration value associated to the ﬁltration index i.

0

0

0.15

0.3

0

0

0.15

0.3

000 001 002 003 004 005 006 007

B. Simplicial complexes from data

008

To study homological features of a point-cloud dataset

X = {x1, . . . , xn} ⊂ Rd, we need to construct a sequence of topological spaces modeling X. We will in particu-

lar consider the family of union of balls spaces Xr =

x∈X {y ∈ Rd : x − y Xr is homotopy equivalent

to

r}, the

for r 0. For each r, Delaunay-Cˇ ech complex

DCr(X) [3], which is a simplicial complex deﬁned for any

ﬁnite set X ⊂ Rd where each subset of d + 1 point is

afﬁnely independent. The assumption of afﬁne independence

is generic in that a uniform random sample satisﬁes this

condition with probability one and we can also enforce

the condition by an arbitrarily small perturbation of X.

Let D(X) denote the simplicial complex corresponding to

the Delaunay triangulation of X with simplices deﬁned by

D(X) = {[v0, . . . , vk] : vi ∈ X, ∩ki=0Vvi = ∅}, where Vx denotes the Voronoi cell containing x. For each k-simplex

σ = [v0, . . . , vk] ∈ DC(X), deﬁne f (σ) = min{r :

Thkie=1DBelra(uvni )ay=-Cˇ0e}c,hwchoemreplBexr (Dx)C=r (X{y),∈foRrdr:

x − y r}. 0 is the sub-

complex of D(X) deﬁned by DCr(X) = f −1((−∞, r]).

Since DCr(X) is homotopy equivalent to Xr, we can

compute topological information about Xr from DCr(X) at

all scales r 0. If a function f : X → R is deﬁned on the

data X – for example a log likelihood, probability density or

cost function, we can furthermore deﬁne an induced ﬁltration

by extending f to a function f (σ) = maxi∈{0,...,k} f (vi) for the k-simplex σ = [v0, . . . , vk] of D(X), yielding a ﬁltration F (f )r of simplicial complexes by the sub-levelsets of f . As we increase the threshold parameter r a larger and larger sub-

complex of D(X) is considered. Superlevel sets can also be

studied by replacing f with −f . Fig. 3 illustrates examples

of DCr(X) at various thresholds. Besides DC(X), there furthermore exist alternate constructions yielding simplicial

complexes, such as the Vietoris-Rips and Witness complexes

[8] which are scalable to high-dimensional spaces, but which

are not necessarily homotopy equivalent to Xr at ﬁltration level r.

C. Persistent relative homology When we apply homology to a ﬁltration of simplicial
complexes K1 ⊂ . . . ⊂ Kn, we obtain a sequence of linear maps fpi,j : Hp(Ki) → Hp(Kj) for i j induced by the

Fig. 3. Given the pointcloud X ⊂ [0, 1]2 in the bottom left, we consider DC(X) whose ﬁrst persistence diagram is displayed in the top left. A large persistence interval (0.04, 0.30) is marked in red and corresponds to the hole in the point-cloud. The middle row displays DCr(X) at r = 0.04 when the large hole is ﬁrst enclosed by simplices, at r = 0.15 and at r = 0.30 when the hole ﬁnally is covered by simplices. The red path is a 1-cycle c such that [c] corresponds to marked most persistent point in the diagram. The bottom middle and right ﬁgure displays DCr(X, Y ), where Y ⊂ X is the set of points marked in red in the bottom left and for r = 0.03 (middle) and r = 0.04. The top right ﬁgure shows the ﬁrst persistence diagram of DCr(X, Y ) relative to the shaded dark blue subcomplex A(X, Y ). The diagram differs only in minor detail from the persistence diagram of DC(X) on the left - apart from the existence of a non-ﬁnite point (0.03, ∞) indicated by the dashed line. For r ∈ (0.04, 0.3), dim(H1(DCr(X, Y ), A(X, Y ))) = 2, as discussed in Fig. 2.
inclusions Ki ⊂ Kj. The p-th persistent homology group for i j is given by Hpi,j = imfpi,j, so that non-trivial elements in Hpi,j correspond to homology classes ‘born’ at or before index i and which do not ‘die’ (i.e. do not merge or become trivial) before index j. The difference j − i is called the index persistence of such a class. For us, Ki = f −1((−∞, ri]), and rj − ri is the persistence of the class. In fact, all the persistent homology groups can be computed by a decomposition of the persistence module into interval modules [11]. The p-th persistence diagram, captures the information about the birth and death of p-th homology classes as the ﬁltration value increases. It consists of multisets of points above the diagonal. Each point (ri, rj) in the diagram corresponds to a homology class born at index i and surviving until index j. Points that lie far above the diagonal have a large persistence and are hence considered important features distinct from smaller scale features due to noise. An example is presented in Fig. 3. Classes born at index i and which do not die at the ﬁnal ﬁltration index n are called essential and are associated to points of the form (ri, ∞) in the plane, extended formally to (R ∪ {∞})2. Note that the dimension of H1(Ki) for any ri > 0 is equal to the number of points above and to the left of (ri, ri). To compute a basis for the persistent homology groups, we ﬁrst assume

009 010 011 012 013 014 015 016 017 018 019 020 021 022 023 024 025 026 027 028 029 030 031 032 033 034 035 036 037 038 039 040 041 042 043 044 045 046 047 048 049 050 051

052

19

053

054

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on September 09,2022 at 05:17:14 UTC from IEEE Xplore. Restrictions apply.

without loss of generality that the ﬁltration K has been

reﬁned to a simplex-wise ﬁltration, where Kj =

j i=1

σi,

so

that Kj+1 = Kj ∪{σj+1} and we hence add a single simplex

in each step of the ﬁltration. Given such a simplex-wise

ﬁltration, several algorithms (see, e.g. [4]) are available to

compute a basis of the persistent homology groups. We shall

use the library [4] and the left-to right reduction algorithm

described in [10] for this purpose. Fig. 3 illustrates an

example of a ﬁltration and an associated homology basis.

Persistence has recently emerged as a new approach in data

analysis, since large persistence intervals in the persistence

diagrams are provably stable under noise [12] and represent

global structure information currently only extractable with

topological methods. In this work, we will use a less common

extension of persistence to relative homology. For a sub-

complex A ⊆ K1 of a ﬁltration, we consider the sequence of linear maps on relative homology fˆpi,j : Hp(Ki, A) → Hp(Kj, A) for i j induced by the inclusions Ki ⊂ Kj. A basis for these relative homology groups can be obtained by a

modiﬁcation of the standard left-to right reduction algorithm.

Since H1(Ki, A) H1(Ki/A), we can in particular think of the ﬁrst relative persistent homology groups as measuring

the persistence of the sequence of topological quotient spaces

Ki/A for i ∈ {1, . . . , n}. An approach we introduce in his work is to deﬁne

A(X, Y ) to be the sub-complex of DC∞(X) = D(X) of simplices whose vertices are contained in Y (shaded in

Fig. 3). We then augment A(X, Y ) to a ﬁltration DCr(X, Y ) by inserting the remaining simplices of D(X), with ﬁltration

order deﬁned by the deﬁning function f of DC(X). In the

top left of Fig. 3, we illustrate the resulting relative ﬁrst

persistence diagram for H1(DCr(X, Y ), A(X, Y )).

III. METHODOLOGY As input, we consider a set Γ = {γ1, . . . , γm} of piecewise linear trajectories γi : [0, 1] → Rd which can have arisen for example as GPS traces, or as joint-conﬁguration trajectories of a robotic system. We assume furthermore that these trajectories all start and end in some speciﬁed (possibly disconnected) region R ⊂ Rd.

A. Discretization and Setup
In order to apply our simplicial complex based approach, we require a simplicial complex L such that each trajectory γi can be discretized as a sequence of 1-simplices in L. For a simplicial complex such that Γ ⊂ |L| (recall |L| denotes the union of all simplices in L) this discretization can be performed by ﬁrst mapping each vertex of the piecewise linear γ to its nearest 0-simplex in L and to then connect each consecutive pair of such mapped trajectory points by a shortest path of 1-simplices in L. Given R, deﬁne A ⊆ L to consist of those simplices of L whose vertices all lie in R, and we assume that the mapped initial and terminal positions of the trajectories also map to corresponding vertices in A under our discretization procedure.
Given A, L, suppose now that there exists a ﬁltration L = K1 ⊂ K2 ⊂ . . . ⊂ Kn of simplicial complexes. In that case,

we can consider the ﬁrst persistent relative homology groups arising from the inclusions
H1(K1, A) → . . . → H1(Kn, A).
Each γ ∈ Γ forms a relative cycle in Z1(Ki, A) for all i ∈ {1, . . . , n}. For each ﬁxed i, we can furthermore consider [γ] ∈ H1(Ki, A) = Z1(Ki, A)/B(Ki, A). The key insight of persistence [12] however implies that we can compute a basis for all H1(Ki, A), i = 1, . . . , n simultaneously, and the algorithms of persistence [4] furthermore provide the most efﬁcient known implementation of determining these bases even when i is ﬁxed. To compute these bases, we ﬁrst create an arbitrary simplex-wise ﬁltration of L = K1 and augment this ﬁltration by adding each of the simplices of Kn such that simplices of Ki are inserted before Kj and such that the faces of any simplex σ are inserted before σ. This results in a reﬁned ﬁltration M1 ⊂ . . . ⊂ Mp = Kn, where one simplex is inserted at each step and A = Ms for some s. By applying the standard left-to-right matrix reduction to the boundary matrix ∂ of this ﬁltration, one arrives at a reduction R = ∂V such that the required bases for H1(Ki, A) consists of a subset of lower parts of columns of R and V below row s. The column indices are speciﬁed by the persistence indices (see also [29] for the non-relative version of this). For each ﬁxed ﬁltration index i, we thus obtain a basis b1, . . . , bw of H1(Ki, A) allowing us to compute F-coordinates of the image of our trajectories in H1(Ki, A).
Note that this procedure amounts to a ﬁnite dimensional binary vectorial featurization of the trajectories.
However, unlike other known featurizations, the dimensionality of the features is independent of the length of the trajectory and instead depends on the global topology of the quotient space Ki/A.
We propose to cluster trajectories with the same homology coordinates into a joint cluster for each ﬁltration index i. As i is increased, these trajectory clusters then merge hierarchically until some ﬁnal ﬁltration value. The trajectories however do not necessarily all merge into a single cluster at the ﬁnal ﬁltration index (because H1(K∞, A) might not be trivial). Note that, compared to [29], relative homology has the additional beneﬁt that each trajectory already forms a relative cycle, while in the cited work, it was necessary to apply concatenations of trajectories to form (non-relative) cycles in H1(Ki).
It follows from the fact that H1(Ki, A) H1(Ki/A) that two trajectories γ, γ such that [γ] = [γ ] ∈ H1(Ki, A) are not continuously deformable to one another in Ki if we allow their endpoints to also vary continuously in |A| – this a relaxed version of the standard notion of homotopy, where the end-points need to be ﬁxed. Our clusters hence consist of sets of trajectories such that no trajectory from one cluster can be continuously deformed to any trajectory of the other cluster in this sense. The converse is however not necessarily true: it can happen that two trajectories in the same cluster cannot be continuously deformed to one another in |Ki/A|. Besides this information, the clustering is hierarchical in nature and we can extract from the persistence intervals the

20

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on September 09,2022 at 05:17:14 UTC from IEEE Xplore. Restrictions apply.

ﬁltration indices at which two trajectories remain in separate clusters and when they merge.
1) Filtrations of interest: The freedom in choice of ﬁltration allows us a wide modeling capability to express constraints. Given just a point-cloud X and terminal subset Y ⊂ X, a natural choice is the ﬁltration given by DCr(X, Y ) introduced earlier and shown in Fig. 3. Using the persistence intervals, we can automatically determine ﬁltration values such that our trajectories lie in |DCR(X, Y )| for some minimal R > 0 and such that DCR(X, Y ) is path connected (0-persistence). We can furthermore identify ﬁltration regions where the remaining Betti numbers (number of voids, tunnels, etc.) do not vary under noise (i.e. by focusing on large persistence intervals) using the persistence stability theory [12]. Two particular situations to distinguish are in particular the case where X is a large and dense set of samples from some conﬁguration space C, in which case DCR(X) can be expected to be homotopy equivalent to C and the classiﬁcation of trajectories depends on the topology of C only. In the second case, X is sparse and might only consist of trajectory points itself – in that case the classiﬁcation of trajectories captures global intrinsic information about the shape of the union of these trajectories themselves – recall here that DCr(X) is topologically the same (homotopy equivalent) to the union of ball space Xr and hence recovers topological information of Xr as these balls grow around the samples X. We will work with both cases, as has been done in the non-relative case in [29].
Note that in the above, only the ﬁltration function f deﬁning DCR(X) was used. In general, however our ﬁltration can arise as sublevel sets of an arbitrary function. In particular, we can consider a probability density f , log-likelihoods, cost functions, etc. Our classiﬁcation approach enables us to encode topological constraints by considering the homological properties of all sublevel sets simultaneously. The notion of topology is hence rather generic in nature as a sublevel set of some probability density on a simple topological space, such as a square, can have intricate features, while the square itself is topologically trivial. Similarly DCR(X, Y ), for sparse X ⊂ [0, 1]2, can capture information about X itself, rather than the square’s topology.
IV. EXPERIMENTS
We work with a dataset of GPS ship trajectories [23] from a region around Shanghai, which was recorded during 6 months in 2013. We are interested in classifying the motions of ships between the shaded northern and southern region in Fig. 4. Our dataset consists of 11711 trajectories with 5102072 GPS data points which corresponded to ships traveling between these regions and such that between each consecutive GPS signal point along a trajectory there was no more than a 30 minute delay. We now demonstrate how our approach beneﬁts from information about the geometry of the sea region. We hence assume the knowledge of a sea/land classiﬁcation of this area is available and create a detailed map by uniformly sampling 100000 points X ⊂ R2 lying in the water region. Denoting the subset of X lying in

Fig. 4. A dataset of 11711 ship GPS traces of vessels traveling between the shaded regions around Shanghai is shown in the top ﬁgure. The bottom ﬁgure displays DCr(X, Y ) and a subset of 500 trajectories discretized as relative 1-cycles in the simplicial complex representing the water area at r = 0.0002.
the shaded region by Y , we constructed a triangulation of the water region (longitude [121.897, 122.281] and latitude range [29.8754, 30.0128]) using DCr(X, Y ) for r = 0.0002. Next we discretized the trajectories as approximate edgepaths in DCr(X, Y ) as described in Sec. III. See Fig. 4 for an illustration. Using the ﬁltration DCr(X, Y ), we computed relative persistent homology coordinates for all trajectories to cluster the dataset. The ﬁltration DC(X, Y ) was constructed in 1.15s and, once each trajectory was represented as a relative cycle, it took less than 0.002s per trajectory to determine its relative persistent homology coordinates. We obtained 15 classes at r = 0.0002. All classes are displayed in the top of Fig. 5, and we can see that this clearly corresponds to a classiﬁcation of the ship movements relative to the various islands. Note the differences with a metric classiﬁcation: our classiﬁcation allows for outliers in this setting as it depends only on topological properties of the water region. The middle row of Fig. 5 displays two example classes. In the bottom right, we see that a single linkage clustering by Fre´chet distance does not result in clustering representing the ‘hard constraints’ enforced by the environment topology

21

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on September 09,2022 at 05:17:14 UTC from IEEE Xplore. Restrictions apply.

Fig. 6. OpenStreetMap [26] dataset of GPS traces intersecting a bounding box around a highway crossing. We display the discretization of those trajectories traveling between the indicated gray regions as well as the complex DCr(X, Y ), r = 0.000109. Note that some of the scattered points in the complex are due to GPS datapoints of other trajectories in the bounding box which did not travel between the shaded regions.

Fig. 5. The top ﬁgure displays all 15 found clusters at r = 0.0002, while the middle row illustrates two classes in isolation. Note how much variation these classes exhibit - yet they are distinguishable by the ’hard environment constraint’ posed by the small southern island that they pass in a distinct manner. The bottom right displays a single linkage clustering by discrete Fre´chet distance at distance 0.055, yielding 7 completely environment agnostic clusters. The bottom right ﬁgure shows the classiﬁcation using our method at a higher ﬁltration value of r = 0.01, where the smaller islands have been covered by simplices, resulting in only 3 trajectory classes at that ﬁltration level.
as these methods do not incorporate such information. The Fre´chet clustering implementation took 57.7 minutes and required approximately 5.8GB memory, while our approach took a total of less than 30s and less than 300M B memory. While the 2D ﬁltration and persistence diagram computation can require worse than linear time in the number of samples |X| [12], recall that |X| was independent of the number of trajectories in our experiment. Asymptotically, the topological clustering hence requires only constant memory and time per discretized trajectory. As a result, the topological clusters can be computed in linear time in the number of discretized input trajectories for a ﬁxed simplicial representation.
A. Application to highway trafﬁc analysis We now focus on a trafﬁc analysis problem, where we
assume that we are not given any road/land classiﬁcation data but only the trajectories themselves. We consider the set of 1685 GPS traces of cars driving across a highway crossing next to Frankfurt airport, obtained from OpenStreetMap

Fig. 7. Subset of 45 traces of pedestrian data from [2]. On the right, we display the resulting classiﬁcation based on the probabilistic collision model shown on the left (in color) and at ﬁltration value of r = 0.59.
[26]. The dataset contains 60987 GPS points X and we furthermore select the subset of 177 trajectories that start and end in the shaded regions shown in Fig. 6. Using only X, and the subset Y of points in the shaded regions, we construct DCr(X, Y ), displayed in Fig. 6, for r = 0.000109 and map the trajectories to edge-paths as before. Note that in this construction |X|, and hence the asymptotic complexity of our clustering approach (construction of DCr(X, Y ) and persistence computation), is dependent on the size of the trajectory dataset, but one could introduce a ﬁxed discretization of the data as before to bound |X| by a constant. Classifying the trajectories using our approach, we obtain 24 trajectory classes as color-coded in Fig. 1. Some of these classes are separately displayed in the bottom part of that ﬁgure. As is visible in the ﬁgure, we are able to separate driver behaviors with our approach - note for example the clover leaf trajectory class, where a driver crossed several bridges before continuing along the same driving direction.
B. Incorporation of probability densities In this experiment, we illustrate the use of a probabilistic
model in conjunction with our approach. Consider the indoor scene in Fig. 7. We would like to model the behavior of pedestrians in this space using a dataset of 197 trajectories with 26029 datapoints X ⊂ R2 from [2]. We extract 45 trajectories traversing between the shaded regions, displayed

22

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on September 09,2022 at 05:17:14 UTC from IEEE Xplore. Restrictions apply.

in black on the left. Besides these trajectories, we consider a Gaussian Mixture Model M , modeling the positions of potential collision threats in this space (shown in color). We construct a simplicial complex ﬁltration P (X, Y ) starting with the sub-complex A(Y ) ⊂ D(X) at ﬁltration zero, as before, but inserting simplices σ = [v0, . . . , vk] of D(X) in order of f (σ) = maxki=0 p(vi), where p : R2 → R denotes the probability density of the mixture model. The ﬁrst persistence diagram for this ﬁltration has three large persistence intervals: one corresponding to each mode of p, with the middle Gaussian resulting in the global maximum of p. All displayed trajectories have vertices lying in the complex Pr(X, Y ), for r = 0.5. At r = 0.59, we obtain 4 trajectory classes as indicated in the right ﬁgure, but as r increases these classes start to merge, starting with the red and black classes which are separated by a rather weak mode of p. Our classiﬁcation scheme in this case hence allows us to understand the movement of pedestrians relative to the superlevel sets of a mixture model.
V. CONCLUSIONS We have proposed a novel topological trajectory clustering approach and have focused on experiments with car, ship and pedestrian data in 2D, showing that our approach can extract interesting motion classes from large real-world trajectory datasets. In future work, we would like to investigate higher dimensional trajectory data and are interested in studying the interplay between topological clustering and policy learning in particular. We are intending to make the topological tools developed for this work available (see www.csc.kth.se/˜fpokorny). A list of related papers and software will also be maintained at the ICRA 2016 Workshop on Emerging Topological Techniques in Robotics website: www.csc.kth.se/icra2016topology/.
VI. ACKNOWLEDGEMENTS
This research is supported in part by the Knut and Alice Wallenberg Foundation, the EU grant FLEXBOT (FP7-ERC-279933), the NSF CISE Expeditions Award CCF-1139158, DOE Award SN10040 DE-SC0012463, and DARPA XData Award FA8750-122-0331, and gifts from Amazon Web Services, Google, IBM, SAP, The Thomas and Stacey Siebel Foundation, Adatao, Adobe, Apple Inc., Blue Goji, Bosch, Cisco, Cray, Cloudera, Ericsson, Facebook, Fujitsu, Guavus, HP, Huawei, Intel, Microsoft, Pivotal, Samsung, Schlumberger, Splunk, State Farm, Virdata and VMware.
REFERENCES
[1] B. D. Argall, S. Chernova, M. Veloso, and B. Browning, “A survey of robot learning from demonstration,” Robotics and autonomous systems, vol. 57, no. 5, pp. 469–483, 2009.
[2] B. Fisher, “Edinburgh informatics forum pedestrian database,” http: //homepages.inf.ed.ac.uk/rbf/FORUMTRACKING/, 2015.
[3] U. Bauer and H. Edelsbrunner, “The morse theory of Cˇ ech and Delaunay ﬁltrations,” in Proc. of the Thirtieth Annual Symp. on Comp. Geometry, ser. SOCG’14. New York, NY, USA: ACM, 2014, pp. 484:484–484:490.
[4] U. Bauer, M. Kerber, and J. Reininghaus, “PHAT (Persistent Homology Algorithm Toolbox),” http://code.google.com/p/phat/.
[5] A. Billard, S. Calinon, R. Dillmann, and S. Schaal, “Robot programming by demonstration,” in Springer handbook of robotics. Springer, 2008, pp. 1371–1394.

[6] L. Brun, A. Saggese, and M. Vento, “A clustering algorithm of trajectories for behaviour understanding based on string kernels,” in
Eighth Int. Conf. on Signal Image Technology and Internet Based Systems (SITIS). IEEE, 2012, pp. 267–274. [7] K. Buchin, M. Buchin, J. Gudmundsson, M. Lo¨fﬂer, and J. Luo, “Detecting commuting patterns by clustering subtrajectories,” Int. Journal of Computational Geometry & Applications, vol. 21, no. 03, pp. 253–282, 2011. [8] G. Carlsson, “Topology and data,” Bull. Amer. Math. Soc. (N.S.), vol. 46, no. 2, pp. 255–308, 2009. [9] CMU Graphics Lab, “CMU graphics lab motion capture database,” http://mocap.cs.cmu.edu/, 2015. [10] D. Cohen-Steiner, H. Edelsbrunner, and D. Morozov, “Vines and vineyards by updating persistence in linear time,” in Proc. of the twenty-second annual symposium on Computational geometry. ACM, 2006, pp. 119–126. [11] V. De Silva, D. Morozov, and M. Vejdemo-Johansson, “Dualities in persistent (co) homology,” Inverse Problems, vol. 27, no. 12, p. 124003, 2011. [12] H. Edelsbrunner and J. Harer, “Persistent homology-a survey,” Contemporary mathematics, vol. 453, pp. 257–282, 2008. [13] H. Edelsbrunner and J. L. Harer, Computational topology: an introduction. AMS Bookstore, 2010. [14] A. Fod, M. J. Mataric´, and O. C. Jenkins, “Automated derivation of primitives for movement classiﬁcation,” Autonomous robots, vol. 12, no. 1, pp. 39–54, 2002. [15] S. Gaffney and P. Smyth, “Trajectory clustering with mixtures of regression models,” in Proc. of the ﬁfth ACM SIGKDD Int. Conf. on Knowledge Discovery and Data Mining. ACM, 1999, pp. 63–72. [16] A. Hatcher, Algebraic topology. Cambridge: Cambridge University Press, 2002. [17] ICML, “Workshop: Topological methods for machine learning,” 2014. [18] O. C. Jenkins and M. Mataric, “Automated derivation of behavior vocabularies for autonomous humanoid motion,” in Proceedings of
the Second International Joint Conference on Autonomous Agents and Multiagent Systems. ACM, 2003, pp. 225–232. [19] B. Kehoe, S. Patil, P. Abbeel, and K. Goldberg, “A survey of research on cloud robotics and automation,” Automation Science and Engineering, IEEE Transactions on, vol. 12, no. 2, pp. 398–409, 2015. [20] K. Kihwan, L. Dongryeol, and E. Irfan, “Gaussian process regression ﬂow for analysis of motion trajectories,” in IEEE ICCV. IEEE Computer Society, November 2011. [21] R. A. Knepper, S. S. Srinivasa, and M. T. Mason, “Toward a deeper understanding of motion alternatives via an equivalence relation on local paths,” Int. Journal of Robotics Research, vol. 31, no. 2, pp. 167–186, 2012. [22] J.-G. Lee, J. Han, and K.-Y. Whang, “Trajectory clustering: a partitionand-group framework,” in Proceedings of the 2007 ACM SIGMOD int. conf. on Management of data. ACM, 2007, pp. 593–604. [23] MarineTrafﬁc, http://marinetrafﬁc.com/, 2014. [24] N. Nguyen, D. Phung, S. Venkatesh, and H. Bui, “Learning and detecting activities from movement trajectories using the hierarchical hidden markov model,” in CVPR 2005, vol. 2. IEEE, 2005, pp. 955–960. [25] NIPS, “Workshop: Algebraic topology and machine learning,” 2012. [26] OpenStreetMap, http://www.openstreetmap.org, 2015. [27] P. Pastor, H. Hoffmann, T. Asfour, and S. Schaal, “Learning and generalization of motor skills by learning from demonstration,” in Robotics and Automation, 2009. ICRA’09. IEEE International Conference on. IEEE, 2009, pp. 763–768. [28] C. Piciarelli, C. Micheloni, and G. L. Foresti, “Trajectory-based anomalous event detection,” Circuits and Systems for Video Technology, IEEE Trans., vol. 18, no. 11, pp. 1544–1554, 2008. [29] F. T. Pokorny, M. Hawasly, and S. Ramamoorthy, “Multiscale topological trajectory classiﬁcation with persistent homology,” in Proceedings of Robotics: Science and Systems, Berkeley, USA, July 2014. [30] ——, “Topological trajectory classiﬁcation with ﬁltrations of simplicial complexes and persistent homology,” International Journal of Robotics Research, 2015. [31] C. Saunders, D. R. Hardoon, J. Shawe-Taylor, and G. Widmer, “Using string kernels to identify famous performers from their playing style,” in Machine Learning: ECML 2004. Springer, 2004, pp. 384–395. [32] H. Wang, A. Klaser, C. Schmid, and C.-L. Liu, “Action recognition by dense trajectories,” in CVPR. IEEE, 2011, pp. 3169–3176. [33] Y. Zheng and X. Zhou, Computing with spatial trajectories. Springer, 2011.

23

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on September 09,2022 at 05:17:14 UTC from IEEE Xplore. Restrictions apply.

