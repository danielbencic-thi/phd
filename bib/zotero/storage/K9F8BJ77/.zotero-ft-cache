Topological Motion Planning
Subhrajit Bhattacharya
University of Pennsylvania

Topological Motion Planning?

‚óè Motion planning (planning a set of actions

that achieves a specific objective) is

fundamental to autonomy:

‚Äì An efficient, versatile and effective method

in motion planning is graph search based motion planning.

Graph search-based planning
[A*: Hart, et al.; D* Stenz et al; RRT: Lavalle]

‚óè Topology attempts to re-incorporate those richer

information that a discrete graph representations

(a 1-dimensional entity) fails to capture.

Simplicial complex

‚óè Many specifications of goal/obective in motion

[Derenick, et al.; Ghrist et al;]

planning can be formally described using the

language of topology.

‚óè Locally computed topological quantities can be used (reliably integrated) to provide global guarantees.

‚óè Topological methods do not rely on precise metric information (robust to errors).

Topological Trajectory Planning
[Bhattacharya, et al.]

‚Äúgo to the left of an obstacle‚Äù vs. ‚Äúgo to the right of an obstacle‚Äù

Outline
‚óè Topological Trajectory Planning and its Applications
‚óè Dimensionality Reduction using Topological Abstraction
‚óè Sensor Coverage of Unknown, GPSdenied Environments using Robot Swarms
‚óè Simplicial Search Algorithms

Outline
‚óè Topological Trajectory Planning and its Applications
‚óè Dimensionality Reduction using Topological Abstraction
‚óè Sensor Coverage of Unknown, GPSdenied Environments using Robot Swarms
‚óè Simplicial Search Algorithms

Topological Trajectory Planning:

Motivation

Optimal Trajectory Planning for Systems with Cable:

Tasks requiring Topological Reasoning and Multi-agent exploration:

Deep Horizon Oil Spill Cleanup Operation:

Tethered robot:

qs
C
i
O2

O1 O3

qg
œÑ O4

O5

O6

W

qb Base

[Mellinger, Michael, Kumar, IJRR 2012]
Multi-agents search/ exploration in a partially-known environment:

Topological Classes of Trajectories
In ‚Ñù2 - O:

goal We would like to be able to:
1. Make distinction between the different topological classes of trajectories.

2. Exploit that information for optimal trajectory planning in different topological classes.

3. Apply that to solving real

start

problems in robotics.

In ‚Ñù3 - O:

goal

goal

goal start

start

start

6
start goal

Related Work

‚óè Cell-decomposition (e.g., Voronoi decomposition, Delaunay triangulation) and Semi-algebraic Description of Environments:
[Demyen, Buro, AAAI, 2006; Hershberger, Snoeyink, JCGTA, 1991; Grigoriev, Slissenko, ISSAC, 1998; Schmitzberger, Bouchet, Dufaut, Wolf, Husson, ICIRS, 2002.]

‚Äì Often construction is difficult / expensive, especially for a environment presented as an occupancy-grid.

‚Äì If not carefully constructed (e.g., arbitrary triangulation), the classification may not be one-to-one.

‚Äì While possible to classify given trajectories, the representation is not best suited for search-based optimal path planning.

‚óè Simplicial Complex Representation and Persistence Homology:
[Pokorny, Hawasly, Ramamoorthy, RSS, 2014;]

‚Äì Requires only a simplicial description of the free space (without an embedding)

‚Äì Well-suited for classifying given trajectories in different homology classes.

‚Äì Recent developments in computational cohomology on simplicial complex allows construction of topological invarants [Pokorny, et. al, RSS, 2015].

‚óè Topological Invariant (can be used in conjunction with graph search):

‚Äì Simple construction

‚Äì Ideal for graph search-based optimal motion planning for finding optimal paths in

different homology classes.

7

‚Äì Suitable for both homology and homotopy path planning.

Homotopy and Homology

p2

goal

start

dx dy
dŒ∏1

dŒ∏2
p1

(x1, y1)

(x2, y2)
p4 p3

Homotopy:

(computationally difficult in dim.>2)

p1 ~ p2 ~ p3 ~ p4

Homology: (computationally favorable)

p1 ~ p2 ~ p3 ~ p4

œÑ1 and œÑ2 homologous,

p1 and p2 belong to same homotopy class

but not homotopic.

‚áí they belong to same homology class.

Converse is not necessarily true!

Homology invariant, H(pi): Key concept: Find a set of linearly independent

H(œÑ) =
(H-signature of œÑ)

‚à´ Œæ1 Œæ2 œÑ.

closed, non-exact differential 1-forms which forms

(e.g.,

a basis for the de Rham cohomology group,

Œæ1 = dŒ∏i)

H1dR(RN‚ÄìO): Œæ1, Œæ2, ‚Ä¶ ‚àà Ker(d1)

[Bhattacharya, Likhachev, Kumar. 2012, AURO 33(3)] [Bhattacharya, Lipsky, Ghrist, Kumar. 2013, AMAI 67(3-4)]

‚àâ Img(d0)

Homotopy

inv.ariant, .

h(pi),

in

2-dimensions:

Key concept: Words constructed

a

[blTeoytvtaterr,rasCcobihnaegns,aeLdatVroaalnljee,crWatoAyFrsyRc,ar2no00sd8s]iendse. rtinhg(œÑ1h) (=œÑ)‚Äú=b‚Äúab-1

b-1 b ‚Äù ‚â†

a a-1 ‚Äù = ‚Äú b ‚Äù h(œÑ2) = ‚Äú a-1 b

‚Äù

[Narayanan, Vernaza, Likhachev, LaValle, ICRA, 2013]

[Bhattacharya, Kim, Heidarsson, Sukhatme, Kumar. IJRR, 2014]

[Bhattacharya, Ghrist, IMAMR, 2015.]

goal
+

b
+ +
œÑœÑ1 œÑ start
2

Use in Graph Search

H-augmented graph construction (Illustration in cyllindrically discretized 2-D env.):

H(vstart‚Üív2) = H(vstart‚Üív1) + H(e)

Original graph, G
Vertices: v

Parent
node v1

v2

e

Child node

vgoal

vstart

H-augmented graph, GH
Vertices: {v, [Œ∏]}

{vgoal, [Œ∏]}

{vstart, [0]}

vstart
In 2D (homology & homotopy):
vgoal

obstacle
Graph search algorithm
In 3D: X-Y-Z config
(homology) space: X-Y-Time config space:

{vgoal, [2œÄ-Œ∏]}
In 4D: (homology)
X-Y-Z-Time config space:

vstart

9

Application 1
Topological Exploration
Group of robot splitting based on the available topological classes in the environment:

ROS simulation of topological exploration of an unknown
environment using 8 robots.

Single-robot experiment
‚óè Scarab mobile robot platform (differential drive, laser range sensors)
‚óè Visual odometry localization module

10
[Kim, Bhattacharya, Ghrist, Kumar. IROS, 2013]

Application 2
Human-Robot Collaborative Topological Exploration for Search and Rescue Mission
‚óè Heterogeneous team of humans and robots need to explore an environment for search & rescue missions.
‚óè Human(s) chooses trajectories at their discretion.
‚óè Robots need to adapt and choose complementary topological classes to maximize exploration / clearing.
11
[Govindarajan, Bhattacharya, Kumar, DARS'14, Best paper award nomination!]

Application 3: Object Separation Using Cable

Problem definition:

Separating configuration

Motivation:

Basic idea:
1. Mathematically describe a ‚Äúseparating configuration‚Äù (identified by its homology class). 2. Find optimal trajectories in the right homotopy classes leading to a separating configuration.

Dynamic sim.:

Field experiment in collaboration with USC.:

[Bhattacharya, Kim, Heidarsson, Sukhatme, Kumar. IJRR, 2014]

Application 4: Planning for a Tethered Robot

Problem definition:

o2 o5 o1

o3

o6 o4

Method: Perform search in h-augmented graph

Results: 300x200 env.

Initial config.

Dynamic simulation:

target

base

Cable length:350 disc. units

Cable length: 450 disc. units

13 [Kim, Bhattacharya, Kumar, ICRA'14 ]

Other Applications
‚óè Highway Vehicle Navigation (homotopic consideration in changing lanes and passing vehicles).
[Park, Karumanchi, Iagnemma, T-RO, 2015.]
‚óè Conflict minimization in multi-robot motion planning.
[Kimmel, Bekris, 2012]
‚óè Smooth optimal trajectory planning in different topological classes using QP and MIQP frameworks
[Kim, Sreenath, Bhattacharya, Kumar, CDC, 2012; Kim, Sreenath, Bhattacharya, Kumar, ARK, 2012; Sikang Liu, Watterson, Bhattacharya, Kumar (under preparation).]

A Persistent Homology Approach to Topological Path Planning in Uncertainties

Probability map, P
goal

How to do path planning given a probability map?
- threshold? At what value?

start

We consider for different value of Œµ, and how the homology classes of trajectories join and split.

Œµ

Œµ

[Bhattacharya, Ghrist, Kumar. T-RO, 31(3), 578-590, 2014]

Œ≥3

‚Ñ§2 coefficients (homology)

O

qg

Œ≥2

Œ≥1

qs Ì†µ(Œ≥1) = 2œÄ . 1

Ì†µ(Œ≥2) = 2œÄ . 2

œÑ2 œÑ3
œÑ1

(Aqg,dhIvd+en1ati)f ntage in graph

(qg, (h+1) mod 2)

[œÑ ] ‚àæ [œÑ ] ‚âÅ [œÑ ] search- based planning: y

(q , h) g /glue

qs

Identify

Identify /glue
(qs, 0)

1 /glue

3

2

IyE‚Äúd(/elgqnolultgieif,mohp-i1n‚Äù) aatreoutrnadjeocbtosrtiaecslethsIa.d/egntlutiefy (qg, h mod 2)

Ì†µ(Œ≥3) = 2œÄ . 3

(qs, 0)

goal
a-
+

Homotopy Invariants in 3D

b
+ +
œÑ

Rays replaced by nonintersecting surfaces satisfying certain properties.
Can't find such surfaces for knotted/linked obstacles.

start

Recall: Homotopy invariants in 2D

h(œÑ1) = ‚Äú b b-1 b a a-1 ‚Äù = ‚Äú b ‚Äù

TriNveiaeldlotoopms acapnthheasveewnoornd-semtopitdyewntoiXtryd=s(:emÌ†µ3p-tyOword)

16

[Bhattacharya, Ghrist, IMAMR, 2015]

‚Äì Quotient group

/ N

Outline
‚óè Topological Trajectory Planning and its Applications
‚óè Dimensionality Reduction using Topological Abstraction
‚óè Sensor Coverage of Unknown, GPSdenied Environments using Robot Swarms
‚óè Simplicial Search Algorithms

Abstraction / Dimensionality Reduction using Topology
What we have done so far is topological abstraction
‚Äì We reduced the infinite dimensional & continuous path/curve space into a finitedimensional, searchable space
‚Äì Involved classification of (the highdimensional configuration space) paths based on homotopy/homology classes (topological invariants).

Configuration Spaces of Robot Arms (finite, but high dimensional)

Objectives
‚óè Take end-effector to a desired target location ‚óè Optimization of trajectory of end-effector
(e.g., its length) (We do not care where the rest of the arm is, as long as it does not intersect an obstacle!)

Challenges: (High-dimensional configuration space)

‚óè Randomized search in configuration space gives
suboptimal solution.
‚óè Planning trajectory in end-effector space does not guarantee traversability / algorithmic completeness.
‚óè Not sufficient to consider only the homotopy classes of arm configuration in the end-effector space (e.g., 4-bar
linkage violating Grashof criterion).

Low-dimensional Sub-sampling of Configuration Space

Schematic:
Constrained configuration space

f
(forward kinematics)

start ??

IK
r,b,g
r,b

r

b

goal

r,b

Full n-D configuration space (joint angle space ‚Äì assume
path-connected)

End-effector space

Approach: Construct an explicit description of the Reeb graph of the FK function g as k-tuple of inverse kinematics (IK) functions.
(closed-form solution for planar arm in absence of obstacles)

‚óè Construct the Reeb graph of the FK function
(given a fixed end-effector pos. sample a configuration from each connected component of preimage)
‚óè Find path from the start configuration to a preimage of the goal end-effector pos. in the Reeb graph.
(Guarantee: A path in the Reeb graph exists if and only if a path exists in the configuration space between the start configuration and the pre-image of goal end-effector positions (and there is a natural projection map).)

Base
[Bhattacharya, Pivtoraiko, Acta Applicandae Mathematicae, 139(1):133-166, 2015.]

Topological Abstraction for Motion Planning in Pursuit-Evasion Problems

ÔÄø

ÔÄø

‚àö

. . .

. . .

. . .

ÔÄø

ÔÄø

ÔÄø

ÔÄø

‚àö

‚àö

Contamination state remains the same (maps to the same abstract state)
Topological invariant: Connected components of the evader space and their contamination state (can be formulated as zero-th (co)homology of a sheaf).
Sheaf theory allows us to place/attach additional data on a topological space.

[Ramaithitima (Tee), Srivastava, Bhattacharya, Speranzon, Kumar, (under preparation)]

Outline
‚óè Topological Trajectory Planning and its Applications
‚óè Dimensionality Reduction using Topological Abstraction
‚óè Sensor Coverage of Unknown, GPSdenied Environments using Robot Swarms
‚óè Simplicial Search Algorithms

Topological Representation 22

An n-simplex for every

‚óè Requires only local connectivity

(n+1)-tuple of sensors that data for construction.

are pair-wise neighbors.

‚óè Sensor model:

The Rips Complex

Local connectivity and noisy bearing
measurement

Touch sensor with coarse directionality

‚óè Gives a faithful representation of sensor coverage

[Derenick, Kumar, Jadbabaie, ICRA, 2010] [de Silva, Ghrist, IJRR, 2006]
Rips Complex has been used to detect holes, but little research in controlling mobile sensors to attain coverage.

‚óè Can be used to detect holes in sensor coverage.
‚óè Very limited work in literature on actually controlling the mobile sensors.

Overall Algorithm

23

Step 1: Identify a robot on the frontier subcomplex
(closest to source in hop counts) for next deployment.

Step 2: Find a new location

Step 3: ‚ÄúPush‚Äù robots

outside the frontier (in the local

along the path using

coordinate of the frontier robot), bearing-only controller

and identify shortest path through using other robots as

graph for robot deployment.

landmarks.

Visual Homing (Bearing-only) Control for Robot Navigation
‚Ä¢ Control velocity computed using
o Bearing to landmarks (neighbors), o Desired home/goal location in local coordinates, o Landmarks can be moving.

[R. Tron and K. Daniilidis. Technical report on Optimization-

,

Based Bearing-Only Visual Homing with Applications to a 2-D

Unicycle Model. ArXiv e-prints, February 2014.]

Simulation and Experiment

24

ROS Simulation:
‚Ä¢ ROS + Stage simulation ‚Äì running
on a 8-core Intel processor ‚Ä¢ Non-holonomic robots ‚Ä¢ Single source (at the entrance to the
environment), unending supply of
robots.

Experiment with Real-Virtual Robots:
‚Ä¢ Heterogeneous team of live (green) and
virtual (red) robots. ‚Ä¢ New paradigm in demonstrating swarm
algorithms using limited number of live
robots. ‚Ä¢ Feedback loop between simulated robots,
live robots and simulated version of live

robots for coherent working of real & virtual

robots.

[Ramaithitima (Tee), Whitzer (Mickey), Bhattacharya, Kumar, ICRA 2015]

Applications

25

In unknown, GPS-denied environments, with limited sensing:

‚Ä¢ Coarse Topological Mapping

‚Ä¢ Topological Localization and Capture of Evaders

‚Ä¢ Persistent Surveillance

‚Ä¢ Establishment of Landmarks for Topological Landmark-based Navigation.
[R. Ghrist, D. Lipsky, J. Derenick, and A. Speranzon, ‚ÄúTopological landmarkbased navigation and mapping‚Äù, electronic pre-print, 2012.].

Outline
‚óè Topological Trajectory Planning and its Applications
‚óè Dimensionality Reduction using Topological Abstraction
‚óè Sensor Coverage of Unknown, GPSdenied Environments using Robot Swarms
‚óè Simplicial Search Algorithms

Search Algorithm For Simplicial Complexes

Dijkstra's search:

Vertex ‚Äúexpansion‚Äù:

Potential parent

Child being expanded

S* search:

Paths are restricted to graph Consequence:

. . .
Potential parent
Included higherdimensional simplices

Paths can lie in a simplicial
complex (a Rips complex of the given graph)

Path reconstruction: Under progress.

Conclusion
Topology helps capture richer (and meaningful/relevant) information about a system/configuration space (using topological invariants and representations), while keeping the problem tractable. Purely graph-based
approaches alone fail to achieve this.
Thank you! Questions?

Acknowledgements

Collaborators

Past and Present Supervisors
Prof. Vijay Kumar (U. Penn) Prof. Robert Ghrist (U. Penn) Prof. Maxim Likhachev (CMU)
Collaborators at USC
Prof. Gaurav Sukhatme Hordur K. Heidarsson
Collaborators at Drexel University
Prof. M. Ani Hsieh Dhanushka Kularatne

Graduate/Undergraduate Students and Postdoctoral Collaborators at U. Penn
Dr. David Lipsky Dr. Mihail Pivtoraiko Dr. Koushil Sreenath (presently at CMU)
Soonkyum Kim Vijay Govindarajan Rattanachai Ramaithitima (Tee)
Mickey Whitzer Luis Guerrero Denise Wong Edward Steager

Funding (Past and Present)

ONR:
Antidote MURI grant# N00014-09-1-1031, Grant# N00014-08-1-0696
Grant# N00014-07-1-0829

NSF grant# N00014IIP-0742304. AFOSR grant# FA9550-10-1-0567
ARL grant# W911NF-10-2-0016

Grant# N00014-09-1-1052;

Grant# N00014-14-1-0510

