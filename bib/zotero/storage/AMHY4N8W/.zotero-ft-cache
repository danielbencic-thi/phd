A new genetic algorithm approach to smooth path planning for mobile robots
Baoye Song College of Electrical Engineering and Automation, Shandong University of Science and Technology, Qingdao, China
Zidong Wang College of Electrical Engineering and Automation, Shandong University of Science and Technology, Qingdao, China and
Department of Computer Science, Brunel University London, Uxbridge, Middlesex, UK, and
Li Sheng College of Information and Control Engineering, China University of Petroleum (East China), Qingdao, China
Abstract Purpose – The purpose of this paper is to consider the smooth path planning problem for a mobile robot based on the genetic algorithm (GA) and the Bezier curve. Design/methodology/approach – The workspace of a mobile robot is described by a new grid-based representation that facilitates the operations of the adopted GA. The chromosome of the GA is composed of a sequence of binary numbered grids (i.e. control points of the Bezier curve). Ordinary genetic operators including crossover and mutation are used to search the optimum chromosome where the optimization criterion is the length of a piecewise collision-free Bezier curve path determined by the control points. Findings – This paper has proposed a new smooth path planning for a mobile robot by resorting to the GA and the Bezier curve. A new grid-based representation of the workspace has been presented, which makes it convenient to perform operations in the GA. The GA has been used to search the optimum control points that determine the Bezier curve-based smooth path. The effectiveness of the proposed approach has been veriﬁed by a numerical experiment, and some performances of the obtained method have also been analyzed. Research limitations/implications – There still remain many interesting topics, for example, how to solve the speciﬁc smooth path planning problem by using the GA and how to promote the computational efﬁciency in the more grids case. These issues deserve further research. Originality/value – The purpose of this paper is to improve the existing results by making the following three distinctive contributions: a rigorous mathematical formulation of the path planning optimization problem is formulated; a general grid-based representation (2n ϫ 2n) is proposed to describe the workspace of the mobile robots to facilitate the implementation of the GA where n is chosen according to the trade-off between the accuracy and the computational burden; and the control points of the Bezier curve are directly linked to the optimization criteria so that the generated paths are guaranteed to be optimal without any need for smoothing afterwards.
Keywords Robotics, Genetic algorithms
Paper type Research paper

1. Introduction
With the rapid development of modern industry, mobile robots have been widely used in a wide range of applications such as manufacturing, assembly, logistics and transportation (Li et al., 2015; Robinson et al., 2015). The path planning is one of the most important topics in mobile robotics whose objective is to ﬁnd a feasible and optimal path from a start position to a target position. A path is said to be “feasible” and “optimal” if the mobile robot moving along it could avoid collisions with obstacles and also satisfy certain optimal criteria. In other words, the path planning can be considered as an optimization problem on certain indices (e.g. shortest
The current issue and full text archive of this journal is available on Emerald Insight at: www.emeraldinsight.com/0144-5154.htm
Assembly Automation 36/2 (2016) 138 –145 © Emerald Group Publishing Limited [ISSN 0144-5154] [DOI 10.1108/AA-11-2015-094]

distance) under certain constraints (e.g. collision-free route). As shown in Manikas et al. (2007), the path planning problem of a mobile robot is an non-deterministic polynomial (NP)-hard optimization one that can only be solved by heuristic algorithms such as evolutionary computation techniques. Among various algorithms capable of handling NP-hard problems, the genetic algorithm (GA) has proven to be the simple yet effective one that has been frequently used in industry especially in mobile robotics (Manikas et al., 2007).
Recently, a variety of GA-based approaches have been developed for the mobile robot path planning problems (Pol and Murgugan, 2015). A problem-speciﬁc GA for the path planning of a mobile robot has been proposed in Hu and Yang (2004) that incorporates the domain knowledge into its
This work was supported in part by the Research Fund for the Taishan Scholar Project of Shandong Province of China and the Higher Educational Science and Technology Program of Shandong Province of China under Grant J14LN34.
Received 18 November 2015 Revised 12 December 2015 Accepted 20 December 2015

138

Genetic algorithm approach to smooth path planning
Baoye Song, Zidong Wang and Li Sheng
specialized operators. A new mutation operator has been presented in Tuncer and Yildirim (2012) for the GA and applied to the path planning problem of mobile robots in dynamic environments. In addition to the ordinary crossover, another new mutation operator has been developed in Naderan-Tahan and Manzuri-Shalmani (2009) as a subset of mutation to manipulate an individual. A vibrational GA has been put forward in Pehlivanoglu et al. (2007) to reduce the possibility of premature convergence and therefore help the candidate solution to reach the global optimum. A parallel elite GA has been proposed in Tsai et al. (2011) along with a migration operator to maintain better population diversity, avoid premature convergence and keep parallelism in comparison with the conventional GA.
In almost all aforementioned literature, the GA-based path planning approaches have been concerned with the issue of planning a feasible path with certain simple optimal criterion (e.g. the minimum length of the path). Actually, a collision-free shortest path is often not sufﬁcient for the planed movement of a mobile robot. For example, it is quite common that a traditional path planning algorithm gives rise to a path that contains some polygonal lines or even sharp turns. When moving along the polygonal lines, a mobile robot would have to switch between different modes (e.g. stop, rotate and restart) frequently, and such a switching process is both timeand energy-consuming. Such undesirable switches are even impermissible when the smoothness of the movement is a requirement for some service tasks (Zhou et al., 2011). Therefore, in addition to the distances, some other optimization criteria should be included such as the path smoothness, energy evaluation, time consumption and robot speed (see (Mahjoubi et al., 2006; Wang et al., 2007; Yuan et al., 2007 for more details). Note that, apart from the length of the path, the path smoothness has been considered to be another important criterion because the smoothness is a closely related to other optimization criteria (Castillo et al., 2007).
In recent years, the Bezier curve has been increasingly applied in the smooth path planning problems (Arana-Daniel, N., Gallegos, A.A., Lopez-Franco, C. and Alanis, A.Y., 2014; Neto et al., 2010; Song et al., 2010). For example, a Bezier-curve-based approach has been proposed in Jolly et al. (2009) for the path planning of a mobile robot in a multi-agent robot soccer system which is compatible with the velocity and acceleration limits. A collision-free curvature-bounded smooth path planning technique has been presented in Ho and Liu (2009) whose idea is to divide the nodes on the piecewise linear path into control point subsequences so as to generate a collision-free composite Bezier curve under the curvature constraint. A new cooperative collision-avoidance method has been developed in Skrjanc and Klancar (2010) for multiple and non-holonomic robots based on the Bernstein– Bezier curves, and a model-predictive trajectory tracking algorithm has been used to drive the robots on the obtained reference paths. To form a smooth path based on the path points, the Bezier curve and other parameter curves are usually produced by the Voronoi diagram, the Dijkstra algorithm, the A‫ ء‬algorithm, the D‫ ء‬algorithm, etc.
To date, some scattered results have been available in literature on the smooth path planning problem of mobile

Assembly Automation Volume 36 · Number 2 · 2016 · 138 –145
robots or multi-agent systems by combining the heuristic intelligent optimization algorithm (e.g. GA) with the path smoothing approach (e.g. Bezier curve). For example, in Yang et al. (2008), the path planning algorithm has been developed for obstacle avoidance problems of mobile robots by adopting the Bezier curve based on the GA, but the general mathematical description of the optimal path planning problems as well as the representation issue of the workspace have not been thoroughly discussed, and this makes it inconvenient to implement the GA in practice. In Sahingoz (2014), the Bezier curve-based ﬂyable trajectories have been generated for multi-unmanned aerial vehicle (UAV) systems with parallel GA where the Bezier curve has been used for smoothing the obtained path and, as such, it is difﬁcult to guarantee the optimality of the eventually planned path. The purpose of this paper is to improve the existing results by making the following three distinctive contributions: 1 a rigorous mathematical formulation of the path planning
optimization problem is formulated; 2 a general grid-based representation (2n ϫ 2n grids) is
proposed to describe the workspace of the mobile robots to facilitate the implementation of the GA where n is chosen according to the trade-off between the accuracy and the computational burden; and 3 the control points of the Bezier curve are directly linked to the optimization criteria so that the generated paths are guaranteed to be optimal without any need for smoothing afterwards.
In this paper, a new approach is proposed to solve the smooth path planning problem of a mobile robot based on the GA and the Bezier curve. A new grid-based representation of the workspace is presented in this paper which simpliﬁes the population initialization, chromosome encoding and the genetic operators in existing literature (Tuncer and Yildirim, 2012). The workspace of a mobile robot is divided into several orderly numbered square grids, and the center of a grid is deﬁned as a candidate control point of a Bezier curve. A sequence of binary number represented control points, namely, the genes, represent a chromosome of GA, and ordinary genetic operators are used to search the optimal chromosome. The optimization criterion of the GA is the length of all piecewise collision-free Bezier curves determined by the control points. The numerical experiment results verify the effectiveness of the proposed smooth path planning approach.
The remainder of this paper is organized as follows. In Section 2, the Bezier curve is introduced and some preliminaries are brieﬂy outlined. In Section 3, the key stages of the smooth path planning approach are presented based on the GA. In Section 4, the effectiveness of the obtained results is illustrated by a simulation example and the expected performance is evaluated as well. Concluding remarks and future work are given in Section 5.
2. Preliminary of Bezier curve
The Bezier curve is contained within the convex hull of a sequence of control points. In this case, the Bezier curve is different from the traditional interpolation-based curves such as polynomials and cubic splines. The control points, which

139

Genetic algorithm approach to smooth path planning Baoye Song, Zidong Wang and Li Sheng

deﬁne the Bezier curve, are not on the curve except the start and end points. The high-order derivative continuity of the Bezier curve can guarantee the smooth variation of the curve between the start point and the end point.
Given a set of control point vectors P0, P1, · · ·, Pn, the corresponding Bezier curve is deﬁned as:

n

͚ P(t) ϭ Bin(t)Pi, 0 Յ t Յ 1,

(1)

iϭ0

where t is the normalized time variable, Bin͑t͒ is a Bernstein polynomial and Pi ϭ ͑xi, yi͒T stands for the coordinate vector of the ith control point with xi and yi being the components corresponding to the X and Y coordinate, respectively. The
Bernstein polynomial is the base function in the expression of
Bezier curve, which is deﬁned as:

ͩ ͪ Bin(t) ϭ

n i

ti(1 Ϫ t)nϪi,

i ϭ 0, 1, . . ., n.

(2)

The derivatives of a Bezier curve can also be determined by the control points. The ﬁrst derivative of a Bezier curve is expressed as:

nϪ1

͚ P˙ (t)

ϭ

dP(t) dt

ϭ

n

BinϪ1(t)(Piϩ1 Ϫ Pi)

(3)

iϭ0

and the higher-order derivative of a Bezier curve can be obtained by repeatedly using equation (3). For example, the second derivative of a Bezier curve is expressed as:

nϪ2
͚ P¨ (t) ϭ n(n Ϫ 1) BinϪ2(t)(P˙ iϩ2 Ϫ 2P˙ iϩ1 ϩ P˙ i). (4) iϭ0
Accordingly, in the two-dimensional plane, the curvature of a Bezier curve with respect to t can be represented as:

␬(t) ϭ 1 ϭ P˙ x(t)P¨ y(t) Ϫ P˙ y(t)P¨ x(t),

(5)

R(t)

(P˙ x2(t) ϩ P˙ y2(t))3/2

where R(t) is the radius of curvature, P˙ x͑t͒, P˙ y͑t͒, P¨ x͑t͒ and P¨ y͑t͒ are X and Y coordinate components of the ﬁrst and second derivatives of the Bezier curve P͑t͒, respectively.
In this paper, piecewise Bezier curves are connected to form a complete path in the smooth path planning of a mobile robot, where second- and lower-order continuities are considered for the smoothness of the path. The zero-order continuity (i.e. continuous position) is held by coincident end and start points of the connected Bezier curves. The ﬁrst-order continuity is ensured by equivalent tangent vectors at the connection of two curves, and the second-order continuity is ensured by equivalent curvatures. For simplicity, the curvature at the connection of two connected Bezier curves is usually set to zero, i.e. a few adjacent points of the connected Bezier curves are on the same line. Therefore, it is easy to satisfy the continuity requirements in most cases.

Assembly Automation Volume 36 · Number 2 · 2016 · 138 –145

3. Smooth path planning based on genetic algorithm
In this paper, the GA is combined with the Bezier curve for the smooth path planning of a mobile robot. The GA is applied to search the optimal control points which are used to deﬁne the smooth Bezier curve. The feasible and shortest Bezier curve path is the optimum solution for the smooth path planning problem of a mobile robot. Several key stages of the approach are presented in this section as follows.

3.1 A problem description In this paper, the working environment of a mobile robot is supposed to be a two-dimensional workspace. The proposed GA based smooth path planning is used to ﬁnd a feasible and optimal Bezier curve path for a mobile robot, which include three conditions: ﬁrst, the path should be collision-free; second, the smooth movement of a mobile robot should be considered by satisfying the second-order continuity of the path; and third, the path should be the shortest distance from a start point to a target point under the above two constraints. The formal expressions of above conditions are as follows:

min ࿣P(t)࿣, 0 Յ t Յ 1,

s.t.

P(t) ʦ C2,

(6)

P(t) ʦ Pfree,

where t is normalized time variable, ԽԽP͑t͒ԽԽ represents the length of
the Bezier curve path, C2 is a set of second-order differentiable function and Pfree indicates a set of collision-free path. As the Bezier curve is deﬁned by its control points, the above optimization problem is to ﬁnd a sequence of control points which determine the Bezier curve path under constraint conditions.

3.2 Representation of workspace The workspace is an environment where the mobile robot and obstacles both exist. The grid-based model is usually used to represent the workspace in the path planning of a mobile robot, as it is easy to calculate distances and represent obstacles. The boundary of obstacles is formed by their actual boundary plus minimum safety distance considering the size of a mobile robot, so that a mobile robot could be treated as a point in the workspace (Hu and Yang, 2004). The whole workspace is represented by orderly numbered grids, and the size of the grids determines how many numbers there is. For each grid, it is deﬁned to be either empty (i.e. the white square grid in the workspace) or occupied (i.e. the black square grid in the workspace), which depends on whether the boundary of obstacles is in the grid.
The whole workspace is divided into M ϫ N grids in this paper, where both M and N are positive integer power of Number 2. M could be equal to N or not in practice, because a workspace with M ϫ N grids could be treated as a workspace with M ϫ M grids and some of the grids are occupied. Figure 1(a) and (b) show a workspace with M ϫ M grids (M ϭ 16, N ϭ 16) and M ϫ N grids (M ϭ 15, N ϭ 16), respectively. This representation approach simpliﬁes the chromosome encoding and population initialization of GA. For example, if the workspace is divided into 10 ϫ 10 grids, then the numbers of the grids are from 0 to 99. Binary encoding is used for chromosome in this paper, and this

140

Genetic algorithm approach to smooth path planning Baoye Song, Zidong Wang and Li Sheng

Assembly Automation Volume 36 · Number 2 · 2016 · 138 –145

Figure 1 (a) The workspace with 16 ϫ 16 grids; (b) the workspace with 15 ϫ 16 grids


0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
(a)

240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
(b)

means a 7 bit binary number is necessary to represent one grid. However, some of the numbers (e.g. from 100 to 127) exceed all of the grid numbers in the workspace, so that additional process has to be added to check whether the randomly generated chromosomes (deﬁned in next section) are reasonable.
3.3 Chromosome encoding and population initialization A sequence of grid numbers is used to represent the chromosomes of the GA in this paper, and chromosomes are encoded by binary numbers for easier bit operations of genetic operators. Take the 160 ϫ 160 units workspace with 16 ϫ 16 grids (i.e. each grid is a 10 ϫ 10 units square) in Figure 2, for example, hereinafter, each grid is assigned a number between 0 and 255, which could be represented by a 8 bit binary number. All of the binary numbers are connected orderly to form a chromosome. This kind of chromosome encoding is suitable for both M ϫ M and M ϫ N grids. Moreover, genetic
Figure 2 The workspace of a mobile robot in this paper
240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15

operators will not bring unreasonable chromosome by using this approach because both crossover and mutation operators will keep a grid number in the chromosome between 0 and 255. This is another advantage of the workspace representation approach mentioned above.
All of the control points are deﬁned at the center of the grids in the workspace. The transformation from grid numbers to coordinate values is expressed as:

Px(t) ϭ (Number %16) ϫ 10 ϩ 5, Py(t) ϭ <Number/16= ϫ 10 ϩ 5,

(7)

where percentage indicates the complementation, <= denotes the rounding down, Px͑t͒ and Py͑t͒ are X and Y coordinate components of the center of the grid, respectively. On the other hand, the transformation from coordinate components of any point on the path to the number of a grid that contains the point is expressed as:

Number ϭ <Px(t)/10= ϩ <Py(t)/10= ϫ 16.

(8)

Considering the representation of the workspace and chromosome encoding approaches, it is very easy to implement the population initialization of the generic algorithm. For example, if a chromosome has n grid numbers, then the initialized population is a set of 8 ϫ n bit binary numbers.

3.4 Fitness function and selection method

The purpose of the GA-based smooth path planning in this

paper is to ﬁnd an optimal path under constraint conditions

[equation (6)]. The ﬁtness function is deﬁned as:

͚ͭ1 , n

࿣Pi(t)࿣

fϭ

iϭ1

1

for feasible paths
(9) ,

n

͚ ࿣Pi(t)࿣ϩpenalty for infeasible paths

iϭ1

141

Genetic algorithm approach to smooth path planning Baoye Song, Zidong Wang and Li Sheng

where Pi͑t͒ is the ith segment of the piecewise Bezier curves with n segments and penalty is added when the Bezier curve passes through an occupied grid. A shorter path will has a larger ﬁtness value and the optimal path is a shortest feasible Bezier curve path.
The proportional selection strategy is used in the selection method of the GA, i.e. the probability that the selected chromosome is proportional to the ﬁtness value. Suppose the ﬁtness value of the ith chromosome is fi and the population size is Sp, the selection probability of the ith chromosome can be expressed as:

Pi ϭ

fi
SP

,

͚ fi

iϭ1

(10)

where Pi is the selection probability and the roulette wheel method is used for selection operation afterwards.

3.5 Genetic operators Crossover and mutation are two heart genetic operators in the GA. The crossover operator is to combine the features of two parent chromosomes to produce two offspring chromosomes. The crossover probability is randomly generated to determine whether the crossover operator is implemented on two parent chromosomes. The single point crossover operator is used in this paper, i.e. the genes of two chromosomes after a randomly generated crossover point are swapped.
The mutation operator is implemented after the crossover operator on randomly selected chromosomes in the population. The binary complement operation is implemented on a randomly generated mutation point of the chromosomes. Above genetic operators will not produce genes (i.e. grid numbers) out of the workspace by using the proposed approaches in Sections 3.2 and 3.3: ● Remark 1: The grid-based representation of the workspace
is common in the literature of mobile robot path planning. However, a general grid-based representation is proposed in this paper. The whole workspace is divided into 2n ϫ 2n grids despite whether the workspace is a square (the workspace could be treated as a square with some occupied grids if it is not a square). This approach facilitates the implementation of the GA in the processes of initialization, crossover and mutation. ● Remark 2: In this paper, the control points of the Bezier curve are directly linked to the optimization criteria, which is different from most Bezier-curve-based path planning approaches where Bezier curve is used to smooth the path produced by some path planning methods (Sahingoz, 2014). Although the path planning adopting the Bezier curve based on the GA has been developed in Yang et al. (2008), the details of the implementation have not been thoroughly discussed.

4. Numerical experiments and performance evaluation
In this section, the smooth path planning based on the GA will be applied to the workspace in Figure 2 to demonstrate the effectiveness of the proposed approach. The parameters of the

Assembly Automation
Volume 36 · Number 2 · 2016 · 138 –145
GA are as follows: the population size is taken as 200, the maximum generation is taken as 100, the crossover probability is taken as 0.5, the mutation probability is taken as 0.1 and the penalty is taken as 10 for each infeasible point of the Bezier curve path.
Figure 3(a) and (b) shows the numerical experiment results with different start positions and target positions in the workspace, where blue circles indicate the control points of the Bezier curve path, blue solid lines compose the convex hull and red solid lines is the optimum smooth path. Eight control points (i.e. eight grid numbers for each chromosome) are used for the Bezier curve path in this paper. Despite the difﬁculty in the two cases, the proposed approach can accomplish the smooth path planning task successfully. Deﬁne the objective function as the reciprocal of the ﬁtness function f in equation (9). The objective function value of the optimum chromosome in each generation is depicted in Figure 4, which shows the fast convergence of the GA in this problem.
Figure 5 shows the curvature of each point on the Bezier curve path, and it is obvious that the maximal curvature is lower than 0.1 according to the coordinates of the workspace. The low curvature values reﬂect the smoothness of the obtained path. Table I presents some comparisons on smooth path planning and non-smooth path planning both based on the GA. The experiment results with different start positions and target positions indicate that, by using the proposed smooth path planning approach, we can derive an optimal path with the similar length as in the non-smooth path planning. Moreover, there is little difference on the minimal convergence generation between smooth and non-smooth path planning: ● Remark 3: It is very important to choose the control point
vectors in practical applications. Generally speaking, more control point vectors are required if the workspace is more complicated (e.g. with more obstacles). The GA could be implemented with different numbers of control points in practice. It is worth mentioning that the redundant control point, which is coincide with the other, will be rejected in the optimum control point sequence at the end of the procedure (e.g. eight control points are used for the GA and seven control points are remained in Figure 3(a)). ● Remark 4: Compared with other smooth path planning methods (Arana-Daniel, N., Gallegos, A.A., LopezFranco, C. and Alanis, A.Y., 2014; Neto et al., 2010; Song et al., 2010), one of the advantages of the proposed
Figure 3 (a) Smooth path planning from Grid 0 to Grid 255; (b) smooth path planning from Grid 15 to Grid 240

(a)

(b)

142

Genetic algorithm approach to smooth path planning Baoye Song, Zidong Wang and Li Sheng

Assembly Automation Volume 36 · Number 2 · 2016 · 138 –145

Figure 4 (a) Optimum objective function value in the case of Figure 3(a); (b) optimum objective function value in the case of Figure 3(b)

700

1,100

Objective function value

650

1,000

600

900

Objective function value

550 800
500 700
450 600
400
500 350

300

400

250

300

200 0

200

20

40

60

80

100

0

Generation

(a)

20

40

60

80

100

Generation

(b)

Figure 5 (a) Path curvature in the case of Figure 3(a); (b) path curvature in the case of Figure 3(b)

0.1

0.1

0.09

0.09

0.08

0.08

Curvature of the smooth path

Curvature of the smooth path

0.07

0.07

0.06

0.06

0.05

0.05

0.04

0.04

0.03

0.03

0.02

0.02

0.01

0.01

0

0

50

100

150

Path points of the smooth path

(a)

0

200

0

50

100

150

200

Path points of the smooth path

(b)

Table I Comparison of genetic algorithm based smooth path planning and non-smooth path planning

Start position and target position

Minimal generation non-smooth path

Objective value non-smooth path

Minimal generation smooth path

Grid 0 to 15

26

225.4982

49

Grid 15 to 255

88

211.2393

67

Grid 240 to 255

76

178.3131

47

Grid 0 to 240

69

244.9847

73

Objective value smooth path
221.0383 218.5059 195.3404 247.8467

approach is the general grid-based representation of the workspace, which facilitates the implementation of the GA. The other but more meaningful one is that this approach is a “real” smooth path planning approach combining a heuristic intelligent optimization algorithm (e.g. the GA in this paper) with a path smoothing approach (e.g. Bezier curve in this paper). In this paper, the control

points of the Bezier curve are directly linked to the optimization criteria of the GA, so that the generated paths are guaranteed to be optimal instead of smoothing the paths after some path planning processes. ● Remark 5: In equation (9), the penalty is added when the Bezier curve passes through an occupied grid. In some special cases, a path will has larger ﬁtness value, even its

143

Genetic algorithm approach to smooth path planning Baoye Song, Zidong Wang and Li Sheng
control points lie in the occupied grids and the penalty is added in the ﬁtness function. For example, it can be found that optimum control points can be in the occupied grids as shown in Figure 3(b). Moreover, how to select the penalty to improve the performance of the algorithm is still an open problem for further discussion.
5. Conclusions and future work
This paper has proposed a new smooth path planning for a mobile robot by resorting to the GA and the Bezier curve. A new grid-based representation of the workspace has been presented, which makes it convenient to perform operations in the GA. The GA has been used to search the optimum control points that determine the Bezier curve-based smooth path. The effectiveness of the proposed approach has been veriﬁed by a numerical experiment, and some performances of the obtained method have also been analyzed. There still remain many interesting topics, for example: ● how to solve the speciﬁc smooth path planning problem by
using the GA; ● how to promote the computational efﬁciency in the more
grids case; ● how to select the number of control points and value of the
“penalty”; and ● how to apply the developed algorithms to more
complicated situations (e.g. mobile navigations in networked environments (Ding et al., 2015a, 2015b, 2015c, 2015d, 2015e, 2015f; Dong et al., 2015, 2014; Hu et al., 2016; Liu et al., 2014, 2015; Luo et al., 2015; Shen et al., 2016; Zou et al., 2016).
These issues deserve further research.
References
Arana-Daniel, N., Gallegos, A.A., Lopez-Franco, C. and Alanis, A.Y. (2014), “Smooth global and local path planning for mobile robot using particle swarm optimization, radial basis functions, splines and Bezier curves”, Proceedings of IEEE Congress on Evolutionary Computation, Beijing, pp. 175-182.
Castillo, O., Ttrujillo, L. and Melin, P. (2007), “Multiple objective genetic algorithms for path-planning optimization in autonomous mobile robots”, Soft Computing, Vol. 11 No. 3, pp. 269-279.
Ding, D., Wang, Z., Alsaadi, F.E. and Shen, B. (2015a), “Receding horizon ﬁltering for a class of discrete time-varying nonlinear systems with multiple missing measurements”, International Journal of General Systems, Vol. 44 No. 2, pp. 198-211.
Ding, D., Wang, Z., Lam, J. and Shen, B. (2015c), “Finite-horizon Hϱ control for discrete time-varying systems with randomly occurring nonlinearities and fading measurements”, IEEE Transactions on Automatic Control, Vol. 60 No. 9, pp. 2488-2493.
Ding, D., Wang, Z., Shen, B. and Wei, G. (2015b), “Event-triggered consensus control for discrete-time stochastic multi-agent systems: the input-to-state stability in probability”, Automatica, Vol. 62 No. 1, pp. 284-291.
Ding, D., Wang, Z., Shen, B. and Dong, H. (2015d), “Hϱ state estimation with fading measurements, randomly

Assembly Automation
Volume 36 · Number 2 · 2016 · 138 –145
varying nonlinearities and probabilistic distributed delays”, International Journal of Robust and Nonlinear Control, Vol. 25 No. 13, pp. 2180-2195. Ding, D., Wang, Z., Shen, B. and Dong, H. (2015e), Event-triggered distributed Hϱ state estimation with packet dropouts through sensor networks, IET Control Theory & Applications, Vol. 9 No. 13, pp. 1948-1955. Ding, D., Wang, Z., Shen, B. and Dong, H. (2015f), “Envelope-constrained Hϱ ﬁltering with fading measurements and randomly occurring nonlinearities: the ﬁnite horizon case”, Automatica, Vol. 55 No. 1, pp. 37-45. Dong, H., Wang, Z., Ding, S.X. and Gao, H. (2014), “Finite-horizon estimation of randomly occurring faults for a class of nonlinear time-varying systems”, Automatica, Vol. 50 No. 12, pp. 3182-3189. Dong, H., Wang, Z., Ding, S.X. and Gao, H. (2015), “Finite-horizon reliable control with randomly occurring uncertainties and nonlinearities subject to output quantization”, Automatica, Vol. 52 No. 1, pp. 355-362. Ho, Y.J. and Liu, J.S. (2009), “Collision-free curvature-bounded smooth path planning using composite Bezier curve based on Voronoi diagram”, Proceedings of IEEE International Symposium on Computational Intelligence in Robotics and Automation, Daejeon, pp. 463-468. Hu, J., Wang, Z., Liu, S. and Gao, H. (2016), “A variance-constrained approach to recursive state estimation for time-varying complex networks with missing measurements”, Automatica, Vol. 64 No. 1, pp. 155-162. Hu, Y. and Yang, X.S. (2004), “A knowledge based genetic algorithm for path planning of a mobile robot”, Proceedings of IEEE International Conference on Robotics and Automation, New Orieans, pp. 4350-4355. Li, R., Wu, W. and Qiao, H. (2015), “The compliance of robotic hands – from functionality to mechanism”, Assembly Automation, Vol. 35 No. 3, pp. 281-286. Jolly, K.G., Kumar, R.S. and Vijayakumar, R. (2009), “A Bezier curve based path planning in a multi-agent robot soccer system without violating the acceleration limits”, Robotics and Autonomous Systems, Vol. 57 No. 1, pp. 23-33. Liu, Y., Alsaadi, F.E., Yin, X. and Wang, Y. (2015), “Robust Hϱ ﬁltering for discrete nonlinear delayed stochastic systems with missing measurements and randomly occurring nonlinearities”, International Journal of General Systems, Vol. 44 No. 2, pp. 169-181. Liu, Y., Wang, Y., Zhu, X. and Liu, X. (2014), “Optimal guaranteed cost control of a class of hybrid systems with mode-dependent mixed time delays”, International Journal of Systems Science, Vol. 45 No. 7, pp. 1528-1538. Luo, Y., Wei, G., Liu, Y. and Ding, X. (2015), “Reliable Hϱ state estimation for 2-D discrete systems with inﬁnite distributed delays and incomplete observations”, International Journal of General Systems, Vol. 44 No. 2, pp. 155-168. Mahjoubi, H., Bahrami, F. and Lucas, C. (2006), “Path planning in an environment with static and dynamic obstacles using genetic algorithm: a simpliﬁed search space approach”, Proceedings of IEEE Congress on Evolutionary Computation, Vancouver, pp. 2483-2489. Manikas, T.W., Ashenayi, K. and Wainwright, R.L. (2007), “Genetic algorithms for autonomous robot navigation”,

144

Genetic algorithm approach to smooth path planning
Baoye Song, Zidong Wang and Li Sheng
IEEE Instrumentation and Measurement Magazine, Vol. 12 No. 1, pp. 26-31. Naderan-Tahan, M. and Manzuri-Shalmani, M.T. (2009), “Efﬁcient and safe path planning for a mobile robot using genetic algorithm”, Proceedings of IEEE International Conference on Evolutionary Computation, Trondheim, pp. 2091-2097. Neto, A.A., Macharet, D.G. and Campos, M.F.M. (2010), “Feasible RRT-based path planning using seventh order Bezier curves”, Proceedings of IEEE International Conference on Intelligent Robots and Systems, Taipei, pp. 1445-1450. Pehlivanoglu, Y.V., Baysal, O. and Hacioglu, A. (2007), “Path planning for autonomous UAV via vibrational genetic algorithm”, Aircraft Engineering and Aerospace Technology: An International Journal, Vol. 79 No. 4, pp. 352-359. Pol, R.S. and Murgugan, M. (2015), “A review on indoor human aware autonomous mobile robot navigation through a dynamic environment”, Proceedings of IEEE International Conference on Industrial Instrumentation and Control, Pune, pp. 1339-1344. Robinson, D.C., Sanders, D.A. and Mazharsolook, E. (2015), “Ambient intelligence for optimal manufacturing and energy efﬁciency”, Assembly Automation, Vol. 35 No. 3, pp. 234-248. Sahingoz, O.K. (2014), “Generation of Bezier curve-based ﬂyable trajectories for multi-UAV systems with parallel genetic algorithm”, Journal of Intelligent and Robotic Systems, Vol. 74 Nos 1/2, pp. 499-511. Shen, B., Wang, Z. and Huang, T. (2016), “Stabilization for sampled-data systems under noisy sampling interval”, Automatica, Vol. 63 No. 3, pp. 162-166. Skrjanc, I. and Klancar, G. (2010), “Optimal cooperative collision avoidance between multiple robots based on Bernstein-Beizier curves”, Robotics and Autonomous Systems, Vol. 58 No. 1, pp. 1-9. Song, B., Tian, G. and Zhou, F. (2010), “A comparison study on path smoothing algorithms for laser robot navigated mobile robot path planning in intelligent space”, Journal of

Assembly Automation Volume 36 · Number 2 · 2016 · 138 –145
Information and Computational Science, Vol. 7 No. 1, pp. 2943-2950. Tsai, C.C., Huang, H.C. and Chan, C.K. (2011), “Parallel elite genetic algorithm and its application to global path planning for autonomous robot navigation”, IEEE Transactions on Industrial Electronics, Vol. 58 No. 10, pp. 4813-4821. Tuncer, A. and Yildirim, M. (2012), “Dynamic path planning of mobile robots with improved genetic algorithm”, Computers and Electrical Engineering, Vol. 38 No. 6, pp. 1564-1572. Wang, Y., Sillitoe, P.W.I. and Mulvaney, J.D. (2007), “Mobile robot path planning in dynamic environments”, Proceedings of IEEE International Conference on Robotics and Automation, Roma, pp. 71-76. Yang, L., Luo, Z., Tang, Z. and Lv, W. (2008), “Path planning algorithm for mobile robot obstacle avoidance adopting Bezier curve based on genetic algorithm”, Proceedings of Chinese Control and Decision Conference (CCDC 2008), Yantai, pp. 3286-3289. Yuan, J., Yu, T., Wang, K. and Liu, X. (2007), “Step-spreading map knowledge based multi-objective genetic algorithm for robot-path planning”, Proceedings of IEEE International Conference on Systems, Man and Cybernetics, Montreal, pp. 3402-3407. Zhou, F., Song, B. and Tian, G. (2011), “Bezier curve based smooth path planning for mobile robot”, Journal of Information and Computational Science, Vol. 8 No. 1, pp. 2441-2450. Zou, L., Wang, Z. and Gao, H. (2016), “Observer-based Hϱ control of networked systems with stochastic communication protocol: the ﬁnite-horizon case”, Automatica, Vol. 63 No. 1, pp. 366-373.
Corresponding author
Zidong Wang can be contacted at: Zidong.Wang@ brunel.ac.uk

For instructions on how to order reprints of this article, please visit our website: www.emeraldgrouppublishing.com/licensing/reprints.htm Or contact us for further details: permissions@emeraldinsight.com
145

