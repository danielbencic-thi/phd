Annals of Mathematics and Artiﬁcial Intelligence (2018) 84: 139–160 https://doi.org/10.1007/s10472-018-9596-8
Path homotopy invariants and their application to optimal trajectory planning
Subhrajit Bhattacharya1 · Robert Ghrist2
Published online: 31 July 2018 © Springer Nature Switzerland AG 2018
Abstract We consider the problem of optimal path planning in different homotopy classes in a given environment. Though important in robotics applications, path-planning with reasoning about homotopy classes of trajectories has typically focused on subsets of the Euclidean plane in the robotics literature. The problem of finding optimal trajectories in different homotopy classes in more general configuration spaces (or even characterizing the homotopy classes of such trajectories) can be difficult. In this paper we propose automated solutions to this problem in several general classes of configuration spaces by constructing presentations of fundamental groups and giving algorithms for solving the word problem in such groups. We present explicit results that apply to knot and link complements in 3-space, discuss how to extend to cylindrically-deleted coordination spaces of arbitrary dimension, and also present results in the coordination space of robots navigating on an Euclidean plane.
Keywords Mathematical robotics · Path homotopy invariants · Knot and link complements · Coordination spaces · Graph search · Topological path planning
Mathematics Subject Classiﬁcation (2010) 55-04 · 55Q99 · 90C35
Parts of this paper has appeared in the proceedings of the IMA Conference on Mathematics of Robotics (IMAMR), 2015. Electronic supplementary material The online version of this article (https://doi.org/10.1007/s10472-018-9596-8) contains supplementary material, which is available to authorized users.
Subhrajit Bhattacharya sub216@lehigh.edu
Robert Ghrist ghrist@math.upenn.edu
1 Department of Mechanical Engineering and Mechanics, Lehigh University, Bethlehem, PA, USA 2 Department of Mathematics, University of Pennsylvania, Philadelphia, PA, USA

140

S. Bhattacharya, R. Ghrist

1 Introduction
In the context of robot motion planning, one often encounters problems requiring optimal trajectories (paths) in different homotopy classes. For example, consideration of homotopy classes is vital in planning trajectories for robot teams separating/caging and transporting objects using a flexible cable [2], where it is important to choose the correct homotopy classes of paths for the robots so as to ensure that the flexible cable does not get entangled with obstacles in the environment while ensuring that the desired objects are collected. This problem is encountered in context of automated cleanup of ocean surfaces after oil spill, where surface vehicles carrying flexible booms need to scoop up oil patches while voiding tangling the boom with obstacles such as buoys and other boats. Likewise, consideration of homotopy classes is important in planning optimal trajectories for robots that are tethered to a base using a fixed-length flexible cable [23] for the purpose of communication or power supply. Goal-directed motion planning for such a robot requires us to impose homotopy class constraint on the planned trajectory, since the trivial shortest path to a goal may not be traversable because of cable length constraint. Finally, in human-robot collaborative exploration problems in context of search-and-rescue missions [18] information about homotopy classes of trajectories can be used to divide the agents into groups and sub-groups for effective deployment and exploration of an environment. This paper addresses the problem of optimal path planning with homotopy class as the optimization constraint.
There is, certainly, a large literature on minimal path-planning in computational geometry (for a brief sampling and overview, see [26]). The topology of a configuration space plays a key role in solving path-planning problems. To that end, the study of the topological invariants of robot configuration spaces and the properties of motion planning problems in such configuration spaces is not new [8, 10, 15, 16]. However, most of this body of research has primarily focused on deduction of topological invariants of configuration/coordination spaces, existence questions and properties of the motion planning problem itself, but not the explicit implementation of algorithms for finding optimal paths in configuration spaces of robots. Classification of paths based on homotopy has also been studied in the robotics literature in two-dimensional planar workspaces using geometric methods [20, 22], probabilistic road-map construction [28] techniques and triangulation-based path planning [12]. While in a planar configuration space such methods can be used for determining whether or not two trajectories belong to the same homotopy class, efficient planning for least cost trajectories with homotopy class constraints is difficult using such representations even in 2-dimensions. To that end, in prior work we developed a graph search-based method for computing shortest paths in different homology classes in 2, 3 and higher dimensional Euclidean spaces with obstacles [4, 5], and in different homotopy classes in planar configuration spaces with obstacles [2].
Of course, since the problem of computing shortest paths (even for a 3-d simplyconnected polygonal domain) is NP-hard [7], we must restrict attention to subclasses of spaces, even when using homotopy path constraints. In particular, we construct a discrete graph representation of a configuration space and thus reduce the problem to shortest path computation on the graph. This representation, along with path homotopy invariants of the configuration space, allows us to compute shortest paths in different homotopy classes using graph search-based path planning algorithms.
This paper focuses on computation of optimal paths in different homotopy classes in two interesting and completely different types of configuration spaces: (1) knot and link complements in 3-d; and (2) cylindrically-deleted coordination spaces [17]. Compared to our prior conference publication [3], in this paper we have (i) provided a rigorous Proposition on the presentation of the fundamental group of knot/link complements in 3-d and

Path homotopy invariants and their application to optimal trajectory...

141

hence the justification behind the proposed homotopy invariants in such spaces, (ii) have provided an explicit presentation of the fundamental group of cylindrically deleted coordination space for robots navigating on a plane, and (iii) hence have demonstrated through simulation the problem of optimal path computation in different homotopy classes for three robots navigating on a simple planar domain.

2 Conﬁguration spaces with free fundamental groups

2.1 Preliminaries

In this section we introduce a few fundamental definitions and concepts. Each definition is accompanied by a reference to a standard text on the subject, where the reader can find more details on these topics.

Homotopy Classes of Paths: Consider oriented/directed paths in a topological space, X.

Two paths γ1, γ2 : [0, 1] → X connecting the same start and end points, qs, qe ∈ X, are

called homotopic (or belonging to the same homotopy class) if one can be continuously

deformed into the other without intersecting any obstacle (i.e.. there exists a continuous

map η : [0, 1] × [0, 1] → X such that η(α, 0) = γ1(α), η(α, 1) = γ2(α) ∀α ∈ [0, 1], and η(0, β) = qs, η(1, β) = qe ∀β ∈ [0, 1] [21]). A set of all homotopically equivalent

paths (i.e., homotopic paths) constitute a homotopy class. We denote the homotopy class

of a path γ by [γ ].

Fundamental Group: The fundamental group or the first homotopy group of a topological

space, X, is the set of all homotopy classes of oriented closed loops (paths with qs = qe =: q0) in X with a group structure imposed on the set as follows: i. The identity

element is the class of all loops that can be contracted/homotoped to the point q0; ii. The
inverse of a homotopy class, [γ ], is the homotopy class of loops constituting of the same loops as in [γ ], but with reversed orientation, and is denoted as [−γ ] or [γ ]−1; iii. The

composition (group operation) of two classes [γ1] and [γ2] is the class of loops that are

obtained by concatenating a path in [γ1] with a path in [γ2] (i.e., it is the class of the loop

γ (t) =

γ1(2t), 0 ≤ γ2(2t − 1),

t
1 2

< ≤

1 2
t

≤

1

).

Free Group and Free Product of Groups: A free group over a set of letters/symbols is the

group whose elements consists of all words constructed out of the letters and their formal

inverses, with identity element being the empty word, and the group operation being word

concatenation (with any letter juxtaposed with its inverse reducing to the identity) [29].

Given two groups, G and H , the free product of the groups is the group of words that

can be constructed with all the elements of the groups as the letters. The free product is

thus written as G ∗ H = {g1h1g2h2 · · · gnhn | gi ∈ G, hi ∈ H, n ∈ Z}.

Presentation of a Group: The presentation of a group involves writing elements in it as

a free product of n copies of Z generated by the elements (the letters) of a set L =

{l1, l2, · · · , ln}, along with a relation set, R = {w1, w2, · · · , wm}, where wj are elements from the free group (words constructed using the letters from L) that are to be considered

equivalent to the identity. The group is thus isomorphic to the free group on L quotiented

by the smallest normal subgroup, N , containing all the elements of R.

Seifert-van Kampen Theorem: The Seifert-van Kampen Theorem relates the fundamental

group of a space, A, with the fundamental groups of its subsets A1, A2, · · · , An, that

cover the space A. In its simplest form, if the Ai are all path-connected, and if every two-way intersection, Ai ∩ Aj , and every three-way intersection, Ai ∩ Aj ∩ Ak, are

142

S. Bhattacharya, R. Ghrist

simply-connected for every i = j = k, then the Seifert-van Kampen Theorem states that π1(A) = π1(A1) ∗ π1(A2) ∗ · · · ∗ π1(An).
2.2 Motivation: homotopy invariant in (R2 − O)
We are interested in constructing computable homotopy invariants for trajectories in a configuration space that are amenable to graph search-based path planning. To that end there is a very simple construction for configuration spaces of the form R2 − O (Euclidean plane punctured by obstacles) [2, 20, 22, 23, 30]: We start by placing representative points, ζi, inside the ith connected component of the obstacles, Oi ⊂ O. We then construct nonintersecting rays, r1, r2, · · · , rm, emanating from the representative points (this is always possible, for example, by choosing the rays to be parallel to each other). Now, given a path γ in R2 − O, we construct a word by tracing the path, and every time we cross a ray ri from its right to left, we insert the letter “ri” into the word, and every time we cross it from left to right, we insert a letter “ri−1” into the word, with consecutive rj and rj−1 canceling each other. The word thus constructed is written as h(γ ). For example, in Fig. 1a, h(γ ) = “r1−1r4 r2−1r4−1r4 r4−1r6−1” = “r1−1r4 r2−1r4−1r6−1”. This word, called the reduced word for the trajectory γ , is a complete homotopy invariant for trajectories connecting the same set of points. That is, γ1, γ2 : [0, 1] → (R2 − O), with γi (0) = qs, γi(1) = qe are homotopic if and only if h(γ1) = h(γ2).
The intuition behind the construction of these rays is that they represent “cuts” in the free configuration space such that when it is cut along the rays, it becomes simply-connected. Thus, any path that loops around an obstacle (not null-homotopic) will intersect with these rays (cuts), thus letting us infer the homotopy class of the path in terms of the reduced words constructed by tracking those intersections (Fig. 1a).
2.3 Words as homotopy invariants in spaces with free fundamental groups

In a more general setting the aforesaid construction of “cuts” can be generalized to codimension 1 sub-manifolds (so that general paths in the configuration space intersect them at distinct points) and the construction can be generalized as follows:
Construction 1 Given a D-dimensional manifold (possibly with boundary), X, suppose U1, U2, · · · , Un are (D − 1)-dimensional orientable sub-manifolds (not necessarily smooth

Fig. 1 Homotopy invariants of paths such as γ in (R2 − O) are words constructed by tracing γ and inserting letters in the word for every crossing of the chosen oriented sub-manifolds, Ui (in red)

Path homotopy invariants and their application to optimal trajectory...

143

and possibly with boundaries) such that ∂Ui ⊆ ∂X. Then, for any path, γ (connecting fixed
start and end points, xs, xe ∈ X), which is in general position (transverse) w.r.t. the Ui’s, one can construct a word by tracing the path and inserting into the word a letter, ui or u−i 1, whenever the path intersects Ui with a positive or negative orientation respectively.

The proposition below is a direct consequence of a simple version of the Van Kampen’s Theorem (of which several different generalizations are available in the literature).

Proposition 1 Words constructed as described in Construction 1 are complete homotopy invariants for paths in X joining the given start and end points if the following conditions hold:

1. Ui ∩ Uj = ∅, ∀i = j .

2. 3.

X− π1(X

n i=1
−

Ui is path connected

n i =1,i =j

Ui )

Z, ∀j

and simply-connected, = 1, 2, · · · , n.

and,

Proof Consider the spaces X0 = X −

n i=1

Ui

and

Xj

=

X−

n i =1,i =j

Ui

,

j

=

1, 2, · · · , n. Due to the aforesaid properties of the Ui ’s the set CX = {X0, X1, · · · , Xn}

constitutes an open cover of X, is closed under intersection, the pairwise intersections

Xi ∩ Xj = X0, i = j are simply-connected (and hence path connected), and so are

Xi ∩ Xj ∩ Xk = X0, i = j = k.

The proof, when γ is a closed loop (i.e. xs = xe), then follows directly from the Seifert-

van Kampen theorem [11, 21] by observing that π1(X) π1(X0) ∗ π1(X1) ∗ π1(X2) ∗ · · · ∗ π1(Xn) ∗ni=1Z — the free product of n copies of Z — generated by elements of the form ιj (ωj ), where ιj : π1(Xj ) → π1(X) is the homomorphism induced by the inclusion

Xj → X and ωj ∈ π1(Xj ).

When γ1 and γ2 are paths (not necessarily closed) joining points xs and xe, they are in

the same homotopy class iff γ1 ∪ −γ2 is null-homotopic — that is, h(γ1) ◦ h(−γ2) = “ ” ⇔

h(γ1) = h(γ2) (where by “◦” we mean word concatenation).

The intuition behind the above proposition is that the Ui’s represent non-intersecting codimension-1 “cuts” in the free configuration space such that when it is cut along all these manifolds, it becomes simply-connected, wheres cutting along all but one gives a space with fundamental group isomorphic to Z (corresponding to looping around one obstacle). Thus, any path that loops around an obstacle (not null-homotopic) will intersect with the Ui’s, thus letting us infer the homotopy class of the path in terms of the reduced words constructed by tracking those intersections (Figs. 1 and 2). The non-intersecting condition on the Ui’s ensure that any trivial closed loop do not have a non-empty word.

Fig. 2 The fundamental groups of configuration spaces, R3 − O, may or may not be free

144

S. Bhattacharya, R. Ghrist

The Construction 1 gives a presentation [13] of the fundamental group of X (which, in this case, is a free group due to the Van Kampen’s theorem) as the group generated by the set of letters U = {u1, u2, · · · , uq }, and is written as G = π1(X) = u1, u2, · · · , uq = U . In our earlier construction with the rays, X = R2 − O was the configuration space, and Ui = X ∩ ri were the support of the rays in the configuration space. It is easy to check that the conditions in the above proposition are satisfied with these choices. However such choices of rays is not the only possible construction of the Ui’s satisfying the conditions of Proposition 1. Figure 4a shows a different choice of the Ui’s that satisfy all the conditions.
2.4 Simple extension to (R3 − O) with unlinked unknotted obstacles

The construction described in Section 2.2 can be easily extended to the 3-dimensional
Euclidean space punctured by a finite number of un-knotted and un-linked toroidal (pos-
sibly of multi-genus) obstacles. Instead of “rays”, in this case the Ui’s are 2-dimensional sub-manifolds that satisfy the conditions in Proposition 1, with a letter, ui (or u−i 1), being inserted in h(γ ) every time the path, γ , crosses/intersects a Ui. This is illustrated in Fig. 2a and b.
However, a little investigation makes it obvious that such 2-dimensional sub-manifolds
cannot always be constructed when the obstacles are knotted or linked (knotted and linked obstacles are homotopic to embeddings of the circle in R3, but not necessarily isotopic to each other in the ambient R3 – that is, they may not be deformed into one another or into a trivial embedding through a sequence of embeddings – Fig. 2c). One can indeed construct
surfaces (e.g. Seifert surfaces) satisfying some of the properties, but not all.

2.5 Application to graph search-based path planning

Using the homotopy invariants described in the previous sub-section, we describe a graph
construction for use in search-based path planning for computing optimal (in the graph) trajectories in different homotopy classes. Suppose G = (V , E) is a discrete graph represen-
tation of a configuration space, X. That is, V , is a set of points (vertices) sampled from X, and for any two neighboring points x1, x2 ∈ V (where neighbors are typically determined by a distance threshold), there exists an edge (x1, x2) ∈ E.1 We assume xs ∈ V .
We first fix the set of sub-manifolds {U1, U2, · · · , Un} as described earlier. Now, given a discrete graph representation of the configuration space, G = (V , E), we construct an haugmented graph, Gh = (Vh, Eh), which is essentially a lift of G into the universal covering space of X [21]. The construction of such augmented graphs has been described in our prior
work [2, 18, 23], and the explicit construction of Gh can be described as follows:

i. Vertices in Vh are tuples of the form (x, w), where x ∈ V and w is a reduced word made out of letters ui and u−i 1.

ii. (xs , “ ”) ∈ Vh.

iii.

For [(x1

,ewve)r,y(xe2d,gwe ◦[hx1(−x,−1x→x22]))∈]

∈EEahn,dwehveerery−x−1v→xe2rtdeexn(oxte1s,

w) the

∈ Vh, there directed path

exists an edge that constitutes

the edge [x1, x2].

1We assume that the discretization is such that corresponding to every homotopy class in the configuration space there exists at least one path in the graph that successfully captures/represents that homotopy class. This is true if the sampling of the vertices is sufficiently dense in X, and the edge connecting neighboring vertices is the shortest path (with respect to the metric of the underlying space) connecting those points in X.

Path homotopy invariants and their application to optimal trajectory...

145

Fig. 3 The h-augmented graph, Gh, is a lift of G into X
iv. The length/cost of an edge in Gh is same as its projection in G: CGh ([(x1, w1), (x2, w2)]) = CG([x1, x2]).
The topology of Gh can be described as a lift of G into the universal covering space, X, of X, and is illustrated in Fig. 3 for a uniform cylindrically discretized space with a single disk-shaped obstacle.
The item ‘i’ in the above description is just a qualitative description of the vertices in Gh. Item ‘ii’ describes one particular vertex in Gh, and using that, item ‘iii’ describes an incremental construction of the entire graph Gh. In practice, during execution of search algorithms such as Dijkstra’s and A*, we start with only the vertex (xs, “ ”) in the open list, and incrementally generating neighbors of the currently-generated vertices (according to the rule of item ‘iii’) on demand as vertices in the open list are expanded. Thus, we do not need to construct the entire graph Gh and store it, thus allowing us to find optimal paths between vertices even though Gh is typically unbounded.
Such an incremental construction is well-suited for use in graph search algorithms such as Dijkstra’s or A* [9], in which one initiates an open set using the start vertex (in item ii), and then gradually expands vertices, generating only the neighbors at every expansion (the recipe for which is given by item ‘iii’). Executing a search (Dijkstra’s/A*) in Gh from (xs, “ ”) to vertices of the form (xe, ∗) (where ‘∗’ denotes any word), and projecting it back to G, gives us optimal trajectories in G that belong to different homotopy classes. Figure 4a shows 5 such optimal trajectories in the graph, connecting a given start and goal vertex, where G was constructed by a uniform hexagonal discretization of the planar configuration space. One can then employ a simple path shortening algorithm [23] to obtain ones more optimal than the ones restricted to G (Fig. 4b). Similarly, shortest trajectories connecting xs and xe can be obtained in 3-dimensional configuration spaces with free fundamental group (e.g., Fig. 4d, showing 4 paths connecting two fixed points in R3 with two un-linked toroidal obstacles).
3 Knot and link complements
As described earlier, when the obstacle set in R3 consists of knots and links, it is in general not possible to find the sub-manifolds Ui ⊂ (R3 − O) as required by Proposition 1. However, thankfully we have more generalized versions of the Van Kampen theorem at our disposal that let us extend the proposed methodology to such spaces. We first illustrate the generalization in R3 − O using knot/link diagrams.

146

S. Bhattacharya, R. Ghrist

Fig. 4 Simple results in configuration spaces that have free fundamental groups. The dot/dash pattern and colors are shown to distinguishing between the trajectories
3.1 Dehn presentation of fundamental group of knot/link complements
For simplicity we consider knots and links in R3 as obstacles. We assume that the knots/links are described by polygons, all of which together constitute O ⊂ R3. The thickened obstacles (the knots/links with the tubular neighborhoods) will be referred to as O. We consider a knot/link diagram [24] of the obstacles: Given a projection map, p : R3 → R2, the knot/link diagram is the projection of the knot/link, p(O), along with additional information about the z-ordering at the self-intersections of p(O). We assume that in this diagram the self-intersections are all transverse (which can always be achieved through infinitesimal perturbations) and that the diagram divides the plane into simply-connected regions (say q counts of them) each bounded by segments of the projected obstacles, and one unbounded exterior region. The boundary (the boundary of the closure) of each of the bounded regions is itself a polygon, Qi ⊆ p(O), i = 1, 2, · · · , q (Fig. 5a). Clearly p−1(Qi)∩O (the preimage of Qi in the original obstacle) will be a discontinuous polygon, with discontinuities at the preimages of the self-intersection points on the knot diagram. But these discontinuities can be removed simply by “connecting” the preimages at each self-intersection point,

Path homotopy invariants and their application to optimal trajectory...

147

Fig. 5 Constructing the surfaces, Ui , from polygonal knot/link diagrams (polygon segments shown as thickened cylinders for easy visualization). Null-homotopic loops as γ have non-empty words
resulting into a spatial polygon, Qi with the property that p(Qi) = Qi. A simple triangulation can then be employed to construct a surface, Ui, in R3 − O, such that its boundary is Qi and p(Ui) is the simply-connected region bounded by Qi (this can be achieved by first triangulating the planar region, p(Ui), and then lifting the triangulation to R3) – see Fig. 5a.
The Ui’s thus constructed satisfy properties (2) and (3) of Proposition 1, but not property (1), nor do they satisfy the property ∂Ui ⊆ ∂X. The consequence of this is that near the regions where the Ui’s intersect, there can be closed loops in R3 − O which are null-homotopic, but words constructed simply by tracing the loop and inserting letters corresponding to intersections with the Ui’s, as we did earlier, may not be the empty word (identity element). An example is illustrated in Fig. 5b). Due to our construction, such intersection of the Ui’s happen only along lines passing through the pre-image of the selfintersections in the knot diagram, for each of which we end up getting a null-homotopic closed loop with non-empty word.
The Dehn presentation [31] uses surfaces as constructed to describe the fundamental group of knot/link complements. We consider the free group, G = u1, u2, · · · , uq = U . In general, for every self-intersection in the knot/link diagram, there are four adjacent surfaces, Ui1 , Ui2 , Ui3 and Ui4 in the order as shown in Fig. 6 (when the self-intersection is adjacent to the unbounded region in the knot diagram, there are only three). Correspondingly, there is a closed null-homotopic loop, γi , that has a word ρi = “ui1 u−i21ui3 u−i41”. Thus we have such words ρ1, ρ2, · · · , ρm (assuming there are m counts of self-intersections) that represent null-homotopic loops. These words are called relations and we call the set R = {ρ1, ρ2, · · · , ρm} the relation set. It can be easily noted that inverses and cyclic permutations of each ρi also corresponds to null-homotopic loops. We thus define the symmetrized
Fig. 6 A “self-intersection” in a knot/link diagram, with a null-homotopic loop, γi , intersecting the surfaces adjacent to the intersection. h(γi ) = “ui1 u−i21ui3 u−i41”. One or more of the surfaces can be non-existent, in which case the corresponding letters are simply absent from the word. These words constitute R, and should map to the identity element in π1(X) = U | R

148

S. Bhattacharya, R. Ghrist

relation set, R, as the set containing all the words in R, all their inverses, and all cyclic
permutation of each of those. Let the normal subgroup of G generated by R be N = {“α1ρi1 α1−1 α2ρi2 α2−1 · · · ακ−1
ακ ρiκ · · · ” | αk ∈ G, ρik ∈ R} = RG (normal closure of R in G). It is easy to observe that a closed loop, γ , in X = R3 − O, has a word that is an element of N iff it is null-homotopic.
Due to a more general version of the Van Kampen’s theorem [21], the fundamental group of X is the quotient group, π1(X) = G/N = U | R — the group in which, under the quotient map, elements of N are mapped to the identity element. This is summarized and
generalized in the following proposition.

Proposition 2 Given a D-dimensional manifold (possibly with boundary), X, suppose
U1, U2, · · · ,Un are (D − 1)-dimensional orientable sub-manifolds (not necessarily smooth and possibly with boundaries) such that ∂Ui ⊆ ∂X ∪ j =i Uj and

1. a) The intersections of Ui and Uj , if non-empty, are transverse (hence (D − 2)-

dimensional),

2.

b) X

−

ni=1ni=U1iU=i

∅, is path

connected

and

simply-connected,

and,

3.

π1(X −

n i =1,i =j

Ui )

Z, ∀j = 1, 2, · · · , n,

For a loop in X, as before, one can construct a word as described in Construction 1. Let the set of all the letters constituting such words be U.
For every (D − 2)-dimensional intersection of the Ui ∩ Uj , i = j , one can construct a loop in the tubular neighborhood of Ui ∩ Uj in X that links with Ui ∩ Uj . Let the set of words corresponding to such loops be R.
Then the fundamental group of X is isomorphic to U | R .

3.2 The word problem and Dehn algorithm

Due to the discussion above, two trajectories, γ1, γ2, connecting xs and xe in the knot/link complement, X, belong to the same homotopy class iff the word h(γ1 ∪ −γ2) = h(γ1) ◦ h(γ2)−1 belongs to N = RG . This problem in group theory is known as the word problem [13], and there are various algorithms, each suitable for specific types of groups, for solving the word problem. We, in particular, will focus on a very simple algorithm due to Max Dehn [19, 25], which is applicable to a wide class of groups and their presentations.
Dehn’s metric algorithm: Given a presentation of a group, π1 = U | R , we construct the symmetrized relation set R as described earlier. Given a cyclically reduced word, w, made up of letters (and their inverses) from U, one checks for every element ρ ∈ R if w and ρ share a common sub-word that is of length greater than |ρ|/2 (|ρ| being the length of ρ). If they do (say, ρ = αβγ , with β being a sub-word appearing in w, and |β| > |ρ|/2), we replace the sub-word with the shorter equivalent that one obtains by setting ρ to the identity element (i.e., replace β by α−1γ −1 in w). This process is repeated, and the algorithm terminates when no more such sub-words are found. The final word at which the algorithm terminates indicates if the initial word, w, is in N (whether it maps to the identity element in π1).
3.3 Implementation in graph search algorithms

This algorithm can be used in conjunction with search in Gh as before for finding optimal trajectories in different homotopy classes. As before, starting with the vertex (xs, “ ”) ∈ Vh

Path homotopy invariants and their application to optimal trajectory...

149

in the open list, the search algorithm incrementally generates neighbors of the currentlygenerated vertices as vertices in Gh are expanded. However, during the incremental construction of the graph, we identify two vertices, (x, w1), (x, w2) ∈ Vh, as the same iff h(w1)◦h(−w2) reduces to the empty word upon applying the Dehn’s metric algorithm. This is the only difference from the previously described graph search method where (x, w1) and (x, w2) were considered the same vertex only if w1 = w2.
3.4 Guarantees of Dehn algorithm
It’s well known [19] that if Dehn algorithm terminates at the empty word, then w ∈ N . However, the converse is not necessarily true. One can derive several sufficient (and often highly restrictive) conditions on the presentation U | R under which the converse holds [25]. If, for a given presentation of a group the converse holds, we say that Dehn algorithm is complete for that presentation (or that the presentation is complete with respect to the Dehn algorithm, or that the word problem is solvable using the specific presentation and Dehn algorithm).
Due to the result of [31], the Dehn presentation of the fundamental groups of the complement of a tame, alternating, prime knot is complete with respect to the Dehn algorithm. It is also known [13] that automatic groups (including hyperbolic groups) have presentations that are complete with respect to Dehn algorithm.

4 Cylindrically-deleted conﬁguration spaces
The example involving knot and link complement presented in the previous section is limited to 3-dimensional spaces: one suspects that higher dimensions are more difficult. However, there are some classes of spaces for which optimal path-planning with homotopy constraints is still computable via a Dehn algorithm, independent of dimension. The following class of examples is inspired by robot coordination problems, in which individual agents with predetermined motion paths have to coordinate their motions so as to avoid collision.
Consider a collection of n graphs ( i)n1, each embedded in a common workspace (usually R2 or R3) with intersections permitted. In the simplest case, each i will be homeomorphic to a closed interval, but more general graphs are permitted, such as roadmap approximations to a configuration space. On each i, a robot Ri with some particular fixed size/shape is free to move. Such motion may be Euclidean (by translation/rotation); more general motions are possible, so long as the region occupied by the robot Ri in the workspace is purely a function of location on i. A point in the product space i i determines the locations of the n robots in the common workspace. Certain configurations are illegal, due to collisions. For example, if the robots are point-like, and each
i = is identical, then the configuration space of n points on is the cross product i i minus the pairwise diagonal . If the robots are given finite extent, then this system has a configuration space obtained by the graph product i i minus an neighborhood of the pairwise diagonal. However, more general types of collisions can be defined, say, if the robots are irregularly shaped and the graphs i are all different. In this most general case, the natural analogue of a configuration space is the coordination spaces of [17].
The coordination space of this system is defined to be the space of all configurations in i i for which there are no collisions – the geometric robots Ri have no overlaps in the

150

S. Bhattacharya, R. Ghrist

workspace. Under the assumption that collisions between robots are pairwise-defined, the coordination space is cylindrically deleted and of the form

n

X=

i − O where

i=1

N

O=

(xk)N1 ∈

k : (xi , xj ) ∈ i,j ,

i<j

k=1

for some (open, “collision”) sets i,j ⊂ i × j where 1 ≤ i < j ≤ N . In what follows, we assume that the i,j are sufficiently tame (e.g., semi-algebraic) so as to avoid issues of non-finitely-generated π1. Given (internal, path-) metrics on each i, the coordination space X inherits a locally-Euclidean metric on products of edges in the graphs. Such X are complete path-spaces and thus the problem of geodesics is well-
posed. Their fundamental groups can be (highly) nontrivial, depending on the obstacle set O. However, finding optimal paths subject to homotopy classes is still computable. To that end one can construct the subspaces Ui ⊂ X of co-dimension 1, and the relation set R, and use them to design complete homotopy invariants as before. We do not discuss the explicit construction of the Ui’s for cylindrically-deleted coordination spaces in this paper, but provide the following theorem on solvability of the word problem in such
spaces.

Theorem 1 Any compact cylindrically-deleted coordination space X admits a Dehn algorithm for π1.

Proof Any such X is realized as a Hausdorff limit of cubcial complexes which were shown in [17, Thm 4.4] to be nonpositively-curved and to stabilize in π1 by tameness. All nonpositively-curved piecewise-Euclidean cube complexes have fundamental groups which are, by a famous result of Niblo-Reeves [27], biautomatic. Biautomatic groups all admit a Dehn algorithm (specifically, there is a quadratic isoperimetric inequality) [13].

It is worth noting that 2-shortest paths are perhaps not the most natural optimization for coordination spaces. It would be interesting to consider other ( 1, ∞) pointwise norms.
In the next section we consider point robots navigating on a plane. The configuration space of each robot is the Euclidean plane. For such a configuration space for the individual robots, the result of Theorem 1 may not hold, since the fundamental group of the coordination space may not be biautomatic. Nevertheless, we can construct a presentation of the fundamental group, which we do, and still apply Dehn metric algorithm to it, although the Dehn algorithm may not be complete for the proposed presentation. While a presentations of pure braid groups such as the one due Artin [6] exist, we derive a presentation suitable for construction of the words for paths in the coordination space of such robots during the execution of a search algorithm. In particular, using our presentation, insertion of a letter in the word corresponding to the motion in the coordination space simply requires us to check if a robot crosses the “+Y ray” (a ray pointing in the positive Y direction) emanating from another robot. This letter depends on the identities of the robots only, and not their current state in their configuration spaces, i.
4.1 Presentation of the fundamental group of a cylindrically deleted coordination space for point robots navigating on a plane
We consider point robots navigating on a plane. Thus, in this case i, the configuration space of the ith robot, is the Euclidean plane coordinatized by (xi, yi). A collision set i,j =

Path homotopy invariants and their application to optimal trajectory...

151

{(xi , yi , xj , yj ) | xi = xj , yi = yj } ⊂ i × j R4, 1 ≤ i < j ≤ N , is a 2-dimensional

hyperplane embedded in the joint configuration space of the robots i and j .

The joint configuration space of N robots (with the collision sets included) is =

N k=1 k

R2N . The “cylindrical” obstacles in this configuration space created due to i,j

are thus

⎛

⎞

Oi,j = i,j × ⎝

k⎠ = {(x1, y1, x2, y2, · · · , xN , yN ) | xi = xj , yi = yj } ⊂ ,

k =i,j

which are co-dimension 2 subspaces (hyperplanes) embedded in the 2N dimensional joint configuration space. Thus the coordination space is X = − 1≤i<j≤N Oi,j .

4.1.1 Design of co-dimension 1 manifolds, U∗

As before, we are interested in constructing a set of (2N − 1)-dimensional sub-manifolds, {Uα}, in X such that removing all but one of these sub-manifolds will give us a space with fundamental group isomorphic to Z. This would let us apply the generalized Van Kampen theorem as before by allowing us to construct words based on transverse intersection of paths with the surfaces, U∗ (which would be of co-dimension 1 in X). We outline a general construction, and then show how that can be specialized for N = 3.
Consider a single (2N − 2)-dimensional obstacle Oi,j , i < j , which is a hyperplane of co-dimension 2 in . Thus the homotopy group of Yi,j = − Oi,j is isomorphic to Z and is generated by a 1-dimensional loop that links with Oi,j in this space. Our first construction corresponding to the obstacle Oi,j is thus the following half-space:
Ui,j = {(x1, y1, x2, y2, · · · , xN , yN ) | xi = xj , yi < yj }
This a (2N − 1)-dimensional (co-dimension 1 in ) half-hyperplane with Oi,j at its boundary. Quite evidently Ui,j corresponds to the set of configurations where robot j is positioned right above (along positive Y direction) robot i in the planar domain. Thus, a path in the coordination space that intersects Ui,j corresponds to robot Rj crossing the +Y -ray (a ray pointing in the positive Y direction) emanating from robot Ri.
However, for another pair of indices, (i , j ), 1 ≤ i < j ≤ N , the obstacle Oi ,j in general intersects Ui,j in a (2N − 3)-dimensional half-hyperplane, and the space Ui ,j intersects Ui,j in a (2N − 2)-dimensional half-hyperplane. In particular,
Ui,j ∩ Oi ,j = {(x1, y1, x2, y2, · · · , xN , yN ) | xi = xj , xi = xj , yi < yj , yi = yj }
is of co-dimension 2 in Ui,j , and,
Ui,j ∩ Ui ,j = {(x1, y1, x2, y2, · · · , xN , yN ) | xi = xj , xi = xj , yi < yj , yi < yj }
is of co-dimension 1 in Ui,j (a half-hyperplane) and is non-empty. This is schematically shown in Fig. 7a.

Lemma 1 X− 1≤i<j≤N Ui,j = − 1≤i<j≤N Oi,j − 1≤i<j≤N Ui,j is path connected.
Sketch of proof Suppose p0 = (x10, y10, x20, y20, · · · , xN0 , yN0 ), p1 = (x11, y11, x21, y21, · · · , xN1 , yN1 ) ∈ X. If xi0 < xj0, but xi1 ≥ xj1, then whichever path, t → pt , t ∈ [0, 1], is chosen to connect p0 and p1, there will be a τ for which xiτ = xjτ . However, if at this point yiτ ≤ yjτ , then the path will be intersecting Oi,j or Ui,j . Clearly, this can be prevented by simply altering the yit and yjt in a small neighborhood of t = τ , without altering any other

152

S. Bhattacharya, R. Ghrist

Fig. 7 Schematic illustration of the intersection of the constructed half-spaces, U
coordinate and hence the alteration itself not leading to intersection with any other Ui ,j . Thus an arbitrary pair of points in X an be connected using a path that does not intersect any of the Ui,j ’s.
Intuitively, the above lemma implies that it is possible to move the robots from a general initial configuration to any general final configuration without having to have robot Rj cross the +Y -ray emanating from robot Ri for any i < j . Such a path can indeed be constructed by first moving all the robots along Y direction in order to have their Y coordinates in a decreasing order with respect to their indices, followed by moving the robots along the X direction to their destination X coordinates, followed by another move long Y direction to their destination Y coordinates.
Lemma 2 Any loop in linked only with Oi,j can be homotoped into any other loop linked only with Oi,j , through a sequence of loops linked to Oi,j ,
i. without intersecting Oi ,j . ii. not without intersecting Ui ,j if either i = i , j < j or i < i , j = j , otherwise without
intersecting Ui ,j .
Sketch of proof The proof is based on being able to construct, or an obstruction to constructing, a homotopy satisfying certain properties between small loops (in a tubular neighborhood of Oi,j ) lying in a plane transverse to Oi,j and linking to it.
Case I: Distinct i, j, i and j :
We first consider the case when i, j, i and j are all distinct. Consider a 2dimensional affine plane transverse to Oi,j described by Pi,j (c∗, d∗) = {(x1, y1, x2, y2, · · · , xN , yN ) | xi + xj = cij , yi + yj = dij , xk = ck, yk = dk, ∀k = i, j } (where c∗ and d∗ refers to the set of parameters describing the plane), and coordinatized by Xij = xi − xj and Yij = yi − yj (so that Oi,j intersects the plane at its origin).
The intersection of this plane with Oi ,j is, in general, empty except for carefully chosen values for the parameters (in particular, for parameters such that ci = cj , di = dj ), when

Path homotopy invariants and their application to optimal trajectory...

153

they intersect over the entire Pi,j (c∗, d∗). Likewise, the intersection of this plane with Ui ,j is, in general, empty except when the parameters are such that ci = cj , di < dj , when, again, they intersect at the entire Pi,j (c∗, d∗).
Given two such affine planes, Pi,j (c∗0, d∗0) and Pi,j (c∗1, d∗1), for two different sets of parameters, one can easily choose a path, t → (c∗t , d∗t ), t ∈ [0, 1], through the parameter space avoiding cit = cjt , dit = djt simultaneously at any t. This gives a homotopy for a loop in Pi,j (c∗0, d∗0) around the origin (linking with Oi,j ) to a loop in Pi,j (c∗1, d∗1) around the origin, without intersecting Oi ,j .
Similarly, it is possible to choose the path such that cit = cjt and dit < djt does not happen simultaneously.
Case II: i, j, i and j not all distinct:
Next consider the case when i, j, i , j are not distinct. Choose 1 ≤ m < n < p ≤ N to be the non-distinct indices such that either i = i = m < j = n < j = p, or i = m < i = n < j = j = p. Then the possible obstacles are Om,n, On,p and Om,p, with the indices of any pair of obstacle not all distinct.
Consider the plane Pm,n(c∗, d∗), on which xm + xn = cmn, ym + yn = dmn and xp = cp, yp = dp. This intersects obstacle On,p at points where xn = xp = cp and yn = yp = dp. This gives xm = cmn − cp, ym = dmn − dp. Thus, on the plane, the coordinates of the intersection point are Xmn = cmn − 2cp, Ymn = dmn − 2dp. Once again, it is possible to choose the path (c∗t , d∗t ) from (c∗0, d∗0) to (c∗1, d∗1) such that cmt n − 2cpt and dmt n − 2dpt are not simultaneously zero for any t ∈ [0, 1]. This argument also holds for the other two pairs of obstacles.
Again, using the chosen coordinates on Pm,n(c∗, d∗), Pm,n(c∗, d∗) intersects Un,p at the ray Xmn = cmn − 2cp, Ymn > dmn − 2dp, and intersects Um,p at the ray Xmn = cmn − 2cp, Ymn < −(dmn − 2dp). Because the rays point in opposite directions along the Xmn axis, given the parameters (c∗0, d∗0) and (c∗1, d∗1), it is always possible to find the path (c∗t , d∗t ) (in particular, dpt ) such that the rays of intersection with Un,p and Um,p on Pm,n(c∗t , d∗t ) does not pass through the origin (if cm0 n − 2cp0 and cm1 n − 2cp1 are of opposite signs, and if cmτ n − 2cpτ = 0 for some τ ∈ [0, 1], this can be achieved by choosing dmτ n − 2dpτ > 0). Similar argument holds for intersection of Pn,p(c∗, d∗) with Um,n and Um,p.
However, Pm,p(c∗, d∗) intersects Um,n at the ray Xmp = 2cn − cmp, Ymp < 2dn − dmp, and Un,p at the ray Xmp = 2cn − cmp, Ymp < −(2dn − dmp). These rays point in the same direction. Clearly, given the parameters (c∗0, d∗0) and (c∗1, d∗1), if 2cn0 − cm0 p and 2cn1 − cm1 p are of opposite sign, it is not possible to find the path (c∗t , d∗t ) such that neither of these rays of intersection do not pass through the origin in Pm,p(c∗t , d∗t ).
The intuition behind the above lemma is as follows: A small loop in neighborhood of Oi,j corresponds to Ri and Rj being close to each other and making a complete turn around each other, while other robots moving along small closed loops. The primary question that
the above lemma addresses is whether or not these loops can be moved around in the pla-
nar domain (configuration space) of the robots from any general initial to any general final position of the loops without having the “+Y -ray” emanating from robot Ri being crossed by robot Rj for any i < j . By using a similar argument as the intuitive description presented after Lemma 1, the answer to that question is “yes” for i and j distinct from i and
j . However, when i (alternatively, j ) is equal to i (alternatively, j ), and j < j (alternatively, i < i ), this is not possible. Noting that i = i < j (alternatively, i < j = j ) is true by definition, it is easy to see that moving Rj (alternatively, Ri ) either above or below the

154

S. Bhattacharya, R. Ghrist

Ri, Rj pair will result in either Rj (alternatively, Ri ) intersecting the +Y ray emanating from Ri, or Rj intersecting the +Y ray emanating from Rj (alternatively, Ri ).
The consequence of the Lemma 2 is that the obstruction to fundamental group of Xm,p = X − ∪(i ,j )=(m,p),1≤i <j ≤N Ui ,j being Z are the intersections of Um,p with Um,n and Un,p, for every n such that m < n < p. This leads us to split Um,p by the the hyperplane at which it is intersected by Um,n or Un,p, for every m < n < p. It can however be noted that for 1 ≤ m < n < p ≤ N , Um,p ∩ Um,n and Um,p ∩ Un,p are subsets of the same (2N − 2)-dimensional hyperplane. Thus we have the following splitting for Um,p only due to its intersection with Um,n and Un,p:

Um,p/− = {(x1, y1, x2, y2, · · · , xN , yN ) | xm = xp ≤ xn, ym < yp} Um,p/+ = {(x1, y1, x2, y2, · · · , xN , yN ) | xm = xp ≥ xn, ym < yp}

In general, we have partitions of the form

Um,p/σm+1,σm+2,··· ,σp−1 = (x1, y1, x2, y2, · · · , xN , yN ) | ym < yp,

xm xm

= xp = xp

≤ xn ≥ xn

if if

σn σn

=‘−’ =‘+’

,

∀

m

<

n

<

p

(1)

Note that the σ ’s are indexed by integers from m+1 to p −1 just for convenience (instead of indexing using 1, 2 · · · , p − m − 1).
The following is a direct consequence

Corollary 1 The fundamental group of

Xi,j/σi+1,σj+2,··· ,σj−1 := X −

Ui ,j /ςi +1,··· ,ςj −1

(i , j , ςi +1, · · · , ςj −1) = (i, j, σi+1, · · · , σj−1),

1 ≤ i < j ≤ N, ςk ∈ {+, −}∀i < k < j

is isomorphic to Z.

Thus, the (2N − 1) dimensional spaces, Um,p/σm+1,σm+2,··· ,σp−1 , where 1 ≤ i < j ≤ N , and σk is either ‘+’ or ‘−’, satisfy the conditions of Proposition 2. The set U is freely generated by letters, um,p/σm+1,σm+2,··· ,σp−1 , corresponding to each of these spaces.
4.1.2 The relation set

The relation set, R, contains the following types of words:
i. Due to the intersection of Um,p, Um,n and Un,p (m < n < p): Um,p, Um,n and Un,p intersect at a common (2N − 2)-dimensional hyperplane on which xm = xn = xp, and for ym < yn < yp. Let Pm,n,p(c∗, d∗) be a plane transverse to this intersection, coordinatized by Xmn = xm − xn and Xnp = xn − xp, so that Um,p ∩ Um,n ∩ Un,p intersects it at the origin on this plane. A loop around the origin in Pm,n,p(c∗, d∗) (Fig. 7b) has the following word:

“um,n/αm+1,··· ,αn−1 · um,p/σm+1,··· ,σn(1)=−,··· ,σp−1 · un,p/βn+1,··· ,βp−1 ·

u−m1,n/αm+1,··· ,αn−1

·

u−1
m,p/σm+1 ,···

,σn(2)

=+,···

,σp−1

·

un,p/βn+1,··· ,βp−1 ”

(2)

Path homotopy invariants and their application to optimal trajectory...

155

for any choice of signs αa, βb ∈ {+, −}, m < a < n, n < b < p, and σk =

αk, if m < k < n βk, if n < k < p

(in order to ensure non-empty intersection). Note that the sign

value of σn in the second letter of the word above is ‘−’, while it is ‘+’ in the fifth letter.

It can be noted that there exists non-empty intersection Um,p ∩ Um,n and Um,p ∩ Un,p

that are outside the aforementioned common intersection of the three (the former when

ym < yn, ym < yp ≤ yn and the later when yn < yp, yn ≤ ym < yp). These

intersections result in the following additional words in the relation set:

“um,n/αm+1,··· ,αn−1 · um,p/σm+1,··· ,σn(1)=−,··· ,σp−1 ·

u−m1,n/αm+1,··· ,αn−1

·

u−1
m,p/σm+1

,···

,σn(2)

=+,···

,σp−1

·

(3)

and

“um,p/σm+1,··· ,σn(1)=−,··· ,σp−1 · un,p/βn+1,··· ,βp−1 ·

u−1
m,p/σm+1

,···

,σn(2)

=+,···

,σp−1

·

un,p/βn+1,··· ,βp−1 ”

(4)

ii. Due to the intersection of Ui,j and Ui ,j (with i ≤ i ), where i, j, i , j are all distinct: Without loss of generality, assume either i < i or i = i , j < j . Ui,j and Ui ,j intersect at a (2N − 2)-dimensional hyperplane on which xi = xj , xi = xj . The letters
corresponding to these spaces simply commute. Thus we have the words:

“ui,j/σi+1,··· ,σj−1 · ui ,j /γi +1,··· ,γj −1 ·

u−i,j1/σi+1,··· ,σj−1

·

u−i ,1j

/γi

+1,··· ,γj

”
−1

(5)

for all σk, γl ∈ {+, −}

The relation set, R, thus consists of all the words of the forms described in (2), (3), (4) and (5).

4.1.3 Explicit example for N = 3

We consider the simple, yet non-trivial case of N = 3 (coordination space of 3 robots
navigating on a plane). The letters in U are u1,2, u2,3, u1,3/+ and u1,3/− corresponding to respectively crossing of the manifolds U1,2 = {p | x1 = x2, y1 < y2}, U2,3 = {p | x2 = x3, y2 < y3}, U1,3/+ = {p | x1 = x3 > x2, y1 < y3} and U1,3/− = {p | x1 = x3 < x2, y1 < y3}. The relation set consists of the following words:

R=

u1,2 u1,3/− u2,3 u−1,12 u−1,13/+ u−2,13, u1,2 u1,3/− u−1,12 u−1,13/+, u1,3/− u2,3 u−1,13/+ u−2,13

For simplicity, define a = u1,2, b = u1,3/+, c = u1,3/−, d = u2,3. Rewriting the relation set, R = {acda−1bd−1, aca−1b, cdbd−1}. This can be easily shown (by
isolating b by setting the last relation to identity, and substituting it in the other two relations) to be isomorphic to the group < a, c, d | acd(dac)−1, cda(dac)−1 >. Which in turn (using substitution p = cd, q = dac) can be shown to be isomorphic to the group < a, p, q | ap(pa)−1, aq(qa)−1 > (a commutes with both p and q, but p and q themselves do not commute). This is clearly the group Z×(Z∗Z). In fact, simply using geometric argu-
ments, it is easy to verify that the homotopy type of the coordination space of 3 robots on a plane is indeed that of S1 × (S1 ∨ S1) (see, for example, Corollary 2.1 of [14], or Figure 3
of [1]).

156

S. Bhattacharya, R. Ghrist

5 Simulation results
5.1 Knot and link complements
Given obstacles O ⊂ R3, and their “skeletons” (1-dimensional homotopy equivalents), O ⊆ O as polygons in R3, we first choose a projection map, p : R3 → R2, for the knot/link diagram. With this information, we implemented the automated construction of the surfaces, Ui, for the Dehn presentation of the knot/link complement, and the symmetrized relation set, R, by computing the self-intersections in p(O). We then used a uniform cubical discretization of R3 − O to construct the graph G as a discrete representation of the free space, and in the h-augmented graph, Gh, we find trajectories from (xs, “ ”) to (xg, ∗). We then employ a path shortening algorithm to shorten the obtained trajectories. All our implementations were done in C++ programming language and visualization were done using OpenGL. The program ran on a laptop running on a Intel i7-4500U processor @ 1.80GHz with 8 GB memory.
Figure 8a shows results in the complement of a trefoil knot. The inset figure shows the surfaces, Ui, used for Dehn presentation. The graph G was constructed out of uniform 100 × 100 × 100 cubical discretization of the environment. As seen in the figure, using the proposed search-based algorithm we computed 5 shortest paths in different homotopy classes and used path-shortening algorithms to shorten them to obtain the piece-wise linear paths. The entire computation (computation of the surfaces, the symmetrized relation set R, and computation of the 5 shortest trajectories) required about 8.1 s. Likewise, Fig. 8b shows results in the complement of a simple Hopf link, with the same discretization of the environment, and total computation time of about 8.2 s.
Figure 8c shows a much more complex obstacle involving a torus knot linked to a genus2 obstacle, and the entire computation of 20 trajectories took about 2.6 s. While in a complex space as this, the completeness of Dehn algorithm is not guaranteed, numerical computation still gives us reasonable results as can be seen in this simulation result.
It is interesting to observe that computing shortest paths in 5 different classes in the environments of Fig. 8a and b took significantly longer than the computation of 20 classes in the environment of Fig. 8c. This is because in Fig. 8c, although much more complex, the obstacles themselves occupy a large part of the environment. This significantly reduces the number of vertices and edges in the discrete graph representing the free configuration space. Thus the graph search runs much faster in the configuration space of Fig. 8c.

Fig. 8 Optimal trajectories (in discrete graph representation, followed by path shortening) in different homotopy classes in complements of knots and links. Insets show the surfaces, Ui

Path homotopy invariants and their application to optimal trajectory...

157

5.2 Coordination space of 3 robots navigating on a plane
Similar to the method described in Section 2.5, we implemented the graph search based approach for finding optimal paths in the coordination space of 3 robots navigating on a planar region. We constructed a graph using a uniform hyper-cubical discretization of the

Fig. 9 Paths in 5 different homotopy classes in the coordination space of 3 robots navigating on a plane for an initial configuration to a final goal configuration. The classes found are in ascending order of the sum of the lengths of the paths of the three robots (where length is induced by the Manhattan metric on the plane)

158

S. Bhattacharya, R. Ghrist

configuration space, = R6, placing a vertex in each cell, and establishing edges between neighboring cells that correspond to robot motions parallel to the coordinate axes. The optimality criteria in the A* search was chosen to be the sum of the total lengths of the paths (which, because of the chosen discretization, is the length due to the Manhattan metric on the plane) traversed by the robots. The h-augmented graph construction from this graph is similar to what has been described in Section 2.5. However for checking whether or not two h-signatures are the same, we use the Dehn algorithm on the presentation described in Example 4.1.3.
Figure 9 (also, in attached multimedia file) shows paths found in 5 different homotopy classes for the coordination space of 3 robots navigating on a plane. With the plane discretized into 7 × 7 grid, and the degree of each vertex in the corresponding joint configuration space being 124 (allowing each robot to move north, south, east or west, or stay in place), the computation of paths in 5 different homotopy classes in the coordination space took about 31.7 s. A careful observation of the figures will indeed reveal that the paths shown in each of the Fig. 9a–e correspond to the robots taking distinct homotopy classes in the joint configuration space.

5.3 Some remarks on number of Homotopy classes

As described earlier, we compute the paths in the different homotopy classes by executing graph search algorithms (Dijkstra’s/A*) on the h-augmented graph, Gh. As a result we obtain the paths in the different homotopy classes in order of their path lengths/costs. Technically, the number of homotopy classes in any of the configuration spaces described earlier infinite. This is because a path can loop/wind round an obstacle arbitrarily many times, thus creating arbitrarily many different homotopy classes. In the simulations we restrict ourselves to the computation of the first few homotopy classes in each configuration space since those are the classes that are most relevant in robotics applications.

6 Conclusion and future work
We presented explicit construction of presentations of the fundamental group of two different classes of spaces: Knot/link complements in Euclidean 3-dimensional spaces, and cylindrically deleted coordination space of multiple robots. We thus used graph searchbased optimal path planning method for computing optimal paths in different homotopy classes in such environments. These spaces are highly relevant in many robot motion planning problems, for example unmanned aerial vehicles (UAVs) navigating inside buildings, and multiple ground robots navigating on a plane. Being able to compute optimal paths in different homotopy classes allow us to efficiently solve motion planning problems for complex systems such as tethered robots and systems involving cables, and design strategies for effectively deploying groups of robots in coverage and exploration tasks.
Moving forward, we will use the developed technique for homotopy path planning in 3-dimensional spaces with obstacles for computing optimal traversable paths for tethered unmanned aerial vehicles (UAVs). One of the greatest challenges currently faced by UAVs is the limited battery life, which in turn limits the UAVs’ flight time. Having the UAV tethered to a power supply will help alleviate the problem. But in that case one needs to carefully plan paths that satisfy the cable length constraints and prevents the cable from getting tangled in obstacles. Since a real UAV experiment will involve significant amount of investment in terms of equipments, time and development of low-level controllers, we

Path homotopy invariants and their application to optimal trajectory...

159

believe an experiment as that is outside the scope of the current paper and will require significant deviation from the theoretical & algorithmic focus of the current paper. We thus propose such an experiment as a future work. But we believe that the new algorithmic tools proposed in this paper will be helpful in solving this real problem in 3-d.

Acknowledgements The authors acknowledge the support of federal contracts FA9550-12-1-0416 and FA9550-09-1-0643. The first author acknowledges the support of ONR grant number N00014-14-1-0510 and University of Pennsylvania subaward number 564436.

References
1. Arslan, O., Guralnik, D.P., Koditschek, D.E.: Coordinated robot navigation via hierarchical clustering. IEEE Trans. Robot. 32(2), 352–371 (2016). ISSN 1552-3098
2. Bhattacharya, S., Kim, S., Heidarsson, H., Sukhatme, G., Kumar, V.: A topological approach to using cables to separate and manipulate sets of objects. International Journal of Robotics Research, online first publication. https://doi.org/10.1177/0278364914562236 (2015)
3. Bhattacharya, S., Ghrist, R.: Path homotopy invariants and their application to optimal trajectory planning. In: Proceedings of IMA Conference on Mathematics of Robotics (IMAMR), St Anne’s College, University of Oxford, September 9-11 (2015)
4. Bhattacharya, S., Likhachev, M., Kumar, V.: Topological constraints in search-based robot path planning. Autonom. Robots, 1–18. ISSN 0929-5593. https://doi.org/10.1007/s10514-012-9304-1 (2012)
5. Bhattacharya, S., Lipsky, D., Ghrist, R., Kumar, V.: Invariants for homology classes with application to optimal search and planning problem in robotics. Ann. Math. Artif. Intell. (AMAI) 67(3), 251–281 (2013). https://doi.org/10.1007/s10472-013-9357-7
6. Birman, J.S.: Braids, Links and Mapping Class Groups, vol. 82. Princeton University Press (1975) 7. Canny, J., Reif, J.H.: New lower bound techniques for robot motion planning problems. In: Proc. 28th
Annu. IEEE Sympos. Found. Comput. Sci., pp. 49–60 (1987) 8. Cohen, D.C., Pruidze, G.: Motion planning in tori. Bull. Lond. Math. Soc. 40(2), 249–262 (2008).
https://doi.org/10.1112/blms/bdn005 9. Cormen, T.H., Leiserson, C.E., Rivest, R.L., Stein, C.: Introduction to Algorithms, 2nd edn. MIT Press
(2001) 10. Costa, A., Farber, M.: Motion planning in spaces with small fundamental groups. Commun. Contemp.
Math. 12(01), 107–119 (2010). https://doi.org/10.1142/S0219199710003750 11. Crowell, R.H.: On the van kampen theorem. Pac. J. Math. 9(1), 43–50 (1959) 12. Demyen, D., Buro, M.: Efficient triangulation-based pathfinding. In: AAAI’06: Proceedings of the 21st
National Conference on Artificial Intelligence, pp.ages 942–947. AAAI Press. ISBN 978-1-57735-281-5 (2006) 13. Epstein, D.B.A., Paterson, M.S., Cannon, J.W., Holt, D.F., Levy, S.V., Thurston, W.P.: Word Processing in Groups. Ak Peters Series Taylor & Francis (1992) 14. Fadell, E., Neuwirth, L.: Configuration Spaces Mathematica Scandinavica (1962) 15. Farber: Topological complexity of motion planning. Discret. Comput. Geom. 29(2), 211–221 (2003). https://doi.org/10.1007/s00454-002-0760-9. ISSN 1432-0444 16. Farber, M., Grant, M., Yuzvinsky, S.: Topological complexity of collision free motion planning algorithms in the presence of multiple moving obstacles, pp. 75–83. Contemporary Mathematics. American Mathematical Society, United States. ISBN 978-0-8218-4246-1 (2007) 17. Ghrist, R., LaValle, S.: Nonpositive curvature and Pareto optimal motion planning. SIAM J. Control Optim. 45(5), 1697–1713 (2006) 18. Govindarajan, V., Bhattacharya, S., Kumar, V.: Human-robot collaborative topological exploration for search and rescue applications. In: International Symposium on Distributed Autonomous Robotic Systems (DARS) (2014) 19. Greendlinger, E., Greendlinger, M.: On Dehn presentations and Dehn algorithms. Illinois J. Math. 30(2), 360–363, 06 (1986) 20. Grigoriev, D., Slissenko, A.: Polytime algorithm for the shortest path in a homotopy class amidst semialgebraic obstacles in the plane. In: ISSAC ’98: Proceedings of the 1998 International Symposium on Symbolic and Algebraic Computation, pp. 17–24. ACM, New York (1998) 21. Hatcher, A.: Algebraic Topology. Cambridge Univ Press (2001)

160

S. Bhattacharya, R. Ghrist

22. Hershberger, J., Snoeyink, J.: Computing minimum length paths of a given homotopy class. Comput. Geom Theory Appl 4, 331–342 (1991)
23. Kim, S., Bhattacharya, S., Kumar, V.: Path planning for a tethered mobile robot. In: Proceedings of IEEE International Conference on Robotics and Automation. Hong Kong, China, May 31 - June 7 (2014)
24. Lickorish, W.B.R.: An Introduction to Knot Theory. Graduate Texts in Mathematics. Springer, New York (1997). ISBN 9780387982540
25. Lyndon, R.C., Schupp, P.E.: Combinatorial Group Theory. Classics in Mathematics. Springer, Berlin (2001). ISBN 9783540411581
26. Mitchell, J.S.B., Sharir, M.: New results on shortest paths in three dimensions. In: Proceedings of the Twentieth Annual Symposium on Computational Geometry, pp. 124–133. ACM (2004)
27. Niblo, G.A., Reeves, L.D.: The geometry of cube complexes and the complexity of their fundamental groups. Topology 37(3), 621–633 (1998)
28. Schmitzberger, E., Bouchet, J.L., Dufaut, M., Wolf, D., Husson, R.: Capture of homotopy classes with probabilistic road map. In: International Conference on Intelligent Robots and Systems, vol.3, pp. 2317– 2322 (2002)
29. Scott, W.R., Scott, W.R.: Group Theory. Dover Books on Mathematics Series. Dover Publ. ISBN 9780486653778 (1964)
30. Tovar, B., Cohen, F., LaValle, S.M.: Sensor beams, obstacles, and possible paths. In: Workshop on the Algorithmic Foundations of Robotics, pp. 317–332 (2008)
31. Weinbaum, C.M.: The word and conjugacy problems for the knot group of any tame, prime, alternating knot. Proc. Amer. Math. Soc. 30(1), 22–26 (1971)

