Defence Technology 15 (2019) 582e606
Contents lists available at ScienceDirect
Defence Technology
journal homepage: www.elsevier.com/locate/dt

A review: On path planning strategies for navigation of mobile robot
B.K. Patle a, *, Ganesh Babu L b, Anish Pandey c, D.R.K. Parhi d, A. Jagadeesh e
a Department of Mechanical Engineering, CVR College of Engineering, Hyderabad, India b Department of Mechatronics Engineering, Tishik International University, Erbil, Iraq c Department of Mechanical Engineering, KITS University Bhubaneshwar, India d Department of Mechanical Engineering, NIT Rourkela, India e Department of Mechanical Engineering, KL University, Guntur, India

article info
Article history: Received 13 October 2018 Received in revised form 1 April 2019 Accepted 22 April 2019 Available online 27 April 2019
Keywords: Mobile robot navigation Path planning Classical approaches Reactive approaches Artiﬁcial intelligence

abstract
This paper presents the rigorous study of mobile robot navigation techniques used so far. The step by step investigations of classical and reactive approaches are made here to understand the development of path planning strategies in various environmental conditions and to identify research gap. The classical approaches such as cell decomposition (CD), roadmap approach (RA), artiﬁcial potential ﬁeld (APF); reactive approaches such as genetic algorithm (GA), fuzzy logic (FL), neural network (NN), ﬁreﬂy algorithm (FA), particle swarm optimization (PSO), ant colony optimization (ACO), bacterial foraging optimization (BFO), artiﬁcial bee colony (ABC), cuckoo search (CS), shufﬂed frog leaping algorithm (SFLA) and other miscellaneous algorithms (OMA) are considered for study. The navigation over static and dynamic condition is analyzed (for single and multiple robot systems) and it has been observed that the reactive approaches are more robust and perform well in all terrain when compared to classical approaches. It is also observed that the reactive approaches are used to improve the performance of the classical approaches as a hybrid algorithm. Hence, reactive approaches are more popular and widely used for path planning of mobile robot. The paper concludes with tabular data and charts comparing the frequency of individual navigational strategies which can be used for speciﬁc application in robotics. © 2019 The Authors. Production and hosting by Elsevier B.V. on behalf of China Ordnance Society. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/
4.0/).

1. Introduction
Initially, the application of a mobile robot was limited to manufacturing industries only. But nowadays, it is commonly used in the ﬁelds of entertainment, medicine, mining, rescuing, education, military, space, agriculture and many more. While performing the task of navigation, the robot is equipped with many intelligent equipments which are required to model the environment and localize its position, control the motion, detect obstacles, and avoid obstacles by using navigational techniques. Safe path planning (by detecting and avoiding the obstacles) from the initial position to the target position is the most important function of any navigational technique. Therefore, the proper selection of the navigational technique is the most important step in the path planning of a robot when working in a simple and complex environment. At present,
* Corresponding author. E-mail address: balu_patle@rediffmail.com (B.K. Patle). Peer review under responsibility of China Ordnance Society

many techniques have been developed by various researchers in the ﬁeld of mobile robot navigation and it is the most researched topic of today. Mobile robot navigation is classiﬁed into three categories: global navigation, local navigation and personal navigation. The capability to deﬁne the position of elements in the environment with respect to the reference axis, and to stir towards the pre-decided goal, is global navigation. Local navigation deals with the identiﬁcation of the dynamic conditions of the environment and the establishment of positional relationships among various elements. To handle the various elements of the environment relative to each other, by considering their position, is personal navigation. The basic steps involved in the functioning of the robot [1] are presented in Fig. 1.
In this paper, the navigation strategy has been classiﬁed based on the prior information of the environment required for path planning. It is broadly classiﬁed as global navigation and local navigation. In global navigation, the mobile robot must require the prior information of the environment, obstacle position and goal position whereas in local navigation the mobile robot does not require the prior information of the environment. Global

https://doi.org/10.1016/j.dt.2019.04.011 2214-9147/© 2019 The Authors. Production and hosting by Elsevier B.V. on behalf of China Ordnance Society. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

583

Fig. 1. Flow diagram for mobile robot navigation.

navigation strategy deals with a completely known environment. Local navigation strategy deals with the unknown and partially known environment. The path planning algorithm for a known environment is based on a classical approach such as CD, RA, and APF. These algorithms are traditional and have limited intelligence. Local navigational approaches are known as reactive approaches as they are more intelligent and able to control and execute a plan autonomously.
Many researchers have presented a survey paper on mobile robot navigation [2‒3] but these surveys are insufﬁcient to provide an in-depth analysis of individual navigational techniques. This proposed survey paper on mobile robot navigation aims to ﬁnd out the research gaps and scope of innovation in a particular area. It gives an in-depth analysis of an individual algorithm for a static environment, dynamic environment in presence of a moving obstacle and goal, simulation analysis, experimental analysis, multiple mobile robot navigation, hybridization with other intelligent techniques, application to a three-dimensional (3D) environment and application in military or defence equipment. The survey also highlights the differences between the classical and reactive approaches based on their effectiveness and application for the speciﬁc environment, such as the aerial, land, underwater, industrial and hazardous environment. In Ref. [2], the focus has been given mainly on the reactive approaches based on local sensor information, sliding mode control and decentralized MPC based approaches whereas in Ref. [3] it is limited to 3D path planning only.
Here, the navigation strategies have been classiﬁed as conventional and reactive approaches in Section 2. Section 3 provides the discussion on the literature survey followed by conclusion in Section 4.
2. Navigational techniques used for mobile robot navigation
For several decades, various researchers and scientists have provided numerous methodologies on navigational approaches. Various methods employed for navigation of a mobile robot are broadly classiﬁed into two categories i.e. classical and reactive approaches (Fig. 2).
2.1. Classical approaches
Initially, classical approaches were very popular for solving robot navigational problems because in those days artiﬁcially intelligent techniques had not been developed. By using classical approaches for performing a task, it is observed that either a result

Fig. 2. Classiﬁcation of mobile robot navigational approaches.
would be obtained, or it would be conﬁrmed that a result does not exist. The major drawback of this approach is high computational cost and failure to respond to the uncertainty present in the environment; therefore, it is less preferred for real-time implementation. CD, RA, and APF are some of the classical approaches which are reviewed here.
2.1.1. Cell decomposition (CD) approach This approach divides the region into non-overlapping grids
(cells) and uses connectivity graphs for traversing from one cell to another to achieve the goal. During traversing, pure cells (cells without obstacles) are considered to achieve path planning from the initial position to the target position. Corrupted cells (cells containing obstacles) present in the path are further divided into two new cells to get a pure cell and this pure cell gets added to the sequence while determining the optimal path from the initial position to the target position. In the CD approach, the initial position and target position are represented by the start and end cells. The sequence of pure cells that joins these positions shows the required path [4‒5]. The CD approach is classiﬁed as adaptive, approximate and exact.
In the exact cell decomposition [6‒7] shown in Fig. 3, cells do
Fig. 3. Exact cell decomposition.

584

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

not have a speciﬁc shape and size, but can be determined by the map of environment, shape, and location of the obstacle within it. This method uses the regular grid in various ways. Initially, the free space available in the environment is decomposed into small elements (trapezoidal and triangular) followed by a number to each element. Each element in the environment acts as a node for a connectivity graph. The adjacent nodes are then allowed to join in the conﬁguration space and a path in this chart compares to a diversion in free space, which is outlined by the succession of striped cells. A path in this diagram links to a network in free space, which is outlined by the succession of striped cells. This channel is then converted into a free path by interfacing the underlying arrangement to the objective design through the midpoints of the crossing points of the adjoining cells in the channel.
In approximate cell decomposition [8‒9], planning space has been used to deﬁne a regular grid which has a speciﬁc shape and size, hence it is easy to implement. In space, the boundaries of the object should not be matched to previously decided cell boundaries, hence it is termed as approximate. In this navigation method, if the object occupies the grid space then it is treated as an obstacle or else it is considered as blank space. In the process of pathﬁnding in the search area, the center of each cell is assumed as a node. Fig. 4 shows the 4 and 8 connected nodes system and the robot must travel diagonally between them. Adaptive cell decomposition understands the information present in free space and follows the basic concept of avoidance of the free space in regular cell decomposition. Samet [10] and Noborio [11] have proposed a quadtree-adaptive decomposition. It divides the environment into large sized cells but when the grid cell is partially occupied then it divides the cell into four equal subparts until it becomes empty. Fig. 5 shows the resulting map of the workspace in the presence of grid cells of different sizes touching the boundaries of the obstacles. This system suffers from a drawback that it cannot update the program when getting new data (new position of an obstacle) and hence it fails in dynamic environments. The path planning problem in high dimensional static conﬁguration spaces has been demonstrated by Lingelbach [12]. He solved the problem of path planning for chain-like robotic platforms and a maze-like environment. The application of a harmonic function to cell decomposition in a C shape obstacle environment is developed by Rosell et al. [13] whereas Sleumer et al. [14] have presented the path planning strategy for mobile robots using CAD-based information. Cai et al. [15] have presented a sensor based approximate cell decomposition strategy for classifying the multiple ﬁxed targets in a complex environment. The approach developed outperforms in a static environment with the shortest path and gives complete coverage of the environment. The same sensor-based cell decomposition model

Fig. 5. Adaptive cell decomposition.
is proposed by Dugarjav et al. [16] to deal with an unknown rectilinear workspace for the task of a mobile robot. They used the CD approach together with a laser scanning mechanism to avoid objects in unknown environments. Glavaski et al. [17] have presented a hybrid approach to ﬁll the gap between the theoretical achievements and practical considerations in path planning problems. They developed an APF-based exact cell decomposition path planner to reduce the computational cost. To perform in an uncertain environment, the FL along with CD is presented by Tunggal et al. [18] for real-time operation. To handle multiple activities at a time in the 3D environment, a greedy depth-ﬁrst search algorithm and GA-based cell decomposition approach for path planning of a manipulator is presented by Mark et al. [19]. Quantitative studies on the trajectories by varying the involved cell decomposition, the graph weights, and the procedure to calculate the waypoint were presented by Gonzalez et al. [20]. Application to an aerial navigation problem using cell decomposition approach for exploring the 3D environment was presented by Wahyunggoro et al. [21]. In this approach fuzzy logic is hybridized with the cell decomposition approach for guiding and controlling the aerial vehicle.
2.1.2. Roadmap approach (RA) The RA is also known as the highway approach. It is the way to
get from one place to another and the connection among the free spaces is represented by a set of one-dimensional curves [22]. When the roadmap is built, then it is utilized as an arrangement of homogeneous ways where the planner will seek to discover the ideal arrangement. Here, nodes play an important role in getting the desired path for the robot. The RA is used to ﬁnd the shortest

Fig. 4. Approximate cell decomposition (8-connected and 4-connected grids).

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

585

path from the robot's initial position to its target position; Voronoi and visibility graphs are used to develop the roadmap. The visibility graph method connects the initial and the goal position with nodes from the map. Fig. 6 represents the visibility graph in which the dark area shows obstacles and the dashed line shows the respective path from the initial position to the ﬁnal position [23]. This method is also used for an environment with polygonal obstacles in which the vertices of the polygon are represented by the nodes and edges as a connector between the nodes [24]. The Voronoi diagram [25‒ 27] is another roadmap algorithm used for the path planning of the robot. This method divides the region into sub-regions where all edges of the ﬁgure are constructed using equidistant points from the adjacent two points on the obstacle's boundaries. Fig. 7 represents the working of the Voronoi diagram. The application of the Voronoi diagram in the ﬁeld of mobile robot navigation around obstacles is presented in Refs. [28‒30]. To improve the performance and to eliminate drawbacks such as sharp turns and long loops in the Voronoi diagram, some improvement is provided for effective path planning [31]. The hybrid approach is developed by combining the visibility graph, Voronoi diagram and potential ﬁeld method [32] to get path optimality. It has been observed that the approach fails to get the optimal path and the execution process is complicated. To develop successful path planning using Voronoi diagrams, various strategies were implemented such as skeleton maps by Yang et al. [33]. A combined approach of using a visibility graph and a Voronoi diagram is presented by Wein et al. [34] to get the optimal route. Kavraki et al. [35] presented the application of probability for RA to understand and generate the solution to path planning. However, the approach is inefﬁcient in getting the optimum path length. To improve the process of ﬁnding the shortest path, Sanchez et al. [36] made a minor variation in the probabilistic roadmap approach (PRM). In their approach, the lazy-collisionchecking strategy has been presented with PRM to solve path planning problem of real environment. Navigation in a 3D environment for an unmanned aerial vehicle has been successfully tested by Yan et al. [37]. In this approach the road map approach is presented with a probabilistic formulation to control the ﬂight route.
2.1.3. Artiﬁcial potential ﬁeld (APF) approach Khatib [38] in 1986 presented the APF approach for mobile robot
navigation. According to him, the goal and obstacles act like charged surfaces and the total potential creates the imaginary force on the robot. This imaginary force attracts the robot towards the goal and keeps it away from an obstacle as shown in Fig. 8. Here, the robot follows the negative gradient to avoid the obstacle and reach the target point. Application of this method for mobile robot navigation is presented by Garibotto et al. [39]. A new obstacle avoidance strategy in an unknown environment is discussed by Kim et al. [40] by using APF. They used a harmonic function to avoid

Fig. 7. Voronoi diagram.
a local minimum problem. Borenstein et al. [41] have also presented a solution to the problem of the local minima conditions. In this research, they have considered the dynamic properties of robot navigation. The analysis of APF in the dynamic environment for obstacle avoidance is performed in Refs. [42‒43]. Some improvisation in the APF method is made by using laws of electrostatics [44]. Implementation of electrostatics helps to produce the potential function and to determine the collision-free path in real time. Moving obstacle avoidance in a real-time environment is not an easy task and hence Huang [45] developed a velocity controlling mechanism to understand the location and velocity of the obstacle while achieving the goal. To avoid local minima and to achieve global optima, the superior potential function and superior repulsive potential function were introduced by Shi et al. [46]. Sfeir et al. [47] solve the observed problem in mobile robot navigation by APF approaches such as oscillation and conﬂicts. They have presented an improved version of the APF to minimize the oscillation and conﬂicts when the goal is close to the obstacle. To test the applicability of the APF, Pradhan et al. [48] used the ROBOPATH simulation tool. Multiple mobile robots are considered for various environmental conditions and they observed better results in coordination strategy without collisions. To increase the performance of the APF path planner it is used with many techniques such as BFO [49], which is explained in Fig. 9, GA [50], PSO [51], and FL [52]. Navigation in three-dimensional aerial and underwater conditions is a challenging task but is made successful by using an APF approach by Cetin et al. [53] and Li et al. [54] respectively.
2.2. Reactive approaches
Recently, reactive approaches such as genetic algorithm, fuzzy logic, neural network, ﬁreﬂy algorithm, particle swarm optimization, ant colony optimization, bacterial foraging optimization, artiﬁcial bee colony, cuckoo search, shufﬂed frog leaping algorithm and other miscellaneous algorithms consisting invasive weed optimization, harmony search algorithm, bat algorithm, differential evolution algorithm and many more have been accepted as the most popular tool for mobile robot navigation over conventional approaches. They have a great ability to handle the uncertainty present in the environment. The various reactive approaches are discussed below.

Fig. 6. Visibility graph.

2.2.1. Genetic algorithm (GA) This is a popular search-based optimization tool which follows
the principle of genetics and natural selection discovered ﬁrst by Bremermann [55] in 1958. Its application to the ﬁeld of computer science was presented ﬁrst by Holland [56] in 1975. Nowadays, it has wide application in all areas of science and technology including robot navigation. Speciﬁcally, it deals with the optimization of difﬁcult problems wherein we must maximize or

586

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

Fig. 8. Mobile robot navigation by APF approach.

Fig. 9. Bacterial-Potential ﬁeld controller for navigation of mobile robots [52].

minimize the objective function value under given constraints. In this approach, the population (different individuals characterized by genes) must be allotted for the given problem and every member of the population is assigned with a ﬁtness value depending upon the objective function. These individuals are selected as per their ﬁtness value and allowed to pass their genes to a new generation by crossover. The mutation maintains the diversity in population and prevents premature convergence. Finally, the algorithm is terminated if the population has converged. Although the GA is randomized in nature to some extent, its performance is better as they can exploit historical information as well when compared to a random local search. The application of GA for the mobile robot navigation problem has been provided by Ref. [57] for a static environment. The analysis is presented by simulation results only in the presence of a polygonal obstacle. Classical approaches for

searching and optimization are very slow in real-time and hence Shing et al. [58] presented a real-time path planner. For an unknown environment, GA is a robust search method which requires very little information on the environment about searching efﬁciently. This method is adopted by Xiao et al. [59] to achieve the goal of navigation such as path length, path smoothness, and obstacle avoidance. The non-linear environmental problem of navigation for a dead end is addressed by Ref. [60] in tricky areas. For this, they have proposed an online training model for getting the ﬁttest chromosome to avoid any stuck situations and to ﬁnd a way out from such conditions. Most of the researchers have provided navigation in a static environment only by using GA but the navigation in the presence of a moving obstacle in an uncertain environment is proposed by Shi et al. [61]. To get better results in robot path planning, many researchers have combined the

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

587

application of GA together with another intelligent algorithm to get a hybrid approach, such as GA-FL [62], GA-NN [63] and GA-PSO [64]. Multi-robot path planning is one of the challenges in robotics. Kala [65] addressed the path planning strategy for multiple mobile robots by using GA. In his work, he developed the time efﬁcient coordination strategy for collision avoidance of multiple robots in a static environment. Similar to multiple robot path planning, the strategy for multiple goals is demonstrated in Ref. [66] for a static environment. Navigation in a dynamic environment for a multi-mobile robot system is solved by Yang et al. [67]. They have demonstrated the results in the presence of both static and dynamic obstacles. In many investigations, it is observed that the GA has some limitations such as slow convergence rate, absence of guaranty to get the optimal solution, time-consuming process in deciding the parameters for mutation rate and population size, etc. Hence, the modiﬁed GA path planner by implementing a co-evaluation mechanism among the population for robot navigation is presented by Hong et al. [68]. By modifying the GA, they have presented the optimized simulation results in terms of obstacle avoidance and path optimality for multiple robot systems in an unknown environment. For path optimization, another modiﬁed form of GA is presented by Jianjun et al. [69]. In their approach, the length of the chromosome is modiﬁed to get the best output. The GA approach responds to the environment (known and unknown) efﬁciently; hence it is adopted in the 3D path planning problem of underwater robot [70] and aerial robot [71‒72], and 2D path planning of a humanoid robot [73]. To deal with the problem of a moving target, Patle et al. [74] have provided the matrix binary code based genetic algorithm (MGA) in the complex environment for the single and multi-robot system. In this approach, the robot can easily track the moving obstacle and moving goal, and reaches the destination in a short period of time (Fig. 10). The GA approach is a commonly used intelligent technique for defence equipment. A demonstration of missile control, based on a combination of the GA approach and fuzzy logic, has been presented by Creaser et al. [75]. The GA plays an important role in generating the guidance law for the missile. A novel methodology based on GA for the military and ocean monitoring domain is provided by Iyer et al. [76]. They used GA to protect a high value military asset and to identify the optimal positioning strategy for underwater sensor network positioning and deployment.
2.2.2. Fuzzy logic (FL) The concept of FL was given ﬁrst by Zadeh [77] in 1965 and was
later on used in all the ﬁelds of research and development. It is used in situations where there is a high degree of uncertainty, complexity, and nonlinearity. Pattern recognition, automatic control, decision making, data classiﬁcation are a few of them. The hypothesis of the FL framework is encouraged by the noteworthy human ability to process perception-based information. It uses the human-supplied rules (If-Then) and converts these rules to their mathematical equivalents. This streamlines the job of the system designer and computer for getting more correct information about the way systems perform in the real world and hence it is used for path planning of a mobile robot. Fig. 11 explains a simple FL system with If-Then rules. A fuzzy (Sugeno) based navigation is presented by Zavlangas et al. [78] for the omnidirectional mobile robot. An automatic fuzzy rule generation system for obstacle avoidance is developed by Castellano et al. [79] for effective navigation. The navigation system in an unstructured static and dynamic environment is presented using FL which avoids the problems of navigation such as the continuous making of loops, backtracking [80], dead-end traps (U-shaped, maze, snails) [81‒82], steering from narrow passages [83], curved trajectory [84]. Nowadays, FL has been used in combination with the sensor based navigation

technique [85] to improve the incremental learning of the new environment; reinforced based navigation [86] to minimize the angular uncertainty and radial uncertainty present in the environment; and algorithm based navigation technique such as NN [87], GA [88], APF [89], ACO [90] and many more to achieve an optimal perception of the environment which enables the robot to manage a dead-end situation.
Navigation problems in the dynamic environment were solved by Khatib et al. [91] and Lee et al. [92] by introducing FL as a datadriven approach. Hoy et al. [93] presented the cooperative approach for navigation of multiple mobile robots in an unknown cluttered environment. To improve the capability of the robot in a moving condition, Kang et al. [94] and Al-Mutib et al. [95] presented a stereovision-based mechanism with FL. To track the moving object, Abadi et al. [96] designed the Mamdani based FL controller for a wheeled mobile robot. They used the PSO algorithm with FL as a hybrid approach to select the best parameters. The effective functioning of FL was presented by Castillo et al. [97] to maintain the diversity control in ACO and to avoid premature convergence. Al-Jarrah et al. [98] presented the path planning strategy for multiple mobile robot systems and active motion coordination between them by using a probabilistic fuzzy controller [99] with the NN. In this approach, a leader robot position will be followed by a follower robot. The ﬁrst order Sugeno fuzzy system was applied to the head robot in order get a high-level controller whereas the companion robot has a low-level controller. The learning strategy is developed by using the NN and efﬁcient fuzzy rules are tuned by ANFIS. The fuzzy-based strategy was applied for navigation of a humanoid robot in the 2D environment by Rath et al. [100]. The navigation in a 3D environment is one of the difﬁcult tasks which is addressed using fuzzy logic for path planning of aerial robots, and underwater robots by Abbasi et al. [101] and Xiang et al. [102] respectively. The FL approach has been used in the defence ﬁeld for controlling and guiding missiles, drones and underwater robots. Rajasekhar et al. [103] used fuzzy logic with PNG (proportional navigation) which generates acceleration commands for the missile using closing velocity and LOS (line-of-sight) rate as input variables. Lin et al. [104] demonstrated the fuzzy group decision support system for the selection of an appropriate UAV (unmanned aerial vehicle) for a military operation. In his work, fuzzy logic plays an important role in a multi-criteria decisionmaking problem by handling the linguistic as well as ordinary quantitative information.
2.2.3. Neural network (NN) Artiﬁcial NN is an intelligent system which consists of many
simple and highly interconnected processing elements. These elements transfer the information by their capability of dynamic state response to external inputs. The NN is basically shown by wellorganized layers of interconnected nodes. The nodes consist of an activation function. The input layer of the NN mechanism recognizes the patterns shown below in Fig. 12. These patterns then communicate to hidden layers for actual processing via a system of weighted connections. The hidden layers connect with the output layer to give the required answer. NN characteristics such as generalization ability, massive parallelism, distributed representation, learning ability and fault tolerance make it useful in the ﬁeld of mobile robot navigation. Janglova [105] presented the application of a NN for a wheeled mobile robot navigation in a partially unknown environment. He used two NN-based mechanisms for the development of a collision-free path. The ﬁrst neural mechanism ﬁnds the free space using sensory data and another NN ﬁnds a safe trajectory by avoiding the nearest obstacle. To avoid human guidance in the process of navigation, Qiao et al. [106] presented an automation learning strategy. The feature of their work is that,

588

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

Fig. 10. MGA (a) Flowchart (b) Crossover mechanism (c) Output in terms of heading angle [76].

Fig. 11. Basic FL controller.

according to the complexity of the environment, the NN adjusts insertion and deletion of new hidden layers during the training without human guidance to accomplish the navigation task. Li et al. [107] have presented the application of NN to Fast Simultaneous Localization and Mapping technique (Fast SLAM) to eliminate the

error accumulation produced by an incorrect odometry model and inaccurate linearization of the SLAM nonlinear function. The use of the NN with Fast SLAM enhances the mobile robot to navigate without collision with the obstacle in the unknown environment. To achieve the optimum result during a robot navigation operation,

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

589

Fig. 12. Architecture of NN.
various approaches are used together with the NN as a hybrid mechanism. Yong-Kyun et al. [108] have presented the combined effort of the NN with APF to get cooperative coordination and competitive coordination for behavior-based control.
Pothal et al. [109] have presented the hybrid approach of the NN and FL to take the beneﬁts of both the intelligent mechanisms for multiple mobile robot navigations in a disorderly conditions. The proposed work is analyzed in the presence of a static obstacle architecture (Fig. 13). Abu Baker [110] has presented a novel hybrid approach for mobile robot navigation by combining FL with the NN. The NN effectively ﬁnds the optimum number of activation rules to reduce computation for a real-time application. Pal et al. [111] have presented the application of the NN with sonar to mobile robot navigation. Medina-Santiago [112] have introduced a neural control system for the mobile robot in real time by using ultrasonic sensors. To improve the performance of the NN, Syed et al. [113] have modiﬁed the basic NN to form GAPCNN to get fast convergence of parameters for a mobile robot moving in a static and dynamic environment. The approach is modiﬁed by applying directional autowave control and accelerated ﬁring of neurons based on the dynamic thresholding strategy. A NN-based self-learning strategy for the mobile robot is presented by Markoski et al. [114]. Pattern recognition is used as a tool for mobile robot navigation in an unknown environment with a NN and is demonstrated by Quinonez et al. [115]. The NN is a widely applicable path planner approach due to its ability to learn and model non-linear and complex relationship. It requires minimum statistical training, explores
Fig. 13. The architecture of the Neuro-Fuzzy approach for mobile robot navigation [109].

complicated relationship between dependent and independent variables, is capable to detect and solve all probable interaction between predictors variable and gives multiple training algorithms, hence it is used in the path planning problem of humanoid robot [116] and industrial robot [117] in a 2D environment, underwater robot [118] and aerial robot [119] in 3D environment. In the defence and aerospace sector, there has been a notable increase in the number of sensors and data sources which are used for the guidance, navigation, targeting, commanding and controlling the equipment. Therefore, Bishop [120] provided the use of a NN for modeling the nonlinear mapping from the inputs from multiple sensors to the optimized output. He presented the NN based pattern classiﬁcation for target identiﬁcation and later it is widely used in military equipments. One more strategy based on NN for intelligent target system from the target echo signal of the highresolution range is presented by Avci et al. [121]. In this work, they have modeled the two-layer NN system i.e. wavelet and multilayer perception. The wavelet layer is used for feature extraction in the time-frequency domain and multi-layer perception for classiﬁcation.
2.2.4. Fireﬂy algorithm (FA) Yang [122] introduced the FA in 2008. It is inspired by the ﬁre-
ﬂies ﬂashing behavior, although it is also referred to as the metaheuristics algorithm. Its principle comprises random states and general identiﬁcation as trial and error of ﬁreﬂies which is existing in nature stochastically. The ﬁreﬂy is a winged beetle of the family Lampyridae and commonly is called a lightning bug due to its ability to produce light. It produces light by a process of oxidation of Luciferin in the presence of the enzymes Luciferase, which occurs very quickly. This process of producing light is known as bioluminescence and ﬁreﬂies use this light to glow without wasting heat energy. Fireﬂies use this light for selection of a mate, communicate a message and sometimes also for scaring off animals who try to eat them. The pseudo code and ﬂowchart for navigation of a robot using the FA are presented in Fig. 14. Recently the FA has been used as an optimization tool and its application is spreading in almost all areas of engineering such as mobile robot navigation. HidalgoPaniagua et al. [123] have presented a FA based mobile robot navigational approach in the presence of a static obstacle. They have achieved the three primary objectives of navigation such as path length, path smoothness, and path safety. Brand et al. [124] presented the FA for the shortest collision-free path for single mobile robot navigation in a simulational environment only. Sutantyon et al. [125] demonstrated the FA for the underwater mobile robot navigation. They developed the scheduling strategy for swarm robots to avoid interference and jamming in 3D marine conditioning. In the same environment [126], one more real-world underwater navigation problem in the partially known environment is addressed by them using the levy light-ﬁreﬂy based approach. The FA based cooperative strategy for detection of dead robots in a multi-mobile robot system is presented by Christensen et al. [127]. The application of FA to explore a 3D world for aerial navigation is developed and experimented by Wang et al. [128]. In their experiment, the improved version of FA is applied for path planning of an UCAV in the complex crowded environment and to avoid hazard areas and minimizing the fuel cost. The concentric sphere based modiﬁed FA algorithm has [129] been presented to avoid random moving of the ﬁreﬂies in less computational efforts. The experimental and simulational results show a great commitment in achieving the goals of navigation in a complex environment. The analysis of a FA in the presence of a variety of obstacles (concave, zigzag and convex) for a single as well as a multi-robot system is evaluated in Ref. [130]. A variety of experiments for robot path planning are performed by many researchers such as a

590

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

Fig. 14. FA pseudo code and ﬂowchart for navigation robot [136].

FA-vision-based system [131], FA-Q learning approach [132], FAABC hybrid approach [133] and many more. The speciﬁc application to a legged robot and underwater robot using FA is demonstrated by Tighzert et al. [134] and Liu et al. [135] respectively. Patle et al. [136] addressed the problem of navigation speciﬁcally in dynamic conditions. They used the FA to demonstrate the path planning approach in the presence of a moving goal and moving obstacle.
2.2.5. Particle swarm optimization (PSO) This is a nature-based metaheuristic algorithm which adopts the
social behavior of creatures such as ﬁsh schools and bird ﬂocks. It is developed by Eberhart and Kennedy [137] in 1995 and it is a rapidly growing optimization tool for solving the various problems of engineering and science. The PSO mimics the behavior of the social animal but does not require any leader within the group to reach the target. When the ﬂock of birds goes to ﬁnd food, they do not require any leaders; they go with one of the members who is at the nearest position to the food (Fig. 15). In this way, the ﬂock of birds reaches their required solution by proper communication with the members of the population. The PSO algorithm consists of a group of particles where each particle represents a potential solution. Nowadays, PSO is widely used in the ﬁeld of mobile robot navigation. Tang X. et al. [138] addressed the mapping and localization issues of mobile robot navigation in the unknown environment by using a multi-agent particle ﬁlter. The use of PSO helps to minimize the calculation and holds more stable convergence characteristics. To get an accurate trajectory and to avoid trapping in local optima Xuan et al. [139] have used a PSO algorithm with MADS algorithm (Mesh Adaptive Direct Search). Using the PSO MADS algorithm together gives an efﬁcient result over the GA and EKF (Extended Kalman Filter). Atyabi et al. [140] have developed the Area Extended PSO (AEPSO) as an extension of the basic PSO to address the dynamic and time-dependent constraint problems of mobile

robot navigation. The AEPSO approach is successfully implemented in search and rescue of survivors and bomb disarming. To handle the navigation of a multi-mobile robot system, Tang et al. [141] have addressed cooperative motion path planning in the complicated environment by using the PSO. The PSO in combination with the multibody system dynamics consisting of the properties of robotlike acceleration, mass, force, inertia which is then considered for investigation of fault tolerance of the proposed approach. Some modiﬁcation has been made by Couceiro et al. [142] for navigation of multiple mobile robots in the real world. They modiﬁed the form of PSO and Darwinian PSO (DPSO) system for obstacle avoidance and mutual communication issues. They found that in a system of 12 physical robots the efﬁciency achieved was up to 90% in a sense of maximum communication distance and global optimum. Chen et al. [143] have tried to develop the human expert control strategy with the learning-based ability for the uncertain environment by using a multi-category classiﬁer. For this, the PSO is used to get higher accuracy within the short time. In comparison with the conventional grid search, it gives higher accuracy.
Li et al. [144] have worked on a self-adaptive learning particle swarm optimization (SLPSO) approach as shown in Fig. 16 for solving the path planning problem of the robot in a complex environment under various constraints. Initially, they transformed the path planning problem into a minimization multi-objective optimization problem and achieved the objective of navigation such as path length, collision risk degree, and smoothness, and then a self-adaptive learning mechanism was implemented to improve the searchability of the PSO in the multi-constrained environment. To develop efﬁcient path planning, a hybrid approach has been given by Das et al. [145]. They presented the application of PSO and improved gravitational search algorithm (IGSA) as a hybrid methodology to evaluate the optimal path planning for multiple mobile robots in a cluttered environment. The use of PSO to underwater navigation problem in a complex 3D environment is studied by He

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

591

Fig. 15. Basics of PSO and pseudocode.

Fig. 16. SLPSO ﬂowchart for mobile robot navigation [144].

592

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

et al. [146]. In that work, the combined PSO-UFastSLAM approach has been used to improve the accuracy of estimation and to limit the particles to get better results. Similar to underwater robots, the PSO approach has been successfully implemented for navigation of an aerial robot in a 3D unknown environment [147], humanoid robot [148] and an industrial robot [149]. Algabri M et al. [150] have presented the comparison of various approaches such as GA, PSO, NN and FL to identify the best navigational control and concluded that the FL paired with PSO gives the optimal results in distance traveled. The applications of PSO are not limited to mobile robot navigation only in the defence sector. Banks et al. [151] have investigated the utilization of PSO for non-deterministic navigation of UAV and allowing them to work cooperatively toward the goal of protecting a wide area against airborne attack.
2.2.6. Ant colony optimization (ACO) This is a swarm intelligence algorithm developed by Marco
Dorigo in 1992 in his Ph.D. thesis [152]. It is a population-based approach used to solve the combinatorial optimization problem. The ACO algorithm originated from the behavior of ants and its ability to ﬁnd the shortest path from their nest to a food source (Fig. 17). The ACO algorithm is already applied to various ﬁelds of science and engineering such as job-shop scheduling, vehicle routing, quadratic assignment problem, travelling salesman problems, graph coloring and many more. Nowadays, the ACO is used to handle the mobile robot navigation problem for obstacle avoidance and effective path planning. Guan-Zheng et al. [153] presented the application of ACO for real-time path planning of mobile robots. The adoption of the ACO increases the convergence speed, solution variation, computational efﬁciency and dynamic convergence behavior when compared with other algorithms such as GA. Navigation for multiple mobile robots is presented by Liu et al. [154] by using ACO. They presented a collision avoidance strategy for various robot systems in a static environment. They used a special function to improve the selective strategy. When an ant ﬁnds a dead-corner then a penalty function is used for the trail intensity to avoid the path deadlock of the robot. An ACO-fuzzy based hybrid approach for mobile robot navigation is presented by Castillo et al. [155] for navigation in a static environment. An RA-ACO based approach for navigation of a humanoid robot is presented for a cluttered environment by Kumar et al. [156]. They tested the proposed approach for navigation of multiple humanoid robots in a real-time environment using Petri-Net and obtained a good commitment in simulation results and real-time results. To increase the performance of the present ACO approach in the static environment some modiﬁcation is suggested by Liu et al. [157]. According to them, convergence speed is the main contribution to performance. They combined pheromone diffusion and geometric local optimization for searching of the optimal path which results

in the current path pheromone diffusing in the direction of the potential ﬁeld force during the searching - ants tend to search for a higher ﬁtness subspace, and the search space of the pattern becomes smaller. A further modiﬁcation for the dynamic environment is presented by Rajput et al. [158]. They also presented a novel pheromone updating technique to avoid unnecessary looping and to achieve faster convergence. Purian et al. [159] have presented the application of the ACO algorithm for mobile robot navigation in an unknown dynamic environment. They have used the ACO for selection and optimization of the fuzzy rules. The pseudocode and ﬂow chart (Fig. 18) for analysis of a mobile robot over the same environmental setup in simulation and experiment is presented by Brand et al. [160]. Path planning in 3D for underwater vehicles is proposed by Liu et al. [161] using an ACO-based search algorithm whose purpose to is ﬁnd a collision-free path from the start position to the destination. To resolve the unmanned aerial vehicle route problem for a battleﬁeld, the ACO algorithm has been presented by Chen et al. [162] with reinforcement learning to improve the stagnation behavior and deﬁciency in searching speed of the original ant colony algorithm. Application of ant colony algorithm is also seen in the military equipment's. Gao et al. [163] presented the application of ACO for route planning of a missile with improved performance especially optimal route length and speed-up of the convergence rate of the optimal route search process.
2.2.7. Bacterial foraging optimization (BFO) algorithm Passino [164] in 2002 presented the new nature-inspired opti-
mization algorithm which is originated from the behavior of an E. coli and M. Xanthus bacteria. These bacteria search for nutrients by making the best use of energy achieved per unit time. The BFO algorithm is featured by chemotaxis that perceives chemical gradients by which bacteria communicate speciﬁc signals with each other. It has four basic principles such as chemotaxis, swarming, reproduction and elimination, and dispersal. The behavior of the bacteria [165] for searching the nutrient region is presented as below and explained in Fig. 19.
 Bacteria always travel in search of more nutrient regions on the map. Bacteria with sufﬁcient food have a longer life and split into two equal parts whereas bacteria in the lesser nutrient region will disperse and die.
 Bacteria present in the more nutrient region are attracted to others by chemical phenomenon and those who are in the lesser nutrient region give a warning signal to other bacteria using a speciﬁc signal.
 Bacteria get a highly nutrient region on the map.  Bacteria are dispersed again in the map for a new region of
nutrients.

Fig. 17. The behavior of ants while searching the food.

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

593

Fig. 18. ACO pseudo code and ﬂowchart for path planning of robot by Brand et al. [160].

Fig. 19. BFO pseudo code by Tan et al. [165].

The application of the BFO algorithm for mobile robot navigation in a static environment is provided ﬁrstly by Coelho et al. [166] with variable velocity based on uniform, Gauss, and Cauchy distribution. The same strategy in the presence of multiple obstacles is presented in Refs. [167e169] for navigation in a static environment. Real-time navigation in corridor, lobby and building ﬂoor environments for a single mobile robot system is presented by Gasparri et al. [170]. To improve the performance of a wheeled robot in path planning, an enhanced BFO algorithm is developed by Abbas et al. [171]. The developed approach models the environment using an APF technique over two opposing forces i.e. attractive force for the goal and repulsive force for the obstacles; the approach inspects negative feedback from the algorithm to select suitable direction vectors that guide the search process to the promising area with a better local search. The navigation in the presence of multiple robots is itself a challenging task; a BFO algorithm to deal with such a situation is presented by Jati et al. [172]. In their work, they hybridized the harmony search algorithm with BFO. Apart from the

application to the wheeled robot, the BFO algorithm has been tested successfully for an industrial manipulator - see Coelho et al. [173] who observed that the improved BFO gives better results compared to the classical BFO. The navigation problem of an UAV using BFO have presented by Oyekan et al. [174]. In this approach, the BFO has been presented with a proportional integral derivative (PID) controller to get optimal search parameters in 3D space and to avoid complicated modeling while tuning the controller for UAV.
2.2.8. Artiﬁcial bee colony (ABC) algorithm The ABC algorithm is a swarm-based intelligent approach
inspired by the activities of honey bees (Fig. 20) in search of food and is proposed by Kharaboga [175]. The ABC algorithm is a population-based strategy consisting of a population of inherent solutions (food source for bees). It is relatively simple in use, fast in processing and is a population-based stochastic search approach in the ﬁeld of swarm algorithms. The food search cycle of ABC consists of the following three rules.

594

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

Fig. 20. ABC structure with pseudo code.

 Sending the employed bees to a food source and evaluating the nectar quality.
 Onlookers choosing the food sources after obtaining information from employed bees and calculating the nectar quality.
 Determining the scout bees and sending them onto possible food sources.
The application of the ABC algorithm to mobile robot navigation in a static environment is presented by Contreras-Cruz et al. [176]. The developed approach uses ABC for a local search and evolutionary algorithm to deﬁne the optimal path. Real-time experiments in an indoor environment are presented for result validation. A similar approach in a static environment is also presented by Saffari et al. [177] but results are limited to simulational environments. To meet the goal of navigation in a real-time dynamic environment, the ABC based approach is presented by Ma et al. [178]. They presented a hybridized approach by combining the ABC algorithm with a time rolling window strategy. Multiple mobile robot navigation in an environment is a difﬁcult task, the implementation of ABC is done successfully in a static environment by Bhattacharjee et al. [179] and Liang et al. [180]. Similar to wheeled mobile robot navigation, the ABC algorithm is tested for aerial navigation [181], underwater navigation [182], and autonomous vehicle routine problems [183]. UCAV path planning aims to obtain an optimal ﬂight route in the 3D world by considering the threats and constraints in the combat ﬁeld. Li et al. [166.1] addressed this UCAV navigation problem using an improved ABC algorithm. The ABC algorithm is modiﬁed by a balance-evolution strategy (BES) which fully utilizes the convergence information during the iteration to manipulate the exploration accuracy and to pursue a balance between the local exploitation and global exploration capabilities. Application of the ABC algorithm in the defence sector has been provided by Ding et al. [166.2]. In their work, an unmanned helicopter has been tested for a challenging mission such as information gathering, accurate measurement, and border

patrol. Based on the ﬂight data collected from the experiments, they used a novel identiﬁcation algorithm consisting of a chaotic operator and ABC controller to identify the unknown parameters of the two decoupled linear models.
2.2.9. Cuckoo search (CS) algorithm The CS algorithm is a metaheuristic algorithm presented by
Yang and Deb [186] in 2009. The algorithm is based on the lazy behavior of some cuckoos for laying their own eggs in the nests of other host birds. According to Yang, the algorithm follows three basic rules for an optimization problem as follows.
 Each cuckoo lays one egg at a time in a randomly chosen nest.  The best nests with high-quality eggs will be carried over to the
next generation.  The number of available host nests is ﬁxed, and the egg laid by a
cuckoo may be discovered by the host bird with a probability pa 2 (0, 1). In this case, the host bird can either get rid of the egg or simply abandon the nest and build a completely new nest.
The CS algorithm is an improved method because it increases the convergence rate and efﬁciency hence it is widely accepted in various engineering optimization problem; mobile robot navigation is one area where performance and computational time is to be optimized. The general ﬂow chart of the CS algorithm is presented in Fig. 21. Research papers using the CS algorithm in mobile robot path planning are limited as it is a newly developed algorithm. The algorithm for navigation of a wheeled robot in a static environment is provided by Mohanty et al. [187]. The environment is partially unknown, and they have presented simulation and real-time experiments on a wheeled robot over the complex environment. The experimental and simulation results show good agreemnt as there is a much smaller deviation error. The CS-based algorithm performs well when hybridized with other navigational approaches. One

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

595

Fig. 21. The pseudo code of CS and Flowchart for CS based mobile robot navigation [187].

such approach is provided by Mohanty et al. [188]; in that approach, a hybrid of CS and ANFIS was presented for obtaining better results of navigation in an uncertain environment. Another hybrid path planning approach for an unknown 3D environment is suggested by Wang et al. [189] by combining the differential evolution algorithm with CS to accelerate the global convergence speed. The increased convergence speed helps the aerial robot to explore the 3-D environment. An application of the CS algorithm for exploring the 3D environment especially for a battleﬁeld has been presented by Xie et al. [170.1]. In their work, the hybrid approach (including CS and differential evolution algorithm) has been demonstrated for solving the 3D aerial path planning problem. The differential evolution is applied to optimize the process of selecting cuckoos of the improved CS model where the cuckoos can act as an agent in searching the optimal path.
2.2.10. Shufﬂed frog leaping algorithm (SFLA) This is a metaheuristic optimization approach developed by
Eusuff and Lansey [191] based on the behavior of frogs in search of

food as shown in Fig. 22. The SFLA has become popular in the ﬁeld of engineering optimization. Characteristics such as improved convergence speed, easy to implement, fewer parameters, higher success rate and better search capacity in presence of uncertainty make it unique over other metaheuristic algorithms. Nowadays, the application of SFLA is commonly observed for engineering optimization problems and navigation of a mobile robot is a typical example. Ni et al. [192] have developed a path planning strategy based on the median strategy for avoiding a local optimal solution problem. They modiﬁed the ﬁtness function for optimal path generation, obtaining the globally best frog, and its position is used to lead the movement of the robot in the presence of static and dynamic obstacles. A multi-objective approach based SFLA has been demonstrated by Hidalgo-Paniagua et al. [193] to achieve main targets of navigation such as path safety, path length, and path smoothness. The developed approach is then compared with the GA in a static condition; the result using the modiﬁed SFLA was much greater in the sense of path smoothness. A navigational strategy for 3D underwater conditions has studied and presented

Fig. 22. SFLA mechanism [194].

596

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

by Kundu et al. [194]. In their work, an adaptive SFLA navigational strategy for dynamic conditions is used while tracking the target. With the use of the adaptation technique, the path and required time of navigation are optimized by avoiding local minima situations (Fig. 23). Validation of simulation results with experimental results is presented with good agreement in a messy environment. A similar type of modiﬁed SFLA approach for mobile robot navigation is provided for solving UAV 3D path planning [195] and vehicle routing [196]. For defence applications, Liang et al. [197] developed an SFLA-based ﬂight control strategy for air-breathing hypersonic vehicles. To achieve the climbing, cruising and descending ﬂight control, a modiﬁed SFLA with the proportional integral derivative method is designed including the height loop, pitch angle loop, and velocity loop.
2.2.11. Other miscellaneous algorithm [OMA] Many researchers gave different intelligent techniques to
perform the task of mobile robot navigation in various environmental situations such as Invasive Weed Optimization (IWO) [198‒

200], Harmony Search (HS) Algorithm [201‒202], Bat Algorithm (BA) [203‒205], Differential Evolution (DE) Algorithm [206‒208], reactive obstacle avoidance based on boundary following using sliding mode control [209], collision avoidance based on geometric approach [210‒211] and many more.
3. Discussion
After a rigorous evaluation of the research papers cited in the literature, the navigational strategies are classiﬁed as classical approaches and reactive approaches. A few decades ago, most of the work in the ﬁeld of robotics was conducted using classical approaches only. Classical methods have several shortcomings such as computational intensiveness, trapping in local minima, inability in handling maximum uncertainty, demand for precise information about the environment, the requirement of an accurate sensing mechanism for real-time navigation and many more. Hence, in the adoption of the classical approach, there always remains doubt whether a solution will be obtained, or it would be assumed that

Fig. 23. Flowchart for a proposed adaptive version of SFLA [194].

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

597

Fig. 24. Classical Approaches comparison based on a paper published.
such a solution does not exist. The unpredictable and unreliable nature of these approaches makes their usage brittle in a real-time environment. Although many researchers have tried to estimate loopholes in the classical approaches and developed several new strategies such as APF and some hybrid algorithms, these strategies are not performing better in real-time conditions when compared to reactive approaches. Classical approaches are mainly adopted for navigation in a known environment as they require the initial information of the working environment. On the other hand, reactive approaches are used for navigation in an unknown environment due to their ability to tackle the high level of uncertainty present in the environment. They are easy to implement, intelligent and more efﬁcient; hence they are used for real-time navigation problems and give optimal results over classical approaches. Although reactive approaches are than classical approaches, they still have several disadvantages such as longer computational time, complex design, necessary learning phase, requires large memory, and unsuitable for low-cost robots. In Figs. 24e25, the comparison has been made based on the percentage of the paper published for individual classical and reactive approaches.
Table 1 provides a detailed analysis of the algorithms used for navigation of robots to date. The performance of each algorithm is judged based on parameters such as application as a hybrid algorithm, navigation in static and dynamic environments, application to multiple robot systems, results over simulational and real-time environments and kinematic analysis. Table 1 shows that research papers published on navigation of robots by using reactive approaches are comparatively more than classical approaches. In classical approaches, it is observed that the APF approach has been used very successfully for navigation of a robot around a static

obstacle, dynamic obstacle, and for dynamic goal conditions; it is applied for multiple mobile robot systems and presented for realtime application as compared to CD and RA. For the hybrid navigation system, the cell decomposition approach has been used more than APF and RA. In classical approaches, it is observed that use of the APF approach has increased in the last two decades for solving the navigational problem of a robot in partially known and unknown environments as compared to CD and RA. The charts in Fig. 26‒28 clearly represent that research papers based on dynamic obstacles and goals, multiple robot navigation and real-time applications using classical approaches are very few compared to reactive approaches.
Nowadays, reactive approaches are more popular as they have the ability to deal an uncertain environment quickly with less computational effort. In Fig. 29, implementation of classical and reactive approaches, arranged in decades, has been shown for robot navigation. It shows that the popularity of reactive approaches has increased from 0% to 95%, whereas the popularity of classical approaches has decreased from 95% to 5% in the year 1970e2018. In the 21st century, rapid growth is observed in the implementation of the reactive algorithm for mobile robot navigation. At the present time, more than 95% of work is being conducted using reactive algorithms only. Among the reactive approaches, the fuzzy-based approach is studied for path planning by various researchers followed by GA and NN respectively. In the ﬁeld of mobile robot navigation, the contribution of algorithms such as FL, GA, and NN is more than 50%. The newly developed metaheuristic algorithms such as FA, PSO, ACO, ABC, CS, SFLA, and OMA are rapidly growing approaches in the ﬁeld of mobile robot navigation and the applications of this algorithm are commonly seen everywhere. The contribution of this metaheuristic algorithm in the ﬁeld of robot navigation is about 50%. From Table 1, most of the reactive approaches such as FL, GA, NN, ACO, PSO, and FA have been used for the navigation in a dynamic environment in the presence of moving obstacles and moving goals. Algorithms such as SFLA, PSO, ABC, and BFO are newly developed approaches which have been successfully used for navigation in the presence of moving obstacles only. All reactive and classical approaches can handle the real-time navigational path planning problem as a standalone controller with greater efﬁciency except RA and CD. Multiple mobile robot navigation is one of the most challenging tasks for path planning and it requires a high level of intelligence to coordinate the robots. Almost all approaches, except CD, RA, SFLA, BFO, and OMA, handle the multi-robot problem accurately without collision. To solve the complex problem of navigation many researchers presented a hybrid navigational approach and, from the literature review, it is

Fig. 25. Reactive Approaches comparison based on a paper published.

598

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

Table 1 Analysis of various navigational techniques.

Ref. No. Navigational Techniques

Year Navigation in the presence of

Static

Dynamic

obstacle obstacle

Dynamic goal

Used as a Hybrid approach

Application to multiple mobile Real-time

robot systems

Result

Simulation Kinematic

Result

Analysis

[4]

Cell Decomposition

2007 Y

N

N

N

N

[6]

1983 Y

N

N

N

N

[7]

1993 Y

N

N

N

N

[8]

1991 Y

N

N

N

N

[9]

1995 Y

N

N

N

N

[11]

1990 Y

N

N

N

N

[12]

2004 Y

N

N

Y

N

[13]

2005 Y

N

N

Y

N

[14]

1999 Y

N

N

N

N

[15]

2009 Y

N

N

N

N

[16]

2013 Y

N

N

N

N

[17]

2009 Y

N

N

Y

N

[18]

2016 Y

N

N

Y

N

[19]

2010 Y

N

N

Y

N

[20]

2017 Y

N

N

N

N

[21]

2016 Y

N

N

Y

N

[22] Roadmap Approach

2000 Y

N

N

N

N

[23]

1989 Y

N

N

N

N

[28]

2011 Y

N

N

N

N

[29]

2010 Y

N

N

N

N

[30]

2009 Y

N

N

N

N

[31]

2008 Y

N

N

N

N

[32]

2004 Y

N

N

N

N

[33]

2007 Y

N

N

N

N

[34]

2007 Y

N

N

N

N

[35]

1996 Y

N

N

N

N

[36]

2001 Y

N

N

N

N

[37]

2013 Y

N

N

N

N

[38] Artiﬁcial Potential Field 1985 Y

N

N

N

N

[39] Approach

1991 Y

N

N

N

N

[40]

1992 Y

N

N

N

N

[41]

1989 Y

N

N

N

N

[42]

2002 N

Y

Y

N

N

[43]

2015 Y

Y

N

Y

N

[44]

2000 Y

N

N

N

N

[45]

2009 Y

Y

Y

N

N

[46]

2009 Y

N

N

N

N

[47]

2011 Y

N

N

N

N

[48]

2006 Y

N

N

N

Y

[49]

2018 Y

N

N

Y

N

[50]

2015 Y

N

N

N

N

[51]

2017 Y

N

N

Y

N

[52]

2012 Y

Y

Y

Y

N

[53]

2013 Y

N

N

N

N

[54]

2010 Y

N

N

N

N

[57] Genetic Algorithm

1993 Y

N

N

Y

N

[58]

1993 Y

N

N

N

N

[59]

1997 Y

N

N

N

N

[60]

2011 Y

N

N

N

N

[61]

2010 Y

Y

N

N

N

[62]

1999 Y

N

N

Y

N

[63]

2009 Y

N

N

N

N

[64]

2015 Y

Y

N

Y

N

[65]

2014 Y

N

N

N

Y

[66]

2014 Y

N

N

N

N

[67]

2006 Y

Y

N

N

Y

[68]

2013 Y

N

N

N

Y

[69]

2016 Y

N

N

N

Y

[70]

2018 Y

N

N

Y

N

[71]

2018 N

Y

Y

N

N

[72]

2018 N

Y

Y

Y

N

[73]

2018 Y

N

N

Y

Y

[74]

2017 Y

Y

Y

N

Y

[75]

1998 Y

N

N

Y

N

[76]

2011 Y

N

N

N

N

[78] Fuzzy Logic

2003 Y

N

N

N

N

[79]

1997 Y

N

N

N

N

[80]

2010 Y

N

N

N

N

N

Y

N

N

Y

Y

N

Y

Y

N

Y

Y

N

Y

N

N

Y

N

N

Y

N

N

Y

Y

N

Y

Y

N

Y

N

Y

Y

Y

N

Y

N

N

Y

N

N

Y

N

N

N

N

N

Y

Y

N

Y

Y

N

Y

N

N

Y

N

N

Y

N

N

Y

N

N

Y

N

N

Y

N

N

Y

N

N

Y

Y

N

Y

N

N

Y

N

Y

Y

N

N

Y

N

N

Y

N

N

Y

Y

N

Y

N

Y

Y

Y

N

Y

N

N

Y

N

N

Y

Y

N

Y

Y

N

Y

Y

N

Y

N

N

Y

N

Y

Y

Y

Y

Y

Y

N

Y

N

N

N

N

N

Y

Y

N

Y

N

N

Y

N

N

Y

N

N

Y

N

N

Y

N

N

Y

N

N

Y

N

N

Y

N

N

Y

N

N

Y

N

N

Y

N

N

Y

N

Y

Y

N

Y

Y

Y

N

Y

Y

N

Y

Y

Y

Y

N

Y

Y

N

N

Y

N

N

Y

Y

N

Y

N

Y

Y

N

N

Y

Y

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

599

Table 1 (continued )

Ref. No. Navigational Techniques

Year Navigation in the presence of

Used as a Hybrid

Static

approach Dynamic Dynamic

obstacle obstacle goal

Application to multiple mobile Real-time

robot systems

Result

Simulation Kinematic

Result

Analysis

[81]

2007 Y

N

N

Y

N

[82]

2009 Y

N

N

N

N

[83]

2008 Y

N

N

N

N

[84]

2011 Y

N

N

N

N

[85]

2003 Y

N

N

N

N

[86]

2011 Y

Y

Y

Y

N

[87]

1997 Y

N

N

Y

N

[88]

1995 Y

N

N

Y

N

[89]

2012 Y

Y

Y

Y

N

[90]

2018 Y

N

N

Y

N

[91]

2003 N

Y

N

Y

N

[92]

2012 Y

N

N

N

N

[93]

2012 Y

N

N

N

Y

[94]

2013 Y

N

N

N

N

[95]

2015 Y

N

N

Y

N

[96]

2015 Y

N

N

Y

N

[97]

2015 Y

N

N

Y

N

[98]

2015 Y

N

N

Y

Y

[99]

2016 Y

N

N

N

N

[100]

2018 Y

N

N

N

N

[101]

2017 Y

N

N

N

N

[102]

2018 Y

N

N

Y

N

[103]

2000 Y

N

N

N

N

[104]

2011 Y

N

N

N

N

[105] Neural Network

2004 Y

Y

Y

N

N

[106]

2009 Y

N

N

N

N

[107]

2015 Y

N

N

Y

N

[108]

2003 Y

N

N

Y

N

[109]

2015 Y

N

N

Y

Y

[110]

2012 Y

N

N

Y

N

[111]

1996 Y

N

N

N

N

[112]

2014 Y

N

N

N

N

[113]

2014 Y

N

N

N

N

[114]

2009 Y

N

N

N

N

[115]

2015 Y

N

N

N

N

[116]

2017 Y

N

N

N

N

[117]

2018 Y

N

N

N

N

[118]

2018 Y

N

N

N

N

[119]

2017 Y

N

N

N

N

[120]

1995 N

N

N

N

N

[121]

2005 Y

N

N

N

N

[123] Fireﬂy Algorithm

2015 Y

N

N

N

N

[124]

2013 Y

N

N

N

N

[125]

2015 Y

N

N

N

N

[126]

2003 Y

N

N

N

N

[127]

2008 Y

N

N

N

N

[128]

2012 Y

N

N

N

N

[129]

2017 Y

N

N

N

N

[130]

2013 Y

N

N

N

Y

[131]

2015 Y

N

N

N

N

[132]

2018 Y

N

N

N

N

[133]

2016 Y

N

N

Y

N

[134]

2018 Y

N

N

N

N

[135]

2015 Y

N

N

N

N

[136]

2018 Y

Y

Y

N

Y

[138] Particle Swarm

2014 Y

N

N

N

N

[139] Optimization

2013 Y

N

N

Y

N

[140]

2010 Y

Y

N

N

N

[141]

2011 Y

N

N

N

N

[142]

2013 Y

N

N

N

Y

[143]

2013 Y

N

N

Y

N

[144]

2018 Y

N

N

N

N

[145]

2016 Y

N

N

Y

Y

[146]

2015 Y

N

N

Y

N

[147]

2017 Y

N

N

N

N

[148]

2017 Y

N

N

Y

N

[149]

2017 Y

N

N

N

N

[150]

2015 Y

N

N

N

N

[151]

2008 Y

N

N

N

N

N

Y

Y

N

Y

N

N

Y

N

N

Y

Y

N

Y

N

Y

Y

Y

N

Y

N

N

Y

N

N

Y

N

N

Y

N

N

Y

N

Y

Y

Y

Y

Y

Y

Y

N

N

Y

Y

N

N

Y

Y

N

Y

N

Y

Y

Y

Y

Y

Y

Y

Y

N

N

Y

N

N

Y

N

N

Y

Y

N

Y

Y

Y

Y

N

Y

Y

N

Y

Y

N

Y

Y

N

Y

Y

N

N

Y

N

Y

Y

N

Y

Y

N

Y

Y

N

N

Y

N

Y

N

N

N

Y

Y

Y

Y

Y

N

Y

Y

Y

Y

Y

N

Y

N

N

Y

N

Y

N

N

Y

N

N

Y

N

Y

Y

N

N

Y

N

N

Y

N

Y

Y

Y

N

Y

N

Y

Y

Y

Y

Y

N

N

Y

Y

N

Y

Y

N

Y

Y

Y

Y

N

N

Y

N

Y

Y

Y

Y

Y

Y

N

Y

Y

Y

Y

Y

Y

Y

Y

Y

Y

N

Y

Y

N

Y

N

N

N

Y

Y

Y

Y

Y

N

Y

N

N

Y

N

N

Y

Y

(continued on next page)

600

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

Table 1 (continued )

Ref. No. Navigational Techniques

Year Navigation in the presence of

Static

Dynamic

obstacle obstacle

Dynamic goal

Used as a Hybrid approach

Application to multiple mobile Real-time

robot systems

Result

Simulation Kinematic

Result

Analysis

[153] Ant Colony Optimization 2007 Y

Y

Y

Y

Y

[154]

2006 Y

N

N

N

Y

[155]

2015 Y

N

N

Y

N

[156]

2018 Y

N

N

Y

Y

[157]

2017 Y

N

N

N

N

[158]

2017 Y

Y

N

N

N

[159]

2013 Y

N

N

Y

N

[160]

2010 N

Y

N

N

N

[161]

2008 Y

N

N

N

N

[162]

2009 Y

N

N

N

N

[163]

2012 Y

N

Y

N

N

[166] Bacterial Forging

2005 Y

N

N

N

N

[167] Optimization

2006 Y

N

N

N

N

[168]

2013 Y

N

N

N

N

[169]

2013 Y

N

N

N

N

[170]

2008 Y

N

N

N

N

[171]

2017 Y

Y

N

N

N

[172]

2012 Y

N

N

Y

N

[173]

2006 Y

N

N

N

N

[174]

2010 Y

N

N

N

N

[176] Artiﬁcial BEE Colony (ABC) 2015 Y

N

N

Y

N

[177] Algorithm

2009 Y

N

N

N

N

[178]

2010 Y

Y

N

N

N

[179]

2011 Y

N

N

N

Y

[180]

2015 Y

N

N

N

Y

[181]

2011 Y

N

N

N

N

[182]

2014 Y

N

N

N

N

[183]

2012 Y

N

N

N

N

[184]

2014 N

N

N

Y

N

[185]

2015 Y

N

N

N

N

[187] Cuckoo Search Algorithm 2016 Y

N

N

N

N

[188]

2015 Y

N

N

Y

Y

[189]

2012 Y

N

N

Y

N

[190]

2016 Y

N

N

N

N

[192] Shufﬂed Frog Leaping

2014 Y

Y

N

N

N

[193] Algorithm

2015 Y

N

N

N

N

[194]

2015 Y

N

N

N

N

[195]

2011 Y

N

N

N

N

[196]

2014 Y

N

N

N

N

[197]

2016 Y

Y

N

N

N

[198] Other Miscellaneous

2014 Y

N

N

N

N

[199] Algorithms

2011 Y

N

N

N

N

[200]

2009 Y

Y

N

N

N

[201]

2016 Y

N

N

N

N

[202]

2010 Y

N

N

N

N

[203]

2015 Y

N

N

N

N

[204]

2017 Y

N

N

N

N

[205]

2016 Y

N

N

Y

N

[206]

2008 Y

N

N

N

Y

[207]

2005 Y

N

N

N

N

[208]

2017 Y

N

N

N

N

[209]

2013 Y

N

N

N

N

[210]

2018 Y

N

N

N

N

[211]

2018 Y

Y

N

N

N

Y

Y

N

N

Y

N

N

Y

N

Y

Y

N

N

Y

N

Y

Y

N

N

Y

N

N

Y

N

N

Y

Y

N

Y

Y

N

Y

Y

N

Y

N

N

Y

N

N

Y

N

N

Y

N

N

Y

Y

N

Y

N

N

Y

N

N

Y

N

N

Y

Y

Y

Y

Y

N

Y

Y

N

Y

Y

N

Y

N

N

Y

Y

N

Y

Y

N

Y

N

N

Y

N

N

Y

Y

Y

Y

Y

Y

Y

N

Y

Y

N

N

Y

Y

N

Y

N

N

Y

N

N

Y

Y

Y

Y

Y

N

Y

Y

N

Y

Y

N

Y

Y

Y

Y

N

N

Y

Y

N

Y

Y

Y

Y

Y

N

Y

Y

N

Y

N

Y

Y

N

N

Y

Y

Y

Y

N

N

Y

N

Y

Y

Y

Y

Y

Y

N

Y

Y

N

Y

Y

Here Y stands for “Yes” and N stands for “No”.

observed that all approaches deal with it well except for SFLA, RA, CD and OMA.
The application of classical and reactive approaches has been studied over a 3D workspace for path planning of aerial and underwater vehicles. In Table 2, the applications of an individual algorithm for 3D path planning are shown and, from the data, it is clear that reactive approaches have been used more widely for exploring the 3D environment in the presence of maximum uncertainty compared with classical approaches. The classical approaches are not sufﬁciently intelligent for autonomous path planning in a 3D environment, hence to improve their performance they have been hybridized with the FL, GA, etc. Almost all reactive and classical approaches are used to tackle the path planning

problem in an aerial environment. The exceptions are harmony search, differential evolution and reactive obstacle avoidance based on boundary following using a sliding mode control approach. Similarly; CD, RA, BFO, CS, IWO, bat algorithms have not yet used for underwater path planning of mobile robots.
The discussion is further continued over the use of navigational approaches for mobile robot navigation in military or defence applications. In military applications, it is observed that reactive approaches have been used more than classical approaches due to the high exploring capacity of the environment, efﬁcient computing ability, quick action and response, ﬂexibility in operation, advanced intelligence system and self-decision-making ability. For an accurate self-governing system, the equipment needs to have a reliable

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

601

Fig. 28. Analysis of navigational techniques for application as a hybrid algorithm, multiple robot navigation system and kinematic analysis.

Fig. 26. Analysis of navigational techniques based on navigation over static and dynamic (obstacle and goal) conditions.

completely unknown environments. The reactive based algorithm provides the facility to handle these platforms without the physical presence of a human in the battle area and it can be controlled through a remote or GPS based system by sitting in a control room. In the future, it will be common to see solders are being replaced by robots and a technological war will result. In most defence equipment the FL, GA, and NN have been used as an intelligent approach for performing the task automatically. Classical approaches such as CD, RA and APF are not preferred for defence applications due to lack of intelligence, computationally intensiveness, trapping in local minima etc.

Fig. 27. Analysis of navigational techniques based on Real-time application and simulational application.
navigation system together with proper guidance and control to provide an appropriate path and to reach the destination. Nowadays, military equipment such as a submarine, anti-missile defence system, tanks, guns, drone, advanced war aircraft, missile, helicopter, etc. are used for dangerous situations and all these platforms use reactive intelligence approaches in partially and

4. Conclusion
This study on mobile robot navigation classiﬁes the various methods into classical and reactive approaches. The key points of the study are as follows.
 Reactive approaches perform better than classical approaches because they have a higher capability to handle uncertainty present in the environment.
 Reactive approaches are most preferably used for real-time navigation problems.
 Very few research papers are published based on a dynamic environment compared with a static environment.
 In a dynamic environment, there are many fewer papers on navigation of a robot for a moving goal problem compared with a moving obstacle problem.
 To date, most papers demonstrate only a simulation analysis; papers on the real-time application are much fewer.
 Papers on the navigation of multiple mobile robot systems are few compared with the single mobile robot system.
 There are many fewer papers on hybrid algorithms compared with those on standalone algorithms.
 There is great scope in applying newly developed algorithms such as SFLA, CS, IWO, BA, HS, DE, BFO, ABC and FA for navigation in an unknown complex environment in the presence of maximum uncertainty and these can be used to develop new kinds of hybrid approaches.
 The performance of classical approaches can be improved by hybridizing with reactive approaches.

602

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

Fig. 29. Development of mobile robot navigation approaches.

Table 2 Analysis of various navigational techniques in 3D workspace.

S.N.

Navigational Techniques

1

Cell Decomposition

2

Roadmap Approach

3

Artiﬁcial Potential Field

4

Genetic Algorithm

5

Fuzzy Logic

6

Neural Network

7

Fireﬂy Algorithm

8

Particle Swarm Optimization

9

Ant Colony Optimization

10

Bacterial Foraging Optimization

11

Artiﬁcial Bee Colony

12

Cuckoo Search

13

SFLA

14

Invasive Weed Optimization

15

Harmony Search

16

Bat Algorithm

17

Differential Evolution

18

Reactive obstacle avoidance based on boundary following using sliding mode control

19

Collision avoidance based on geometric approach

Application for 3D workspace
Aerial navigation
Y Y Y Y Y Y Y Y Y Y Y Y Y Y N Y N N Y

Underwater navigation
N N Y Y Y Y Y Y Y N Y N Y N Y N Y N N

Acknowledgment
This work is not funded and supported by any organization or institute.
References
[1] Patle BK. intelligent navigational strategies for multiple wheeled mobile robots using artiﬁcial hybrid methodologies. Thesis NIT Rourkela; 2016.
[2] Hoy M, Matveev AS, Savkin AV. Algorithms for collision free navigation of mobile robots in complex cluttered environments: a survey. Robotica 2015;33(Issue 03):463e97.
[3] Yang L, Qi J, Song D, Xiao J, Han J, Xia Y. Survey of robot 3D path planning algorithms. J Control Sci Eng 2016:5.
[4] Seda Milos. Roadmap methods vs. cell decomposition in robot motion planning. In: Proceeding of the 6th WSEAS international conference on signal processing, robotics and automation. World Scientiﬁc and Engineering Academy and Society (WSEAS); 2007. p. 127e32.
[5] Regli W. “Robot Lab: robot path planning,” Lecture notes of department of computer science. Drexel University; Oct 2007.
[6] Schwartz TJ, Sharir M. “On the “Piano Movers” Problem I. The case of a twodimensional rigid polygonal body moving amidst polygonal barriers. Commun Pure Appl Math 1983;36(3):345e98.
[7] Weigl M, Siemiaatkkowska B, Sikorski AK, Borkowski A. Grid-based mapping for autonomous mobile robot. Robot Autonom Syst 1993;11(1):13e21.
[8] Zhu D, Latombe JC. New heuristic algorithms for efﬁcient hierarchical path planning. IEEE Trans Robot Autom 1991;7(1):9e20.
[9] Conte G, Zulli R. Hierarchical path planning in a multi-robot environment with a simple navigation function. IEEE Transactions on Systems, Man and Cybernetics 1995;25(4):651e4.

[10] Samet H. “An overview of quadtree,” octrees and related hierarchical data structures. 1988. NATO ASI Series, F40.
[11] Noborio H, Naniwa T, Arimoto S. “A quadtree-based path-planning algorithm for a mobile robot. J Robot Syst 1990;7(4):555e74.
[12] Lingelbach F. Path planning using probabilistic cell decomposition. IEEE International Conference on Robotics and Automation 2004. https://doi.org/ 10.1109/ROBOT.2004.1307193.
[13] Rosell J, Iniguez P. Path planning using harmonic functions and probabilistic cell decomposition. IEEE International Conference on Robotics and Automation 2005. https://doi.org/10.1109/ROBOT.2005.1570375.
[14] Sleumer Nora, Tschichold-Gurmann, Nadine. “Exact cell decomposition of arrangements used for path planning in robotics”, technical report/ETH zürich. Department of Computer Science; 1999. https://doi.org/10.3929/ ethz-a-006653440.
[15] Cai Chenghui, Ferrari Silvia. Information-driven sensor path planning by approximate cell decomposition. IEEE Transactions on Systems, Man, and Cybernetics, Part B (Cybernetics) June 2009;39(3). https://doi.org/10.1109/ TSMCB.2008.2008561.
[16] Dugarjav Batsaikhan, Lee Soon-Geul, Kim Donghan, Kim Jong Hyeong, Chong Nak Young. Scan matching online cell decomposition for coverage path planning in an unknown environment. Int J Precis Eng Manuf 2013;14(9):1551e8.
[17] Dusan Glavaski, Volf Mario, Bonkovic Mirjana. Robot motion planning using exact cell decomposition and potential ﬁeld methods. In: Proceedings of the 9th WSEAS international conference on Simulation, modelling and optimization. World Scientiﬁc and Engineering Academy and Society (WSEAS); 2009.
[18] Tunggal, Padang Tatiya, et al. Pursuit algorithm for robot trash can based on fuzzy-cell decomposition. Int J Electr Comput Eng 2016;6(6):2863e9. https://doi.org/10.11591/ijece.v6i6.10766.
[19] Mark A, Gill C, Albert Y, Zomaya. A cell decomposition-based collision avoidance algorithm for robot manipulators. Cybern Syst 2010;29(2):

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

603

113e35. https://doi.org/10.1080/019697298125759. [20] Gonzalez R, Kloetzer M, Mahulea C. Comparative study of trajectories
resulted from cell decomposition path planning approaches. In: System theory, control and computing (ICSTCC), 21st international conference on. IEEE; 2016. p. 49e54. [21] Wahyunggoro O, Cahyadi AI. Quadrotor path planning based on modiﬁed fuzzy cell decomposition algorithm. Telkomnika 2016;14(2). [22] Choset, Howei Burdick, Joel. Sensor-based exploration: the hierarchical generalized Voronoi graph. Int J Robot Res 2000;19(2):96e125. [23] Lulu L, Elnagar A. A comparative study between visibility-based roadmap path planning algorithms. In: 2005 IEEE/RSJ international conference on intelligent robots and systems; 2005. p. 3263e8. [24] Berg MD, Kreveld MV, Overmars MM, Schwarzkopf OC. Computational geometry, vols. 1e17. Springer Berlin Heidelberg; 2000. [25] Choset H, Lynch KM, Hutchinson S, Kantor G, Burgard W, Kavriki LE, Thrun S. Principles of robot motion. Cambridge, MA: MIT Press; 2005. [26] Takahashi O, Schilling RJ. Motion planning in a plane using generalized Voronoi diagrams. IEEE Trans Robot Autom 1989;5(2):143e50. [27] Dunlaing CO, Yap CK. A retraction method for planning the motion of a disc. J Algorithms 1985;6:104e11. [28] Garrido S, Moreno L, Blanco D, Jurewicz P. Path planning for mobile robot navigation using Voronoi diagram and fast, marching. Int J Robot Autom 2011;2(1):42e64. [29] Masehian E, Naseri A. Mobile robot online motion planning using generalized Voronoi graphs. J Ind Eng 2010;5:1e5. [30] Shkolink E, Tedrake R. Path planing in 1000þdimension using a task-space Voronoi bias. In: IEEE international conference on robotics and automation; 2009. [31] Bhattacharya P, Gavrilova ML. Roadmap-based path planning-using the Voronoi diagram for a clearance for a clearance-based shortest path. IEEE Robot Autom Mag 2008;15(2):58e66. [32] Masehian E, Amin-Naseri MR. A Voronoi diagram-visibility graph-potential ﬁeld compound algorithm for robot path planning. J Robot Syst 2004;21: 275e300. [33] Yang DH, Hong SK. A roadmap construction algorithm for mobile robot path planning using sleton maps. Adv Robot 2007;21(1e2):51e63. [34] Wein R, Van Den Berg JP, Halperin D. The visibility-voronoi complex and its application. Comput Geom 2007;36:66e87. [35] Kavraki LE, Svestka P, Latombe JC, Overmars MH. Probabilistic roadmaps for path planning in high dimensional conﬁguration spaces. IEEE Trans Robot Autom 1996;12:566e80. [36] Sanchez G, Latombe J. A single-query bidirectional probabilistic roadmap planner with lazy collision checking, vol. 6. Springer Tracts in Advanced Robotics; 2001. p. 403e17. [37] Yan F, Liu YS, Xiao JZ. Path planning in complex 3D environments using a probabilistic roadmap method. Int J Autom Comput 2013;10(6):525e33. [38] Khatib O. Real time obstacle avoidance for manipulators and mobile robots. In: IEEE international conference on robotics and automation, Missouri, vols. 25e28; Mar 1985. p. 500e5. [39] Garibotto G, Masciangelo S. Path planning using the potential ﬁeld approach for navigation. In: Fifth international conference on advanced robotics, pisa, Italy, vols. 19e22; June 1991. p. 1679e82. [40] Kim JO, Khosla PK. Real-time obstacle avoidance using harmonic potential functions. IEEE Trans Robot Autom 1992;8(3):338e49. [41] Borenstein J, Koren Y. Real-time obstacle avoidance for fast mobile robots. IEEE Transactions on Systems, Man and Cybernetics 1989;19(5):1179e87. [42] Ge SS, Cui YJ. Dynamic motion planning for mobile robots using potential ﬁeld method. Aut Robots 2002;13(3):207e22. [43] Montiel Oscar, Orozco-Rosas Ulises, Sepúlveda Roberto. Path planning for mobile robots using Bacterial Potential Field for avoiding static and dynamic obstacles. Expert Syst Appl 2015;42(Issue 12):5177e91. https://doi.org/10. 1016/j.eswa.2015.02.033. [44] Valavanis KP, Hebert T, Kolluru R, Tsourveloudis N. Mobile robot navigation in 2D dynamic environments using an electrostatic potential ﬁeld. IEEE Trans Syst Man Cybern A Syst Hum 2000;30(2):187e96. [45] Huang L. Velocity planning for a mobile robot to track a moving target-a potential ﬁeld approach. Robot Autonom Syst 2009;57(1):55e63. [46] Shi P, Zhao Y. An efﬁcient path planning algorithm for mobile robot using improved potential ﬁeld. In: IEEE international conference on robotics and biomimetics, guilin, China, december, vols. 19e23; 2009. p. 1704e8. [47] Sfeir J, Saad M, Saliah-Hassane H. An improved artiﬁcial potential ﬁeld approaches to real-time mobile robot path planning in an unknown environment. In: IEEE international symposium on robotic and sensors environments, montreal, Canada, september, vols. 17e18; 2011. p. 208e13. [48] Pradhan SK, Parhi DR, Panda AK, Behera RK. Potential ﬁeld method to navigate several mobile robots. Appl Intell 2006;25(3):321e33. [49] Orozco-Rosas U, Montiel O, Sepúlveda R. Parallel bacterial potential ﬁeld algorithm for path planning in mobile robots: a gpu implementation. In: Fuzzy logic augmentation of neural and optimization algorithms: theoretical aspects and real applications. Springer; 2018. p. 207e22. [50] Raja Rekha, Dutta Ashish, Venkatesh KS. New potential ﬁeld method for rough terrain path planning using genetic algorithm for a 6-wheel rover. Robot Autonom Syst October 2015;72:295e306. https://doi.org/10.1016/j. robot.2015.06.002. [51] Kuo Ping-Huan, li Tzuu-Hseng s, Chen Guan-Yu, Ho Ya-Fang, Lina Chih-Jui.

Migrant-inspired path planning algorithm for obstacle run using particle swarm optimization, potential ﬁeld navigation, and fuzzy logic controller. Knowl Eng Rev 2017;32(e5):1e17. https://doi.org/10.1017/ S0269888916000151. Cambridge University Press. [52] Abdel Kareem Jaradat Mohammad, Garibeh Mohammad H, Feilat Eyad A. Autonomous mobile robot dynamic motion planning using hybrid fuzzy potential ﬁeld. Soft Computing 2012;16(1):153e64. [53] Cetin O, Zagli I, Yilmaz G. Establishing obstacle and collision free communication relay for UAVs with artiﬁcial potential ﬁelds. J Intell Robot Syst 2013;69(1e4):361e72. [54] Li X, Zhu D. Path planning for autonomous underwater vehicle based on artiﬁcial potential ﬁeld method. Shanghai Haishi Daxue Xuebao 2010;31(2): 35e9. [55] Bremermann HJ. “The evolution of intelligence. The Nervous system as a model of its environment,” Technical Report no.1, contract no. 477(17). Washington, Seattle: Dept. Mathematics, Univ.; July 1958. [56] J. H. Holland, “Adaptation in natural and artiﬁcial systems. Ann Aebor,” MI: University of Michigan Press. [57] Shibata T, Fukuda T. Robot motion planning by genetic algorithm with fuzzy critic. In: Proc. 8th IEEE international symp. On intelligent control; Aug 1993. p. 565e70. [58] Shing MT, Parkar GB. Genetic algorithm for the development of real-time multi-heuristic search strategies. In: Proc. 5th conf. On genetic algorithm. Los Aitos, California: Morgan Kaumann Publication; 1993. p. 565e70. [59] Xia J, Michalewicz Z, Zhang L, Trojanowski K. Adaptive evolutionary planner/ navigator for mobile robot. IEEE Transcation on Evolutionary Computation Apr 1997;1(1). [60] Kang X, Yue Y, Li D, Maple C. Genetic algorithm based solution to dead problems in robot navigation. Int J Comput Appl Technol 2011;41(¾): 177e84. [61] Shi P, Cui Y. Dynamic path planning for mobile robot based on genetic algorithm in unknown environment. In: Proceedings of the ChineseControl and decision Conference,Xuzhou, China; May 2010. p. 4325e9. [62] Pratihar DK, Deb K, Ghosh A. Fuzzy-Genetic algorithm and time-optimal obstacle free path generation for mobile robots. Eng Optim 1999;32(1): 117e42. [63] Hui NB, Pratihar DK. A comparative study on some navigation schemes of a real robot tackling moving obstacles. Robot Comput Integrated Manuf 2009;25:810e28. [64] Wang X, Shi Y, Ding D, Gu X. Double global optimum genetic algorithmparticle swarm optimization-based welding robot path planning. Eng Optim 2016;48(2):299e316. [65] Kala R. Coordination in navigation of multiple mobile robots. Cybern Syst 2014;45(1):1e24. [66] Liu F, Liang S, Xian X. Optimal robot path planning for multiple goals visiting based on Tailored genetic algorithm. Int J Comput Intell Syst 2014;7(6): 1109e22. [67] Yang SX, Hu Y, Meng. A knowledge based GA path planning of multiple mobile robots indynamic environments. In: 2006 IEEE conference on robotics. Bangkok, Thailand: Automation and Mechatronics; 2006. p. 1e6. [68] Qu Hong, Xing Ke, Alexander T. An improved genetic algorithm with coevolutionary strategy for global path planning of multiple mobile robots. Neurocomputing 2013;120:509e17. [69] Ni Jianjun, Wang Kang, Huang Haohao, Wu Liuying, Luo Chengming. Robot path planning based on an improved genetic algorithm with variable length chromosome. In: 12th international conference on natural computation, fuzzy systems and knowledge discovery (ICNC-FSKD); 2016. https://doi.org/ 10.1109/FSKD.2016.7603165. [70] Chen JiaWang, et al. Research on fuzzy control of path tracking for underwater vehicle based on genetic algorithm optimization. Ocean Eng 2018;156: 217e23. [71] Roberge Vincent, Tarbouchi Mohammed, Labonte Gilles. Fast genetic algorithm path planner for ﬁxed-wing military UAV using GPU. IEEE Trans Aerosp Electron Syst 2018. https://doi.org/10.1109/TAES.2018.2807558. [72] Roberge Vincent, Tarbouchi Mohammed. Massively parallel hybrid algorithm on embedded graphics processing unit for unmanned aerial vehicle path planning. International Journal of Digital Signals and Smart Systems 2018;2(1):68e93. [73] Kumar A, Kumar Priyadarshi Biplab, Parhi Dayal R. Intelligent navigation of humanoids in cluttered environments using regression analysis and genetic algorithm. Arabian J Sci Eng 2018:1e24. [74] Patle BK, K Parhi DR, Jagadeesh A, Kashyap Sunil Kumar. Matrix-binary codes based genetic algorithm for path planning of mobile robot. Comput Electr Eng 2018;67:708e28. [75] Creaser PA, Stacey BA, White BA. Evolutionary generation of fuzzy guidance laws. no. 455. In: UKACC international conference on Control’98, UK, vol. II; 1998. p. 883e8. September 1e 4. [76] Lin KP, Hung KC. An efﬁcient fuzzy weighted average algorithm for the military UAV selecting under group decision-making. Knowl Base Syst 2011;24(6):877e89. [77] Zadeh LA. Fuzzy sets. Inf Control 1965;8(3):338e53. [78] Zavlangas PG, Tzafestas SG. Motion control for mobile robot obstacle avoidance and navigation: a fuzzy logic-based approach. Syst Anal Model Simulat 2003;43(12):1625e37. [79] Castellano G, Attolico G, Distante A. Automatic generation of fuzzy rules for

604

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

reactive robot controllers. Robot Autonom Syst 1997;22(2):133e49. [80] Abiyev R, Ibrahim D, Erin B. Navigation of mobile robot in presence of ob-
stacles. Adv Eng Software 2010;41(10):1179e86. [81] Ge SS, Lai X, Mamun A. Sensor-based path planning for nonholonomic mo-
bile robots subject to dynamic environment. Robot Autonom Syst 2007;55(7):513e26. [82] Motlagh O, Hong TS, Ismail N. Development of new minimum avoidance systems for a behavior-based mobile robot. Fuzzy Sets Syst 2009;160: 1929e46. [83] Huq R, Mann G, Gosine R. Mobile robot navigation using motor schema and fuzzy context dependent behavior modulation. Appl Soft Comput 2008;8: 422e36. [84] Moustris GP, Tzafestas SG. Switching fuzzy tracking control for mobile robots under curvature constraints. Contr Eng Pract 2011;19:45e53. [85] Carelli R, Freire EO. Corridor navigation and wall-following stable control for sonar-based mobile robots. Robot Autonom Syst 2003;45:235e47. [86] Jaradat MAK, Al-Rousan M, Quadan L. Reinforcement based mobile robot navigation in dynamic environment. Robot Comput Integrated Manuf 2011;27:135e49. [87] Tschichold-Gurman N. The neural network model Rule-Net and its application to mobile robot navigation. Fuzzy Sets Syst 1997;85:287e303. [88] Homaifar A, McCormick E. Simultaneous design of membership function and rule sets for fuzzy controllers using genetic algorithm. IEEE Trans Fuzzy Syst 1995;3(2):129e38. [89] Jaradat M, Garibeh M, Feilat EA. Autonomous mobile robot planning using hybrid fuzzy potential ﬁeld. Soft Computing 2012;16:153e64. [90] Yen Chih-Ta, Cheng Ming-Feng. A study of fuzzy control with ant colony algorithm used in mobile robot for shortest path planning and obstacle avoidance. Microsyst Technol 2018;24(1):125e35. [91] Khatib M, Saade J. An efﬁcient data-driven fuzzy approach to the motion planning problem of a mobile robot. Fuzzy Sets Syst 2003;134:65e82. [92] Lee H, Jung J, Choi K, Jiyoung P, Myung H. Fuzzy-logic-assisted interacting multiple model (FLAIMM) for mobile robot localisation. Robot Autonom Syst 2012;60:1592e606. [93] Hoy M, Matveev AS, Savkin AV. Collision free cooperative navigation of multiple wheeled robots in unknown cluttered environments. Robot Autonom Syst 2012;60:1253e66. [94] Kang Tae-Koo, Zhang H, Park Gwi-Tae, Kim DW. Ego-motion- compensated object recognition using type-2 fuzzy set for a moving robot. Neurocomputing 2013;120:130e40. [95] Al-Mutib K, Mattar E, Alsulaiman M. Implementation of fuzzy decision based mobile robot navigation using stereo vision. Procedia Computer Sciences 2015;62:143e50. [96] Abadi DNM, Khooban MH. Design of optimal Mamdani-type fuzzy controller for nonholonomic wheeled mobile robots. Journal of King SaudeEngineering Sciences 2015;27:92e100. [97] Castillo O, Neyoy H, Soria J, Valdez F. A new approach for dynamic fuzzy logic parameter tuning in ant colony optimization and its application in fuzzy control of a mobile robot. Appl Soft Comput 2015;28:150e9. [98] Al-Jarrah R, Shahzad A, Roth H. “Path planning and motion coordination for multi-robot’s systems using probabilistic neuro fuzzy. IFAC-papers on line 2015;48(10):046e51. [99] Patle BK, Parhi DRK, Jagadeesh A, Kashyap Sunil Kumar. Probabilistic fuzzy controller based robotics path decision theory. World Journal of Engineering 2016;13(2):181e92. [100] Rath AK, Parhi DRK, Das HC, Muni MK, Kumar PB. Analysis and use of fuzzy intelligent technique for navigation of humanoid robot in obstacle prone zone. Defence Technology 2018;14(6):677e82. [101] Abbasi Y, Moosavian SAA, Novinzadeh AB. Formation control of aerial robots using virtual structure and new fuzzy-based self-tuning synchronization. Trans Inst Meas Contr 2017;39(12):1906e19. [102] Xiang Xianbo, et al. Survey on fuzzy-logic-based guidance and control of marine surface vehicles and underwater vehicles. Int J Fuzzy Syst 2018;20(2):572e86. [103] Rajasekhar V, Sreenatha AG. Fuzzy logic implementation of proportional navigation guidance. Acta Astronaut 2000;46(1):17e24. Elsevier Science Ltd. [104] Lin KP, Hung KC. An efﬁcient fuzzy weighted average algorithm for the military UAV selecting under group decision-making. Knowl Base Syst 2011;24(6):877e89. [105] Janglova D. Neural networks in mobile robot motion. Int J Adv Robot Syst 2004;1:15e22. [106] Qiao J, Fan R, Han H, Ruan X. Q-learning based on dynamical structures neural network for robot navigation in unknown environment. Advances in Neural Network 2009;5553:188e96. [107] Li QL, Song Y, Hou ZG. Neural network based Fast SLAM for automobile robots in unknown environments. Neurocomputing 2015;165:99e110. [108] Na YK, Oh SY. Hybrid control for autonomous mobile robot navigation using neural network based behavior modules and environment classiﬁcation. Aut Robots 2003;15:193e206. [109] Pothal JK, Parhi DR. Navigation of multiple robots in a highly clutter terrains using adaptive neuro-fuzzy inference system. Robotics and Automation 2015;72:48e58. [110] Abu Baker A. A novel mobile robot navigation system using neuro-fuzzy rule-based optimization technique. Res J Appl Sci Eng Technol 2012;4(15): 2577e83.

[111] Pal PK, Kar A. Sonar-based mobile robot navigation through supervised learning on a neural net. Aut Robots 1996;3. pp. 355e734.
[112] Medina-Santiago A, Campus-Anzueto JL, Vazquez-Feijoo JA, Hernandez-deLeon HR, Mota-Grajales R. Neural control systems in obstacle avoidance in mobile robots using ultrasonic sensors. J Appl Res Technol 2014;2:104e10.
[113] Syed UA, Kunwar F, Iqbal M. Guided autowave pulse coupled neural network (GAPCNN) based real time path planning and an obstacle avoidance scheme for mobile robots. Robot Autonom Syst 2014;62:474e86.
[114] Markoski B, Vukosavavijev S, Kukolj D, Pletl S. Mobile robot control using self-learning neural network. Intelligent Systems and Informatics 2009: 45e8.
[115] Quinonez Y, Ramirez M, Lizarraga C, Tostado I, Bekios J. Autonomous robot navigation based on pattern recognition techniques and artiﬁcial neural networks. Advanced Intelligent Computing 2015;6838:210e7.
[116] Sun C, He W, Ge W, Chang C. Adaptive neural network control of biped robots. IEEE Transactions on Systems, Man, and Cybernetics: Systems 2017;47(2):315e26.
[117] Sun C, He W, Hong J. Neural network control of a ﬂexible robotic manipulator using the lumped spring-mass model. IEEE Transactions on Systems, Man, and Cybernetics: Systems 2018;47(8):1863e74.
[118] Zhu D, Tian C, Sun B, Luo C. Complete coverage path planning of autonomous underwater vehicle based on GBNN algorithm. J Intell Robot Syst 2018;1e13.
[119] Zhang C, Hu H, Wang J. An adaptive neural network approach to the tracking control of micro aerial vehicles in constrained space. Int J Syst Sci 2017;48(1):84e94.
[120] BISHOP CM. Neural networks for pattern recognition. Oxford: Clarendon Press; 1995.
[121] Avci E, Turkoglu I, Poyraz M. Intelligent target recognition based on wavelet packet neural network. Expert Syst Appl 2005;29(1):175e82.
[122] Yang XS. Nature-inspired metaheuristic algorithm. Luniver press; 2008. [123] Hidalgo-Paniagua A, Miguel A, VegaeRodriguez, Ferruz J, Pavon N. Solving
the multi-objective path planning problem in mobile robotics with a ﬁreﬂybased approach. Soft Computing 2015;1e16. [124] Brand M, Yu Xiao-Hua. Autonomous robot path optimisation using ﬁreﬂy algorithm. In: International conference on machine learning and cybernetics, tianjin, vol. 3; 2013. p. 14e7. [125] Sutantyo D, Levi P. Decentralized underwater multi robot communication using bio-inspired approaches. Artif Life Robot 2015;20:152e8. [126] Sutantyo D, Levi P, Moslinger C, Read M. Collective-adaptive levy ﬂight for underwater multi-robot exploration. In: International conference on mechatronics and automation; 2013. p. 456e62. [127] Christensen AL, Rehan O G, Dorigo. Synchronization and fault detection in autonomous robots. In: IEEE/RSJ intelligent conference on robots and systems; 2008. p. 4139e40. [128] Wang G, Guo L, Hong D, Duan H, Liu L, Wang H. A modiﬁed ﬁreﬂy algorithm for UCAV path planning. Int J Hosp Inf Technol July 2012;5(3):123e44. [129] Patle BK, Parhi DR, Jagadeesh A, Kashyap SK. On ﬁreﬂy algorithm: optimization and application in mobile robot navigation. World Journal of Engineering 2017;14(1):65e76. [130] Kim H, Kim J, Ji Y, Park J. Path planning of swarm mobile robots using ﬁreﬂy algorithm. Journal of Institute of Control, Robotics and Systems 2013;19(5): 435e41. [131] Mitic M, Miljkovic Z. Bio-inspired approach to learning robot motion trajectories and visual control commands. Expert Syst Appl 2015;42:2624e37. https://doi.org/10.1016/j.eswa.2014.10.053. [132] Sadhu AK, Konar A, Bhattacharjee T, Das S. Synergism of ﬁreﬂy algorithm and Q-learning for robot arm path planning. Swarm and Evolutionary Computation 2018. https://doi.org/10.1016/j.swevo.2018.03.014. [133] Abbas NH, Saleh BJ. Design of a kinematic neural enhanced hybrid ﬁreﬂy for mobile robots based on enhanced hybrid ﬁreﬂy-artiﬁcial bee colony algorithm. Al-Khwarizmi Engineering Journal 2016;12(No. 1):45e60. [134] Tighzert L, Fonlupt C, Mendil B. A set of new compact ﬁreﬂy algorithms. Swarm and Evolutionary Computation BASE DATA 2018. https://doi.org/ 10.1016/j.swevo.2017.12.006. [135] Liu C, Zhao Y, Gao F, Liu L. Three-dimensional path planning method for autonomous underwater vehicle based on modiﬁed ﬁreﬂy algorithm. Math Probl Eng 2015. https://doi.org/10.1155/2015/561394. [136] Patle BK, Pandey A, Jagadeesh A, Parhi DRK. Path planning in uncertain environment by using ﬁreﬂy algorithm. Defence Technology 2018;14(6): 691e701. https://doi.org/10.1016/j.dt.2018.06.004. [137] Eberhart RC, Kennedy JA. A new optimizer using particle swarm theory. In: Proceedings of the sixth international symposium on micro machine and human science. Piscataway, NJ, NAGOYA, Japan: IEEE service center; 1995. p. 39e43. [138] Tang X, Li L, Jiang B. Mobile robot SLAM method based on multi-agent particle swarm optimized particle ﬁlter. J China Univ Posts Telecommun 2014;21(6):78e86. [139] Xuan VH, Cheolkeun H, Jewon L. Novel hybrid optimisation algorithm using PSO and MADS for the trajectory estimation of a four track wheel skidsteered mobile robot. Adv Robot 2013;27(18):1421e37. [140] Atyabi A, Phon-Amnuaisuk S, Ho CK. Applying area extension PSO in robotic swarm. J Intell Robot Syst 2010;58:253e85. [141] Tang Q, Eberhard P. Cooperative motion of swarm mobile robots based on particle swarm optimisation and multibody system dynamics. Mech Base Des Struct Mach 2011;39(2):179e93.

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

605

[142] Couceiro MS, Rocha RP, Nuno F. A PSO multi-robot exploration approach over unreliable MANETs. Adv Robot 2013;27(16):1221e34.
[143] Chen Y, Cheng J, Lin C, Wu X, Ou Y, Xu Y. Classiﬁcation based learning by particle swarm optimization for wall-following robot navigation. Neurocomputing 2013;113:27e35.
[144] Li G, Chou W. Path planning for mobile robot using self-adaptive learning particle swarm optimization. Sci China Inf Sci 2018;61(5):052204.
[145] Das PK, Behera HS, Panigrahi BK. A hybridization of an improved particle swarm optimization and gravitational search algorithm for multi-robot path planning. Swarm and Evolutionary Computation 2016;28:14e28.
[146] He Bo, Ying L, Zhang S, Feng X, Yan T, Nian R, Shen Y. Autonomous navigation based on unscented-Fast SLAM using particle swarm optimization for autonomous underwater vehicles. Measurement 2015;71:89e101.
[147] Rendon MA, Martins FF. Path following control tuning for an autonomous unmanned quadrotor using particle swarm optimization. IFAC-Papers on Line 2017;50(1):325e30.
[148] Kumar PB, Pandey KK, Sahu C, Chhotray A, Parhi DR. A hybridized RA-APSO approach for humanoid navigation. In: Engineering (NUiCONE), nirma university, IEEE international conference; 2017. p. 1e6.
[149] Yue S, Yinya L, Guoqing Q, Andong S. Time-jerk optimal trajectory planning for industrial robots based on PSO algorithm. Comput Meas Contr 2017;1: 045.
[150] Algabri M, Hassan M, Hedjar R, Alsulaiman M. Comparative study of soft computing technique for mobile robot navigation in an environment. Comput Hum Behav 2015;50:42e56.
[151] Banks A, Vincent J, Phalp K. Particle swarm guidance system for autonomous unmanned aerial vehicles in an air defence role. J Navig 2008;61(1):9e29.
[152] Macro D. Ant colony system: a Cooperative learning approach to the travelling salesman problem. IEEE transaction on evolutionary computation 1997;1(1):53e66.
[153] Guan-Zheng T, HE Huan, Aaron S. Ant colony system algorithm for real time globally optimal path planning of mobile robots. Acta Autom Sin 2007;33(3): 279e85.
[154] Liu S, Mao L, Yu J. Path planning based on ant colony algorithm and distributed local navigation for multi-robot systems. In: Proceedings of the 2006 IEEE international conference of mechatronics and automation; 2006. p. 1733e8.
[155] Castillo O, Neyoy H, Soria J, Melin P, Valdez F. A New approach for dynamic fuzzy logic parameter tuning in ant colony optimisation and its application in fuzzy control of a mobile robot. Appl Soft Comput 2015;28:150e9.
[156] Kumar PB, Sahu C, Parhi DR. A hybridized regression-adaptive ant colony optimization approach for navigation of humanoids in a cluttered environment. Appl Soft Comput 2018;68:565e85.
[157] Liu J, Yang J, Liu H, Tian X, Gao M. An improved ant colony algorithm for robot path planning. Soft Computing 2017;21(19):5829e39.
[158] Rajput U, Kumari M. Mobile robot path planning with modiﬁed ant colony optimisation. Int J Bio-Inspired Comput 2017;9(2):106e13.
[159] Purian FK, Sadeghian E. Mobile robots path planning using ant colony optimization and fuzzy logic algorithm in unknown dynamic environment. In: International conference on control, automation,” robotics and embedded systems (CARE); 2013. p. 1e6.
[160] Brand M, Masuda MC, Wehner N, Yu X. Ant colony optimization algorithm for robot path planning. In: 2010 international conference on computer design and applications, vol. 3; 2010. V3-V436-V3-440.
[161] Liu LQ, Yu F, Dai YT. Path planning of underwater vehicle in 3D space based on ant colony algorithm. J Syst Simul 2008;20(14):3712e6.
[162] Chen Y, Su F, Shen LC. Improved ant colony algorithm based on PRM for UAV route planning. J Syst Simul 2009;21(6):1658e66.
[163] Gao M, Liu YA, Zhang Q. Application of improved ant colony algorithm to route planning of anti-ship missile. J Comput Appl 2012;9.
[164] Passino KM. Biomimicry of bacterial foraging for distributed optimization and control. IEEE Control Syst 2002;22(3):52e67.
[165] Tan L, Wang H, Yang C, Niu B. A multi-objective optimization method based on discrete bacterial algorithm for environmental/economic power dispatch. Nat Comput 2017;16(4):549e65.
[166] Coelho LDS, Sierakowski CA. Bacteria colony approaches with variable velocity applied to path optimization of mobile robots. ABCM Symposium Series in Mechatronics 2005;2:297e304.
[167] Sierakowski CA, dos Santos Coelho L. Path planning optimization for mobile robots based on bacteria colony approach. In: Applied soft computing technologies: the challenge of complexity. Berlin, Heidelberg: Springer; 2006. p. 187e98.
[168] Liu W, Niu B, Chen H, Zhu Y. Robot path planning using bacterial foraging algorithm. J Comput Theor Nanosci 2013;10(12):2890e6.
[169] Liang XD, Li LY, Wu JG, Chen HN. Mobile robot path planning based on adaptive bacterial foraging algorithm. J Cent South Univ 2013;20(12): 3391e400.
[170] Gasparri A, Prosperi M. A bacterial colony growth algorithm for mobile robot localization. Aut Robots 2008;24(4):349e64.
[171] Abbas NH, Ali FM. Path planning of an autonomous mobile robot using enhanced bacterial foraging optimization algorithm. Al-Khwarizmi Engineering Journal 2017;12(4):26e35.
[172] Jati A, Singh G, Rakshit P, Konar A, Kim E, Nagar AK. A hybridization of improved harmony search and bacterial foraging for multi-robot motion planning. In: Evolutionary computation (CEC), IEEE congress; 2012. p. 1e8.

[173] Dos Santos Coelho L, da Costa Silveira C. Improved bacterial foraging strategy for controller optimization applied to robotic manipulator system. In: Computer aided control system design, IEEE international conference on control applications, 2006 IEEE international symposium on intelligent control; 2006. p. 1276e81.
[174] Oyekan J, Hu H. A novel bacterial foraging algorithm for automated tuning of PID controllers of UAVs. In: The 2010 IEEE international conference on information and automation. IEEE; June 2010. p. 693e8.
[175] Karaboga D. An idea based on honey bee swarm for numerical optimization. Erciyes university, engineering faculty, computer engineering department; 2005. Technical report-tr06.
[176] Contreras-Cruz MA, Ayala-Ramirez V, Hernandez-Belmonte UH. Mobile robot path planning using artiﬁcial bee colony and evolutionary programming. Appl Soft Comput 2015;30:319e28.
[177] Saffari MH, Mahjoob MJ. Bee colony algorithm for real-time optimal path planning of mobile robots. In Soft Computing, Computing with Words and Perceptions in System Analysis. Decision and Control 2009:1e4. ICSCCW 2009.
[178] Ma Q, Lei X. Dynamic path planning of mobile robots based on ABC algorithm. In: International conference on artiﬁcial intelligence and computational intelligence. Berlin, Heidelberg: Springer; 2010. p. 267e74.
[179] Bhattacharjee P, Rakshit P, Goswami I, Konar A, Nagar AK. Multi-robot pathplanning using artiﬁcial bee colony optimization algorithm. In: Nature and biologically inspired computing (NaBIC), third world congress on; 2011. p. 219e24.
[180] Liang JH, Lee CH. Efﬁcient collision-free path-planning of multiple mobile robots system using efﬁcient artiﬁcial bee colony algorithm. Adv Eng Software 2015;79:47e56.
[181] Xu C, Duan H, Liu F. Chaotic artiﬁcial bee colony approach to Uninhabited Combat Air Vehicle (UCAV) path planning. Aero Sci Technol 2011;14(8): 535e41.
[182] Li B, Chiong R, Gong LG. Search-evasion path planning for submarines using the artiﬁcial bee colony algorithm. In: Evolutionary computation (CEC), IEEE congress; 2014. p. 528e35.
[183] Bhagade AS, Puranik PV. Artiﬁcial bee colony (ABC) algorithm for vehicle routing optimization problem. Int J Soft Comput Eng 2012;2(2):329e33.
[184] Li B, Gong LG, Yang WL. An improved artiﬁcial bee colony algorithm based on balance-evolution strategy for unmanned combat aerial vehicle path planning. Sci World J 2014;2014:232704. https://doi.org/10.1155/2014/ 232704. 10 pages.
[185] Ding L, Wu H, Yao Y. Chaotic artiﬁcial bee colony algorithm for system identiﬁcation of a small-scale unmanned helicopter. International Journal of Aerospace Engineering 2015;2015:801874. https://doi.org/10.1155/2015/ 801874. 11 pages.
[186] Yang XS, Deb S. Cuckoo search via Levy ﬂights. In: Nature and biologically inspired computing, NaBIC 2009, IEEE world congress; 2009. p. 210e4.
[187] Mohanty PK, Parhi DR. Optimal path planning for a mobile robot using cuckoo search algorithm. J Exp Theor Artif Intell 2016;28(1e2):35e52.
[188] Mohanty PK, Parhi DR. A new hybrid optimization algorithm for multiple mobile robots navigation based on the CS-ANFIS approach. Memetic Computing 2015;7(4):255e73.
[189] Wang G, Guo L, Duan H, Wang H, Liu L, Shao M. A hybrid metaheuristic DE/ CS algorithm for UCAV three-dimension path planning. Sci World J 2012;2012:583973. https://doi.org/10.1100/2012/583973. 11 pages.
[190] Xie C, Zheng H. Application of improved Cuckoo search algorithm to path planning unmanned aerial vehicle. In: International conference on intelligent computing. Cham: Springer; 2016. p. 722e9.
[191] Eusuff MM, Lansey KE. Optimization of water distribution network design using the shufﬂed frog leaping algorithm. J Water Resour Plan Manag 2003;129(3):210e25.
[192] Ni J, Yin X, Chen J, Li X. An improved shufﬂed frog leaping algorithm for robot path planning. In: Natural computation (ICNC), 10th IEEE international conference; 2014. p. 545e9.
[193] Hidalgo-Paniagua A, Vega-Rodríguez MA, Ferruz J, Pavon N. MOSFLA-MRPP: multi-objective shufﬂed frog-leaping algorithm applied to mobile robot path planning. Eng Appl Artif Intell 2015;44:123e36.
[194] Shubhasri K, Parhi DR. Navigation based on adaptive shufﬂed frog-leaping algorithm for underwater mobile robot. In: Intelligent computing, communication and devices. New Delhi: Springer; 2015. p. 651e9.
[195] Pu H, Zhen Z, Wang D. Modiﬁed shufﬂed frog leaping algorithm for optimization of UAV ﬂight controller. International Journal of Intelligent Computing and Cybernetics 2011;4(1):25e39.
[196] Luo J, Chen MR. Improved shufﬂed frog leaping algorithm and its multiphase model for multi-depot vehicle routing problem. Expert Syst Appl 2014;41(5):2535e45.
[197] Liang B, Zhen Z, Jiang J. Modiﬁed shufﬂed frog leaping algorithm optimized control for air-breathing hypersonic ﬂight vehicle. Int J Adv Robot Syst 2016;13(6). 1729881416678136.
[198] Mohanty PK, Parhi DR. A new efﬁcient optimal path planner for mobile robot based on Invasive Weed Optimization algorithm. Front Mech Eng 2014;9(4): 317e30.
[199] Sengupta A, Chakraborti T, Konar A, Nagar A. Energy efﬁcient trajectory planning by a robot arm using invasive weed optimization technique. In: Nature and biologically inspired computing (NaBIC), third world congress on. IEEE; 2011. p. 311e6.

606

B.K. Patle et al. / Defence Technology 15 (2019) 582e606

[200] Ghalenoei MR, Hajimirsadeghi H, Lucas C. Discrete invasive weed optimization algorithm: application to cooperative multiple task assignment of UAVs. In: Proceedings of the 48h IEEE conference on decision and control (CDC) held jointly with 2009, 28th Chinese control conference. IEEE; 2009. p. 1665e70.
[201] Kundu S, Parhi DR. Navigation of underwater robot based on dynamically adaptive harmony search algorithm. Memetic Computing 2016;8(2): 125e46.
[202] Tangpattanakul P, Meesomboon A, Artrit P. Optimal trajectory of robot manipulator using harmony search algorithms. In: Recent advances in harmony search algorithm. Berlin, Heidelberg: Springer; 2010. p. 23e36.
[203] Guo J, Yu Gua, Coi G. The path planning for mobile robot based on bat algorithm. Int J Autom Control 2015;1:50e60.
[204] Ghosh S, Panigrahi PK, Parhi DR. Analysis of FPA and BA meta-heuristic controllers for optimal path planning of mobile robot in cluttered environment. IET Sci Meas Technol 2017;11(7):817e28.
[205] Wang GG, Chu HE, Mirjalili S. Three-dimensional path planning for UCAV using an improved bat algorithm. Aero Sci Technol 2016;49:231e8.

[206] Chakraborty J, Konar A, Chakraborty UK, Jain LC. Distributed cooperative multi-robot path planning using differential evolution. In: Evolutionary computation, CEC (IEEE world congress on computational intelligence); 2008. p. 718e25.
[207] Deyun FQZ. Time optimal path planning based on differential evolution algorithm. Computer Engineering and Applications 2005;12:021.
[208] Parhi DR, Kundu S. Navigational control of underwater mobile robot using dynamic differential evolution approach. Proc IME M J Eng Marit Environ 2017;231(1):284e301.
[209] Savkin AV, Wang C. A simple biologically-inspired algorithm for collision free navigation of a unicycle-like robot in dynamic environments with moving obstacles. Robotica 2013;31(6):993e1001.
[210] Thanh HLNN, Phi NN, K Hong S. Simple nonlinear control of quadcopter for collision avoidance based on geometric approach in static environment. Int J Adv Robot Syst 2018;15(2). 1729881418767575.
[211] Thanh HLNN, Hong SK. Completion of collision avoidance control algorithm for multicopters based on geometrical constraints. IEEE Access; 2018.

