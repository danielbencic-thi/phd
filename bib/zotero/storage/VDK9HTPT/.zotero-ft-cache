2021 International Conference on Unmanned Aircraft Systems (ICUAS) Athens, Greece. June 15-18, 2021
Planning Parcel Relay Manoeuvres for Quadrotors
Joa˜o Pinto1, Bruno J. Guerreiro2, and Rita Cunha1

2021 International Conference on Unmanned Aircraft Systems (ICUAS) | 978-1-6654-1535-4/21/$31.00 ©2021 IEEE | DOI: 10.1109/ICUAS51884.2021.9476757

Abstract— In this paper, a strategy for planning aggressive collision-free parcel relay manoeuvres for quadrotors is proposed. The method relies on the generation of optimal polynomial trajectories with acceleration constraints in order to coordinate the attitude of the vehicles during the package exchange. The problem is formulated as a mixedinteger quadratic program where the integer constraints ensure collision avoidance. The manoeuvre is divided into three phases and the dynamical model of the robots is considered to ensure the vehicles keep a suitable relative orientation during the parcel transfer. Simulation results demonstrate the success of the presented strategy.

Fig. 1. Illustration of blade tip vortexes at different ﬂight conditions. The ﬁgure to the left corresponds to the rotorcraft being in OGE (Out of the Ground Effect) hover; the ﬁgure to right, forward ﬂight.

I. INTRODUCTION
In the past few years, the impressive technological developments in a vast array of ﬁelds of study, tied to the commitment of the scientiﬁc community to devise and build unmanned aerial vehicles (UAVs), triggered a steady, continuous growth of the application domain for these vehicles. Amongst the enormous list of applications suited for the use of drones, establishing a drone delivery service is deﬁnitely one of the hottest.
The versatility of drones, specially those which fall into the category of miniature aerial vehicles (MAVs), soon caught the eye of the logistics and e-commerce giants [1] and many other enterprises. Driven by the ambition of reducing the time and cost associated with parcel delivery, multiple MAVs have been developed. Numerous experimental tests, ranging from preliminary to several months long trials, have been conducted and some delivery services using UAVs have been established since the 2010s [2]–[5].
In this work, quadrotors are considered. So as to overcome the stringent limitations on the range and endurance of a single vehicle and thus enable an effective, expeditious package delivery, in-ﬂight parcel exchange between drones is proposed, within the scope of project REPLACE [6]. The focus of this paper is on the generation of collision-free optimal trajectories which are adequate for these manoeuvres. The problem of controlling a mechanism responsible for holding and exchanging packages between vehicles is also addressed
*This work was partially funded by the FCT projects CAPTURE (PTDC/EEI-AUT/1732/2020), REPLACE (LISBOA-01-0145-FEDER032107), and HARMONY (LISBOA-01-0145-FEDER-031411) which include Lisboa 2020 and PIDDAC funds, and also the research units projects LARSYS (UIDB/EEA/50009/2020) and CTS (UIDB/EEA/00066/2020).
1Joa˜o Pinto and Rita Cunha are with Institute for Systems and Robotics (ISR), LARSYS, Instituto Superior Te´cnico, Universidade de Lisboa, 1049001 Lisbon, Portugal. joao.s.pinto@tecnico.ulisboa.pt, rita@isr.tecnico.ulisboa.pt.
2Bruno J. Guerreiro is with ISR and also Department of Electrical and Computer Engineering and CTS-Uninova, Universidade Nova de Lisboa, 2829-516 Caparica, Portugal. bj.guerreiro@fct.unl.pt.

in the project, for which there is a patent pending, but falls outside the scope of this work.
In order to perform the relay manoeuvre, beyond ensuring the two vehicles do not collide with one another, it is of the uttermost importance to account for the aerodynamic interactions between both vehicles. As it is known from rotor aerodynamics, when a rotor is at hover, vortexes form at the blade tips of the propellers that generate a turbulent downwash. If a smaller, or similar-sized quadcopter were to hover below the ﬁrst, the turbulent airﬂow coming from above would very likely put the rotors of this aircraft in a condition named Vortex Ring State (VRS). In this situation, the rotors stall and, therefore, enough thrust cannot be produced to keep the drone hovering [7]. However, as illustrated in Fig. 1, when a rotor moves in forward ﬂight the downwash becomes increasingly less turbulent, up to a point the blade tip vortexes are outrun by the aircraft, leaving the rotor operating in undisturbed air.
This suggests the relay manoeuvre should be aggressive in the sense that high manoeuvrability and high-speed navigation is demanded from the aircraft. In [8]–[10], the authors leverage on the differential ﬂatness of the quadrotor dynamics to formulate convex optimisation problems which include constraints on the position, velocity, acceleration, and higher order derivatives. Acceleration constraints are also imposed in [11] to embed attitude constraints into the trajectory generation problem. In [12], aggressive manoeuvres are deﬁned as a sequence of trajectory segments to reach some conﬁguration in state space.
Regarding the problem of collision avoidance, mixedinteger programs have been proposed to impose convex constraints, by means of slack variables [9], [13], [14]. The hyperplane theorem is employed to formulate constraints in order to keep an autonomous ground vehicle (AGV) sufﬁciently far away from obstacles [15]. Non-convex avoidance constraints for a ﬂeet of quadrotors were proposed in [16].
Building upon the seminal works [8], [9], [12], the main

978-0-7381-3115-3/21/$31.00 ©2021 IEEE

137

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on April 21,2022 at 10:16:14 UTC from IEEE Xplore. Restrictions apply.

contribution of this paper is the proposal of a strategy for generating aggressive relay manoeuvres reference trajectories from a centralised mixed-integer quadratic problem (MIQP), where the binary variables are responsible for ensuring collision-avoidance. The conducted experiments in simulation environment demonstrate the viability of such strategy. The generated trajectories avert inter-vehicle collisions and enable the quadrotors to be properly oriented to perform the parcel transfer.
The remainder of this paper is structured as follows. In Section II, the model of the quadrotor is presented. Section III describes trajectory planning algorithms for one and two vehicles with the imposition of collision avoidance constraints, while the proposed relay manoeuvre strategy is introduced in Section IV. With the objective of validating the generated trajectories, Section V presents summarily a controller drawn from the literature; Section VI, the analysis of simulation experiments; and, ﬁnally, some concluding remarks are made in Section VII.

II. QUADROTOR DYNAMICS MODEL
As shown in Fig. 2, let W denote the world reference frame, deﬁned by the axes xW = 1 0 0 T , yW = 0 1 0 T , and zW = 0 0 1 T , and B denote the body frame attached to the vehicle with origin at the centre of
mass. The axes xB and yB lie in plane deﬁned by the centre of the four rotors; zB is perpendicular to this plane and points upwards, in the direction of total thrust.
The conﬁguration of the quadrotor is deﬁned by the location of the centre of mass p = x y z T and its
attitude with respect to W, represented by a rotation matrix
R from B to W. Hence, the system evolves on the Special
Euclidean Group SE(3), which is the semi-direct product of R3 and the Special Orthogonal Group SO(3) ..= {R ∈ R3×3 | RT R = I, det(R) = 1}. Let the linear velocity
of the centre of mass in the inertial frame be denoted by v = vx vy vz T and the angular velocity of B, expressed in B, by ω = p q r T . The dynamics of the system is
described by the following equations

p˙ = v,

(1)

mv˙ = −mgzW + u1zB,

(2)

R˙ = RS(ω),

(3)

J ω˙ + S(ω)J ω = τ ,

(4)

where the control input to the system u ∈ R4 is comprised of the total thrust u1 and the body torques τ = u2 u3 u4 T produced by the four rotors, m and J represent the mass
and the inertia tensor (about the frame B) of the aircraft, respectively. The constant g = 9.8 m s−2 denotes the Earth gravity and S(·) is a map from R3 to the space of three-bythree skew-symmetric matrices so(3) deﬁned by

0 S(a) =  a3

−a3 0

a2  −a1 , a = a1

a2

a3 T . (5)

−a2 a1 0

Fig. 2. Illustration of the employed reference frames.

Note that so(3) and R3 are isomorphic. This isomorphism is deﬁned by the condition S(a)b = a × b for all a, b ∈ R3.

A. Actuation Dynamics

In this work, the thrust and torque actuation dynamics are modelled as ﬁrst-order systems

u˙ = −Ku(u − u∗),

(6)

where Ku is a diagonal matrix with non-negative entries corresponding to the inverse of the time constant of each input variable dynamics and u∗ denotes the desired input value. These entries should be large positive values to reﬂect that the rotor dynamics are much faster than the rigid body dynamics.

III. TRAJECTORY PLANNING
In this section, a method for planning reference trajectories for the relay manoeuvres is presented. Polynomial trajectory generation algorithms for one and two quadcopters are introduced. Inter-vehicle collision avoidance constraints are included in the trajectory generation problem as binary constraints in the same fashion as in [9], [14].

A. Single Vehicle

As demonstrated in [8], the quadrotor dynamics are differentially ﬂat. The choice of the position p and the yaw angle ψ of the vehicle as ﬂat outputs allows the states and inputs of the system to be expressed algebraically in terms of these outputs and their derivatives.
In this manner, piecewise polynomials of order N over M time intervals are selected to serve as basis functions for generating smooth trajectories σ(t) in the space of ﬂat outputs,

 

N k=0

σk1tk

t0 ≤ t < t1,

   
σ(t) =
 

N k=0

σk2tk

...

t1 ≤ t < t2,

(7)



 

N k=0

σkM

tk

tM−1 ≤ t ≤ tM ,

where the vector σkn = xkn ykn zkn ψkn T represents the set of constants associated with the polynomial of

138

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on April 21,2022 at 10:16:14 UTC from IEEE Xplore. Restrictions apply.

degree k of the trajectory segment σn(t), n = 1, . . . , M . In a more compact form, (7) can be written as

σ(t) = σn(t) = Σnη(t), tn−1 ≤ t ≤ tn,

(8)

with Σn = σ0n σ1n · · · σNn and η(t) = 1 t · · · tN T , n = 0, . . . , M .
An optimisation problem is formulated in order to determine the polynomial coefﬁcients σkn which deﬁne the trajectory that passes through a set of waypoints wn at times tn, n = 0, . . . , M . Since restricting the attitude of the vehicle is required during the parcel exchange manoeuvre, the desired orientation Rdes is associated with each of the waypoints. As zB points in the direction of thrust, the attitude of the vehicle, apart from the yaw angle, is
determined by the direction of this axis. In this manner, from Rdes, the desired zB is obtained,

zB(tn) = Rdes(tn)zW ,

(9)

and the linear velocity dynamics equation presented in (2) can be used for formulating the following linear constraint on the linear acceleration of the vehicle which imposes a desired direction of thrust,

I3 − zB(tn)zTB(tn) (v˙ (tn) + gzW ) = 0, (10)

where I3 corresponds to the three-by-three identity matrix. The cost function of the proposed optimisation problem is such that it minimises the integral of the squared norm of the snap (the fourth derivative of position) of the trajectory and the second derivative of the yaw angle,

minimise

tM

d4p 2

d2ψ 2

t0 µp dt4 + µψ dt2 dt

s.t.

σ(tn) = wn, for n = 0, . . . , M,

(11)

σ˙ (tn) = vn, for n = 0, . . . , M,

σ¨(tM ) = 0 or free,

Equation (10), for n = 0, . . . , M,

where µp, µψ ∈ R, wn ∈ R3 × (−π, π] and vn ∈ R4 correspond, respectively, to the position and yaw waypoint and to the desired linear velocity and yaw angle time derivative ψ˙ at time tn. The meaningfulness of this cost function lies in the fact that the input body torques τ are algebraically related to the snap of the vehicle and the second derivative of the yaw angle [8].
So as to guarantee the smoothness of the generated trajectory, constraints are introduced to ensure the continuity of the ﬁrst four derivatives of p and the ﬁrst two derivatives of ψ. In particular, to achieve the desired orientation at each waypoint wn, it is necessary to impose the continuity of acceleration and lateral jerk (the third derivative of x and y) to ensure the continuity of attitude and roll and pitch rate trajectories. However, the continuity of these position derivatives alone is not sufﬁcient to make sure a quadrotor is able to follow accurately every single trajectory. Saturation and rate limit constraints may impede the execution of some manoeuvres.

Even though the objective function implicitly minimises the necessary input body torques τ to track the generated trajectory, one may also enforce bound constraints on the aforementioned derivatives of position to incorporate saturation and rate limit constraints into (11) with the objective of further ensuring the feasibility of trajectories.
In the context of this work, it was opted not to include these constraints in (11) for the reasons discussed in Section III-C.
In what concerns the determination of the coefﬁcients σkn, the optimisation problem is readily solved by reformulating (11) as a quadratic program (QP),

minimise cT Hc + f T c

c

(12)

s.t.

Ac = b.

The vector c contains F = 4(N + 1)M optimisation variables which correspond to the polynomial coefﬁcients that characterise the whole trajectory, while the constants H, f , A, and b can be obtained from (11).

B. Planning for Two Vehicles

Building upon (11), another optimisation problem is formulated for planning trajectories in a centralised fashion for two quadrotors while avoiding inter-vehicle collisions.
Consider two vehicles each with position pi(tk) = xi(tk) yi(tk) zi(tk) T , i ∈ {1, 2}. The inter-collision avoidance constraints are as follows,

x1(tk) − x2(tk) ≥ dx12 − b1kV,

x2(tk) − x1(tk) ≥ dx21 − b2kV,

y1(tk) − y2(tk) ≥ dy12 − b3kV,

y2(tk) − y1(tk) ≥ dy21 − b4kV,

z1(tk) − z2(tk) ≥ dz12 − b5kV,

(13)

z2(tk) − z1(tk) ≥ dz21 − b6kV,

6

bjk ≤ 5.

j=1

The ﬁrst six inequalities deﬁne two exclusion cuboid-shaped regions oriented with the inertial frame around each vehicle. In other words, around quadrotor i a rectangular prism is considered within which the quadrotor j, j = i, cannot enter. The dimensions of these polyhedron are provided by the values speciﬁed by the dxij, dyij and dzij constants. These constants should be large enough for the vehicle to be at any attitude and to remain inside the box.
As for the binary variables, these are denoted by bjk, 1 ≤ j ≤ 6, and are introduced as slack variables; the constant V is large positive number. In this manner, when bjk = 1, the jth constraint is relaxed; should be it zero, this constraint is enforced. This last constraint is fundamental since if the slack variables were all equal to zero, it would be only necessary for one of the six constraints to be satisﬁed in order to ensure the vehicles were not in collision.
For the generation of trajectories for two quadrotors including the collision avoidance constraints, the vector c

139

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on April 21,2022 at 10:16:14 UTC from IEEE Xplore. Restrictions apply.

is augmented so as to include the polynomial coefﬁcients of the two vehicles and the binary variables. The collision avoidance constraints are enforced at K intermediate time steps, that is, at every time step except for those which are associated with a waypoint. It may be required the vehicles to be closer than permitted by the binary collision avoidance constraints to effectively exchange the parcel at a concrete waypoint.
C. Computational Complexity and Limitations
The MIQP formulated for the generation of reference trajectories for two quadrotors with inter-vehicle collision avoidance constraints involves 2F + 6K decision variables. Out of these, 6K are binary and are associated with the collision avoidance constraints. In the worst-case scenario, a branch-and-bound solver may require 26K quadratic programs to be solved [17]. The authors in [9] highlight the short amount of time required to obtain sub-optimal integer solutions. These are nevertheless, not at all times, adequate trajectories, as for a quadcopter to track them high thrust and body torques may be demanded from its rotors. To overcome this problem, one may consider imposing bounds on the derivatives of position for all time steps, however, the sheer amount of inequality constraints introduced would cause numerical issues to be more prone to arise.
The time complexity of this method for generating collision-free trajectories may render it unsuitable for planning long missions. One may weaken the optimality criteria of the mixed-integer program solver with the objective of reducing the time spent on solving the optimisation problem.
Additionally, as also emphasised by the authors of [9], the choice of the spanning polynomial basis functions is of the uttermost importance. For the polynomial basis chosen, it was observed that numerical issues arise when attempting to generate long trajectories with high degree polynomials.
IV. RELAY PLANNING STRATEGY
In spite of the addition of (10) to (11), the optimisation strategy does not necessarily imply that any controller tracking acceleration references can provide inputs to the vehicle such that it follows these references accurately and keeps an adequate orientation for the parcel transfer.
Since the quadcopters performing the manoeuvre must achieve some concrete conﬁguration in state space, a strategy, based on the work published in [12], is devised so that the vehicles are driven to a goal state G.
It is established that the trajectory for each vehicle is composed of three segments, as illustrated in Fig. 3. In order to generate these trajectory segments, G is provided by specifying the desired position pG, velocity vG, attitude λG = φG θG ψG T parametrised by Z − X − Y Euler angles, and an angular velocity ωG of zero. The reason for expressing the desired attitude using Euler angles rather than rotation matrices is explained soon.
• The segment Phase 1, represented as a blue dashed line, corresponds to the trajectory from an initial position (denoted by a green cross in Fig. 3) to a launching

Phase 1

Phase 3 Phase 2

Fig. 3. Diagram illustrating the segments of the trajectory in order to reach the goal state G.

position pL, from where the vehicle departs for the goal position pG with a launch velocity vL, and with adequate roll, φ, and pitch, θ, angles regarding the desired trajectory; • For Phase 2, depicted as a continuous orange line, the trajectory that is generated for this segment takes into account that the quadrotor must reach the desired goal position pG with a pre-deﬁned orientation parameterised by λG. During this segment, the vehicles are to exchange the parcel; • In the ﬁnal segment, Phase 3, coloured in green, the vehicle is provided a trajectory from pG until a ﬁnal position (denoted by a red cross in Fig. 3). It may be imposed that the aircraft ﬁnishes at hover. Moreover, it should be ensured that the vehicles move apart from one another during this phase.
All segments of the relay manoeuvre are generated using the method described in the previous section, where collision avoidance constraints are enforced. Orientation and linear velocity constraints are imposed at every waypoint.
In order to obtain the launch point pL and the launch velocity vL necessary for Phase 2, the quadrotor dynamics coupled with an attitude control law are integrated backwards in time, starting from the desired state for the relay manoeuvre, G. As this backwards integration requires a control law, u1 is kept constant during this phase, whereas a simple proportional derivative (PD) control law computes the body torques input τ ,

τ = Kλeλ − Kωeω,

(14)

where Kλ and Kω are diagonal gain matrices. The attitude and angular velocity errors are denoted by eλ and eω, respectively,

eλ = λdes − λ,

(15)

eω = ωdes − ω.

(16)

The variable λ represents the aircraft orientation
parametrised by Z − X − Y Euler angles. The Euler angles reference λdes : [0 T ) → R3 for Phase 2 is deﬁned as the following map,



T

 

0



0

ψG



0 ≤ t < tb,

λdes(t) =

(17)

 

T

 

φG

θG

ψG

tb ≤ t < T.

140

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on April 21,2022 at 10:16:14 UTC from IEEE Xplore. Restrictions apply.

Provided that T denotes the duration of Phase 2, the choice of tb establishes the time window for which the vehicles are in a suitable orientation to exchange the parcel. As the dynamics are integrated starting from G and the thrust input u1 is constant, the position of gripping mechanism attached to vehicles should be taken into account to decide whether tb should be closer to zero or closer to T . Despite the deﬁnition of λdes(·) in (17) imposing the roll and pitch angles to be equal to zero at the beginning of Phase 2, the attitude control law presented in (14) is able to track the desired Euler angles step reference, as long as the singularity at φ = ±π/2 is avoided.
For the computation of the desired body rate ωdes, a ﬁrst-order numerical differentiation method is employed to approximate the time derivative of λdes. The desired body rate, expressed in B, is then obtained by

cos θ 0 − cos φ sin θ

ωdes =  0 1

sin φ  λ˙ des.

(18)

sin θ 0 cos φ cos θ

If the desired attitude reference for Phase 2 were parametrised by rotation matrices, one could attempt to use the orientation dynamics equation presented in (3) to determine ωdes, since

S(ωdes) = RTdesR˙ des.

(19)

However, it was veriﬁed that using ﬁnite-difference methods to ﬁnd the time derivative of Rdes led to numerical errors.
The three trajectory segments are obtained by formulating separate optimisation problems. This revealed to be necessary as, even though a solution for the relay manoeuvre reference was achieved, in some cases, one could verify that some constraints regarding the continuity of the trajectory were partially violated. Lowering the constraint violation tolerance would render the problem infeasible. Furthermore, having in mind the large number of binary variables which might be involved in the trajectory generation problem, splitting this problem into multiple is an advantage.
The continuity of position and velocity is enforced between the three segments.

V. TRACKING CONTROLLER
In the spirit of evaluating whether two quadrotors are indeed able to follow the trajectories generated using the proposed relay strategy and to exchange a parcel during ﬂight, in the following section simulation results are presented for two vehicles equipped with the geometric controller on SE(3) presented in [8].
For the sake of completeness, the overall controller structure is as follows. The outer loop of the controller is responsible for tracking a trajectory deﬁned by the reference position pT , linear velocity vT and linear acceleration aT . This loop computes the desired thrust vector F des which is used by the inner loop, along with the reference yaw angle ψT and its time derivative ψ˙T , and also the reference jerk jT to deﬁne the desired body frame orientation Rdes

and angular velocity ωdes. In this manner, the three control torques τ are computed.
For tracking the reference trajectory the position and linear velocity errors are deﬁned as

ep = p − pT ,

(20)

ev = v − vT ,

(21)

which are used to deﬁne a PD control law, with the inclusion of the reference linear acceleration aT as feedforward term,

F des = −Kpep − Kvev + mgzW + maT .

(22)

The matrices Kp and Kv are positive deﬁnite and correspond to the position and velocity controller gains. The

control input u1 is obtained from the projection of the desired thrust F des onto the body frame axis zB,

u1

=

F

T des

zB

.

(23)

So as to compute the other three inputs, the input body

torques τ , one begins by determining the desired orientation

of the body frame Rdes. By the assumption that zB points

in the direction of total thrust, given that F des = 0, the

desired zB is

zB,des =

F des . F des

(24)

Given zB,des, as the reference yaw angle ψT is provided, the desired orientation Rdes is easily computed. Finally, the orientation error eR and the angular velocity error eω are deﬁned as

eR

=

1 S−1 2

RTdesR − RT Rdes

,

(25)

eω = ω − ωdes,

(26)

where S−1 : so(3) → R3 corresponds to the inverse of the map deﬁned in (5). The control moments to be input to the quadcopter is computed using the established attitude errors,

τ = −KReR − Kωeω,

(27)

where KR and Kω are positive deﬁnite matrices representing the orientation and angular rates gains.

VI. SIMULATION RESULTS

As the binary collision avoidance constraints described

previously do not consider the attitude of the vehicles, in

order to monitor the possibility of collision, in a more precise

manner, the distance between them is computed taking into

account their orientation. To this end, two polyhedrons are

deﬁned around each aircraft. Each of these polyhedrons is

a collection of planar constraints expressed in the body

frame B of the respective vehicle. Using the position and

orientation information of the vehicles, the polyhedrons are

then expressed in the world frame W.

In this manner, an optimisation problem is formulated so

as to determine two points, one in each of the polyhedrons,

that minimises the square of the 2 norm between them,

minimise x1 − x2 2
x1 ,x2

s.t.

x1 ∈ P1(p1, R1),

(28)

x2 ∈ P2(p2, R2),

141

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on April 21,2022 at 10:16:14 UTC from IEEE Xplore. Restrictions apply.

0.2

0.1

0

z [m]

-0.1

-0.2

-0.3

-0.2

-0.4

0

0.3 0.2 0.1

0

-0.1 -0.2 -0.3 -0.4 -0.5

0.2
y [m]

x [m]

Fig. 4. Illustration of the solution of the optimisation problem that allows to compute the distance between two polyhedrons. Two rectangular parallelipipeds were considered for this example.

Time[s]
Fig. 5. Schematic representation of the established waypoints. TABLE I
PERFORMANCE COMPARISON OF THE RESULTS OBTAINED.

where Pj(pj, Rj) denotes the polyhedron wrapped around quadrotor j, located at position pj with attitude Rj. This problem is convex as the cost function is a semi-deﬁnite positive quadratic function and the constraints are linear inequalities. The optimal value of (28) establishes the squared distance function between two polyhedrons,
D(P1, P2) = inf x1 − x2 2 | x1 ∈ P1, x2 ∈ P2 . (29)
Despite not being possible to express (29) in closed-form, it can be deduced that D(·, ·) is non-convex both in position p1, p2 and orientation R1, R2 of the polyhedrons, since polyhedra are shapes with ﬂat faces and sharp corners. Be as it may, the squared distance function (29) is a handy analysis tool as it allows to compute with relative ease the Euclidean distance between any two polytopes living in the same dimension.
An illustration of the solution of (28) is presented in Fig. 4. The red points correspond to the optimal solution {x∗1, x∗2} and the length of the blue line linking those points is the square root of D(P1, P2) evaluated at the optimum.
The simulation results presented in this section were obtained from a computer with the Windows 10 operating system installed running MATLAB, equipped with an Intel Core i7-6700HQ CPU @2.60GHz, and 16,00GB of RAM, where the MIQPs were solved using the branch-and-bound solver provided by CPLEX [18].
For this simulation, two equal drones with m = 0.152 kg and J = diag 0.0138 0.0110 0.0082 kg m2 were considered.
A. Collision Avoidance
In this section, the proposed method for generating trajectories for two vehicles with the collision avoidance constraints is evaluated. For this experiment, the established waypoints wij = xij yij zij ψij T are schematically represented in Fig. 5. The green crosses correspond to waypoints of the ﬁrst vehicle, the magenta ones, to the

Figure

nc

6a

208

6b

208

nb
– 2988

Cost
7.3334 7.8698

Time [s]
0.1090 43.1090

waypoints of the second. The vector wij denotes the ith waypoint of vehicle j. In this diagram, a time scale is included so as to associate each waypoint with a time instant. The generated trajectories consider that both vehicles start tracking the reference trajectory with zero linear velocity and ﬁnish at hover.
The generated position reference trajectories excluding and including the collision avoidance binary constraints are plotted in Fig. 6a and 6b, respectively. It is observed that the binary constraints enforce the vehicles to be further apart by performing a comparison between these ﬁgures. The trajectory in the x and z axes are modiﬁed in order to ensure the two vehicles are never in the same point throughout the trajectory. This result is further conﬁrmed by computing the distance between the vehicles using the orientation reference trajectories and employing (29). The orientation reference can be obtained from the linear acceleration and yaw angle generated trajectories. Fig. 7 reveals that, in fact, the binary constraints effectively avert collisions between the quadrotors.
Table I details the performance results in this section. Let nc = 2F and nb = 6K denote the number of continuous and binary variables involved in an optimisation problem, respectively. Notwithstanding the fact that, nowadays, there is a plethora of solvers which are able to achieve an optimal solution of a large convex QP in a fraction of a section, one can verify that the inclusion of the binary variables may increase the computational time signiﬁcantly.
B. Relay Manoeuvre
The proposed strategy for planning relay manoeuvres is evaluated, in this section, by presenting and analysing

142

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on April 21,2022 at 10:16:14 UTC from IEEE Xplore. Restrictions apply.

x [m]

Position of the Vehicles
3

2

1

0

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

Time [s]
Fig. 8. Time axis representing the duration of the every phase of the relay trajectory.

y [m]

2

1

0

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

z [m]

0.4

Vehicle 1

Vehicle 2

0.2

0

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

Time [s]

(a) No binary constraints.

Fig. 9. Illustration of the relay manoeuvre.

Position of the Vehicles
4

x [m]

2

0

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

2

y [m]

1

0

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

z [m]

0.6

Vehicle 1

0.4

Vehicle 2

0.2

0

-0.2

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

Time [s]

(b) Inclusion of binary constraints.

Fig. 6. Position reference trajectories generation excluding and including binary constraints.

Distance [m]

Distance between the two vehicles 3
No Bin. Constr. W. Bin. Constr. 2.5
2
1.5
1
0.5
0 0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5 Time [s]
Fig. 7. Distance between the two vehicles comparison.

the simulation results of a manoeuvre in which the two vehicles vary their roll angle until the desired orientation λG is achieved, while simultaneously shortening the lateral distance between them.
It is assumed that some sort of gripping mechanism is attached to the bottom of each vehicle to establish the desired orientation of the vehicle at the goal state G and the value of tb.
The time duration of each phase of the manoeuvre is depicted in Fig. 8. Throughout this section, the colour scheme adopted in Section IV is used: Phase 1 is associated with the colour blue; Phase 2, with the colour orange; and Phase 3, with the colour green.
In Fig. 9, a schematic representation of the established waypoints for this manoeuvre is provided. Let pSj, pGj, pF j ∈ R3 denote the start, goal, and ﬁnal positions of vehicle j, respectively. During Phase 2, one vehicle rolls 84° to left, and the other, to right, so as to avoid the singularity φ = π/2. The velocity of each quadcopter at the goal point vGj was selected in accordance to the deﬁned ﬁnal position and λG. Both vehicles start with zero linear velocity and ﬁnish at hover.
Fig. 14a and 14d present the position; Fig. 14b and 14e the velocity; and Fig. 14c and 14f the attitude trajectory plots of both vehicles, respectively. These graphs indicate that both aircraft are able to track, with minimal error, the position, velocity and attitude references while not colliding into one another, as Fig. 10 evinces. One can also observe that the imposed orientation constraints are satisﬁed.
So as to visualise whether the vehicles are indeed able to exchange a parcel while tracking the planned trajectory, Fig. 11 presents the the position reference trajectories of both vehicles together with the described trajectories during Phase 2. This ﬁgure reveals that the quadrotors keep a suitable orientation for the relay manoeuvre while simultaneously shortening the distance between them. The analysis of the attitude (Fig. 14c and 14f) and inter-vehicle distance (Fig. 10) plots indicates that the quadrotors keep a suitable orientation for the relay manoeuvre while simultaneously shortening the

143

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on April 21,2022 at 10:16:14 UTC from IEEE Xplore. Restrictions apply.

Vehicle 1 Reference 2 Vehicle 2

Distance between the two vehicles 25 20

z [m]

2

1.8

-1

-0.5

0

0.5

1

1.5

y [m]

Fig. 12. Composite illustration of the vehicles tracking the reference of

15

Phase 3 (an animation is available at https://youtu.be/0xPtaoa6kfY).

Distance [m]

10
5
0 0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5 Time [s]
Fig. 10. Distance between the quadcopters computed using the square root of (29).

z [m]

2

1.8

1.6

1.4

1.2

1

0.8

0.6

4

2

0 -2 -4

y [m]

Reference 1 Vehicle 1 Reference 2 Vehicle 2
-0.6 -0.4 -0.2 0 0.2 0.4 0.6 0.8 1
x [m]

Fig. 11. Composite illustration of the vehicles tracking the reference of Phase 2 (an animation is available at https://youtu.be/0xPtaoa6kfY).

distance between them.
Fig. 12 reveals the position reference trajectories of both vehicles together with the described trajectories during Phase 3. The aircraft swiftly move apart from each other.
The control inputs provided to the vehicles throughout the trajectory are represented in Fig. 13. The lines in lighter colours correspond to the inputs provided to the ﬁrst vehicle, whereas the darker, to the second. It is observed that both track the reference trajectories without demanding high input values.
Finally, Table II arranges the value of the cost function and the time to attain an optimal solution for the three phases of the manoeuvre. Although the performance results of the relay manoeuvre indicate it can be planned in a fair short amount of time, when there is a chance of the two vehicles being in the course of collision at any point of the trajectory, the solver may take signiﬁcantly longer to provide an optimal solution.

T [N]

Commanded thrust
4

3

2

1

0

0

1

2

3

4

Time [s]

Commanded y moment
1

0.5

0

-0.5

-1

0

1

2

3

4

Time [s]

n [N.m]

l [N.m]

Commanded x moment
10

5

0

-5

-10

0

1

2

3

4

Time [s]

Commanded z moment
0.5

0

-0.5

0

1

2

3

4

Time [s]

Fig. 13. Commanded thrust and body torques.

m [N.m]

VII. CONCLUSIONS
The proposed strategy for planning relay manoeuvres using a mixed-integer quadratic program (MIQP) proved to be successful, ensuring the generation of polynomial trajectories which not only avoid collisions between the vehicles, but also enable the aircraft to be in a suitable orientation to perform the package exchange. It was veriﬁed that the imposition of linear constraints on the linear acceleration effectively coordinates the orientation of the vehicles. Regarding the possibility that a tracking controller may not be able to follow the desired trajectories, the relay manoeuvre was spilt into three phases. The second phase of the manoeuvre is when the vehicles are to transfer the package to one another and, therefore, the trajectory generated for this phase builds upon the dynamical model of the robots.
In terms of future work, experimental tests to further study the aerodynamics interactions between the vehicles are being considered. Furthermore, it is relevant to evaluate the robustness of the proposed backwards integration strategy under disturbances, namely wind, and its performance when the vehicle dynamics are coupled with different controller types.

TABLE II RELAY MANOEUVRE - PERFORMANCE RESULTS.

Roll Relay

Phase 1 Cost T [s] 1545 2.860

Phase 2 Cost T [s] 14407 1.235

Phase 3 Cost T [s] 52717 0.5990

144

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on April 21,2022 at 10:16:14 UTC from IEEE Xplore. Restrictions apply.

x [m]

y [m]

Position of Vehicle 1
2

0

-2

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

0

-5

-10

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

2

1

0

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

Time [s]

(a) Position of vehicle 1.

vy [m/s]

vz [m/s]

vx [m/s]

Linear velocity of Vehicle 1
2

0

-2

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

10

0

-10

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

2 1 0

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

Time [s]

(b) Velocity of vehicle 1.

[deg]

[deg]

[deg]

Attitude of Vehicle 1
100

50

0

-50

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

10

0

-10

-20

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

0 -1 -2

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

Time [s]

(c) Attitude of vehicle 1.

z [m]

x [m]

y [m]

Position of Vehicle 2
2

0

-2

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

10

5

0

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

2

1

0

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

Time [s]

(d) Position of vehicle 2.

vy [m/s]

vz [m/s]

vx [m/s]

Linear velocity of Vehicle 2
2
0

-2

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

10

0

-10

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

2 1 0

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

Time [s]

(e) Velocity of vehicle 2.

[deg]

[deg]

[deg]

Attitude of Vehicle 2
50

0

-50

-100

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

20

0

-20

-40

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

2

0

-2

0

0.5

1

1.5

2

2.5

3

3.5

4

4.5

5

Time [s]

(f) Attitude of vehicle 2.

z [m]

Fig. 14. Position, velocity, and attitude actual and reference trajectories for the relay manoeuvre. The references are depicted using dashed lines and darker colours; the actual trajectories, using continuous lines and lighter colours. The red stars correspond to the established waypoints.

The ﬂexibility of the algorithm would be enhanced if each quadrotor considered its initial and launch conﬁgurations to set the time duration of its own trajectory segment of Phase 1 of the manoeuvre. Finally, it is worth pursuing sensor-based cooperative control strategies which fully ensure a faithful tracking of the proposed optimal trajectories and a successful parcel exchange.

REFERENCES

[1] R. D’Andrea, “Guest Editorial - Can Drones Deliver?” IEEE Trans-

actions on Automation Science and Engineering, vol. 11, no. 3, pp.

647–648, 2014.

[2] “Deutsche Post DHL Group — DHL Parcelcopter,” [Online]

Available: https://www.dpdhl.com/en/media-relations/specials/dhl-

parcelcopter.html.

[3] M. Giles, “Zipline launches the world’s fastest commercial deliv-

ery drone,” MIT Technology Review, April 3, 2018, [Online] Avail-

able: https://www.technologyreview.com/2018/04/03/144144/zipline-

launches-the-worlds-fastest-commercial-delivery-drone/.

[4] “Amazon — Amazon Prime Air,” [Online] Available:

https://www.amazon.com/b?node=8037720011l.

[5] S. Burns, “Drone meets delivery truck,” UPS

Longitudes, February 22, 2017, [Online] Avail-

able:

https://www.ups.com/us/en/services/knowledge-

center/article.page?kid=cd18bdc2.

[6] “Project

REPLACE,”

[Online]

Available:

http://replace.isr.tecnico.ulisboa.pt.

[7] J. Leishman, Principles of Helicopter Aerodynamics, 2nd ed. Cam-

bridge University Press, 2006.

[8] D. Mellinger and V. Kumar, “Minimum Snap Trajectory Generation

and Control for Quadrotors,” Proceedings - IEEE International Con-

ference on Robotics and Automation, pp. 2520–2525, 2011.

[9] D. Mellinger, A. Kushleyev, and V. Kumar, “Mixed-Integer Quadratic Program Trajectory Generation for Heterogeneous Quadrotor Teams,” Proceedings - IEEE International Conference on Robotics and Automation, pp. 477–483, 2012.
[10] G. Loianno, C. Brunner, G. McGrath, and V. Kumar, “Estimation, control, and planning for aggressive ﬂight with a small quadrotor with a single camera and imu,” IEEE Robotics and Automation Letters, vol. 2, no. 2, pp. 404–411, 2016.
[11] G. Yu, D. Cabecinhas, R. Cunha, and C. Silvestre, “Quadrotor trajectory generation and tracking for aggressive maneuvers with attitude constraints,” IFAC-PapersOnLine, vol. 52, no. 12, pp. 55–60, 2019.
[12] D. Mellinger, N. Michael, and V. Kumar, “Trajectory Generation and Control for Precise Aggressive Maneuvers with Quadrotors,” in Int, Symposium on Experimental Robotics, 2010.
[13] A. Richards and J. P. How, “Aircraft Trajectory Planning With Collision Avoidance Using Mixed Integer Linear Programming,” in Proceedings of the American Control Conference (IEEE Cat. No. CH37301), vol. 3. Anchorage, AK: IEEE, 2002, pp. 1936–1941.
[14] T. Schouwenaars, B. De Moor, E. Feron, and J. How, “Mixed Integer Programming for Multi-Vehicle Path Planning,” in 2001 European control conference (ECC). Porto, Portugal: IEEE, 2001, pp. 2603– 2608.
[15] T. Mercy, R. Van Parys, and G. Pipeleers, “Spline-based motion planning for autonomous guided vehicles in a dynamic environment,” IEEE Transactions on Control Systems Technology, vol. 26, no. 6, pp. 2182–2189, 2017.
[16] F. Augugliaro, A. P. Schoellig, and R. D’Andrea, “Generation of collision-free trajectories for a quadrocopter ﬂeet: A sequential convex programming approach,” IEEE International Conference on Intelligent Robots and Systems, pp. 1917–1922, 2012.
[17] L. A. Wolsey and G. L. Nemhauser, Integer and Combinatorial Optimization, 1st ed. New York: John Wiley & Sons, 1988.
[18] International Business Machines Corporation, IBM ILOG CPLEX Optimization Studio Getting Started with CPLEX for MATLAB V12.8, 2017.

145

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on April 21,2022 at 10:16:14 UTC from IEEE Xplore. Restrictions apply.

