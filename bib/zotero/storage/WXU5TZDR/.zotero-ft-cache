IEEE websites place cookies on your device to give you the best user experience. By using our websites, you agree to the placement of these cookies. To learn more, read our Privacy Policy.
Accept & Close
Loading [MathJax]/extensions/MathZoom.js

Skip to Main Content

    IEEE.org
    IEEE Xplore
    IEEE SA
    IEEE Spectrum
    More Sites 

    Cart 
    Create Account
    Personal Sign In

IEEE Xplore logo - Link to home

    Browse
    My Settings
    Help

Access provided by:
Technische Hochschule Ingolstadt
Sign Out
IEEE logo - Link to IEEE main site homepage
Access provided by:
Technische Hochschule Ingolstadt
Sign Out
ADVANCED SEARCH
Conferences > 2016 International Conference...
Dynamics modelling and linear control of quadcopter
Publisher: IEEE
Cite This
PDF
  << Results   
Pengcheng Wang ; Zhihong Man ; Zhenwei Cao ; Jinchuan Zheng ; Yong Zhao
All Authors
View Document
36
Paper
Citations
6219
Full
Text Views

    Alerts
    Alerts
    Manage Content Alerts
    Add to Citation Alerts

Abstract
Document Sections

    I.
    Introduction
    II.
    Mathematical Modelling
    III.
    Attitude Control Scheme
    IV.
    Simulation Results
    V.
    Conclusion

Authors
Figures
References
Citations
Keywords
Metrics
More Like This

    Download PDF
    View References
    Request Permissions
    Save to
    Alerts 

Abstract: In this paper, a cascade PID feedback control algorithm is proposed to stabilize the attitude of a quadcopter so that the balancing state can be ensured in spite of distu... View more
Metadata
Abstract:
In this paper, a cascade PID feedback control algorithm is proposed to stabilize the attitude of a quadcopter so that the balancing state can be ensured in spite of disturbances. A mathematical model of quadcopter dynamics is developed by applying Newton-Euler method. It reveals the exact relationships among all the variables involved. Both linear and nonlinear state-space equations are derived afterwards, which are essential for the controller design and further development. The simulations are also carried out to demonstrate the effectiveness and robustness of the cascade PID algorithm compared with classic PID control scheme.
Published in: 2016 International Conference on Advanced Mechatronic Systems (ICAMechS)
Date of Conference: 30 Nov.-3 Dec. 2016
Date Added to IEEE Xplore : 16 January 2017
ISBN Information:
Electronic ISSN: 2325-0690
INSPEC Accession Number: 16585986
DOI: 10.1109/ICAMechS.2016.7813499
Publisher: IEEE
Conference Location: Melbourne, VIC, Australia
Contents
SECTION I.
Introduction

The multi -rotor helicopter has experienced a remarkable development over last decade, the most commonly used and studied one is the quadcopter which is also known as a quadrotor. It has drawn a lot attention from engineers and researchers due to its simple mechanical structure and a massive growth in applications. Recently, the quadcopter becomes one of the most popular studied systems in control area. It severs as an excellent test-bed for investigating the behavior of multiple-input multiple-output (MIMO) systems. In general, there are two types of quadcopter configuration, which are the plus and cross structures respectively. In this paper, the dynamics modelling and controller design are based on the latter structure. The quadcopter is seen as an under-actuated system which has six degrees of freedom (three translational and three rotational) [1] , but with only four independent inputs (the speed of each motor), this brings the strong coupling of rotational and translational dynamics. Due to the under-actuated properties of quadcopters, maintaining its balancing state or a desired attitude becomes more challenging. Therefore, the control algorithm design is very important and modelling a more realistic dynamic model of a quadcopter is also crucial.

Over the last decade, various control methodologies have been proposed to investigate the attitude control problem of unmanned aerial vehicles (UAV). Both linear and nonlinear control schemes are involved. In [2] – [3] [4] the model-based PD and Linear Quadratic Regulator (LQR) control schemes are applied to an indoor micro quadcopter. The PID algorithm in three structures are considered to formulate the control tasks, PID, PI-D and I-PD controllers are compared and examined with respect to the best performance [5] . Optimized PID control method is proposed in [6] , two simulations are carried out with respect to optimized PID and Back-step controller. Other kinds of control strategies are also mentioned in such as H infinity [7] , linear quadratic optimal control, back-stepping control [8] , sliding mode control [9] and so on.

Many people have emphasized the merits of PID control method in their papers [10] – [11] [12] , and it is true that the PID control technique has been widely used in many areas and provides an effective performance in controlling unstable systems. Nonetheless, the drawback of PID control method is when the disturbance results a large error in the system, the transient response of systems in terms of settling time, overshoots and steady-state response will be compromised which presents a weaker robustness [13] . Especially in the quadcopter system, the external disturbances always cause a large tracking error, which raises the difficulty of controller design [14] . Hence, a robust cascade PID algorithm is proposed to improve the stability by lowering the system sensitivity to the external disturbances. In addition, the mathematical models of quadcopter dynamics are usually derived from Euler-Lagrange or Newton-Euler methods [15] [16] , the latter is employed and the dynamics of motors are taken into account during the modelling for maximum accuracy and feasibility [17] . In section III , the proposed cascade PID controller is developed based on the linear model of the system. In section IV , the simulations of cascade PID and a parallel structure PID controllers are both performed.
Fig. 1 - Quadcopter aerial vehicle
Fig. 1

Quadcopter aerial vehicle

Show All

SECTION II.
Mathematical Modelling
A. Coordinate Systems and Transformations

To specify the attitude of quadcopters in space, two frames have to be introduced which are inertial frame E l and body frame E B . Let the position vector of the quadcopter be defined as ξ = [ x   y   z ] T ∈ E 1 , and its orientation vector described by Euler angle η = [ ϕ   θ   ψ ] T ∈ E I in terms of roll, pitch and yaw angles; then, the linear velocity γ = [ u   v   w ] T ∈ E B and angular velocity Ω = [ p   q   r ] T ∈ E B of the quadcopter have the following relationship with position and orientation vectors:
{ ⋅ ξ = R Υ ⋅ η = J Ω J = ⎡ ⎣ ⎢ 1 0 0 0 c ϕ − s ϕ − s θ s ϕ c θ c ϕ c θ ⎤ ⎦ ⎥ R = ⎡ ⎣ ⎢ c   θ   c   ψ c   θ   s   ψ − s   θ c   ψ   θ   s ϕ − s   ψ   c   ψ s   ψ   s   θ   s   ϕ + c   ψ   c   ψ   c   ϕ c   θ   s   ϕ c   ψ   s   θ   c   ϕ + s   ψ   s   ϕ s   ϕ   s   θ   c   ϕ − c   ψ   s   ϕ c   θ   c   ϕ ⎤ ⎦ ⎥ (1) (2) (3)
View Source Right-click on figure for MathML and additional features. \begin{gather*} \begin{cases} \cdot{\xi}=\boldsymbol{R}\Upsilon\\ \cdot{\eta}=\boldsymbol{J}\Omega \end{cases} \tag{1}\\ \boldsymbol{J}=\begin{bmatrix} 1 & 0 & -s\theta\\ 0 & c\phi & s\phi c\theta\\ 0 & -s\phi & c\phi c\theta \end{bmatrix} \tag{2}\\ \boldsymbol{R}=\\ \begin{bmatrix} c\ \theta\ c\ \psi & c\ \psi\ \theta\ s\phi-s\ \psi\ c\ \psi & c\ \psi\ s\ \theta\ c\ \phi+s\ \psi\ s\ \phi\\ c\ \theta\ s\ \psi & s\ \psi\ s\ \theta\ s\ \phi+c\ \psi\ c\ \psi\ c\ \phi & s\ \phi\ s\ \theta\ c\ \phi-c\ \psi\ s\ \phi\\ -s\ \theta & c\ \theta\ s\ \phi & c\ \theta\ c\ \phi \end{bmatrix} \tag{3} \end{gather*} where R is a rotational matrix and J is an angular velocity transformation matrix which convert attitude and angular speed of the quadcopter from body frame to inertial frame; c and s represent cosine and sine functions respectively. Small angle assumption has been made around hovering condition [18] which results in c o s ( . ) = 1 , s i n ( . ) = 0 , hence, the angular velocities in both frames are equivalent.

B. Dynamics of Quadcopter

The dynamics model is obtained based on the following assumptions:

    the body frame of the quadcopter is rigid and symmetric;

    the center of the body frame coincides with the center of gravity;

    the aerodynamics effects are neglected.

According to the aerodynamics, the lifting force and moment are proportional to the square of propeller rotation speed.
{ f i = k f ω 2 i τ i = k m ω 2 i (4)
View Source Right-click on figure for MathML and additional features. \begin{equation*} \begin{cases} f_{i}=k_{f}\omega_{i}^{2}\\ \tau_{i}=k_{m}\omega_{i}^{2} \end{cases} \tag{4} \end{equation*} where k f and k m are the aerodynamics force and moment constant. These constants can be determined experimentally.

The attitude and altitude are governed by varying the speed of four motors independently, thus, the total thrust and torques generated by rotating propellers can be expressed by:
T = k f [ ω 2 1 + ω 2 2 + ω 2 3 + ω 2 4 ] τ ϕ τ θ τ ψ = l k f [ ( ω 2 2 + ω 2 3 ) − ( ω 2 1 + ω 2 4 ) ] = l k f [ ( ω 2 1 + ω 2 2 ) − ( ω 2 3 + ω 2 4 ) ] = k m [ ( ω 2 1 + ω 2 3 ) − ( ω 2 2 + ω 2 4 ) ] (5)
View Source Right-click on figure for MathML and additional features. \begin{align*} T=k_{f}[\quad \omega_{1}^{2}+\omega_{2}^{2}+\omega_{3}^{2}+\omega_{4}^{2}\quad]\\ \tau_{\phi}&=lk_{f}[(\omega_{2}^{2}+\omega_{3}^{2})-(\omega_{1}^{2}+\omega_{4}^{2})]\\ \tau_{\theta}&=lk_{f}[(\omega_{1}^{2}+\omega_{2}^{2})-(\omega_{3}^{2}+\omega_{4}^{2})]\\ \tau_{\psi}&=k_{m}[(\omega_{1}^{2}+\omega_{3}^{2})-(\omega_{2}^{2}+\omega_{4}^{2})] \tag{5} \end{align*}

Define [ u 1 u 2 u 3 u 4 ] T = [ T τ ϕ τ θ τ ψ ] T , by using Newton-Euler method, the rotational motion equations can be described as:
I η ¨ + × I ⋅ η = ⎡ ⎣ ⎢ u 2 u 3 u 3 ⎤ ⎦ ⎥ I = ⎡ ⎣ ⎢ I x x 0 0 0 I y y 0 0 0 I z z ⎤ ⎦ ⎥ (6) (7)
View Source Right-click on figure for MathML and additional features. \begin{align*} &I\ddot{\eta}+\times I\cdot{\eta}= \begin{bmatrix} u_{2}\\ u_{3}\\ u_{3} \end{bmatrix} \tag{6}\\ &I=\begin{bmatrix} I_{xx} & 0 & 0\\ 0 & I_{yy} & 0\\ 0 & 0 & I_{zz} \end{bmatrix} \tag{7} \end{align*}

Due to the symmetrical structure of the quadcopter, the inertial matrix I is a diagonal matrix.

By substituting (7) into (6) , the following equation can be established:
⎡ ⎣ ⎢ ⎢ I x x ϕ ¨ I y y θ ¨ I z z ψ ¨ ⎤ ⎦ ⎥ ⎥ + ⎡ ⎣ ⎢ ⋅ θ I z z ⋅ ψ − ⋅ ψ I y y ⋅ θ ⋅ ψ I x x ⋅ ϕ − ⋅ ϕ I z z ⋅ ψ ⋅ ψ I y y ⋅ θ − ⋅ θ I x x ⋅ ϕ ⎤ ⎦ ⎥ = ⎡ ⎣ ⎢ u 2 u 3 u 4 ⎤ ⎦ ⎥ (8)
View Source Right-click on figure for MathML and additional features. \begin{equation*} \begin{bmatrix} I_{xx}\ddot{\phi}\\I_{yy}\ddot{\theta}\\I_{zz}\ddot{\psi} \end{bmatrix} +\begin{bmatrix} \cdot{\theta}I_{zz}\cdot{\psi}-\cdot{\psi}I_{yy}\cdot{\theta}\\ \cdot{\psi}I_{xx}\cdot{\phi}-\cdot{\phi}I_{zz}\cdot{\psi}\\ \cdot{\psi}I_{yy}\cdot{\theta}-\cdot{\theta}I_{xx}\cdot{\phi}\end{bmatrix} =\begin{bmatrix} u_{2}\\ u_{3}\\ u_{4} \end{bmatrix} \tag{8} \end{equation*}

Expanding each term leads to,
ϕ ¨ = u 2 I x x + I y y I x x ⋅ θ ⋅ ψ − I z z I x x ⋅ θ ⋅ ψ θ ¨ = u 3 I y y + I z z I y y ⋅ ψ ⋅ ϕ − I x x I y y ⋅ ψ ⋅ ϕ ψ ¨ = u 4 I z z + I x x I z z ⋅ ϕ ⋅ θ − I y y I z z ⋅ ϕ ⋅ θ (9)
View Source Right-click on figure for MathML and additional features. \begin{align*} &\ddot{\phi}=\frac{u_{2}}{I_{xx}}+\frac{I_{yy}}{I_{xx}}\cdot{\theta}\cdot{\psi}-\frac{I_{zz}}{I_{xx}}\cdot{\theta}\cdot{\psi}\\ &\ddot{\theta}=\frac{u_{3}}{I_{yy}}+\frac{I_{zz}}{I_{yy}}\cdot{\psi}\cdot{\phi}-\frac{I_{xx}}{I_{yy}}\cdot{\psi}\cdot{\phi}\\ &\ddot{\psi}=\frac{u_{4}}{I_{zz}}+\frac{I_{xx}}{I_{zz}}\cdot{\phi}\cdot{\theta}-\frac{I_{yy}}{I_{zz}}\cdot{\phi}\cdot{\theta} \tag{9} \end{align*}

Because of the dynamics of a quadcopter is directly related to the accelerations of the rotational and translational motions, so Dynamics equations have to be in accelerations form. The translational motion equations can be derived by applying Newton's Second law:
m ζ ¨ F B = ⎡ ⎣ ⎢ 0 0 m g ⎤ ⎦ ⎥ + R F B = ⎡ ⎣ ⎢ 0 0 − u 1 ⎤ ⎦ ⎥ (10) (11)
View Source Right-click on figure for MathML and additional features. \begin{align*} m\ddot{\zeta}&=\begin{bmatrix} 0\\ 0\\ mg \end{bmatrix}+\boldsymbol{R}F_{B} \tag{10}\\ F_{B}&=\begin{bmatrix} 0\\ 0\\ -u_{1} \end{bmatrix} \tag{11} \end{align*} where F B is the total forces acting on the quadcopter in body frame.

By substituting (11) into (10) , the following equations can be obtained:
x ¨ = − u 1 m ( s i n ϕ s i n ψ + c o s ϕ c o s ψ s i n θ ) y ¨ = − u 1 m ( c o s ϕ s i n ψ s i n θ − c o s ψ s i n ϕ ) z ¨ = g − u 1 m ( c o s ϕ c o s θ ) (12)
View Source Right-click on figure for MathML and additional features. \begin{align*} \ddot{x}=\frac{-u_{1}}{m}(sin \phi sin \psi+cos \phi cos \psi sin \theta)\\ \ddot{y}=\frac{-u_{1}}{m}(cos \phi sin \psi sin \theta-cos \psi sin \phi)\\ \ddot{z}=g-\frac{u_{1}}{m}(cos \phi cos \theta) \tag{12} \end{align*}

It is noted that the dynamics of quadcopters are highly nonlinear and strongly coupled, so the linearization is performed around an equilibrium point to simplify the mathematical model and decouple its dynamics based on previous assumptions:
⎧ ⎩ ⎨ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ϕ ¨ = u 2 I x x θ ¨ = u 3 I y y ψ ¨ = u 4 I z z   x ¨ = − g θ y ¨ = g ϕ z ¨ = g − u 1 m (13)
View Source Right-click on figure for MathML and additional features. \begin{equation*} \begin{cases} \quad\ddot{\phi}=\frac{u_{2}}{I_{xx}}\\ \quad\ddot{\theta}=\frac{u_{3}}{I_{yy}}\\ \quad\ddot{\psi}=\frac{u_{4}}{I_{zz}}\\ \ \ddot{x}=-g\theta\\ \quad\ddot{y}=g\phi\\ \ddot{z}=g-\frac{u_{1}}{m} \end{cases} \tag{13} \end{equation*}

The internal state is defined as:
x = [ z ⋅ z ψ ⋅ ψ x x ˙ ϕ ⋅ ϕ y ⋅ y θ ⋅ θ ] T
View Source Right-click on figure for MathML and additional features. \begin{equation*} \mathbf{x}=[z\quad \cdot{z}\quad \psi\quad \cdot{\psi}\quad x\quad \dot{x}\quad \phi\quad \cdot{\phi}\quad y\quad \cdot{y}\quad \theta\quad \cdot{\theta}\quad]^{T} \end{equation*}

Therefore, the state space form of the linear dynamics model can be represented by:
x ˙ = A x + B u (14)
View Source Right-click on figure for MathML and additional features. \begin{equation*} \dot{x}=\boldsymbol{A}x+\boldsymbol{B}u \tag{14} \end{equation*} where
A = ⎡ ⎣ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 g 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 − g 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 ⎤ ⎦ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ B = ⎡ ⎣ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ ⎢ 0 0 0 0 1 m 0 0 0 0 0 0 0 0 1 I x x 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 I y y 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 I z z ⎤ ⎦ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥ ⎥
View Source Right-click on figure for MathML and additional features. \begin{gather*} \boldsymbol{A}=\begin{bmatrix} 0\quad 1\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\\ 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\\ 0\quad 0\quad 0\quad 1\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\\ 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\\ 0\quad 0\quad 0\quad 0\quad 0\quad 1\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\\ 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad g\quad 0\quad 0\quad 0\quad 0\quad 0\\ 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 1\quad 0\quad 0\quad 0\quad 0\\ 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\\ 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 1\quad 0\quad 0\\ 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad -g\quad 0\\ 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 1\\ 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0\quad 0 \end{bmatrix}\\ \boldsymbol{B}= \begin{bmatrix} 0\quad 0\quad 0\quad 0\\ \frac{1}{m}\quad 0\quad 0\quad 0\\ 0\quad 0\quad 0\quad 0\\ 0\quad \frac{1}{I_{xx}}\quad 0\quad 0\\ 0\quad 0\quad 0\quad 0\\ 0\quad 0\quad 0\quad 0\\ 0\quad 0\quad 0\quad 0\\ 0\quad 0\quad \frac{1}{I_{yy}}\quad 0\\ 0\quad 0\quad 0\quad 0\\ 0\quad 0\quad 0\quad 0\\ 0\quad 0\quad 0\quad 0\\ 0\quad 0\quad 0\quad \frac{1}{I_{zz}} \end{bmatrix} \end{gather*}

Occasionally, the dynamics of brushless DC motors are not taken into consideration or highlighted during the mathematical modelling of the quadcopter dynamics [19] – [20] [21] , which may degrade the performance of the controller to a certain degree.

In this paper, a static function is introduced to approximate the dynamics of motors in the linear operating region. For control purposes, the relation between throttle input and steady-state angular speed of motors is shown as:
ω s = ( T h r o t t l e % ) k T + b (15)
View Source Right-click on figure for MathML and additional features. \begin{equation*} \omega_{s}=(Throttle\%)k_{T}+b \tag{15} \end{equation*} where k T is a conversion coefficient, b is the offset parameter which is a constant.

SECTION III.
Attitude Control Scheme

In order to maintain the balance or a desired attitude of the quadcopter, a classic PID controller is commonly used, however, it cannot provide a robust performance, regardless of whether the controlling target is Euler angle or angular rate [22] . In general, the control outputs of the classic PID controller only depend on the error value of the Euler angles, the impact of angular rate to the system transient response is completely overlooked [23] , thus the performance of the controller is limited. Hence, a new approach has been developed which is cascade PID algorithm. For a system with multiple sensors available, a cascade control system can achieve a better performance than the classic PID controller. The cascade control is composed of two PI controllers in series, the control output of the primary controller serves as the set point for the secondary controller, then the output of the secondary controller will feedback and affect the primary controller. For the quadcopter, the primary controller designed is an angle controller, and its control output is the desired angular rate, which serves as the set point of the secondary controller - the angular rate controller. The actual angular rate loop operates much faster than the actual angle loop, which allows it to have enough time to compensate for disturbances. The cascade control not only drives the current Euler angle converge to the desired angle, but also restricts the angular rate during the convergence. So the transient response of the cascade controller will be much smoother than the classic PID controller, this control technique can ensure that both Euler angle and angular rate are measured and controlled in the close-loop system. The robustness of the quadcopter system can be improved greatly. The design of the cascade PID controller is shown below:
Fig. 2 - Cascade PID control structure
Fig. 2

Cascade PID control structure

Show All

The control algorithm is designed to control the attitude of a quadcopter according to user instructions, the control inputs are chosen as [ u 1   u 2   u 3   u 4 ] T , which can be rewritten as:
⎡ ⎣ ⎢ ⎢ ⎢ u 1 u 2 u 3 u 4 ⎤ ⎦ ⎥ ⎥ ⎥ = ⎡ ⎣ ⎢ ⎢ ⎢ ⎢ k f − k f l + k f l + k m k f + k f l + k f l − k m k f + k f l − k f l + k m k f − k f l − k f l − k m ⎤ ⎦ ⎥ ⎥ ⎥ ⎥ ⋅ ⎡ ⎣ ⎢ ⎢ ⎢ ⎢ ω 2 1 ω 2 2 ω 2 3 ω 2 4 ⎤ ⎦ ⎥ ⎥ ⎥ ⎥ (16)
View Source Right-click on figure for MathML and additional features. \begin{equation*} \begin{bmatrix} u_{1}\\ u_{2}\\ u_{3}\\ u_{4} \end{bmatrix} =\begin{bmatrix} k_{f} & k_{f} & k_{f} & k_{f}\\ -k_{f}l & +k_{f}l & +k_{f}l & -k_{f}l\\ +k_{f}l & +k_{f}l & -k_{f}l & -k_{f}l\\ +k_{m} & -k_{m} & +k_{m} & -k_{m} \end{bmatrix}\cdot \begin{bmatrix} \omega_{1}^{2}\\ \omega_{2}^{2}\\ \omega_{3}^{2}\\ \omega_{4}^{2} \end{bmatrix} \tag{16} \end{equation*}

The cascade PID control algorithm of roll motion is represented in the discrete time form as follows:
e 0 ( t ) = ϕ d e s i r e d − ϕ a c t u a l ⋅ ϕ d e s i r e d = k p e 0 ( t k ) + k i ∑ i = 1 k e 0 ( t i ) T s e 1 ( t ) = ⋅ ϕ d e s i r e d − ⋅ ϕ a c t u a l u 2 = k p e 1 ( t k ) + k i ∑ i = 1 k e 1 ( t i ) T s (17)
View Source Right-click on figure for MathML and additional features. \begin{gather*} e_{0}(t)=\phi_{desired}-\phi_{actual}\\ \cdot{\phi}_{desired}=k_{p}e_{0}(t_{k})+k_{i}\sum_{i=1}^{k}e_{0}(t_{i})T_{s}\\ e_{1}(t)=\cdot{\phi}_{desired}-\cdot{\phi}_{actual}\\ u_{2}= k_{p}e_{1}(t_{k})+k_{i}\sum_{i=1}^{k}e_{1}(t_{i})T_{s} \tag{17} \end{gather*} where k p is Proportional gain; k i is Integral gain; T s is Sampling time of microcontroller.

The attitude of the quadcopter in terms of roll, pitch, and yaw angles are mapped to the PWM signals of the microcontroller. These are proportional to the throttle in equation (15) . Then the desired attitude angles become the input of the cascade PID controller, the manipulated values from the output of the controller then feed into equation (15) to calculate the desired rotating speed of the motors. Therefore, the corresponding thrust and torque can be determined based on equation (16) afterwards, so that the expected states which include Euler angles and angular rates can be achieved. Three cascade PID controllers are designed, one for each axis referring in particular to roll, pitch, and yaw motion.

The PID parameters are selected based on the experience of engineers and researchers [22] , some adjustments of PID parameters have been made to adapt the quadcopter system. The procedures of tuning PID parameters are shown below.

    First, increase the Proportional gain of outer loop (angle control) to stabilize the quadcopter until there is a little bit oscillation.

    Second, slightly increase the Integral gain of outer loop (angle control) to eliminate the angle error, and reduce the Proportional gain to reduce the overshoot.

    Then, tune the Proportional gain of inner loop (angular rate control) until the quadcopter start oscillating.

    Next, slightly increase the Integral gain of inner loop (angular rate control) to eliminate the angular velocity error, and reduce the Proportional gain to reduce the overshoot.

    Finally, repeat the procedures above until the quadcopter is stable and insensitive to some external disturbances

SECTION IV.
Simulation Results

Two PID controllers were tested in a simulation environment. First, a classic PID controller (or angle controller) was tested followed by an advanced cascade PID controller. F our different conditions were considered to examine the performance of these two control schemes: (i) taking off; (ii) single roll command; (iii) multiple commands (roll, pitch, yaw); and (iv) external disturbance injection.
Fig. 3 - Stabilization of PID control
Fig. 3

Stabilization of PID control

Show All
Fig. 4 - Stabilization of cascade PID control
Fig. 4

Stabilization of cascade PID control

Show All

Fig. 3 and 4 have shown that both classic and cascade PID controllers are capable of stabilizing the quadcopter and keep it at a certain level. The difference is that cascade PID controller converges the tracking error to zero much faster than the former.
Fig. 5 - Response of rolling command with PID control
Fig. 5

Response of rolling command with PID control

Show All
Fig. 6 - Response of rolling command with cascade PID control
Fig. 6

Response of rolling command with cascade PID control

Show All

Under a single roll command condition, the performance of two controllers is compared in Fig. 5 and 6 , it has noted that the cascade PID controller has the stronger tracking ability and the faster reaction speed than classic PID controller.
Fig. 7 - Roll, pitch, and yaw command with PID control
Fig. 7

Roll, pitch, and yaw command with PID control

Show All
Fig. 8 - Roll, pitch, and yaw command with cascade PID control
Fig. 8

Roll, pitch, and yaw command with cascade PID control

Show All
Fig. 9 - Disturbance rejection with PID control
Fig. 9

Disturbance rejection with PID control

Show All
Fig. 10 - Disturbance rejection with cascade PID control
Fig. 10

Disturbance rejection with cascade PID control

Show All

From the results of Fig. 5 to Fig. 10 , it is extremely obvious that the cascade PID control makes the system has a great command following ability without compromising robustness with regard to large external disturbances.

On the basis of simulation results, it has seen that the cascade PID control scheme reduced the overshoot of the system, and the response speed of the quadcopter is increased dramatically. This resulted in the quadcopter system being more stable and robust when the attitude changes. Stable flight is also guaranteed without large drifts.
SECTION V.
Conclusion

A robust cascade PID control algorithm has been developed based on the dynamic model of a quadcopter in this paper. The main advantage of the cascade PID control scheme is its strong robustness against to external disturbances. In addition, classic and cascade PID control schemes have been compared to demonstrate the effectiveness of the designed controller. The simulation results of quadcopter attitude control are given to support the proposed control algorithm. To conclude, the cascade PID control scheme provides an excellent performance boost to the quadcopter system. The future work will be focused on developing sliding mode control algorithms with a nonlinear dynamic model, so that the robustness and performance of the quadcopter system against parameter uncertainties and external disturbances can be improved.

Authors
Figures
References
Citations
Keywords
Metrics
   Back to Results   
More Like This
Motion stability of small scale helicopter using state feedback

2007 International Conference on Control, Automation and Systems

Published: 2007
Stability analysis and synthesis for scalar linear systems with a quantized feedback

IEEE Transactions on Automatic Control

Published: 2003
Show More
References
1. I. Sa and P. Corke, "System identification estimation and control for a cost effective open-source quadcopter", Robotics and Automation (ICRA) 2012 IEEE International Conference , pp. 2202-2209, 2012.
Show in Context View Article Full Text: PDF (1508) Google Scholar
2. L. M. Argentim, W. C. Rezende, P. E. Santos and R. A. Aguiar, "PID LQR and LQR-PID on a quadcopter platform", Informatics Electronics & Vision (ICIEV) 2013 International Conference , pp. 1-6, 2013.
Show in Context CrossRef Google Scholar
3. B. Erginer and E. Altug, "Modeling and PD control of a quadrotor VTOL vehicle", 2007 IEEE Intelligent Vehicles Symposium , pp. 894-899, 2007.
Show in Context View Article Full Text: PDF (481) Google Scholar
4. S. Bouabdallah, A. Noth and R. Siegwart, "PID vs LQ control techniques applied to an indoor micro quadrotor", Intelligent Robots and Systems 2004. (IROS 2004). Proceedings. 2004 IEEEIRSJ International Conference , pp. 2451-2456, 2004.
Show in Context CrossRef Google Scholar
5. G. Szafranski and R. Czyba, "Different approaches of PID control UAV type quadrotor", International Micro Air Vehicle conference and competitions 2011 (IMAV 2011)'t Harde , September 12-15, 2011.
Show in Context Google Scholar
6. H. Bolandi, M. Rezaei, R. Mohsenipour, H. Nemati and S. M. Smailzadeh, "Attitude Control of a Quadrotor with Optimized PID Controller", Intelligent Control and Automation , vol. 04, pp. 335-342, 2013.
Show in Context CrossRef Google Scholar
7. T. Wong, R. Khan and D. Lee, "Model linearization and n= controller design for a quadrotor unmanned air vehicle: Simulation study", ICARCV , pp. 1490-1495, 2014.
Show in Context Google Scholar
8. S. Bouabdallah and R. Siegwart, "Backstepping and sliding-mode techniques applied to an indoor micro quadrotor", Proceedings of the 2005 IEEE international conference on robotics and automation , pp. 2247-2252, 2005.
Show in Context CrossRef Google Scholar
9. R. Xu and D. Ozguner, "Sliding mode control of a quadrotor helicopter", Proceedings of the 45th Ieee Conference on Decision and Control , vol. 1-14, pp. 4957-4962, 2006.
Show in Context CrossRef Google Scholar
10. A. L. Salih, M. Moghavvemi, H. A. Mohamed and K. S. Gaeid, "Flight PID controller design for a UAV quadrotor", Scientific Research and Essavs , vol. 5, pp. 3660-3667, 2010.
Show in Context Google Scholar
11. R. Garcia, F Rubio and M. Ortega, "Robust PID control of the quadrotor helicopter", IFAC Proceedings Volumes , vol. 45, pp. 229-234, 2012.
Show in Context CrossRef Google Scholar
12. J. Li and Y. Li, "Dynamic analysis and PID control for a quadrotor", 2011 IEEE International Conference on Mechatronics and Automation , pp. 573-578, 2011.
Show in Context CrossRef Google Scholar
13. Y.-R. Tang and Y. Li, "Dynamic modeling for high-performance controller design of a UA V quadrotor", Information and Automation 2015 IEEE International Conference , pp. 3112-3117, 2015.
Show in Context CrossRef Google Scholar
14. S. Bouabdallah, P. Murrieri and R. Siegwart, "Design and control of an indoor micro quadrotor", Robotics and Automation 2004. Proceedings. ICRA '04. 2004 IEEE International Conference , pp. 4393-4398, 2004.
Show in Context CrossRef Google Scholar
15. M. Bergamasco and M. Lovera, "Identification of linear models for the dynamics of a hovering quadrotor", IEEE Transactions on Control Systems Technology , vol. 22, pp. 1696-1707, 2014.
Show in Context View Article Full Text: PDF (4222) Google Scholar
16. H. Yang and D. Lee, "Dynamics and control of quadrotor with robotic manipulator", 2014 IEEE International Conference on Robotics and Automation (ICRA) , pp. 5544-5549, 2014.
Show in Context View Article Full Text: PDF (349) Google Scholar
17. J. d. J. Rubio, J. P. Cruz, Z. Zamudio and A. Salinas, "Comparison of two quadrotor dynamic models", IEEE Latin AmericaTransactions , vol. 12, pp. 531-537, 2014.
Show in Context View Article Full Text: PDF (486) Google Scholar
18. E. Balasubramanian and R. Vasantharaj, "Dynamic Modeling and Control of Ouad Rotor", vol. 5, pp. 63-69, Feb. 2013.
Show in Context Google Scholar
19. C.-W. Shiu, C.-M., Hsu and J.-H. Chou, "Analysis of a Quadrotor with a Two- Degree-of- Freedom Robotic Arm", Computer Consumer and Control (IS3C) 2016 International Symposium , pp. 628-631, 2016.
Show in Context CrossRef Google Scholar
20. H. Lim, J. Park, D. Lee and H. J. Kim, "Build your own quadrotor: Open-source projects on unmanned aerial vehicles", IEEE Robotics & Automation Magazine , vol. 19, pp. 33-45, 2012.
Show in Context CrossRef Google Scholar
21. A. Tayebi and S. McGilvray, "Attitude stabilization of a VTOL quadrotor aircraft", IEEE Transactions on Control Systems Technology , vol. 14, pp. 562-571, 2006.
Show in Context View Article Full Text: PDF (693) Google Scholar
22. G. Bo, L. Xin, Z. Hui and W. Ling, "Quadrotor helicopter Attitude Control using cascade PID", Control and Decision Conference (CCDC) 2016 Chinese , pp. 5158-5163, 2016.
Show in Context CrossRef Google Scholar
23. N. Cao and A. F. Lynch, "Inner-Outer Loop Control for Quadrotor UAVs With Input and State Constraints", vol. 24, pp. 1797-1804, Sep. 2016.
Show in Context View Article Full Text: PDF (1097) Google Scholar
IEEE Personal Account

    Change username/password 

Purchase Details

    Payment Options
    View Purchased Documents 

Profile Information

    Communications Preferences
    Profession and Education
    Technical interests 

Need Help?

    US & Canada: +1 800 678 4333
    Worldwide: +1 732 981 0060
    Contact & Support 

Follow

About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | Privacy & Opting Out of Cookies

A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity.

© Copyright 2022 IEEE - All rights reserved.
IEEE Account

    Change Username/Password
    Update Address

Purchase Details

    Payment Options
    Order History
    View Purchased Documents

Profile Information

    Communications Preferences
    Profession and Education
    Technical Interests

Need Help?

    US & Canada: +1 800 678 4333
    Worldwide: +1 732 981 0060
    Contact & Support

    About IEEE Xplore
    Contact Us
    Help
    Accessibility
    Terms of Use
    Nondiscrimination Policy
    Sitemap
    Privacy & Opting Out of Cookies

A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity.
© Copyright 2022 IEEE - All rights reserved. Use of this web site signifies your agreement to the terms and conditions.
