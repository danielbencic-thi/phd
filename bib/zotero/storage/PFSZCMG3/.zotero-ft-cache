Fast and Robust Homotopy Path Planning Method for Mobile Robotics

G. Diaz-Arango, L. Hernandez-Martinez, A. Sarmiento-Reyes
INAOE Electronics Department, Puebla, Mexico
Email: {gerardo_diaz, luish, jarocho}@inaoep.mx

H. Vazquez-Leal Maestría en ingeniería electrónica y computación,
Facultad de Instrumentación Electrónica, Universidad Veracruzana,
Cto. Gonzalo Aguirre Beltrán S/N, 91000 Xalapa, VER, México Email: hvazquez@uv.mx

Abstract—In this paper, we propose a new scheme to ﬁnd a free-collision path for complex environment maps. This scheme considers the obstacles in the conﬁguration space as prohibited circular areas. Once the obstacles are modelled, the Non-Linear Algebraic Equation System (NAES) is formulated. Next, we apply a Homotopy Path Planning Method (HPPM) to ﬁnd a set of points that conforms the solution path on the free-space. HPPM uses the Homotopy Continuation Method (HCM) and the Spherical Algorithm (SA) to obtain the solutions of the NAES emanating from the map. In the present work, we propose a scheme for partitioning complex maps into a set of local maps. This is useful for reducing the computation time. Several simulations of complex environment maps with thousands of obstacles are presented. Furthermore, a strategy to obtain the shortest path is applied. Finally, a simulation of the path tracking on Robot Operating System (ROS) for a differential mobile robot is shown.
Keywords: Homotopy continuation methods, Path Planning, Mobile robot, ROS, Spherical Algorithm, Complex map.

presented in Section III. In Section IV, the Spherical tracking and the predictor-corrector scheme are brieﬂy explained. The proposed technique to ﬁnd successful paths for complex maps is presented in Section V. Some simulations for environment maps with thousand obstacles and the tracking by a 3P-DX robot performed in MobileSim software are shown in Section VI. Finally, the conclusions are presented in Section VII.
II. HOMOTOPIC CONTINUATION METHOD
Homotopy continuation methods are used to ﬁnd multiple solutions of NAES of the form:

f (x) = 0 : Rn −→ Rn,

(1)

HCM creates a continuous perturbation on the original equations system f (x) by transforming it into a Homotopic system. In this work we use Newton’s Homotopy and represent the system as:

I. INTRODUCTION
In recent decades, spend attention has been dedicated to solve the path planning issue for mobile robots. The main function of a path planning method is to ﬁnd collision-free path from an initial position until a goal position is reached. The most common algorithms are based on cell decomposition, artiﬁcial potential ﬁelds and probabilistic approaches. However, the conditions for proper functionality are different for each application. On one hand, a path is cut off due local minima present in artiﬁcial potential ﬁelds planning method [1], [2]. The decomposition cell methods are limited by the resolution of the grid [3] and the probabilistic approach algorithms exhibit a bad performance in narrow maps [4], [5]. On another approach, path panning methods based on HCM have proved great performance to ﬁnd a successful path [6], [7]. These methods model the work space, the obstacles and the robot as a NAES. Subsequently, the equation system is solved applying HCM for ﬁnding the set of solutions that constitute the path. In this work we present an efﬁcient path planning method for terrestrial mobile robots. This paper is organized as follows. In Section II, the concepts of the Homotopy Continuation Methods is presented. The Path Planning Method based on HCM and proposed obstacles representation are

H(x, λ) = λf (x) + (1 − λ)(f (x) − f (x0)) = 0, (2)
where λ is the homotopy parameter, x0 is the starting point, H(x, λ) : Rn+1 −→ Rn, x ∈ Rn. The behaviour of λ is described as:
• If λ = 0, the homotopy system have a trivial solution H(f (x), 0) = f (x) − f (x0) = 0.
• If λ = 1, the homotopy system have the solutions of the original system H(f (x), 1) = f (x) = 0.
During the continuous perturbation from λ = 0 to λ = 1 a sequence of solution points is obtained. This sequence, named Homotopic curve, constitutes the solution path (γ) of the NAES [6], [8], [9].
III. OBSTACLES REPRESENTATION AND HOMOTOPY PATH PLANNING METHOD
HPPM uses the system of equations that model the conﬁguration space and applies Newton’s homotopy to convert it into a homotopic system of equations. Next, it applies the SA for proper tracking the homotopic curve. For this system, the curve represents a sequence of points that describes a continuous path from a start point to a goal point while avoiding collisions with obstacles [6], [7]. The conﬁguration environment is presented as a system of two Non-Linear

978-1-4799-5341-7/16/$31.00 ©2016 IEEE

2579

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on August 11,2022 at 08:42:55 UTC from IEEE Xplore. Restrictions apply.

Algebraic Equations f1(x, y) = 0 and f2(x, y) = 0. For both equations the unique solution lies on the goal point B(a, b) [6], [7]. The conﬁguration space is represented by the equations:

f1(x, y) = L1(x, y) = 0,

(3)

f2(x, y) = L2(x, y) + W (x, y) − Q = 0,

(4)

where W (x, y) represents the obstacles in the map and Q =

W (a, b) eliminates the effect of the obstacles in the solution

point. L1 and L2 are two different straight line equations of

the form:

L1(x, y) = −y + m(x − a) + b = 0,

(5)

where m1 = −4 and m2 = −1. These straight lines intersect only at the target point B(a, b) as shown in Figure 1a.
Applying Newton’s homotopy to equations (3) and (4), the system is transformed into:

H = H1(f1(x, y), λ) = f1(x, y) − (1 − λ)f1(x0, y0) = 0, H2(f2(x, y), λ) = f2(x, y) − (1 − λ)f2(x0, y0) = 0, (6)

where (x0, y0) is the initial point A.

The works [6], [7] explain that the presence of obstacles in

the map produces a set of solution homotopic curves depicted

in Figure 1a, which shows the contour of the obstacles in solid

line. Besides, γ0 represents the solution path, DT is the direct path from A to B, IHC and EHC represents the internal and

external homotopic curves of each obstacle respectively. In this

work, we propose the obstacles representation as a circles of

the form:

|Ci(x, y)| + Ci(x, y) = 0,

(7)

where ∀ (x, y) ∈ R2 such that (x − xi)2 + (y − yi)2 ≤ rci i.e. the equation 7 has solution for the all points within the circle. Then, the W (x, y) in the equation 4 can be deﬁned by:

i=k−1
W (x, y) =

pi

,

(8)

i=0 |Ci(x, y)| + Ci(x, y)

Ci(x, y) = (x − xi)2 + (y − yi)2 − rc2i = 0,

(9)

where the circular shape of each obstacle is deﬁned by Ci equation 9, k is the number of obstacles in the map, pi is the repulsion parameter for the i-th obstacle, rci is the ratio of the circumference and (xi, yi) represents the center of a circular obstacle [6]. Our proposed obstacle representation removes all IHC on the map, as shown in Figure 1b. Using 8, we can represent the obstacles as prohibited areas due that their function is undeﬁned for the points inside of these.

IV. SPHERICAL TRACKING ALGORITHM AND NON-CONVERGENCE TO SOLUTION

Previous works have demonstrated the effectiveness of SA for tracking homotopic curves [9], [10]. The center of initial sphere is set on the point (x0, y0). Then, the intersection point between the homotopic curve and sphere is calculated. Subsequently in each step the center of a new sphere is placed on the previous intersection point. Figure 2 shows the schematic procedure of the spherical algorithm. As a result, the homotopic system is augmented with the SA:

c2
c0
c1

(a)

(b)

Figure 1: Homotopic paths presents in conﬁguration space map.

 H1(x, y, λ) = 0,

HS = H2(x, y, λ) = 0,

(10)

Si(x, y, λ) = 0.

for three dimensions, the sphere is represent as: Si(x, y, λ) = (x − cx)2 + (y − cy)2 + (λ − cλ)2 − r2 = 0,
(11) where r is the radius and (cx, cy, cλ) is the center of the sphere in each spherical tracking step.

Figure 2: Spherical tracking for a homotopy curve.
Predictor-Corrector Scheme A proper predictor-corrector scheme allows SA to reach a
correct homotopy curve. In this work, we use the scheme reported in [7]. Figure 3 shows the point (xp, yp, λp) as a predictor, this represents the intersection between the sphere Si and the tangent vector (vp). Once the predictor point is known,then the Newton-Raphson method (N-R)is applied as corrector to ﬁnd the intersection point (xi+1, yi+1, λi+1) between the homotopy curve and the sphere.
N-R Corrector

Figure 3: Predictor-corrector scheme.

The predictor point is calculated by using the next expres-

sion:

(xp, yp, λp) = (cx, cy, cλ) + r vp

(12)

where, (cx, cy, cλ) is the center of the sphere, r is the sphere
radius and vp is the tangent vector [9]. N-R can be recast as: (xj+1, yj+1, λj+1) = (xj , yj , λj ) − [J (HS))]−1 HS, (13)

where j, is the current iteration, (xj, yj, λj) is the point obtained during each iteration, [J(xj, yj, λj)]−1is the inverse

2580
Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on August 11,2022 at 08:42:55 UTC from IEEE Xplore. Restrictions apply.

matrix of the Jacobian HS (xj, yj, λj). The tolerance criterion

for N-R method in this work is set as:

HS (xj+1, yj+1, λj+1) < 1 × 10−6,

(14)

and the maximum number of iterations is set to jmax = 20. The existence of IHC due to the original obstacle representation produces traps inside the obstacles. When the predictor point is placed within the obstacles edge, the tracking could cycled and not reach the target. On the other hand, for the new representation if the predictor point is placed on the prohibited area, then the SA is truncated due a zero-division present in the equation 8. Figure 4 show the predictor point that produces spherical tracking failure.

(a) Representation of obsta- (b) Representation of obstacle cle using a circumference. using a circular area.

Figure 4: Predictor point issue.

V. SOLVING COMPLEX CONFIGURATION MAPS AND

FINDING A SHORTEST PATH

In the previous work [7] we explain how a set of auxiliary

paths (γ0) can be found by using intermediate points and different obstacle repulsion parameters. Figure 5a shows the

auxiliary path for the proposed obstacle representation.This

Figure shows the initial point A, goal point C, auxiliary point

B and auxiliary paths γ0,1, γ0,2, γ0,3 and γ0,4. In order to avoid the trivial path that passes along the edges of the map

we propose to conﬁne the interest region by using walls. The

walls are represented by elliptical approximations 16. The four

obstacles are added to 15 and then, the expression is redeﬁned

as:

i=4

W (x, y) = W (x, y) +

pi

, (15)

i=1 |Ri(x, y)| + Ri(x, y)

Ri(x, y) =

x − xi

2η
+

α

y − yi

2η
− 1 = 0,

β

(16)

where α is the width, β is the height, η deﬁnes the corners, pi is the repulsion parameter and (xi, yi) is the center for each wall [6]. Only the obstacles within the interest area are considered. The repulsion parameter for walls and circular obstacles in the edges automatically chosen such that the path is forced to stay inside, as shown in Figure 5b.

(a) Auxiliary paths for a (b) Creating local (c) Selection of

complex environment map. maps conﬁned by proper

auxiliary

walls.

points.

Figure 5: Strategies to solve a complex environment map.

In this work, we proposed an automatically procedure to

chose the auxiliary points by using N-R to solve the NAES

that represent the free-space 17 and the direct path 18. The

initial conditions of the NR are a set of points of the direct

path uniformly separated.
i=k−1

FS =

|Ci(x, y)| − Ci(x, y),

(17)

i=0

DT = −y +

b − y0 a − x0

(x − x0) + y0,

(18)

where (x0, y0) is the initial point and (a, b) is the goal point. A set of auxiliary, goal and initial points are depicted in Figure

5c. We apply a similar scheme as a the reported in [7] and a

local conﬁned maps scheme for generated a set of auxiliary

paths for complex environments. Subsequently, the shortest

path is built using a combination of the shortest auxiliary

paths. Figure 6a shows a complex map with 2000 obstacles and

Figure 6b presents the corresponding sectioned map, where the

interest obstacles are denoted in blue and the irrelevant in red.

(a) Environment 2-D map (b) Complex map sectioned on four

with 2000 obstacles.

local maps.

Figure 6: Scheme for solve 2-D complex environment maps.

VI. EXPERIMENTS

The efﬁciency of the proposed scheme is validated using a series of simulations for full complex maps and for a one sectioned map. Subsequently, one example of successful path is applied to a virtual Model of a P3-DX robot on ROS. All simulations presented in this work, were performed on C++ using a double precision data on a PC with Intel Core i5 at 2.5GHz and 6GB of RAM.

A. Successful path for maps with 200 and 2000 obstacles

We consider two study cases one with 200 obstacles and another with 2000 obstacles. For both cases, initial and the target points are set at (0, 0) and (1, 1) respectively. In order to avoid the trivial path, the maps are conﬁned in the normalized space using four rectangular obstacles. Figures 7a and 7b show four successful paths for each conﬁguration. The computation time and length of each path are presented in Table I.

N.Obstacles Path Steps
Time (ms) Path length

1 919 504 2.10143

Environment maps

200 Figure 7a

2

3

4

1

898

894

999

7165

483

504

564 41190

2.06822 2.01062 2.2497 2.59544

2000 Figure 7b

2

3

6404

7406

38840 48561

2.20463 2.57591

4 6953 39305 2.40284

Table I: Computation time and length in normalized units for four successful path of two environment maps.

2581
Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on August 11,2022 at 08:42:55 UTC from IEEE Xplore. Restrictions apply.

Goal

Goal

Goal

Start
Path1 Path2 Path3 Path4
(a) Map with 200 obstacles.

Start
Path1 Path2 Path3 Path4
(b) Map with 2000 obstacles.

Figure 7: Successful paths for two different environment maps.

Start
(a) Environment 2-D map (b) Path tracking by Pioneer 3P-DX robot. with 200 obstacles.
Figure 9: Scheme for solve 2-D maps with many obstacles.

B. Shortest path
Figure 8a shows unsuccessful auxiliary paths can be observed for the strategy reported in [7] due the complexity of the map. For the same conﬁguration, the proposed scheme of this work reaches to goal point successful, as shown in Figure 8b. Figure 8c shows a shortest and auxiliary paths for another conﬁguration of initial and goal points for map with 2000 obstacles.

Goal

Goal

VII. CONCLUSIONS
In this work, a modiﬁed strategy to solve complex environment maps is proposed. In same way, we proposed a scheme for reducing the complexity of maps with many obstacles by using local maps. Additionally, this approach is used to ﬁnd the shortest path and to reduce the computing time. The experiments prove that the proposed scheme for HPPM is appropriate to ﬁnd a successful path in complex conﬁguration maps with thousand obstacles. The ROS simulation veriﬁed the advantages of HPPM for applications in real robots. Finally, the computing times in Tables I and II show that the proposed scheme for solving complex maps reduces the calculation time by approximately 60 percent.

Start

Shortest path

Start

Shortest path

(a) Auxiliary paths for (b) Auxiliary paths and (c) Auxiliary paths and

method reported in [7]. shortest path using local shortest path using local

maps.

maps.

Figure 8: Complex environment map with 2000 obstacles solved by sectioned strategy.

Complex Environment map with 2000 obstacles

Figure

8a

8b

8c

Auxiliary points

5

5

4

Auxiliary paths

10

10

10

Steps

unsuccessful

6458

7027

Time (ms)

395623

12455

15344

Shortest Path length unsuccessful 1.6263

1.33849

Start-Goal

(0,0)-(1,1) (0,0)-(1,1) (0.38,0)-(0.68,1)

Table II: Comparative of a proposed approach and the scheme reported in [7].
It shows a decrease of 26385 ms for path planning of the Figures 8b and path 2 in 7b i.e. the computation time is reduced 67.93 per cent. In similar way, the length decreased 26.2 per cent.

C. ROS simulations
In this paper, we show the effective tracking of the obtained paths using MobileSim and ROS. In this case study, we use the package of the differential-drive mobile robot Pioneer 3P-DX. Figure 9b shows the simulation on ROS for a mobile robot 3P-DX developed on a square map of 40 meters per side.

REFERENCES
[1] M. C. Lee and M. G. Park, “Artiﬁcial potential ﬁeld based path planning for mobile robots using a virtual obstacle concept,” Advanced Intelligent Mechatronics IEEE/ASME International Conference, vol. 2, pp. 735– 740, 2003.
[2] M. A. P. Castañeda, J. Savage, A. Hernández, and F. A. Cosío, “Local autonomous robot navigation using potential ﬁelds,” Motion Planning. InTech, 2008.
[3] H. dong Zhang, B. hua Dong, Y. wan Cen, R. Zheng, S. Hashimoto, and R. Saegusa, “Path planning algorithm for mobile robot based on path grids encoding novel mechanism,” in Natural Computation, 2007. ICNC 2007. Third International Conference on, vol. 4, pp. 351–356, Aug 2007.
[4] C. bae Moon and W. Chung, “Kinodynamic planner dual-tree rrt (dt-rrt) for two-wheeled mobile robots using the rapidly exploring random tree,” Industrial Electronics, IEEE Transactions on, vol. 62, pp. 1080–1090, Feb 2015.
[5] M. Elbanhawi and M. Simic, “Sampling-based robot motion planning: A review,” Access, IEEE, vol. 2, pp. 56–77, 2014.
[6] H. Vazquez-Leal, A. Marin-Hernandez, Y. Khan, A. Yildirim, U. Filobello-Nino, R. Castaneda-Sheissa, and V. Jimenez-Fernandez, “Exploring collision-free path planning by using homotopy continuation methods,” Applied Mathematics and Computation, vol. 219, pp. 7514– 7532, 2013.
[7] G. Diaz-Arango, A. Sarmiento-Reyes, L. Hernandez-Martinez, H. Vazquez-Leal, D. Lopez-Hernandez, and A. Marin-Hernandez, “Path optimization for terrestrial robots using homotopy path planning method,” in Circuits and Systems (ISCAS), 2015 IEEE International Symposium on, pp. 2824–2827, May 2015.
[8] T. L. Wayburn and J. D. Seader, “Homotopy continuation methots for computer-aided process design,” Computers and Chemical Engineering, vol. 11, pp. 7–25, 1987.
[9] J. M. Oliveros-Munoz and H. Jiménez-Islas, “Hyperspherical path tracking methodology as correction step in homotopic continuation methods,” Chemical Engineering Science, vol. 97, pp. 413–429, 2013.
[10] Y. K., “Simple algorithms for tracing solution curves,” IEEE International Symposium on Circuits and Systems, vol. 6, pp. 2801–2804, 1992.

2582
Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on August 11,2022 at 08:42:55 UTC from IEEE Xplore. Restrictions apply.

