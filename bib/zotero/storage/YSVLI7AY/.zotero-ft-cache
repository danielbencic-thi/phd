IEEE websites place cookies on your device to give you the best user experience. By using our websites, you agree to the placement of these cookies. To learn more, read our Privacy Policy.
Accept & Close
Loading [MathJax]/extensions/MathZoom.js

Skip to Main Content

    IEEE.org
    IEEE Xplore
    IEEE SA
    IEEE Spectrum
    More Sites 

        Cart 
        Create Account
        Personal Sign In 

IEEE Xplore logo - Link to home

    Browse
    My Settings
    Help

Access provided by:
Technische Hochschule Ingolstadt
Sign Out
IEEE logo - Link to IEEE main site homepage
Access provided by:
Technische Hochschule Ingolstadt
Sign Out
ADVANCED SEARCH
Journals & Magazines > IEEE Transactions on Intellig... > Volume: 17 Issue: 4
A Review of Motion Planning Techniques for Automated Vehicles
Publisher: IEEE
Cite This
PDF
  << Results    |    Next >  
David González ; Joshué Pérez ; Vicente Milanés ; Fawzi Nashashibi
All Authors
View Document
671
Paper
Citations
8
Patent
Citations
23396
Full
Text Views

    Alerts
    Alerts
    Manage Content Alerts
    Add to Citation Alerts

Abstract
Document Sections

    I.
    Introduction
    II.
    Motion Planning State-of-the-Art
    III.
    Motion Planning Developments by ITS Groups Worldwide
    IV.
    Discussion

Authors
Figures
References
Citations
Keywords
Metrics
More Like This
Footnotes

    Download PDF
    View References
    Request Permissions
    Save to
    Alerts 

Abstract: Intelligent vehicles have increased their capabilities for highly and, even fully, automated driving under controlled environments. Scene information is received using on... View more
Metadata
Abstract:
Intelligent vehicles have increased their capabilities for highly and, even fully, automated driving under controlled environments. Scene information is received using onboard sensors and communication network systems, i.e., infrastructure and other vehicles. Considering the available information, different motion planning and control techniques have been implemented to autonomously driving on complex environments. The main goal is focused on executing strategies to improve safety, comfort, and energy optimization. However, research challenges such as navigation in urban dynamic environments with obstacle avoidance capabilities, i.e., vulnerable road users (VRU) and vehicles, and cooperative maneuvers among automated and semi-automated vehicles still need further efforts for a real environment implementation. This paper presents a review of motion planning techniques implemented in the intelligent vehicles literature. A description of the technique used by research teams, their contributions in motion planning, and a comparison among these techniques is also presented. Relevant works in the overtaking and obstacle avoidance maneuvers are presented, allowing the understanding of the gaps and challenges to be addressed in the next years. Finally, an overview of future research direction and applications is given.
Published in: IEEE Transactions on Intelligent Transportation Systems ( Volume: 17 , Issue: 4 , April 2016 )
Page(s): 1135 - 1145
Date of Publication: 26 November 2015
ISSN Information:
INSPEC Accession Number: 15874630
DOI: 10.1109/TITS.2015.2498841
Publisher: IEEE
Funding Agency:
Contents
SECTION I.
Introduction

The application of intelligent transportation systems is significantly aiding drivers, reducing some driving-associated tedious tasks. Specifically, highway driving has become safer thanks to the development of the Cruise Control (CC), Adaptive CC (ACC) and, lately, the Cooperative ACC (CACC) where both longitudinal actuators, throttle and brake pedals, are controlled using a pre-defined gap with the preceding vehicle [1] . For urban environments, systems like emergency braking with assistance of active suspension [2] , automatic parking [3] or blind angle vehicle detection [4] are also contributing toward a safer driving in populated areas.

These systems improve safety, comfort, transport time and energy consumption. Such systems are known as advanced driving assistance system (ADAS). Fully automated driving capabilities, that is, vehicles able to drive by themselves without human interventions are an extension of current partial automated ADAS. As a matter of fact, recent demonstrations on automated driving are facing complex real scenarios. Implementations from Google (with more than 700 000 hours of automated driving in different environments), Daimler and Karlsruhe Institute of Technology (KIT), recreating the first cross-country automobile journey in history, in an autonomous way [5] ; and Vislab and the University of Parma, showing automated driving capabilities in the PROUD project demo on 2013 [6] , are some of the recent demonstrations with promising results regarding automated driving technologies. Despite of some remarkable results obtained up to now, there is still a long way to go before having fully automated vehicles on public roads, including technical and legal unsolved challenges [7] .

Some initiatives launched between governments and manufactures are currently creating the framework for the new standards and regulations for automated driving. As a matter of fact, some ongoing European initiatives address legal matters and promote the standardization of these technologies, as Citymobil2 project [8] . They got permission from local authorities for vehicle demonstrations, and some certification procedures were developed. In United States, already four states (Nevada, Florida, California, and Michigan) and the District of Columbia recognize the importance of these technologies for future sustainable mobility and have enacted specific laws to allow automated driving in common traffic [9] .

When it comes to develop automated vehicles, a literature review shows different proposed control architectures. Stanford and Carnegie Mellon University (CMU) [10] pioneered the implementation of fully automated vehicles in the Grand and Urban DARPA challenges. In Europe, the VIAC project [11] and Daimler with KIT [5] described the different processing stages needed for the control architecture of automated vehicles, where perception, decision and control are the most important. Fig. 1 shows a general architecture for automated vehicles that can be extracted from earlier developments, including interconnections based on previous real automated vehicle implementations.
Fig. 1.

Control architecture for automated vehicles. General abstraction based on: [5] , [6] , [10] , [15] – [16] [17] [18] .

Show All

This work pays special attention to the decision stage in automated vehicles, presenting a state of the art in motion planning strategies. This topic has been extensively investigated in the literature, starting from the first developments in mobile robotics applications [12] . It is considered a key aspect for robot navigation since it provides global and local trajectory planning to describe the behavior of the robot. It considers the dynamic and kinematic models of the robot to go from a starting position to a final one. The main difference between vehicles and robots for carrying out motion planning are in the fact that the former addresses road networks where traffic rules have to be obeyed; whereas the latter has to cope with open environments without much specific rules to follow, only to reach the final destination.

This paper makes an overview of the state of the art implementation of motion planning techniques for automated driving. Section II presents an in-deep review of path planning techniques. Section III presents developments in automated driving by research groups worldwide, focusing in the description of the planning techniques applied in real demonstrations. An overview of the tendencies and orientation of the state-of-the-art according to research centers and industry developments is included. Finally, Section IV presents remaining challenges, current research direction from important researchers and manufactures, including future steps in motion planning developments.
SECTION II.
Motion Planning State-of-the-Art

Intelligent vehicles development was very limited before the 90's because reduced investments in the field [13] . Thanks to evolution of information technology applicable to vehicle automation, the Intelligent Transportation Systems (ITS) concept was created. Different research centers around the world were oriented to this end (e.g., California PATH, Parma University, among others), improving intelligent vehicle systems. An overview of some important development events in automated navigation systems is presented in Section III .

A description of the first automated vehicles—dating back to the late 80's and beginning of the 90's (see also Fig. 3 )—are mentioned by [13] and [14] . Shladover et al. [13] describe longitudinal control systems (including vehicle following control, inter-vehicular communications and a comparison between different methods), and lateral control systems (considering vehicle lateral dynamics and magnetic sensors as path reference with no path planning involved), in order to improve the Advance Highway Systems (AHS). Behringer et al. [14] describe the architecture proposed for the VaMoRs-L vehicle in the PROMETHEUS project. A vehicle that was able to perform automated driving, aided by vision and path generation algorithms.

Following these first implementations, different control architectures have been proposed for automated driving. In Fig. 1 , perception, decision and control are the three main components of the software configuration. The main focus of this work is related to the decision component of the architecture, specifically path planning techniques in automated vehicles.

Path planning in mobile robotics has been a subject of study for the last decades. Most of the authors divide the problem into global and local planning. A review of the different approaches and concept definitions (as global, local or reactive motion planning) can be found in [19] – [20] [21] .

A great amount of navigation techniques have been taken from mobile robotics and modified to face the challenges of road networks and driving rules. These planning techniques were classified in four groups, according to their implementation in automated driving: graph search, sampling, interpolating and numerical optimization (see Table I ). The most relevant path planning algorithms implemented in motion planning for automated driving are described below.
TABLE I Taxonomy of Motion Planning Techniques Applied in Automated Driving Scenarios
A. Graph Search Based Planners

In automated driving, the basic idea is to traverse a state space to get from point A to point B. This state space is often represented as an occupancy grid or lattice that depicts where objects are in the environment. From the planning point of view, a path can be set implementing graph searching algorithms that visit the different states in the grid, giving a solution (that not necessarily is the optimal one) or not (there is no possible solution) to the path planning problem. Some of these algorithms have been applied to the automated vehicles development.
Dijkstra Algorithm

It is a graph searching algorithm that finds single-source shortest path in the graph. The configuration space is approximated as a discrete cell-grid space, lattices, among others (e.g., [22] , [23] ).

Description of the concept and implementation of the algorithm can be found in [24] and [25] . In automated driving, it has been implemented by [26] in multi-vehicles simulations, in the Little Ben vehicle (Ben Franklin racing team's entry to the Darpa Urban Challenge [27] ) and also team VictorTango [28] . An urban implementation is shown in Fig. 2(a) [29] .
Fig. 2.

Planning algorithms as presented in the literature. a) Representation of a global path by the Dijkstra algorithm in [29] . b) Trajectory optimization from [38] , taking into account a vehicle in the other lane. c) Lattices and motion primitives as presented in [39] . d) Hybrid A * as implemented in the DARPA Challenge by Junior [36] . e) RRT * as showed in [40] . f) Optimal path to turn the vehicle around as proven in [41] . g) Planning a turn for the Audi TTS from Stanford [42] . h) Different motion states, planned with polynomial curves as presented in [43] . i) Evaluation of several Bézier curve in a turn, as showed in [44] . j) Spline behavior when a knot changes place, as presented in [45] .

Show All
A-Star Algorithm (A * )

It is a graph searching algorithm that enables a fast node search due to the implementation of heuristics (it is an extension of Dijkstra's graph search algorithm). Its most important design aspect is the determination of the cost function, which defines the weights of the nodes. It is suitable for searching spaces mostly known a priori by the vehicle [30] , but costly in terms of memory and speed for vast areas.

Several applications in mobile robotics have used as basis for improvement, such as the dynamic A * (D * ) [31] , Field D * [32] , Theta * [33] , Anytime repairing A * (ARA * ) and Anytime D * (AD * ) [34] , among others. Ziegler et al. [35] implemented the A * algorithm along with Voronoi cost functions for planning in unstructured spaces and parking lots. In [36] (hybrid A * ) and [37] (A * ), it served as part of the DARPA Urban Challenge in Junior [Stanford University automated vehicle, see Fig. 2(d) ] and AnnieWAY (KIT) respectively. In [16] AD * was used by Boss, the winning vehicle of the DARPA Urban Challenge.
State Lattice Algorithm

The algorithm uses a discrete representation of the planning area with a grid of states (often a hyper-dimensional one). This grid is referred as state lattice over of which the motion planning search is applied [46] . The path search in this algorithm is based in local queries from a set of lattices or primitives containing all feasible features, allowing vehicles to travel from an initial state to several others. A cost function decides the best path between the precomputed lattices. A node search algorithm is applied in different implementations (e.g., A * in [47] or D * in [48] ).

Howard and Kelly applied state lattices in rough terrains for a wheeled mobile robot [49] , where simulations give promising results of global and local planning. Table I shows the authors reference for automated driving implementations divided in state and spatio-temporal lattices. Most of the works consider time and speed dimensions as [39] and [50] . A good example is presented in Fig. 2(c) from [39] , where the nontemporal lattice is presented on the left and a finer discretization, on the right, also includes curvature.
B. Sampling Based Planners

These planners try to solve timing constrains—i.e., planning in high dimensional spaces—that deterministic methods cannot meet. The approach consists on randomly sampling the configuration space or state space, looking for connectivity inside it [21] . The downside is the fact that the solution is suboptimal. The most commonly used methods in robotics are the Probabilistic Roadmap Method (PRM) [93] and the Rapidly-exploring Random Tree (RRT) [94] . The latter has been extensively tested for automated vehicles.
Rapidly-Exploring Random Tree (RRT)

It belongs to the sampling-based algorithms applicable to on-line path planning [95] . It allows a fast planning in semi structured spaces [94] by executing a random search through the navigation area. It also has the ability to consider non-holonomic constraints (such as maximum turning radius and momentum of the vehicle).

In [21] and [95] descriptions, applications and improvements of these algorithms are reviewed. In automated driving, it has been used for the MIT team at DARPA Urban Challenge [61] . However, the resulting path is not optimal, jerky and not curvature continuous. In Karaman et al. [96] a new approach of this algorithm was developed, named RRT * (see [40, Fig. 2(e)] ). This new implementation converges to an optimal solution but having the same disadvantages. First results are shown in [64] . Further developments and implementations in automated vehicles are mentioned in Table I .
C. Interpolating Curve Planners

Techniques as Computer Aided Geometric Design (CAGD) are often used as path smoothing solutions for a given set of way-points [73] . These allow the motion planners to fit a given description of the road by considering feasibility, comfort, vehicle dynamics and other parameters in order to draw the trajectory.

Interpolation is defined as the process of constructing and inserting a new set of data within the range of a previously known set (reference points). This means that these algorithms take a previously set of knots (e.g., a given set of way-points describing a global road map), generating a new set of data (a smoother path) in benefit of the trajectory continuity, vehicle constraints and the dynamic environment the vehicle navigates [97] . In the presence of obstacles, it suffices to generate a new path to overcome the event and then re-entry the previously planned path. The interpolating curve planners implement different techniques for path smoothing and curve generation, being the most common in the automated driving field those indicated in Tables I and II [see also Fig. 2(f)–(j) ].
TABLE II Comparison of Benefits and Disadvantages in Motion Planning Techniques
Lines and Circles

Different segment road network can be represented by interpolating known way-points with straight and circular shapes. It is a simple mathematical method to approach the planning problem in car-like vehicles [41] , [98] . An example is presented in Fig. 2(f) for the shortest path to turn around a vehicle to perform forward and backward driving.
Clothoid Curves

This type of curve is defined in terms of Fresnel integrals [73] . Using clothoid curves is possible to define trajectories with linear changes in curvature since their curvature is equal to their arc-length; making smooth transitions between straight segments to curved ones and vice versa (see [42, Fig. 2(g)] ). Clothoids have been implemented in the design of highways and railways and are also suitable for car-like robots [99] .

The implementation of clothoid primitives was tested in the VIAC project. In [69] the current curvature is taken from the steering wheel position and then the other profiles are evaluated taking into consideration the dynamic limitations (e.g., fishtailing) and the physical ones (e.g., the steering wheel).
Polynomial Curves

These curves are commonly implemented to meet the constraints needed in the points they interpolate, i.e. they are useful in terms of fitting position, angle and curvature constraints, among others. The desired values or constraints in the beginning and ending segment will determine the coefficients of the curve. For the computation of the polynomial coefficient, the reader is referred to [76] , [77] and [79] .

The Laboratory on Interactions between Vehicles, Infrastructure and Drivers (LIVIC) [77] implemented these curves for line change scenarios. Fourth degree polynomials where used for longitudinal constraints and fifth degree polynomials for the lateral constraints, meeting the desired parameter for different scenarios. Also in [75] cubic polynomials where used to generate safe trajectories for overtaking maneuvers. In [43] , cubic (green line) and quartic (red line) polynomial curves are implemented with a state lattice planner [see Fig. 2(h) ].
Bézier Curves

These are parametric curves that rely on control points to define their shape. The core of Bézier curves are the Bernstein polynomials. These curves have been extensively used in CAGD applications, technical drawing, aeronautical and automotive design.

The advantage of this kind of curves is their low computational cost, since the curve behavior is defined by control points. The constraints at the beginning and the end of the curvature can be met by correctly placing these control points according to different properties described in [81] , [100] .

A good example of the modularity and malleability of Bézier curves is presented in [101] , interconnecting circular shapes and also interconnecting Bézier curves with continuous curvature profiles in [102] . These curves are often used to approximate clothoid curves [103] , [104] , or implementing rational Bézier curves for fast planning as in [85] , [86] . In [81] , [83] , and [44] 3rd and 4th degree Béziers [see Fig. 2(i) ] are implemented in automated vehicles, evaluating the best applicable curve to the situation in hand (i.e., turns, roundabouts, lane change, obstacle avoidance, among others).
Spline Curves

A spline is a piecewise polynomial parametric curve divided in sub-intervals that can be defined as polynomial curves [28] , [76] , b-splines [88] , [89] (that can also be represented in Bézier curves [105] ) or clothoid curves [99] . The junction between each sub-segment is called knot and they commonly possess a high degree of smoothness constraint at the joint between the pieces of the spline. An example of a b-spline with a changing knot is shown in Fig. 2(j) .
D. Numerical Optimization

These methods aim to minimize or maximize a function subject to different constrained variables. In path planning is often used to smooth previously computed trajectories as in [54] and also to compute trajectories from kinematic constraints [5] .
Function Optimization

This technique finds a real valued function's roots (minimize the variables outcome). It has been implemented to improve the potential field method (PFM) in mobile robotics for obstacles and narrow passages, obtaining C 1 continuity [106] . In [5] , [38] it also aimed to find C 2 continuous trajectories by minimizing a function that considers position, velocity, acceleration and jerk as planning parameters [see Fig. 2(b) ].

In Table I , a taxonomy of motion planning techniques implemented in automated vehicles is presented. It classifies the planning technique in each contribution according to the previously described algorithms. Table II complements Table I , giving a comprehensive review about the pros and cons of each planner technique.
Fig. 3.

Timeline with important automated vehicle demonstrations through time and their associated planning techniques.

Show All

These implementations show that the first steps for automated driving have already been set. Different architectures implement motion planners in order to have a safe and continuous path to follow. To mitigate or eliminate risky situations (such as dynamic obstacle avoidance, emergency situations, intersection and merging negotiation, among others) is the current focus in the literature. The consideration of perception limitations (uncertainty in measurements) and control needs for safety and comfort are key aspects in futures steps. Some works have already considered such parameters, by generating driving corridors and trajectory proposals that can be communicated to the driver by an HMI [77] , [107] . Others consider the uncertainty in data acquisition [108] , communications [109] and even future behavior prediction [110] to avoid situations like the MIT-Cornell collision in the Darpa Urban Challenge [111] .
SECTION III.
Motion Planning Developments by ITS Groups Worldwide

Although the idea of intelligent vehicles begun in 1939 at New York world fair with GM's Futurama presentation, it took decades to became the idea in a reality. Fig. 3 shows a timeline with important demonstrations and developments in vehicle automation up to this date. The EUREKA-PROMETHEUS project pioneered in Europe this research between 1987 and 1994, where different vehicles from industrial partners such as Volvo and Daimler were automated. Clothoid paths were implemented in curved segments to aid the control system to follow the route [14] .

The PATH program presented its platooning demonstration as part of the Demo '97 at San Diego CA, in cooperation with GM [112] . It consisted on an eight vehicle platoon in a dedicated lane with vehicle inter-distances of 6 m. Carnegie Mellon University participated as well, providing the free agent demonstration with their Navlab vehicles [113] . Also in the same year, a presentation in The Netherlands introduced the first operational service of CTS [114] , using shuttle services at Schiphol airport. CTS addressed the last mile problem providing a door-to-door and on-demand service [115] . In the systems above described, reactive control and vehicle-roadway cooperation were preferred over path planning techniques.

One of the first projects to test path planning techniques was the ARGO project from VisLab [76] . With a vision-based system, the planning technique consisted in adjusting quintic polynomial splines into the lane markings detected by the front camera. Later, the Darpa PerceptOR program stimulated the development of automated navigation techniques for off-road vehicles [116] , [117] . This was achieved by the Darpa Challenges (Grand and Urban challenge) that encouraged the research in automated navigation systems, developing path planning techniques (see Fig. 3 ).

The first Google Car made its entrance in 2009. Google driverless cars have carried out several public exhibitions showing the automated capabilities of their vehicles, achieving more than 700 000 miles of travel without accidents attributed to automation. Google also pushed for the legislation of this kind of technology, receiving the first license for an automated vehicle in May 2012 (two months after the state of Nevada enacted the first automated vehicle law) [118] . Unfortunately, there are no publications about the motion planning or control techniques that have been used to achieve those results.

The VisLab International Autonomous Challenge (VIAC) was carried out in 2010 [11] . 13 000 km traveled from Italy (Parma) to China (Shanghai) in autonomous mode, where the planning consisted on a cost function that considered clothoid curve generation [69] . In the same year and also in 2012, the Hyundai Motor Group organized their own automated vehicle competitions in Korea. The 2010 challenge focused in path following and obstacle avoidance. The 2012 challenge focused in understanding urban driving and detecting traffic signals [17] . Motion planning techniques included clothoids [18] , [119] , RRT [120] , among others.

The European Grand Cooperative Driving Challenge (GCDC) in 2011 promoted longitudinal vehicle control [143] . Nonetheless, some teams have already developed path planning strategies (such as state lattices by AnnieWAY [131] ). In this sense, there is a call for a second edition of the GCDC Challenge in 2016, where lateral control in platoon, busy road merging and urban environments will be considered.
TABLE III International ITS Research Groups

Recently, Audi presented high performance vehicle control in a conjoint effort with Stanford [42] , [144] , implementing clothoids to plan curved segments. Among the demonstrations: 1) the climb of Pikes Peak in 2010; 2) a racing lap at the Thunderhill Raceway Park in 2012, reaching 150 mph in a F1 track in 2014 ; and 3) automated driving in real scenarios from Silicon Valley to Las Vegas in 2015. Also in 2015, Delphi Automotive made the first coast to coast driving in the US, going from San Francisco to New York in 9 days. In Table III an overview of international research groups is presented.
SECTION IV.
Discussion

The development of intelligent planning algorithms is one of the key issues when designing robotic architectures [20] , [21] . The associated constrains in the automated vehicle research area—i.e., traffic rules, high speeds or road layout—turn real-time motion planning in a critical aspect for achieving automated driving on complex environments. This work has reviewed the motion planning state of the art from two points of view: 1) considering the different techniques (see Table I ), there are four main algorithms: graph-search, sample-based, interpolation and numerical optimization; 2) considering the worldwide research groups that have implemented motion planning techniques on automated vehicles, testing the behavior on real roads (see Table III ).

There are two main algorithms that have been recently used by research groups in real implementations:

    Most of research groups implement interpolation to solve the planning problems. Specifically, recent demonstrations have used clothoids (Audi, Parma/Vislab or Stanford), Bézier curves (Inria) and polynomial curves (Daimler or Inria). The main reason for choosing this technique is because an enhanced map in structured environments can provide the needed way-points—i.e., GPS data. Then, optimal curves in terms of smoothness, continuity, vehicle constraints, speed and comfort are generated.

    Graph search is the second algorithm most applied when dealing with real implementations. Specifically, state lattices is the most used one—i.e., CMU, KIT, GMC. The main reason for choosing this technique is because a fast search of the optimal path can be performed in real-time, considering comfort, safety and vehicle constraints although the solution is only resolution complete (depends on the resolution of the underlying grid/lattice).

Current challenges are associated to real-time planning calculation on dynamic environments. Urban scenarios where multiple agents—i.e., pedestrians, cyclists, other vehicles—have to be taken into account, require a continuous evaluation (and re-calculation) of the determined trajectories. The limited time for generating a new free collision trajectory with multiple dynamic obstacles is an unsolved challenge. This is mainly caused by the time-consuming perception algorithms [145] , reducing dramatically the motion planning decision window. Current implementations are not able to overcome this limitation yet.

Since planning stage is the link between perception and control, current works considers both: perception uncertainties and control constrains when developing new path planning algorithms. Recent developments in path planning aim to properly handle the uncertainty in the data acquisition process for dynamic environments. This permits to have a better environment understanding in real-time, giving the planning process the ability to prevent dangerous situations by considering uncertainties on the acquisition/perception stages of the architecture. From the control point of view, multiple constrains have to be considered, ranging from vehicle kinematic limitations up to passengers' comfort. Recent developments aim to consider some of these constrains in the planning stage leading to smooth and achievable trajectories, reducing control stage constrains. Next steps should be focused on developing algorithms able to fuse perception uncertainties with control constraints. This work has been already started by KIT [5] and CMU [108] .

A new trend on the automated vehicle research is to add the driver in the control loop. From the path planning research perspective, the trajectory is communicated to the driver using an HMI, acting as an ADAS [77] , [107] . This creates a new research challenge by multi-fusing perception uncertainties, control constrains and driver knowledge when generating safe, smooth and achievable trajectories.

Authors
Figures
References
Citations
Keywords
Metrics
Footnotes
   Back to Results    |    Next >  
More Like This
Back Propagation Neural Network Based Cluster Head Identification in MIMO Sensor Networks for Intelligent Transportation Systems

IEEE Access

Published: 2020
Using Bluetooth and sensor networks for intelligent transportation systems

Proceedings. The 7th International IEEE Conference on Intelligent Transportation Systems (IEEE Cat. No.04TH8749)

Published: 2004
Show More
References
References is not available for this document.
IEEE Personal Account

    Change username/password 

Purchase Details

    Payment Options
    View Purchased Documents 

Profile Information

    Communications Preferences
    Profession and Education
    Technical interests 

Need Help?

    US & Canada: +1 800 678 4333
    Worldwide: +1 732 981 0060
    Contact & Support 

Follow

About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | Privacy & Opting Out of Cookies

A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity.

© Copyright 2022 IEEE - All rights reserved.
IEEE Account

    Change Username/Password
    Update Address

Purchase Details

    Payment Options
    Order History
    View Purchased Documents

Profile Information

    Communications Preferences
    Profession and Education
    Technical Interests

Need Help?

    US & Canada: +1 800 678 4333
    Worldwide: +1 732 981 0060
    Contact & Support

    About IEEE Xplore
    Contact Us
    Help
    Accessibility
    Terms of Use
    Nondiscrimination Policy
    Sitemap
    Privacy & Opting Out of Cookies

A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity.
© Copyright 2022 IEEE - All rights reserved. Use of this web site signifies your agreement to the terms and conditions.
