Available online at www.sciencedirect.com
ScienceDirect
AvaPilarobcleedioa nCloinmepuatterwSwciwen.csec0ie0n(c20e1d8i)re0c00t.–c0o0m0
ScienceDirect
Procedia Computer Science 133 (2018) 141–152

www.elsevier.com/locate/procedia

International Conference on Robotics and Smart Manufacturing (RoSMa2018)
Methodology for Path Planning and Optimization of Mobile Robots: A Review
Mohd. Nayab Zafara,*, J. C. Mohantab,*
a,bDepartment of Mechanical Engineering, Motilal Nehru National Institute of Technology Allahabad-211004, India
Abstract Mobile robotics research is an emerging area since last three decades. The present research on mobile robotics addresses the problems which are mainly on path planning algorithm and optimization in static as well as dynamic environments. A detailed review has been made in the broad field of mobile robotic research especially focussing on the path planning strategy in various cluttered environments, their advantages and disadvantages of each of these strategies/methods have been highlighted. The path planning strategy of mobile robots can be categorised as Classical Methods and Heuristic Methods. Further subcategorized as (i) Analytical Methods, (ii) Enumerative Methods, (iii) Evolutionary Methods and (iv) Meta-Heuristic Methods. Each of these aforesaid methods has its own advantages and disadvantages. However, the main weakness arises from the fact that, analytical methods are too complex for intangible applications, whereas the enumerative methods are anxious by the extent of the search space. On the other hand, when search space is too large in path planning strategy, many evolutionary methods have been shown to be ineffective. To overcome these drawbacks, meta-heuristic methods have been fascinating considerably in this broad field of research. Many techniques are developed in path planning for mobile robot worldwide, however, the most commonly used techniques are presented here for further study. ©© 22001188 TThhee AAuutthhoorrss.. PPuubblliisshheedd bbyy EEllsseevviieerr LLttdd.. TTPhehieissr-iirsseavanineowoppeuennndaaeccrccreeessssspaaorrnttiisccilbleeiluuitnnyddoeefrr ttthhheee sCCcCCienBBtiYYfi--cNNcCCo-m-NNmDDitlltiiecceeenonsfseeth((hehttIttpnpstse::/r//n/ccarreteiaoatntiivavelecCcooommnmfmeoroennnssc.o.eorrgog/nl/ilRciceoenbnsoseetsis/cb/sbyya-nn-ndcc-Sn-nmdd/4a/4r.0t.0/M)/)a.nufacturing.
Keywords: Mobile Robot; Path Planning; Classical Methods; AI Techniques; Optimization Methods.
1. Introduction Path planning is a very important task for the autonomous mobile robot. It is desired to find a collision-free motion
in an obstacle prone environment in order to navigate safely from the start configuration to the goal configuration [1]. In many static and dynamic environments, mobile robots are increasingly being employed. Normally, there are various feasible paths for a robot to reach the target from the start location, but in circumstance, the best feasible path is selected according to some guideline such as shortest distance, smoothness of the path, minimum energy consumption etc. or the most adopted criteria is the shortest distance with the minimal possible time.
* Corresponding author. Tel.: +91-9696793456, +91-8795372930; fax: +91-532-2545341. E-mail address: rme1506@mnnit.ac.in (Mohd. Nayab Zafar), jcmohanta@mnnit.ac.in (J. C. Mohanta)
1877-0509© 2018 The Authors. Published by Elsevier Ltd. This is an open access article under the CC BY-NC-ND license (https://creativecommons.org/licenses/by-nc-nd/4.0/).
1877-0509 © 2018 The Authors. Published by Elsevier Ltd. This is an open access article under the CC BY-NC-ND license (https://creativecommons.org/licenses/by-nc-nd/4.0/) Peer-review under responsibility of the scientific committee of the International Conference on Robotics and Smart Manufacturing. 10.1016/j.procs.2018.07.018

2

Mohd. Nayab Zafar, J.C.Mohanta. / Procedia Computer Science 00 (2018) 000–000

142

Mohd. Nayab Zafar et al. / Procedia Computer Science 133 (2018) 141–152

The path planning can be categorized into two folds; (i) local path planning and, (ii) global path planning. In local path planning strategy, the robot has a limited knowledge (either partially known or unknown) about the navigational environment. However, in global path planning, the robot has complete knowledge about the navigational environment and thereby robot can reach the target by following a predefined path. However, global path planning methods show limited applications due to less robustness in terrain uncertainty whereas, local path planning methods show more flexibilities in partially known/unknown environments and provides an optimized path [2]. It can be further categorized as classical approach and heuristic approach (Artificial Intelligence Technique). The uses of mobile robot path planning/arranging are incorporated into restorative and surgical uses, individual help, security, stockroom and circulation applications, and additionally ocean and space investigation, robotized guided vehicles for moving merchandise in a plant, unmanned bomb transfer robots, and planet investigation robots.

2. Different Path Planning Methods Robot path planning is important aspects of designing the navigational control behaviour. The robot has to reach
the final/goal configuration with a minimum time and at the same time, the distance should be minimal. The other criterions are less computational complexity and less power consumption, that can be possible only when the robot will move in the shortest path from start configuration to goal configuration. There are many methods/approaches proposed by many researchers which are listed below. All these approaches and their advantages, disadvantages, and limitations are highlighted in the subsequent sections.
Table 1. Different Path Planning Approaches.

Classical Approach
1. Potential Field.(1979) 2. Roadmap Cell Decomposition.(1987)
3. Grid Based.(1988) 4. PRM (Probabilistic Roadmap).(1996)
5. Rapidly Exploring Random Tree.(1998) 6. Virtual Impedance Method. 7. Convex Hull and Local Search Method. 8. Divide and Conquer Method.

Artificial Intelligence (Heuristic Approach)
1. Neural Network Technique. (1943) 2. Fuzzy Logic Technique. (1965)
3. Genetic Algorithm Technique. (1989) 4. Ant Colony Optimization Technique.(1992)
5. Particle Swarm Optimization Technique.(1995) 6. Bacterial Foraging Optimization.(2002) 7. Bee Colony Optimization Technique.(2005) 8. Firefly Algorithm Optimization Technique.(2008) 9. Grey Wolf Optimization.(2014)

2.1. Classical Approach 2.1.1. Potential Field Method
A potential field can be envisioned as the differential of fascination and repugnance factors [32]. Mainly nature is the idea which is taken behind potential field method. For example, a charged molecule exploring an attractive field or a little ball coming in a slope, contingent on thought is the quality of the field, or the slant of the slope, the molecule, or the ball can land to the wellspring of the field, the valley or the magnet in this illustration. In robotics, via generating an artificial potential field the attraction of robot can be simulated with the similar consequences towards its goal. Inadequate potential field designing, we can build up the robot show basic practices. For example, let’s assume that the environment is obstacle free, and a robot has to search a way to reach the goal. If we work in conventional planning techniques then one should compute the robot’s relative position to the goal, and then for driving the robot towards the goal suitable forces are applied.
In potential field method, simply generate an attractive filed going inwards the goal. The potential field is distinct across the complete free space, and in each step time, at the robot position we calculate the potential field, and then the force which is induced by this field is calculated. Then according to this induced force robot should move. Another

Mohd. NaMyoahbdZ.aNfaary,aJb.CZ.aMfaorheatnatal. // PPrroocceeddiiaa CCoommppuutteerr SScciieennccee 01033(2(021081)8)00104–10–01052

1433

behaviour of the robot can also be defined to avoid obstacles. We merely build each obstacle produce a repulsive field around it. The acting repulsion power forces away from the machine/robot from the obstruction as it approaches the obstruction.

Fig. 1. Attraction and repulsion by target and obstacle

Attractive / Repulsive Potential field is given as: U (q) U att (q)  U rep (q)

(1)

where ܷ௔௧௧ሺ‫ݍ‬ሻ is the attractive potential which is responsible to move near to target and ܷ௥௘௣ሺ‫ݍ‬ሻ is repulsive potential to avoid obstruction.

U att (q)



1 2

 . m (q, q Target

)

(2)

  Urep

(q)





1 2



 0

  (q, q ) 1
 ( q ,qobs )

12 n o

Target

if  (q, qobs )  o if  (q, qobs )  o

(3)

where δ is a positive scaling factor.

Potential Field method and it modified versions are commonly used as motion controller of robots in obstacle

avoidance scenarios [30-31]. Cetin et al. [33] discussed the utilization of artificial potential field, Feilat et al. [34] used

a fuzzy logic based potential field, Subramanian et al. [35] employed multipoint potential field in an obstruction

prevention problem, Song [37] used decentralized potential field-based controllers, Valbuena and Tanner [36] gives

the application of the potential field for collision avoidance and motion planning in non-holomonic mobile robots,

Bence Kovacs et al. [12] method is that by adjusting regular movement ascribes of animal to robot movement, the

human-robot interaction turns out to be substantially more normal and natural. It additionally turns out to be

straightforward the robot's present state and future expectations. The confinement of potential field method is catching

circumstances because of nearby minima, no section between firmly dispersed hindrances, motions within the sight

of obstruction or in a limit entry or narrow passage.

2.1.2. Cell Decomposition Method

The cell decomposition approach gives an idea to identify between geometric areas, or cells, that are free and occupied areas by objects. The basic path-planning cell decomposition algorithm can be concise as follows [8]:  Firstly, isolate F into basic, associated areas called "cells".  Secondly, figure out which opens cells are contiguous and develop an "availability chart".  Thirdly, discover the cells in which the underlying and objective setups lie and scan for a way in the availability
chart to join the underlying and objective cell.  Finally, from the grouping of cells found with an appropriate searching algorithm, figure a way inside every cell,
for example, going through a succession of divider following movements or by the midpoints of the cell limits and developments along straight lines. In cell decomposition methods the most important aspect is the assignment of the borders between cells. If the borders are assigned as a function of the structure of the environment, such that the decomposition is lossless, then the method is named exact cell decomposition [41]. If the decomposition results in an approximation of the actual map, the system is named approximate cell decomposition [42-43] and next is probabilistic cell decomposition [4445] which is similar to approximate cell decomposition except that cells borders do not represent any physical

4144

Mohd. NayaMb oZhadfa. rN,aJy.Cab.MZoahfaarnteat.a/l.P/roPcreodcieadiCaoCmopmupteurteSrciSecniceenc0e01(32301(280) 1080)01–4010–0152

meaning. Cell decomposition is commonly used in robot motion planning scenarios [44,46]. Fujii et al., Yang and Gu et al., and Park et al. [38-40] conferred the proposal of separating large learning spaces to several smaller ones resulting in ease of exploration. The principle favourable circumstances of this strategy is the deterioration of the workspace of the robot is natural and that the state of the cells takes into consideration hearty and adaptable way arranging. Both exact and approximate cell decomposition have points of interest and inconveniences. The previous are ensured to be finished, implying that if a free-way exists, exact cell decomposition will discover it; in any case, the exchange off for this exactness is a more troublesome scientific process. Approximate cell decomposition is less included, however, can yield comparative, if not the very same, comes about as exact cell decomposition.

2.1.3. Grid Based Method A grid on configuration space is overlaid in a grid-based method and assuming that each configuration is recognized
with a grid point. A robot is permitted to move at each and every grid points to nearby lattice focus as per the line among them is totally confined inside Cfree (tested by collision detection). This discretizes the arrangement of activities, similarly to A* search algorithms are used to find a path from the begin to the objective. This type of strategies or methodologies required locating a grid resolution. Pursuit is speedier with coarser lattices; in the event of discovering ways through thin bits of Cfree this algorithm comes up short. Moreover, the quantity of focuses on the matrix develops exponentially in the design space measurement, which makes them unseemly for high-dimensional issues. According to Markus Schutz et al. [11] the coordinating free space data into these matrices enhances both the following execution contrasted with a point-following calculation and the shape estimation contrasted with the following calculation utilizing box models. It is helpful to diminish the effect because of the division as well as affiliation errors. 2.1.4. Probabilistic Road Map Method
In PRM method, the configuration-free space (prearrangement of attainable movements), is withdrawn, reduced to, or plotted on a system of 1-D lines. The scan for a response is constrained to the system, and movement arranging turns into a graph searching problem. This specific approach is likewise named as skeleton, withdrawal, or highway approach. In this approach [26], the robot locomotion is prepared in three stages; i.e.; (a) robot is progressed from its beginning configuration to a point on the probabilistic road map (PRM), which utilizes a standard locomotion strategy; (b) the robot is progressed from target configuration through a point on the road map like manner; and (c) finally, the start configuration and target configuration points are joined together to get the required path. The road map must characterize all topologically discrete feasible paths in configuration space [3]. Else, the robot locomotion algorithm is incomplete. The eminent road maps are Voronoi Diagram [4], Visibility Graph [76], Cell Decomposition [6], Silhouette [5], and the Subgoal Network [7]. According to Robert Bohlin et al. [22] aim of lazy PRM is basically to limit the number of crash checks while looking through the briefest achievable way in a roadmap with regards to a PRM organizer which is done on the cost of regular graph seek.

Fig. 2. Probabilistic road map with goal and end points.
According to Yan et al. [25] simulation of multi-robot motion, planning use adaptive cross sampling method which gives a result as time reduction with a minimum number of collisions. Rantanen and Juhola [27] enhance the execution time of roadmap using an intelligent mechanism in the learning phase that allows deactivation of least probable configuration. Nazif et al. [28] make use of single query roadmap in mapping scenarios within unknown environments using a swarm of robots; advantages are robustness to agent failure and effectiveness in cluttered environments with

Mohd. NaMyoahbdZ.aNfaary,aJb.CZ.aMfaorheatnatal. // PPrroocceeddiiaa CCoommppuutteerr SScciieennccee 01033(2(021081)8)00104–10–01052

1455

narrow passages. Rantanen [77] used an enhanced probabilistic roadmap approach that minimizes the configuration space by intelligently sensing regions of the configuration space that are not easy to navigate (areas with narrow passages). Yang and Brock [29] employed elastic roadmap framework for motion planning with a potential of addressing various constraints including kinematic and dynamic limitations of the robot, difficulties arise from the existent of moving obstacles, constraints arise from the task and the connectivity of the workspace.

2.1.5. Rapidly Exploring Random Tree Method

For resourcefully probing nonconvex high-dimensional spaces rapidly-exploring random trees are introduced, these are data structure and algorithms design for the aforesaid. These are constructed incrementally that rapidly decreases the estimated gap of an arbitrarily selected point to the tree. These are partially accepted for planning a path oriented problem that involves differential constraints and obstacles.

2.1.6. Virtual Impedance Method

A Virtual Impedance technique for a versatile robot enhances motion smoothness. This technique advances robot execution in dynamic conditions with static and portable impediments. Furthermore, inferable from the straightforward framework of the aforementioned algorithm, it is more efficient than the past strategies. Analyses of the procedure are led on a physically moved versatile robot stage in the interior condition. Impedance control strategy is brought into crash shirking calculation by changing over the separation versatile robot and impediment to a virtual power dismissing robot from snags [63]. Productivity and smoothness change is likewise the key issue for the versatile robot headway control. By considering independent crash evasion's great execution in little local space, teleoperated headway controller joined through self-governing impact shirking is an adequacy path in practical application. Eun Soo and Seul et al. [63] displayed virtual power on a portable robot by hindrance as a spring and utilizing impedance control calculation to keep up a coveted separation to dodge snags. Non contacting impedance constraint is a method actualized in the controller conduct control for impact evasion through its condition [64]. In any case, it has likewise been brought into portable robot’s movement arranging [65-68]. Fumiaki et al. utilize the non-contacting impedance drive into movement of a legged control versatile robot which might evade the stairways without reaching [65].

2.1.7. Convex Hull and Local Search Method

Convex hull has been ended up being an exceptionally helpful shape in managing numerous computational issues, for example, robotized highlight acknowledgment from 2-D and additionally 3-D. The curved frame of an arrangement of focuses S in a plane is the littlest arched polygon that encases S. As it were, the curved structure of an arrangement of focuses S in a plane is the encasing polygon with the littlest region and border. The framework here utilizations the arched structure limit for the given arrangement of focuses as its underlying sub-visit. At the point when all the given focuses are incorporated into the way then a nearby inquiry heuristic is connected progressively. Each point is recognized in a family pecking order; consequently, the connection between each point inside the curved body limit and the arched edges can be set up without a combinatorial pursuit. Production of a curved frame limit and progressive utilization of a local look heuristic are joined in six principle steps. For a given arrangement of focuses, the initial step is to make an arched body of these focuses for which modified graham scan algorithm is connected, at that point system for making locals, if all point lies in the area then local enhancement methodology is done generally assemble raised family tree, at that point next technique is local connecting after which at last a streamlined way is accomplished. Flood [69] examines these properties and infers that each euclidean TSP has an ideal arrangement if each city lies on the limit of the curved frame. In any case, for a non-specific TSP, the raised frame sub-visit should be joined with a heuristic hunt to make an inclusion technique for the focuses which are not on the curved structure limit.

2.1.8. Divide and Conquer Method

The application of divide and conquer method in mobile robot motion planning has been described by different researchers. Hirota et al. [70] had discussed the interface among the robot and its working environment. In order to make the search easier, condense the search space and job of defining fitness functions is simplified, and acquire a distributed controlling system, they have adopted the divide and conquer methodology to solve problems. As an

6146

Mohd. NayaMboZhadf.aNr,aJy.aCb.MZaofhaarnetat .a/l.P/rPorcoecdeiadiCaoCmopmupteurteSrcSiecniecnec0e01(32301(280)1080)01–4010–0152

alternative of straight evolving control system, they have planned to decay the overall assignment to fit in the behaviour of an architectural based controller, thereby to develop a separate behavioural module and arbitrator using an evolutionary algorithm. They have shown their results experimentally as well. Nagabhushan et al. [71] have given a procedure established on quadtree method for development of the smallest path from a given goal position to any given target position. Calculation utilizes recursive partition and vanquishes plan technique. Their proposed calculation workings in a 2-D stagnant condition with snags of different shapes and essentially unconstrained size of a self-governing machine.

2.2. Artificial Intelligence (Heuristic Approach) 2.2.1. Neural Network Technique
A data handling idea as neural network is inspiration of the biological sensual systems, as the brain, process data information. The brain goes about as a profoundly intricate, nonlinear and parallel PC idea. The main factor of this idea is the innovative structure of the processed data handling framework. Countless interrelated handling constituents (neurons) are created for taking care of particular issues. The operational space of robot is a 2-D limited condition; it is absolutely obscure to nature of snags, and not curved suspicion the state of obstructions. Utilizing neural system about a nearby connection to express the arrangement space of the mechanism work, in the neural system, every neuron and its local has a similar association. The neural system is very parallel design and is two path transmission of data between neurons. The path arranging strategy is basic, quick meeting. Different preferences included are adaptive learning, self-organization, real-time procedure, fault tolerance via redundant information coding that is the fractional obliteration of a system prompts the relating corruption of execution. In any case, real system harm with some system abilities might be held. A drawback is the intended amount will be greater with the growth in obstruction number; the optimal path may not be optimal. A dynamic wave expansion (DWENN) in a neural network is a new sort of neural system procedure is proposed by Lebedev et al. [74]. It is utilized to play out the path generation which required no from the earlier information of the environment and also no learning procedure. In light of the DWENN progression, movement waves engender in the system field and the relating action levels of neurons are refreshed by a summary of the exchanged action. A method coordinated with dynamic, numerous errands task to the gathering of robots of movement arranging is displayed by Zhu et al. [75]. It handles the issue through the self-organizing map (SOM) in light of neural system. 2.2.2. Fuzzy Logic Technique
The fuzzy logic system was first presented by Lotfi Zadeh in the year 1965. Fuzzy logic gives a formal thought speaking to and executing hominid expert's heuristic information and observation base activities. Fuzzy logic depends on the idea that human doesn’t think as far as crisp numbers, but instead regarding ideas. Amid self-ruling mobile robot path arranging there are heaps of vulnerability factors in portraying the environment, it can't group straightforwardly the circumstance to a specific situation, and in this kind of situations, a fuzzy logic idea is embraced. The benefit of fuzzy logic is no fresh changes amongst states, better continuous execution, and heartiness. The explanation for this is the principles are straightforwardly originating from hominid experience rundown; it can be free of local minimization issue. In fuzzy based route controller, the issue is depressed into less difficult undertakings and every conduct is made out of an arrangement of fuzzy logic run articulations planned at accomplishing a very much characterized set of destinations. The fuzzy controller controls the common activity of a portable robot into the three assignments of goal chasing, obstacle avoidance, and edge take after independently. A complete investigation of Fuzzy logic control for movement arranging has been broadly itemized [72]. An algorithmic arrangement strategy is displayed by G. Oriolo [73] utilizes the fuzzy system for construction and adjustment of the environment map. Measuring ranges are gathered through the external sensors mounted on the robot and prepared so as to manufacture a local map based representation of the encompassing zone. 2.2.3. Genetic Algorithm Technique
A genetic algorithm (GA) is a non-conventional, meta-heuristic advancement method which depends on the mechanics of natural genetics and natural selections. A genetic algorithm was initially presented by Professor J.

Mohd. NaMyoahbdZ.aNfaary,aJb.CZ.aMfaorheatnatal. // PPrroocceeddiiaa CCoommppuutteerr SScciieennccee 01033(2(021081)8)00104–10–01052

1477

Holland from Michigan University in 1975 [47]. The fundamental idea driving genetic algorithm is to imitate the idea of the survival of the fittest, it reproduces the procedures observed in a characteristic framework where the strong has a tendency to adjust and survive while the weakest has a tendency to die [9]. GA gives top-notch solutions for upgrade and inquiry issues which are subject to bio-inspired operators, for example, mutation, crossover, and selection [48]. Another populace is created utilizing particular genetic operators like mutation, crossover, and selection. The populace can be spoken to in an arrangement of string (referred as chromosomes). In every last age, another chromosome is framed utilizing data beginning from the fittest chromosomes of the past populace.
A GA starts its inquiry with an arbitrary set of solution typically coded in binary strings. Each arrangement has relegated a fitness which is straightforwardly identified with the target capacity of the pursuit and advancement issue. In this way, by applying three operators which are like natural genetic operators-reproduction, mutation, and crossover, the populace for the arrangements is changed to another populace. It works iteratively by progressively applying these three operators in every generation till a termination criterion is fulfilled. In the course of the most recent decade, GAs has been effectively connected to a wide assortment of issues, on account of their simplicity, global viewpoint, and innate parallel handling.
As indicated by Adem Tuncer et al. [23] the enhanced mutation technique at the same time checks all the free nodes near mutation node rather than arbitrarily choosing a node one by one, acknowledges the node as per the fitness estimation of the aggregate path rather than the bearing of development through the mutated node. As indicated by Wang Jianguo et al. [24] exhibit that the approach prompts join at the global optimal value with high fast, which displays the versatile execution of the progressions of the workplaces.

2.2.4. Ant Colony Optimization Technique

Ant system was presented by Marco Dorigo [59], for solving computational problems ant colony optimization technique is widely used, which is probabilistic in nature, which can be condensed in finding best paths from the graphs. Nature of ant colony behaviour originates ACO. At the quintessence of the conduct, the associated correspondence among the ants, empowers them to locate the most limited way among their home and the nourishment sources. The ideal course is gotten through assessment of the measure of pheromones (chemical essence) deposited by ants on its pathways. These features/characteristics of real ant are acquired in ACO procedure to tackle problem of optimization at a discrete. Therefore, the ACO is much more appropriate for issues where the source and goal are plainly predefined and particular. The principal method of ACO is as per the following:  Produce ant(s) and looping for each ant until and unless whole task is completed.  Store pheromone [60] on visited states/sites covered by ant(s).  Daemon exercises and dissipation of pheromone.

Fig. 3. Ant colony system

For taking care of multi-objective arranging issues within the sight of obstruction, the ant colony is joined with a sample-based location to location path planning method. Execution is assessed by quantitative examination with two existing sample-based methods. The ACO method, offering a trade-off between arrangement quality value and speediness. It is the prevalent decision given the physical parameters of robotics path planning.

 pk ij



{ ij }a
m
{ ij }a

(4)

j Nik

8148

Mohd. NayaMboZhadf.aNr,aJy.aCb.MZaofhaarnetat .a/l.P/rPocroecdeiadiCaoCmopmupteurteSrcSiecniecnec0e01(32301(280)1080)01–4010–0152

where ��� is pheromone trail, m is the quantity of ants, � is a constant with positive value termed as weight
values, ���� is the transition probability in which ant k will move from node i to j.

 ij (1   ) * ij

(5)

where range (0<ρ≤1) is the pheromones dissipation rate and change of pheromone is given as:

 m
 ij   ij   ij

(6)

k 1

where ���� is the quantity of pheromones ant k deposits on the visited paths, which is given as:

 ij

C1k

(7)

where Ck is the length of the path build by the ���.

According to Qi Zhang et al. [61] application of the combination of ant colony, simulated annealing (SA), and

framed-quad tree in order to enhance the efficacy of path planning. Shi et al., [62] planned the hybrid of ACO and

PSO in a robotics path planning issue.

2.2.5. Particle Swarm Optimization Technique

Particle Swarm Optimization (PSO) is a populace based exploration method. PSO is the most widely used artificial

intelligence optimization method. It is based on the behaviour of the flock of birds or pool of fishes for searching food.

In PSO, a number of particles are randomly generated to form a population. Unlike in GA, the particles in PSO are

not disposed of. The particles propagate in the multidimensional space looking for the ideal arrangement. The

optimization problem of a particle represents a potential solution. Each particle moves in the multidimensional space.

The movement of the particles is governed by its speed. The particle velocity is calculated using following equations:

    vid w  vid  c1  rand  ( pid  xid )  c2  rand  ( pgd  xid )

(8)

xid xid  vid

(9)

where, ��� is particle�s velocity, w is the inertial weight, �� and �� are constant, ��� is specific best site, ��� is global

besTthseiteb,e�st��inidsicvuidrrueanltfpinadrtiincgles

site and rand() is function to generate random value. and swarm best findings fascinate the particles to move

towards

positioning

in

the

search space [49]. The stopping criteria applied in PSO may be a certain number of iterations or convergence of

particles or if the global best never gets change for a specific amount of iterations. Proper selection of inertia weights

and constants is necessary for optimum performance of PSO. It has disadvantages in terms of controlling influences,

premature convergence, and deficiency of dynamic velocity adjustment respond in the hill-climbing inability solution

[50]. To solve the problem of controlling parameters various modifications are suggested [50] and in some issues, the

algorithm would perform better if one of the essential components of velocity equation get omitted or even a new

component is added to the equation [51-54]. Qin et al. [55] give easier execution and fewer parameters as the key

benefits of PSO related to GA. In various studies of research, PSO performance is much better than GA [48,56-58].

As indicated by Kun Su et al. [14] the particle swarm approach under consistent weight having better execution in

fast convergence, dynamic merging and can suitable option for taking care of the robot motion planning issue. As

indicated by Md. Rakibul Islam et al. [15] favourable circumstances of the approach can be outlined by the way that

the directions acquired are smooth and safe, and in the meantime, free of local traps because of the integration of the

real-time sensor data in the recalculation of the path. The arranged strategy is adaptable, that way you can change any

parameters, or control the level of significance of keeping away from or advancing toward the objective.

2.2.6. Bacterial Foraging Optimization Technique

Bacteria foraging optimization algorithm (BFOA), is a novel technique in the family of nature based inspirational optimization procedures. The use of foraging strategy of a swarm of E. coli bacteria in multi-objective function optimization is the key idea of the novel technique. Correspondence for others by sending signal is conveyed by an individual bacterium. As indicated by Md. Arafat Hossain et al. [18] it chooses the best particle separation to the objective and the Gaussian cost capacity of the particle. At that point, a high-level decision making approach is utilized

Mohd. NaMyaobhdZ.aNfaary,aJb.CZ.aMfaorhaetnatal.//PPrroocceeddiiaaCCoommppuutteerrSScciieennccee01033(2(021081)80)0104–10–01052

1499

for the determination and in this manner, continues for the outcome, deals with local arena condition by utilizing a basic robot sensor. As indicated by Xiao-dan Liang et al. [19] that robot copies the ability of the behaviour of bacteria to regulate an optimized obstacle-free path in the arena surrounded by obstructions between a starting point and a goal point.

2.2.7. Bee Colony Optimization Technique

The artificial bee colony (ABC) algorithm, presented by D. Karaboga (2005) [10] is a swarm based meta-heuristic algorithm utilized for enhancing numerical issues. It was enlivened by the intelligent foraging behaviour of honey bees. Three fundamental segments of the model are as per the following: employed and unemployed foraging bees, and food sources. The initial two segments scan for rich sustenance sources near their hive. The two driving methods of model conduct additionally characterizes, which are basic for self-sorting out and aggregate knowledge: enrolment of foragers to rich sustenance sources bringing about positive input and surrender of weak sources by foragers causes undesirable criticism. As per Marco Cruz et al. [16] it produces an optimal path by utilizing the ABC algorithm to execute local searches that incrementally construct a way without collision associating the begin and objective places of the mobile robot, plays out a refinement of the practical way by utilizing evolutionary programming. As indicated by Preetha Bhattacharjee et al. [17] experiments uncover that the proposed scheme outperforms the PSO and DE based path planning scheme in any event as for two surely well-known metrics: ATPT and AUTD.

2.2.8. Fire Fly Algorithm Optimization Technique

Firefly emits it light by the process of bioluminescence and the emitted light utilized as a signal to fascinate the

other fireflies. The fascination for both masculine and feminine reies is absolutely reliant on the cadence of the ash light. The rate at which the ashing of the light takes place and the measure of time for the same can be surveyed.

This can be used as an objective function (which could be proposed to optimized) to articulate a novel optimization

procedure. The fascination of one rey towards other is conceivable only when the other fly having higher intensity of light, and this fundamental idea made a base for working of FA.

Let B is fireflies attractiveness, B0 is fireflies attractiveness at (r=0), γ is light absorption coefficient,‫ݔ‬௜and‫ݔ‬௝ are the positions of first and second firefly respectively, ‫ݔ‬௜௞ is the present value of ݅௧௛ firefly at ݇௧௛ dimension, ‫ݎ‬௜௝ is the distance among‫ݔ‬௜ܽ݊݀‫ݔ‬௝, d is dimension, t is iteration, r is arbitrary number, and α= parameter randomization. Then,

 B(r) B0 * e rm ; m  1

(10)

 d

rij  xi  x j 

( xik



x

k j

)

2

(11)

k 1

xik (t 1) xik (t)  B0 *e rij2 (xkj (t)  xik (t))   * (r  12)

(12)

2.2.9. Grey Wolf Optimization Technique

Grey wolves are at the highest point of the natural way of life, for the most of the time they like to live in a

group/pack. Quite compelling, they have an extremely strict social predominant chain of importance. In GWO

estimation of the hurtling is usually guided by α, β, and δ. The ω wolves take responsibilities after these three wolves.

Surrounding prey: Grey wolves surround prey amid the hunting, with a specific goal to numerically show enclosing

 behaviourDto acCcocomeffpiciaennty.Xingprecyo(tn)ditioXnwsolhf a(st)been projected [13]:

(13)

CAXcc(ooete fff fiiccieie1nnt)t 22X.a.r.p2rre1y (ta)  A coefficient .D

(14) (15) (16)

11050

Mohd. NayaMboZhadf.aNr,aJy.aCb.MZaofhaarnetat .a/l.P/rPocroecdeiadiCaoCmopmupteurteSrcSiecniecnec0e01(32301(280)1080)01–4010–0152

where, D is the distance vector between grey wolf and prey, C and A are coefficient vectors, Xprey and Xwolf are the position vectors of the prey and wolves respectively, t is the present emphasis/current iteration, vector component of a is directly diminished from 2 to 0 throughout the emphases, and lastly, r1 and r2 are the irregular vectors as [0,1].
According to Sen Zhang et al. [20] GWO has exceptionally an abnormal state of local optima evasion, which improves the probability of finding appropriate approximations of the optimal weighted total cost of this path. Moreover, the accuracy of the obtained optimal values for weighted sum cost is very high, due to the high exploitation of the GWO. According to Pei-Wei Tsai et al. [21] two standards of distance and smooth path of the robot path arrangement issue are converted into a minimization one for fitness function, a location of the globally best agent in each iterative can be extended by the robot in sequence permutation.

3. Summary and Discussions As many numbers of diverse techniques in this respect have been and are being developed in path planning for
mobile robot worldwide, however, the most commonly used techniques are presented here for further study. Among the recently developed techniques like particle swarm, ant colony, bee colony, bacteria forging, and firefly techniques. Firefly technique is relatively novel and has much scope in the navigation of mobile robots. It encounters all main concert, for example, FA is able to find the best feasible path in a relatively shortest span of time frame which provide better efficacy. Using this method, a feasible path may evade all known obstacle in the arena which guarantees the safety of planning. Further, it always moves precisely along the predetermined path. It likewise lessens the troubles identified with motion planning issues like computational complexities, local minima and free from need of tuning algorithm. It improves the great arrangement as far as time and path attainability.

4. Conclusion An overview of path planning techniques for autonomous mobile robots, the merits, and demerits of these
techniques were presented and discussed briefly. A comprehensive discussion of each approach in this broad research field of path planning of mobile robot is shown. An interesting point of view is that, the course of this study is despite the major improvement in the area over past three decades, a very few work has been reported especially in multirobotics systems. Most of the papers deal with the subject of single robotics systems, while leaving a wide collection of areas in coordinated and networked multi-robotics systems are still open for future works. This manuscript makes the motion planning algorithm into two main folds that are classical approach and heuristic approach. The classical approach is easy to implement but this approach is often required accurate information about the active navigational environment, thus more precise sensors must be included. In comparison with the classical approach, heuristic (metaheuristic) approaches are extra intellectual and extra innovative as they can acclimate to both uncertain (unknown) and incomplete information in continuously altering the environment. At introduce the improvement in path planning is logically more enlivened by novel applications, for example, organize directing, circuit board outline, PC movements, animations, pharmaceutical medication plans, computational science additional. The scientist's group advances numerous methodologies for tackling the path planning issue.

References
[1] P.A.M. Ehlert. (1999) “The use of Artificial Intelligence Robots, Report on research project.” Delft University of Technology, Netherlands. [2] P.K. Mohanty and D.R. Parhi. (2014) “Journal of Experimental & Theoretical Optimal path planning for a mobile robot using cuckoo search
algorithm.” December:37–41. [3] Hwang Yong K., & Ahuja Narendra. (1992), “Gross Motion Planning- A Survey.”, ACM Computing Surveys, 24(3): 219-291. [4] Osamu, T., & Schilling, R. J. (1989) “Motion Planning in a Plane Using Generalized Voronoi Diagram”, IEEE Transactions on Robotics and
Automation, 5(2):143-150. [5] Canny, J. F. (1988) “The Complexity of Robot Motion Planning”, Cambridge, Massachusetts: MIT Press. [6] Keil J. M., & Sack J R. (1985) “Minimum decomposition of polygonal objects”, Computational Geomeometry,197-216. [7] Faverjon. B., & Tournassoud. P. (1987) “A local approach for path planning of manipulators with a high number of degrees of freedom”, In
Proceeding of IEEE International Conference on Robotics and Automation,1152-1159. [8] Russell, S., Norvig, P. (1995), “Artificial Intelligence, A Modern Approach”, Prentice Hall International. [9] M.N.Ab. Wahab, S. Nefti-Meziani, and A. Atyabi. (2015), “A comprehensive review of swarm optimization algorithms,” PLoS One, vol. 10,
no. 5, pp. 1–30. [10] Karaboga, D, (2005). “An idea based on honey bee swarm for numerical optimization.” Technical Report TR06, Erciyes University,
Engineering Faculty, Computer Engineering Department.

Mohd. NMayoahbd.ZNafaayra, bJ.ZCa.Mfaroheat natla. // PPrroocceeddiiaaCCoommppuutteerrSScciieennccee10303((22001188))010401––010502

15111

[11] Markus Schutz, Nils Appenrodt, Jurgen Dickman, Klaus Dietmayer,(2014) “Occupancy Grid Map-Based Extended Object Tracking”, IEEE Intelligent Vehicles Symposium (IV) June 8-11, 2014. Dearborn, Michigan, USA.
[12] Bence Kovacs, Geza Szayer, Ferenc Tajti, Mauricio Burdelis, Peter Korondi. (2016), “A novel potential field method for path planning of mobile robots by adapting animal motion attributes”, Robotics and Autonomous Systems ,Volume 82, August, Pages: 24-34.
[13] Seyedali Mirjalili, Seyed M. Mirjalili, Andrew Lewis. (2014), "Grey Wolf Optimizer", Advances in Engineering Software, Vol. 69 : 46–61. [14] Kun Su, Yu Jia Wang, Xin Nan Hu. (2015) “Robot Path Planning Based on Random Coding Particle Swarm Optimization”, (IJACSA)
International Journal of Advanced Computer Science and Applications, Vol. 6, No. 4. [15] Md. Rakibul Islam, Md. Tajmiruzzaman, Md. Mahfuzul Haque Muftee, Md. Sanowar Hossain (2014), “Autonomous Robot Path Planning
Using Particle Swarm Optimization in Dynamic Environment with Mobile Obstacles & Multiple Target”, International Conference on Mechanical, Industrial and Energy Engineering, 25-26. [16] Marco A. Contreras-Cruz, Victor Ayala-Ramirez, Uriel H. Hernandez-Belmonte.(2015) “Mobile robot path planning using artificial bee colony and evolutionary programming”, Applied Soft Computing, Volume 30, Pages 319-328. [17] Preetha Bhattacharjee , Pratyusha Rakshit, Indrani Goswami (Chakraborty), Amit Konar, Atulya K. Nagar. (2011) “Multi-robot path-planning using artificial bee colony optimization algorithm”, IEEE Nature and Biologically Inspired Computing (NaBIC), Third World Congress. [18] Md. Arafat Hossain, Israt Ferdous.(2015) “Autonomous robot path planning in dynamic environment using a new optimization technique inspired by bacterial foraging technique”, Robotics and Autonomous Systems, Volume 64, February, Pages 137-141. [19] Xiao-dan Liang ,Liang-yu Li, Ji-gang Wu, Han-ning Chen.(2013) “Mobile robot path planning based on adaptive bacterial foraging algorithm”, Journal of Central South University, December, Volume 20, Issue 12, pp 3391–3400. [20] Sen Zhang , Yongquan Zhou , Zhiming Li , Wei Pan.(2016), “Grey wolf optimizer for unmanned combat aerial vehicle path planning”, Advances in Engineering Software, Volume 99, September, Pages 121–136. [21] Tsai P.W, Nguyen T.T, Dao TK. (2017) “Robot Path Planning Optimization Based on Multi-objective Grey Wolf Optimizer”,Advances in Intelligent Systems and Computing, Vol 536. Springer, Cham. [22] Robert Bohlin, Lydia E. Kavraki. (2000) “Path Planning Using Lazy PRM”, Proceedings of the 2000 IEEE international Conference on Robotics & Automation, San Francisco. [23] Adem Tuncer, Mehmet Yildirim. (2012) “Dynamic path planning of mobile robots with improved genetic algorithm”, Computers & Electrical Engineering, Volume 38, Issue 6, November 2012, Pages 1564-1572. [24] Wang Jianguo, Ding Biao, Miao Guijuan, Bao Jianwu, Yang Xuedong.(2011) “Path Planning of Mobile Robot Based on Improving Genetic Algorithm”, Proceedings of the 2011 International Conference on Informatics, Cybernetics, and Computer Engineering (ICCE2011) November 19–20, 2011, Melbourne, Australia pp 535-542. [25] Zhi Yan, Nicolas Jouandeau, Arab Ali Cherif.(2013) “ACS-PRM: Adaptive Cross Sampling Based Probabilistic Roadmap for Multi-robot Motion Planning”, Intelligent Autonomous Systems 12, Advances in Intelligent Systems and Computing, vol. 193, pp. 843-851, 2013. [26] Roland Siegwart, Illah R. Nourbakhsh, Davide Scaramuzza.(2004) “Introduction to autonomous mobile robots”. In MIT-Press, pp. 1-12. [27] Mika T. Rantanen, Martti Juhola. (2012) “A configuration deactivation algorithm for boosting probabilistic roadmap planning of robots”, International Journal of Automation and Computing, vol. 9, no. 2, pp. 155-164. [28] Ali Nasri Nazif, Alireza Davoodi, Philippe Pasquier. (2011) “Multi-Agent Area Coverage Using a Single Query Roadmap: A Swarm Intelligence Approach”, Advances in Practical Multi-Agent Systems, Studies in Computational Intelligence, vol. 325, pp. 95-112. [29] Yuandong Yang, Oliver Brock. (2010) “Elastic roadmaps motion generation for autonomous mobile manipulation”, vol. 28, pp. 113-130. [30] Randal W. Beard, Timothy W. McLain. (2003) “Motion planning using potential fields”. In Brigham Young University, Provo, Utah. [31] Peng Song. (2002) “A potential field based approach to multirobot manipulation general robotics”. In IEEE International Conference on Robotics and Automation (ICRA02), pp. 1217-1222. [32] Jean-Claude Latombe. (1991) “Robot motion planning”, In Kluwer International Series in Engineering and Computer Science, London. [33] Omer Cetin, Ibrahim Zagli, Guray Yilmaz. (2013) “Establishing Obstacle and Collision Free Communication Relay for UAVs with Artificial Potential Fields”, Journal of Intelligent Robotic Systems, vol. 69, no. 1-4, pp. 361-372. [34] Mohammad Abdel Kareem Jaradat, Mohammad H. Garibeh, Eyad A. Feilat. (2012) “Autonomous mobile robot dynamic motion planning using hybrid fuzzy potential field”, Soft Computing, vol. 16, no. 1, pp. 153-164. [35] Saravanakumar Subramanian, Thomas George, Asokan Thondiyath.(2012) “Obstacle Avoidance Using Multi-Point Potential Field Approach for an Underactuated Flat-Fish Type AUV in Dynamic Environment”, Trends in Intelligent Robotics, Automation, and Manufacturing, Communications in Computer and Information Science, vol. 330, pp. 20-27. [36] Luis Valbuena, Herbert G. Tanner. (2012) “Hybrid Potential Field Based Control of Differential Drive Mobile Robots”, Journal of Intelligent Robotic Systems, vol. 68, no. 3-4, pp. 307-322. [37] Peng Song.(2002) “A potential field based approach to multi-robot manipulation general robotics”. In IEEE International Conference on Robotics and Automation (ICRA02), pp. 1217-1222. [38] Teruo Fujii, Yoshikazu Arai, Hajime Asama, Isao Endo. (1998) “Multilayered reinforcement learning for complicated collision avoidance problems”. In Proceeding of the IEEE International Conference on Robotics and Automation, vol. 3, pp. 2186-2191. [39] Kui-Hong Park, Yong-Jae Kim, Jong-Hwan Kim (2001), “Modular q-learning based multi-agent cooperation for robot soccer”. In Robotics and Autonomous Systems, vol. 35, pp. 109-122. [40] Erfu Yang, Dongbing Gu. (2004) “Multi-agent reinforcement learning for multi-robot systems: A survey”. In Technical report, University of Essex Technical Report CSM-404, Department of Computer Science. [41] Michael Barbehenn, Seth Hutchinson. (1995) “Toward an exact incremental geometric robot motion planner”, In IEEE/RSJ Int. Conf. on Intelligent Robots and Systems, pp. 39-44. [42] David Zhu, Jean-Claude Latombe (1991) “New heuristic algorithms for efficient hierarchical path planning.” In IEEE Trans. on Robotics and Automation, vol. 7, no. 1, pp. 9-20. [43] Conte G, Zullil R.(1995) “Hierarchical path planning in a multi-robot environment with a simple navigation function”. In IEEE Trans. On Systems, Man, and Cybernetics, vol. 25, no. 4, pp. 651-654. [44] Frank Lingelbach. (2004) “Path planning using probabilistic cell decomposition”. In Int. Conf. on Robotics and Automation, pp. 467-472. [45] Jan Rosell, Pedro Iniguez. (2005) “Path planning using harmonic functions and probabilistic cell decomposition”. In Int. Conf. on Robotics

11522

Mohd. NayMaobhZda.fNara,yJa.bC.ZMafoahraenttaa.l./ /PProrocceeddiaiaCCoommppuuteterrSSccieiennccee0103(320(21081)80)0104–10–01052

and Automation, pp. 1803-1808. [46] Milos Seda (2007), “Roadmap method vs. cell decomposition in robot motion planning”. In Proceedings of 6th WSEAS international conf
on signal processing, Robotics and automation, Grees, pp. 127-132. [47] John H. Holland. (1975) “Adaptation in natural and artificial systems”. In University of Michigan Press, Ann Arbor. [48] James Kennedy, Russell Eberhart. (1995) “Particle swarm optimization”. In IEEE Press Proceedings of the 1995 IEEE International
Conference on Neural Networks, pp. 1942-1948. [49] Andrew Stacey, Mirjana Jancic, Ian Grundy. (2003) “Particle swarm optimization with mutation”. The 2003 Congress on Evolutionary
Computation, 2003. CEC '03, pp. 1425-1430. [50] Jakob Vesterstrom, and Jacques Riget. (2002) “Particle swarms extensions for improved local, multimodal, and dynamic search in numerical
optimization”. In Master’s thesis, Dept Computer Science, Univ Aarhus, Aarhus C, Denmark. [51] Bill C. H. Chang , Asanga Ratnaweera , Saman K. Halgamuge , Harry C. Watson. (2004) “Particle swarm optimization for protein motif
discovery”. In Journal of Genetic Programming and Evolvable Machines, pp. 203-214. [52] E. Peer, F. Bergh, A. Engelbrecht. (2003) “Using neighbourhood with the guaranteed convergence pso” In Proceedings of the 2003 IEEE
Swarm Intelligence Symposium SIS 03, pp. 235-242. [53] Thanmaya Peram, Kalyan Veeramachaneni, Chilukuri K. Mohan. (2003) “Fitness distance ratio based particle swarm optimization (fdr-pso)”.
In Swarm Intelligence Symposium, SIS 03, pp. 174-181. [54] Chunming Yang, Simon, Dan. (2005) “A new particle swarm optimization technique”. In 18th International Conference on Systems
Engineering (ICSEng 2005), pp. 164-169. [55] Yuan-Qing Qin, De-Bao Sun, Ning Li, Yi-Gang Cen. (2004) “Path planning for mobile robot using the particle swarm optimization with
mutation operator”. In Proceeding of the Third International Conference on Machine learning and Cybernetics, Shanghai, pp. 2473-2478. [56] Fourie P, Albert. Groenwold. (2002) “The particle swarm optimization algorithm in size and shape optimization”, In Structural and
Multidisciplinary Optimization, vol. 23, no. 4, pp. 259-267. [57] Jim Pugh, Alcherio Martinoli. (2006) “Multi-robot learning with particle swarm optimization”. In International Conference on Autonomous
Agents and Multi Agent Systems AAMAS06, Hakodate, Japan, pp. 441-448. [58] Jim Pugh, Yizhen Zhang. (2005) “Particle swarm optimization for unsupervised robotic learning”. In Proceedings of 2005 IEEE in Swarm
Intelligence Symposium, SIS05, pp. 92-99. [59] Marco Dorigo,Vittorio Maniezzo,Alberto Colorni. (1996) “The Ant System: Optimization by a colony of cooperating agents”. In IEEE
Transactions on Systems, Man, and Cybernetics–Part B, Vol.26, No.1, pp.1-13. [60] Hao Mei, Yantao Tian, Linan Zu. (2006) “A hybrid ant colony optimization algorithm for path planning of robot in dynamic environment”.
In International Journal of Information Technology, vol. 12, no. 3, pp. 78-88. [61] Qi Zhang, Jiachen Ma, Qiang Liu. (2012) “Path Planning based Quadtree Representation for Mobile Robot Using Hybrid-Simulated
Annealing and ACO Algorithm”, Proceedings of 10th World Congress on Intelligent Control and automation, pp. 2537-2542. [62] Chunxue Shi, Yingyong Bu, and Jianghui Liu. (2008)“Mobile robot path planning in 3-D environment based on aco-pso hybrid algorithm”.
In Proceedings of the 2008 IEEE/ASME International Conference on Advanced Intelligent Mechatronics, Xian, China, pp. 252-256. [63] E. S. Jang, S. Jung and T. C. Hsia. C. Collision (2005) “Avoidance of a Mobile Robot for Moving Obstacles Based on Impedance Force
Control Algorithm”. Proceedings of IEEE International Conference on Intelligent Robots and Systems, Edmonton, Canada, pp.383-387. [64] B. Ulutas, E. Erdemir, K. Kawamura.(2008) “Application of a Hybrid Controller with NC Impedance to a Humanoid Robot.” pp.378-383. [65] F. Takemori, N. Tomita, D. Kushida. (2010) “Mobilility of legged robot by non-contact impedance control.” Proceedings of the 2010
IEEE/ASME, International Conference on Advance Intelligent Mechanics, July 2-5, 2008, Xi’an, China, pp.395-399. [66] K. Tsukamoto, T. Takubo, K. Ohara. (2010) “Virtual impedance model for obstacle avoidance in a limb mechanism robot. Proceedings of
the 2010 IEEE International Conference on Information and Automation,” June 20- 23, Harbin, China. [67] J.S. Farrokh, H. Iraj.(2011) “Experimental analysis of mobile robot tele-operation via shared impedance control.” IEEE Transactions on
System, Man, and Cybernetics-Part B: Cybernetics, April 2011, 41, 2, pp.591-606. [68] J. P. Ko, J. M. Lee. (2006) “Tactile tele-operation of a mobile robot with a collision vector.” Robotica, 2006, 24, pp. 11-21. [69] Flood, M. M. (1956), “The travelling-salesman problem.” Operation Research, 1956, 4, 61-75. [70] Kaoru Hirota, Wei-Po Lee, and Hsin-Chu. (1999) “Evolving complex robot behaviours”, Information Sciences, vol.121(1-2),pp.1-25. [71] P. Nagabhushan, and M.M. Manohara Pai. (2001) “Cognition of Free Space for Planning the Shortest Path, A Framed Free Space Approach.”
Pattern recognition letters, vol. 22(9), pp 971-982. [72] A. Saffiotti.(1997) “The Uses of Fuzzy Logic in Autonomous Robot Navigation” a Catalogue Raisonne, Soft Computing, 1997, 180-197. [73] G. Oriolo. (1998) “Real-Time Map Building and Navigation for Autonomous Robots in Unknown Environments”, IEEE Transaction on
System, Man and Cybernetics- Part B: Cybernetics, 28(3), 316-333. [74] D.V. Lebedev, J.J. Steil and H.J. Ritter. (2005) “The Dynamic Wave Expansion Neural Network Model for Robot Motion Planning in Time-
Varying Environments,Neural Networks” 18(3), 267-285. [75] A. Zhu, S. X. Yang. (2006) “A Neural Network Approach to Dynamic Task Assignment of Multi Robots”, IEEE Transaction on Neural
Networks, 17(5), 1278-1287. [76] Asano, T., Guibas, L., Hershberger, J., & Imai, H. (1985, 21-23 Oct. 1985) “Visibility-polygon search and Euclidean shortest paths”, Paper
presented at the Foundations of Computer Science, 26th Annual Symposium. [77] Mika T. Rantanen. (2011) “A Connectivity-Based Method for Enhancing Sampling in Probabilistic Roadmap Planners.”, Journal of Intelligent
Robotic Systems, vol. 64, no. 2, pp. 161-178.

