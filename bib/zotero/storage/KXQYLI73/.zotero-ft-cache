
Zotero automatically redirected your request to www.sciencedirect.com through the proxy at thi.idm.oclc.org. Don’t Proxy This Site Proxy Settings ✕
JavaScript is disabled on your browser. Please enable JavaScript to use all the features on this page. Skip to main content Skip to article
Elsevier logo ScienceDirect

    Journals & Books 

Register Sign in

    View  PDF
    Download Full Issue 

Outline

    Abstract
    Keywords
    1. Introduction
    2. Basis of homotopy continuation methods
    3. Homotopy applied to collision-free path planning
    4. Enhanced version of HPPM
    5. 3D generalization
    6. Numerical simulations
    7. Discussion
    8. Conclusions
    Acknowledgments
    References 

Show full outline
Cited By (26)
Figures (11)

    Fig. 1. Possible homotopy paths
    Fig. 2. 2D map environment
    Fig. 3. Two different collision free paths (T1 and T2) for HPPM method
    Fig. 4. Two different collision free paths (T1 and T2) for EHPPM method
    Fig. 5. (a) and (b) Represents successful collision free trajectories for HPPM…
    Fig. 6. 3D configuration space for paths T1=[p1=0

Show all figures
Tables (2)

    Table 1
    Table 2 

Elsevier
Applied Mathematics and Computation
Volume 219, Issue 14 , 15 March 2013, Pages 7514-7532
Applied Mathematics and Computation
Exploring collision-free path planning by using homotopy continuation methods
Author links open overlay panel H. Vazquez-Leal a A. Marin-Hernandez b Y. Khan c A. Yıldırım d U. Filobello-Nino a R. Castaneda-Sheissa a V.M. Jimenez-Fernandez a
Show more
Add to Mendeley
Share
Cite
https://doi.org/10.1016/j.amc.2013.01.038 Get rights and content
Abstract

Autonomous and semi-autonomous robots play significant roles in space and terrestrial exploration, even more in unfavorable and dangerous environments. Although recent advances allow robots to evolve in many such environments, one of the most important problems remains the establishment of collision-free trajectories in static or partially (temporal) static environments. This paper presents a different approach to address this problem, proposing a methodology based on homotopy continuation methods (HCM) capable of generating collision-free trajectories in two and three dimensions. The basic idea behind the proposal relies on the construction of a nonlinear equation representing the map of the environment, making it possible to apply HCM methods to obtain collision-free paths. A series of simulations are presented to show the effectiveness of the method avoiding circular, semi-rectangular, spherical shaped and semi-parallelepipeds obstacles.

    Previous article in issue
    Next article in issue 

Keywords
Path planning
Robot navigation
Homotopy continuation method
1. Introduction

Autonomous and semi-autonomous robots are important in fields as diverse as: industrial, military or medical, and in numerous applications as: terrestrial and space exploration, nuclear facilities inspection and, in general, for any unsafe or hostile environments. To execute many of the given tasks robots need sophisticated and highly accurate modules, particularly for perception and navigation [1] . To go from one point to another, generally a navigation module requires: (a) a map of the environment and (b) a path-planning algorithm.

Maps can be given to the robot as a priori information (e.g. a CAD model of the environment) or can be constructed by the robot itself in an exploration phase by a proper SLAM algorithm (Simultaneous Localization and Mapping) [2] . For the purposes of this work, is considered that the robot has already a map of the environment allowing us to focus on path planning algorithms.

Path-planning algorithms provide collision-free trajectories; however as they are very time consuming methods it is common to consider the environment as static. While for industrial environments or planetary exploration this statement is generally true, it is not the case for environments like: homes, offices and, in general, for most of the real-world environments [3] , [4] , [5] , [6] , [7] , [8] , [9] , [10] , [11] , [12] , [13] , [14] , [15] , [16] , [17] , [18] , [19] , [20] . Even so, it is possible to consider a temporal window where the environment could be considered as static. This window depends on environments and applications. Additionally, in this article we will only explore the collision-free trajectory planning, leaving as future work the problem of path following involving robot holonomic restrictions.

Nowadays, there are many methods for planning and generating collision-free trajectories. Roughly, we can group them into two classifications [21] : graphs and artificial potential fields. On one hand, the graphs approach solves the problem representing the collision free space by an interconnected graph. Then, a search is performed leading to a collision free trajectory, between initial and destination points. Nonetheless, the complexity of this kind of methods grows exponentially when the number of obstacles and possible solutions increase [22] . On the other hand, artificial potential fields methods work based on a simulation of repulsive forces around obstacles and an attractor located at the goal point. The solution to the potential field map is a collision-free trajectory. Unfortunately, solutions for these methods can be trapped by local minimums of the artificial field, providing wrong trajectories [23] .

The use of homotopy as support technique for path planning was exposed in [24] , showing a technique for trajectory re-planning in environments with unpredictable changes. In the mentioned work, it is employed a homotopy principle for creating a set of homotopy paths from the original path. In addition, the valid homotopy path for the robot is selected using a reactive control algorithm. In [24] , [25] , [26] , [27] , [28] , [29] , [30] , [31] it is shown that homotopy continuation methods (HCM) can be useful for kinematics problems. Therefore, in this work is proposed the use of HCM methods to generate a family of collision-free homotopy paths in two or three dimensions.

First, we propose a methodology to establish a nonlinear algebraic equation that represents the map of obstacles, using as variables the relative displacement of the robot with respect to initial position. This nonlinear equation has a solution, exact at the goal point of the robot. Second, we construct a homotopy map that use, as starting point, the initial position of the robot. Finally, a numerical continuation procedure is employed as a mechanism to trace the collision-free path that ends at the goal point (solution).

This paper is organized as follows. In Section 2 , we briefly review the basic idea of HCM methods. The homotopy path planning method (HPPM) is given in Section 3 . The proposal of a modified version of the HPPM method is provided in Section 4 . Section 5 , refers to an extension of HPPM and EHPPM methods to three dimensions. Some numerical simulations are presented in Section 6 . In Section 7 , we summarize our results and present future research. Finally, a brief conclusion is given in Section 8 .
2. Basis of homotopy continuation methods

Nonlinear algebraic equations systems (NAES) are very difficult to solve by conventional methods like Newton–Raphson (NR). The NR method converges properly if an initial guess for the solution is available, though there are examples for which the NR method diverges from all initial guesses. Nevertheless, it is common that this initial guess is not available or not simple to obtain. Therefore, convergence of the plain NR method cannot be guaranteed for all practical problems. Hence, one way to circumvent this issue is using HCM methods.

The HCM methods are a continuous transformation from one trivial problem (simple to solve) to the study problem (hard to solve). These kind of methods are applied to such diverse problems like: electronic circuits [32] , [33] , [34] , [35] , [36] , [37] , [38] , [39] , [40] , [41] , [42] , [43] , Toeplitz systems, nonlinear control synthesis [44] , stochastic finance economies [45] , load flow solutions of ill-conditioned power systems [46] , discretization of ordinary differential equations [47] , inverse kinematics problems [24] , [25] , [26] , [27] , [28] , [29] , [30] , [31] , optimization [48] , [49] , among many others.

The first step to formulate a homotopy [50] , [33] , [35] , [51] , [52] , [53] , [34] , [54] , [48] , [55] , [28] , [49] , [56] , [57] , [58] , [59] , [60] , [36] , [32] , [61] is to establish a nonlinear equation that models the problem to be solved; which is defined as (1) f ( x ) = 0 , f : ∈ R n → R n , where x denotes the variables of the problem and n is the total number of those variables.

A homotopy map can be represented as: (2) H ( f ( x ) , λ ) = 0 , H : ∈ R n + 1 → R n , where λ is the homotopy parameter.

Eq. (2) represents any homotopy formulation that fulfils the following conditions:

•

    For λ = 0 , solution for H - 1 ( 0 ) is known or easily found using numerical methods.
•

    For λ = 1 , H ( f ( x ) , 1 ) = f ( x ) . It means that at λ = 1 the solution or solutions for f ( x ) can be found.
•

    The path for H - 1 ( 0 ) is a continuous function of λ with 0 ⩽ λ ⩽ 1 .

The homotopy path γ is the solution set for H - 1 ( 0 ) , representing a continuous curve that can be traced by numerical continuation techniques or path following methods [62] , [51] , [63] , [64] , [65] , [37] , [38] , [29] , [30] . A possible homotopy map is (3) H ( f ( x ) , λ ) = λ f ( x ) + ( 1 - λ ) g ( x ) = 0 , where g ( x ) is a problem easy to solve.

The selection g ( x ) determines different specific homotopies. For instance, the Newton homotopy [38] , [55] , [66] can be obtained if we choose g ( x ) = f ( x ) - f ( x 0 ) ; after some algebraic steps results (4) H ( f ( x ) , λ ) = f ( x ) - ( 1 - λ ) f ( x 0 ) = 0 , where x 0 is the starting point (arbitrarily chosen) of the trajectory.

If λ = 0 , the homotopy map is reduced to the trivial problem (5) H ( x , 0 ) = f ( x ) - f ( x 0 ) = 0 . When λ = 1 , the sought solution is achieved (6) H ( x , 1 ) = f ( x ) = 0 .

This process is a continuous deformation from λ = 0 to λ = 1 , transforming the trivial problem f ( x ) - f ( x 0 ) = 0 into the original problem f ( x ) = 0 . The continuations deformation can create paths γ like the ones shown in Fig. 1 . It can be noticed that trajectory γ 2 is a successful case going from starting point A ( λ = 0 ) to solution B where λ = 1 , while the rest of the paths are cases of failure for the HCM method.

    Download : Download full-size image 

Fig. 1 . Possible homotopy paths.

In general terms, numerical continuation methods follow the next steps:

•

    We choose a starting point ( λ 0 , x 0 ) = ( 0 , x 0 ) .
•

    Solve H ( λ 1 , x ) = 0 for x to obtain x 1 . Here, λ 1 = λ 0 + Δ λ ; with Δ λ small enough to prevent an accidental divergence from the trajectory. This step usually involves predictor and corrector steps. There are many algorithms that can be chosen here, among them, we can mention a typical Euler predictor step and a Newton based corrector step. λ can increase and decrease adapting to the turning points of the trajectory. To read a detailed explanation of these methods the reader can refer to [64] , [65] .
•

    The last step is updated and repeated until λ = 1 . Now, the sought solution is found.

The success of finding the sought solution depends of several factors:

•

    Find a methodology to establish the NAES that describes the physical behavior of the problem under study. The properly formulation of NAES can help to guarantee or increase the probability of success of the homotopy simulation [35] .
•

    The behavior of different homotopy maps change for specific problems.
•

    Constructing a properly numerical continuation algorithm. Even if the homotopy map and NAES are established with the guarantee of global convergence [35] , [67] , a poor numerical continuation scheme may lead to a failure [51] , [64] , [65] , [62] .

The path tracking of the homotopy trajectory is not a trivial task. Therefore, this process can find several issues to deal with, like:

•

    Optimal path tracking. The step size Δ λ can be adapted to the nature of the trajectory. On one hand, when the curve is “flat” the step size can be increased to reduce the number of iterations. On the other hand, when the curve is near a turning point, in particular for sharp turning points, it is recommended to reduce Δ λ in order to circumvent the possibility of a failure of the path following. Reducing or increasing the value of Δ λ is a trade off between the speed of the numerical continuation and the accuracy of the path tracking of γ .
•

    Curve jumping [29] , [30] . This issue is related to the optimal path tracking; if Δ λ is increased in the vicinity of a nearby trajectory, it can produce an accidental jump from one trajectory to another. In [29] , [30] is reported a strategy to deal with curve jumping based on reduction of the step size in terms of the number of Newton correction steps and the separation of two consecutive iterations of the predictor–corrector step.
•

    Bifurcation and Singularities [68] , [62] . These issues are usually due to the physical phenomena and can be treated using artificial parameter homotopies [35] .

Eq. (1) usually arises from phenomenon under study. Therefore, as we want to apply HCM for path planning in robotics, we need to propose a novel methodology to describe the configuration space as NAES. Such NAES will describe aspects like: obstacles, initial position of the robot and goal point. This new configuration space will be represented as a nonlinear algebraic equation. Then, a homotopy can be applied to solve it and generate useful trajectories for path planning.

In homotopy continuation methods, usually, the main goal is to find the solution to the NAES, leaving the aspect of the trajectory in second place. Nevertheless, in this work, the shape of homotopy trajectory plays as a relevant role as the starting point and the solution. Therefore, all the developed knowledge around numerical continuation methods and HCM methods is a great tool to this new research line.
3. Homotopy applied to collision-free path planning

In mobile robotics, indoor environments are commonly represented by a 2D map, which is only a top view of a given scenario. By using this representation the complexity of the problem is reduced. In this context, the robot position is given as ( x , y ), being x and y the position within the Cartesian plane x – y .

Computation of collision free paths depends directly on the environment complexity. In order to reduce computational cost it is common to consider simple representations, essentially for obstacles. The most employed representations are: (a) circular, defined by a given position of the centre and a radius; (b) rectangular, defined by its bounding box. Both shapes are considered in this work.

The equation for a circular obstacle is (7) C i ( x , y ) = ( x - x i ) 2 + ( y - y i ) 2 - r i 2 , where x i and y i are the centre for the i -th circular obstacle with radius r i .

As proposed in [23] , rectangular shapes can be approximated by an analytical equation named n - ellipsoid . According to this presentation an n -ellipsoid for two dimensions is described by (8) R i ( x , y ) = x - x i a 2 n + y - y i b 2 n - 1 , where x i and y i are the center of the i -th rectangle, 2 a and 2 b are approximations to the base and height of the rectangle as n tends to infinity. For this work, we have employed the value of n = 2 .

In order to solve the problem, the dimensions of the configuration space are normalized. Normalization is accomplished by considering the goal point B at (1, 1) and the starting point A may not be located at (0, 0) but somewhere between the area delimited by planes x = 0 , x = 1 , y = 0 , y = 1 , as depicted in Fig. 2 . Additionally, it is necessary to establish an auxiliary equation system having a unique solution at final point B of the path. This can be formulated as (9) f 1 ( x , y ) = 0 , x , y ∈ R , f 2 ( x , y ) = 0 , x , y ∈ R , where f 1 ( 1 , 1 ) = 0 and f 2 ( 1 , 1 ) = 0 .

    Download : Download full-size image 

Fig. 2 . 2D map environment.

An example of an auxiliary equation system with such characteristics is given by (10) l 1 ( x , y ) = d 11 y + d 12 x + d 13 = 0 , l 2 ( x , y ) = d 21 y + d 22 x + d 23 = 0 , where d i , j ( i = 1 , 2 and j = 1 , 2 , 3 ) are constants for the straight lines. Furthermore, we establish that each straight line l 1 ( x , y ) and l 2 ( x , y ) should cross through ( 1 , 1 ) .

To create collision free paths, we use one homotopy property consisting in the tendency of attraction by the two branches f 1 - 1 ( 0 ) and f 2 - 1 ( 0 ) and repelled by singularities. Therefore, the proposed NAES describing the map environment are (11) f 1 ( x , y ) = l 1 ( x , y ) = 0 , x , y ∈ R , f 2 ( x , y ) = l 2 ( x , y ) + p ( 1 / F ( x , y ) - 1 / G ) = 0 , x , y ∈ R , where p is an adjustment parameter that regulates the homotopy path behavior; F ( x , y ) is the equation defining the obstacle set (circles or semi-rectangles), and G is a correction constant to guarantee that f 2 ( 1 , 1 ) = 0 . Hereafter, equation f 2 will be known as restriction equation.

Now, we define F ( x , y ) as (12) F ( x , y ) = ∏ i = 1 i = k O i ( x , y ) , being k the number of obstacles and O i ( x , y ) represents (7) , (8) for the i -th obstacle.

Next, G is a corrector factor that helps to guarantee that f 2 ( 1 , 1 ) = 0 and it is defined as (13) G = F ( 1 , 1 ) .

Each O i obstacle possesses its own position and dimensions. Moreover, the nonlinear equation system (11) is formulated based on linear equation system (10) , such that for small values of p solution uniqueness is guaranteed at goal point ( 1 , 1 ) . Besides, the restriction function f 2 ( x , y ) is singular just at the contour of the circles and semi-rectangles, generating a barrier keeping the homotopy path of colliding with such obstacles.

Now, we use Newton homotopy [38] , [55] , [66] map (4) to exemplify the proposed method, which is (14) H 1 ( x , y ) = f 1 ( x , y ) - ( 1 - λ ) ζ = 0 , H 2 ( x , y ) = f 2 ( x , y ) - ( 1 - λ ) ξ = 0 , where λ is the homotopy parameter, ζ = f 1 ( x 0 , y 0 ) , and ξ = f 2 ( x 0 , y 0 ) establishes initial point ( x 0 , y 0 ) .

Solving for λ in H 1 ( x , y ) and H 2 ( x , y ) , equaling both equations, and performing some algebraic manipulations we obtain (15) G [ ( ζ l 2 ( x , y ) - ξ l 1 ( x , y ) ) F ( x , y ) - ζ p ] + ζ pF ( x , y ) = 0 , solutions of (15) correspond to the solutions family for H - 1 ( 0 ) , that is, the homotopy path in the plane x – y .

The collision free trajectory depends on the initial point ( x 0 , y 0 ) , obstacles configuration, and p parameter. Hence, there is a family of possible trajectories. In this context (15) represents the analytic implicit polynomial equation of a collision free trajectory family for all possible free configuration spaces, formed by circles and approximated rectangles. In addition, the degree of (15) is 2 M + 4 N + 1 , where M is the number of circles and N is the number of semi-rectangles ( N + M = k ), indicating a lineal correspondence with the number of obstacles.

On one side, the optimum way to trace the homotopy path of (14) is using path following methods [51] , [64] , [65] , [62] , [37] , [38] . The numerical continuation methods are a huge set of power numerical tools that can be chosen according to needs of the problem to solve. Nevertheless, the two premises for homotopy continuation of never to lose the main path and achieve the final point/position at solution (1, 1) should be kept. However, for this specific application, we should add a third requisite; the numerical procedure should keep an accurate tracking of the path to avoid accidental overlapping with the boundary of the obstacles. On the other side, for research purposes only, it is possible to sketch the graph of the implicit polynomial from (15) by using graph routines of implicit equations; which are available in computer programs like Maple 13 (implicitplot command), making it possible to sketch the collision free path and isolate paths. This procedure is slow due to the nature of implicitplot command; nevertheless, it can give us insights about the behavior of the trajectories.

Notice that, figuratively, (7) , (8) represents some sort of force fields around the real obstacles. Therefore, the homotopy path cannot cross those fields, although, it can pass close to them. Then, when position and dimensions of those fields are chosen, the user should consider a tolerance space between the real obstacle and the field that represents the obstacle. We will designate this collision free path search technique as homotopy path planning method (HPPM).
4. Enhanced version of HPPM

This section presents an enhanced version of homotopy path planning method (EHPPM). The modification of the HPPM method is done to achieve a more precise control of the generated homotopy paths. In the previous section it was introduced the parameter p which helps to regulate the level of repulsion of the obstacles created by (11) . Nevertheless, especially when obstacles configuration becomes complex, it is difficult to properly regulate the trajectory using just one parameter. Therefore, a modification of the HPPM method is proposed, and the new NAES formulation is (16) f 1 ( x , y ) = l 1 ( x , y ) = 0 , x , y ∈ R , f 2 ( x , y ) = l 2 ( x , y ) + W ( x , y ) - Q = 0 , x , y ∈ R , where W ( x , y ) is: (17) W ( x , y ) = ∑ i = 1 i = k p i O i ( x , y ) and Q is represented as: (18) Q = ∑ i = 1 i = k p i O i ( 1 , 1 ) , where k is the number of obstacles, p i represents the repulsion parameter for the i -th obstacle, and O i is the Eqs. (7) , (8) of the i -th obstacle. Each O i obstacle possesses its own position and dimensions.

Once NAES (16) is formulated, we establish the homotopy map (14) and solve it by using numerical continuation methods.

For research purposes, we calculate the implicit polynomial of the Newton homotopy trajectory by solving H 1 ( x , y , λ ) and H 2 ( x , y , λ ) for λ and equaling both results, we obtain (19) ζ f 2 ( x , y ) - ξ f 1 ( x , y ) + ζ Q - ζ W ( x , y ) = 0 .

Solutions of (19) correspond to the family of solutions for H - 1 ( 0 ) , that is, the homotopy path. In order to eliminate the rational terms, we multiply (19) by (12) to obtain (20) ζ f 2 ( x , y ) F ( x , y ) - ξ f 1 ( x , y ) F ( x , y ) + ζ QF ( x , y ) - ζ W ( x , y ) F ( x , y ) = 0 . Now, (20) can be traced using the aforementioned “implicitplot” command from Maple.
5. 3D generalization

Between autonomous and semi-autonomous robots there are aquatic robots, aerial robots, and mobile manipulators, as well. All of them require path planning in three dimensions (3D). Therefore, this section proposes an extension to the HPPM and EHPPM methods to deal with 3D environments. The problem here is to create NAES representing the 3D configuration space. To this end, we propose spherical obstacles, represented as (21) C i ( x , y , z ) = ( x - x i ) 2 + ( y - y i ) 2 + ( z - z i ) 2 - r i 2 = 0 , where x i , y i , and z i are the center of the i -th obstacle with radius r i .

Below is the equation for the parallelepiped approximation [23] (22) R i ( x , y , z ) = x - x i a 2 n + y - y i b 2 n + z - z i c 2 n - 1 , where x i , y i and z i are the center of the i -th parallelepiped approximation; 2 a , 2 b , and 2 c are its dimensions, and n is an arbitrary constant that defines the degree of accuracy for the approximation.

As in the 2D case, the 3D space is normalized; being the point B at coordinates ( 1 , 1 , 1 ) and the initial point ( x 0 , y 0 , z 0 ) being any point within the cube delimited by x = 0 , x = 1 , y = 0 , y = 1 , z = 0 , and z = 1 .

Now, we establish an equation system which has a unique solution at goal point B of the route, that is, ( 1 , 1 , 1 ) ; being the general NAES formulation (23) f 1 ( x , y , z ) = 0 , x , y , z ∈ R , f 2 ( x , y , z ) = 0 , x , y , z ∈ R , f 3 ( x , y , z ) = 0 , x , y , z ∈ R , where f 1 ( 1 , 1 , 1 ) = 0 , f 2 ( 1 , 1 , 1 ) = 0 , and f 3 ( 1 , 1 , 1 ) = 0 .

Analogously to the HPPM and EHPPM methods in two dimensions, the 3D version uses three auxiliary equations (planes) formulated as follows (24) Z 1 ( x , y , z ) = d 11 y + d 12 x + d 13 z + d 14 = 0 , Z 2 ( x , y , z ) = d 21 y + d 22 x + d 23 z + d 24 = 0 , Z 3 ( x , y , z ) = d 31 y + d 32 x + d 33 z + d 34 = 0 , where d ij ( i = 1 , 2 , 3 and j = 1 , 2 , 3 , 4 ) are constants of the planes. In addition, we require that (24) possesses a solution at ( 1 , 1 , 1 ) .

For HPPM method, the proposed NAES describing the 3D configuration space is (25) f 1 ( x , y , z ) = Z 1 ( x , y , z ) = 0 , x , y , z ∈ R , f 2 ( x , y , z ) = Z 2 ( x , y , z ) = 0 , x , y , z ∈ R , f 3 ( x , y , z ) = Z 3 ( x , y , z ) + p ( 1 / F ( x , y , z ) - 1 / F ( 1 , 1 , 1 ) ) = 0 , x , y , z ∈ R , where p is an adjustment parameter; F ( x , y , z ) is the equation defining the 3D obstacles set. Hereafter, equation f 3 will be known as restriction equation.

Now, we define F ( x , y , z ) as (26) F ( x , y , z ) = ∏ i = 1 i = k O i ( x , y , z ) , being k the number of obstacles and O i ( x , y , z ) represents (21) , (22) for the i -th obstacle.

Now, for the 3D version of EHPPM method, the NAES formulation process is (27) f 1 ( x , y , z ) = Z 1 ( x , y , z ) = 0 , x , y , z ∈ R , f 2 ( x , y , z ) = Z 2 ( x , y , z ) = 0 , x , y , z ∈ R , f 3 ( x , y , z ) = Z 3 ( x , y , z ) + W ( x , y , z ) - W ( 1 , 1 , 1 ) = 0 , x , y , z ∈ R , where W ( x , y , z ) is (28) W ( x , y , z ) = ∑ i = 1 i = k p i O i ( x , y , z ) , here k is the number of obstacles, p i represents the repulsion parameter for the i -th obstacle, and O i ( x , y , z ) represents obstacles (21) , (22) .

The homotopy map (14) is extended to three dimensions as follows (29) H 1 ( x , y , z , λ ) = f 1 ( x , y , z ) - ( 1 - λ ) f 1 ( x 0 , y 0 , z 0 ) = 0 , H 2 ( x , y , z , λ ) = f 2 ( x , y , z ) - ( 1 - λ ) f 2 ( x 0 , y 0 , z 0 ) = 0 , H 3 ( x , y , z , λ ) = f 3 ( x , y , z ) - ( 1 - λ ) f 3 ( x 0 , y 0 , z 0 ) = 0 , where x 0 , y 0 , and z 0 are the coordinates of initial point A of the homotopy path and λ is the homotopy parameter. The homotopy trajectory of (29) can be traced using numerical continuation techniques like the ones reported in [62] , [51] , [63] , [64] , [65] , [37] , [38] , [29] , [30] .
6. Numerical simulations
6.1. Two circular obstacles of different ratio by HPPM

Using (7) , we define the equations of circular obstacles as (30) O 1 ( x , y ) = ( x - 0.35 ) 2 + ( y - 0.65 ) 2 - 0.01 = 0 , O 2 ( x , y ) = ( x - 0.7 ) 2 + ( y - 0.6 ) 2 - 0.04 = 0 .

Next, we choose an auxiliary linear system as (31) l 1 ( x , y ) = - y - 2 x + 3 = 0 , l 2 ( x , y ) = - 2 y - x + 3 = 0 , that has a solution at ( 1 , 1 ) .

Next, we apply (30) , (31) to (11) , resulting (32) f 1 ( x , y ) = - y - 2 x + 3 = 0 , f 2 ( x , y ) = - 2 y - x + 3 + p δ - 8.900756564 p = 0 , δ = [ ( x - 0.7 ) 2 + ( y - 0.6 ) 2 - 0.04 ] [ ( x - 0.35 ) 2 + ( y - 0.65 ) 2 - 0.01 ] , where system satisfies f 1 ( 1 , 1 ) = 0 and f 2 ( 1 , 1 ) = 0 .

The above equation is the nonlinear algebraic equation system that represents the configuration space. Moreover, using (32) and considering the initial position of the robot at x 0 = y 0 = 0 , we can proceed to establish the homotopy map as (33) H 1 ( x , y , λ ) = - y - 2 x + 3 - 3 ( 1 - λ ) = 0 , H 2 ( x , y , λ ) = - 2 y - x + 3 + p δ - 8.900756564 p - ( 1 - λ ) ( 3 - 6.593153011 p ) = 0 .

We use the Euler-predictor and Newton-corrector scheme described in [37] , that is based on other reports of literature [64] , [65] , resulting the collision free homotopy paths shown in Fig. 3 (a). Considering that the simulation was performed using Maple 13 in an Intel Dual Core of 2.6 GHz CPU, the execution time and iterations were [ 0.252 seconds, 90 steps] and [0.308 s, 100 steps] (using a step size of value 0.02 ) for T 1 = [ p = 1 e ( - 5 ) ] and T 2 = [ p = 7 e ( - 3 ) ] , respectively. For the rest of examples of this work, we will use the same numerical continuation method, software, and hardware.

    Download : Download full-size image 

Fig. 3 . Two different collision free paths ( T 1 and T 2 ) for HPPM method. Solid line represents obstacles. The number inside the obstacle represents the number of object.

In order to visualize the isolate homotopy paths, we calculate the implicit polynomial (15) , resulting (34) - 2.400606570 x 2 y 2 - 2.009338047 x 2 y - 1.469173878 xy 2 + 2.273747746 xy + 12.00026373 x 2 y 3 + 2.399063772 xy 3 + 6.000131863 yx 4 + 2.399063772 yx 3 - 11.99947255 x 3 y 2 - 5.999736274 xy 4 + 7.895974847 x 2 - 10.16982129 y 2 + 12.59958463 x 4 - 13.94967759 x 3 - 15.00019120 y 4 + 17.43003692 y 3 + 6.000131863 y 5 - 5.999736274 x 5 - 2.600167923 x + 2.599922460 y - 1.844700000 × 10 - 14 = 0 and (35) - 2.824599054 x 2 y 2 - 1.546633206 x 2 y - 0.8917145494 xy 2 + 2.097422176 xy + 12.18460828 x 2 y 3 + 1.744640591 xy 3 + 6.092304142 yx 4 + 1.744640591 yx 3 - 11.63078343 x 3 y 2 - 5.815391716 xy 4 + 7.878392985 x 2 - 10.04490481 y 2 + 12.30924195 x 4 - 13.72431637 x 3 - 15.13384101 y 4 + 17.45584516 y 3 + 6.092304142 y 5 - 5.815391716 x 5 - 2.647645864 x + 2.475821703 y - 1.291290000 × 10 - 11 = 0 for T 1 and T 2 trajectories, respectively.

Then, we use “implicitplot” built-in command from Maple 13 to trace (34) , (35) , resulting in Fig. 3 (b). In this Figure, we can notice internal isolated paths (IIP) and external isolated paths (EIP) related to the contour of the obstacles.
6.2. Two circular obstacles of different radius by EHPPM

First, we use the same obstacles (30) and auxiliary linear system (31) from last example. Then, we apply (30) , (31) to (16) , resulting (36) f 1 ( x , y ) = - y - 2 x + 3 = 0 , f 2 ( x , y ) = - 2 y - x + 3 + p 1 δ 1 + p 2 δ 2 - 4.761904762 p 1 - 1.869158878 p 2 = 0 , δ 1 = [ ( x - 0.7 ) 2 + ( y - 0.6 ) 2 - 0.04 ] , δ 2 = [ ( x - 0.35 ) 2 + ( y - 0.65 ) 2 - 0.01 ] , where system satisfies f 1 ( 1 , 1 ) = 0 and f 2 ( 1 , 1 ) = 0 .

Above equation is the nonlinear algebraic equation system that represents the configuration space. Moreover, using (36) and considering the initial position of the robot at x 0 = y 0 = 0 , we can proceed to establish the homotopy map as (37) H 1 ( x , y ) = - y - 2 x + 3 - 3 ( 1 - λ ) = 0 , H 2 ( x , y ) = - 2 y - x + 3 + p 1 δ 1 + p 2 δ 2 - 4.761904762 p 1 - 1.869158878 p 2 - ( 1 - λ ) ( 3 - 3.527336861 p 1 ) = 0 .

Considering a step size with value of 0.02 , the execution time and iterations of numerical continuation were [0.288 s, 89 steps] and [0.376 s, 101 steps] for T 1 = [ p 1 = 0.001 , p 2 = 0.0001 ] and T 2 = [ p 1 = 0.01 , p 2 = 0.001 ] , respectively (see Fig. 4 ).

    Download : Download full-size image 

Fig. 4 . Two different collision free paths ( T 1 and T 2 ) for EHPPM method. Solid line represents obstacles. The number inside the obstacle represent the number of object.

In order to visualize the isolate homotopy paths, we calculate the implicit polynomial (20) , resulting (38) - 0.2600169750 x + 0.2597220652 y + 0.7890661798 x 2 - 1.016378121 y 2 - 0.2430208508 x 2 y 2 - 0.1977389276 x 2 y - 0.1428157609 xy 2 + 0.2263487587 xy + 1.201410935 x 2 y 3 + 0.2349911817 xy 3 + 0.6007054674 yx 4 + 0.2349911817 yx 3 - 1.197178131 x 3 y 2 - 0.5985890653 xy 4 + 1.257889928 x 4 - 1.393510646 x 3 - 1.500910778 y 4 + 1.742917157 y 3 + 0.6007054674 y 5 - 0.5985890653 x 5 - 7.411200000 × 10 - 14 = 0 and (39) - 0.2600797503 x + 0.2571306527 y + 0.7842617976 x 2 - 1.010781209 y 2 - 0.2702085084 x 2 y 2 - 0.1683892762 x 2 y - 0.1051576093 xy 2 + 0.2168875868 xy + 1.214109347 x 2 y 3 + 0.1899118166 xy 3 + 0.6070546737 yx 4 + 0.1899118166 yx 3 - 1.171781305 x 3 y 2 - 0.5858906526 xy 4 + 1.238899273 x 4 - 1.380106463 x 3 - 1.509107782 y 4 + 1.742171570 y 3 + 0.6070546737 y 5 - 0.5858906526 x 5 - 7.411200000 × 10 - 13 = 0 for T 1 and T 2 trajectories, respectively.

Then, we use “implicitplot” built-in command from Maple 13 to trace (38) , (39) , resulting in Fig. 4 (b). Now, EIP and IIP paths are visible.
6.3. Curve jumping

From the last examples, we presented two successful study cases of collision free paths obtained by HPPM and EHPPM methods. However, for both study cases, as we increase the value of the step size of the numerical continuation method, the probability of occurring a curve-jumping increases too. It means that the numerical continuation can jump accidentally from the main path into an IIP path (see Fig. 3 , Fig. 4 ). This problem can potentially create undesirable collision paths.

Increasing the step size will produce less iterations as depicted in Fig. 5 (a) and (b) for HPPM and EHPPM methods. Using Δ λ = 0.03 HPPM method required 60 iterations and took 0.216 s, while for EHPPM method using Δ λ = 0.09 , required 19 iterations and 0.070 s. Reducing simulation times is an attractive idea. Nevertheless, we cannot continue increasing step size without taking the risk of a curve-jumping from the main path into an IIP path. For instance, in Fig. 5 (c) and (d) we can see two collision paths for HPPM ( Δ λ = 0.04 ) and EHPPM ( Δ λ = 0.10 ), respectively. For both methods, the IIP path of obstacle 2 attracted the Newton corrector step of the numerical continuation routing, inducing the jump from the main path into the IIP path. In fact, the error occurred twice, first from the main path into the IIP path and finally from the IIP path into the main path. EHPPM method was more tolerant to step size increasing, however, sooner or later, both methods tend to fail. Then, until we use and adapt strategies like the ones reported in [29] , [30] , a safe strategy for numerical continuation will be the use of small step sizes.

    Download : Download full-size image 

Fig. 5 . (a) and (b) Represents successful collision free trajectories for HPPM ( p = 1 e ( - 5 ) ) and EHPPM ( [ p 1 = 0.001 , p 2 = 0.0001 ] ), respectively. (c) and (d) Represents collision trajectories (using different step size) for HPPM and EHPPM, respectively. Solid line represents obstacles and trajectories are represented by dots. The number inside the obstacle represents the number of object. Each dot represents an iteration step from the numerical continuation.
6.4. A 3D configuration space using EHPPM

Using (21) , we define the equations of three spherical obstacles as (40) O 1 ( x , y , z ) = ( x - 0.3 ) 2 + ( y - 0.4 ) 2 + ( z - 0.7 ) 2 - 0.04 = 0 , O 2 ( x , y , z ) = ( x - 0.3 ) 2 + ( y - 0.2 ) 2 + ( z - 0.2 ) 2 - 0.04 = 0 , O 3 ( x , y , z ) = ( x - 0.8 ) 2 + ( y - 0.7 ) 2 + ( z - 0.8 ) 2 - 0.04 = 0 , where each object is enumerated in Fig. 6 .

    Download : Download full-size image 

Fig. 6 . 3D configuration space for paths T 1 = [ p 1 = 0.001 , p 2 = 0.01 , p 3 = 0.01 ] and T 2 = [ p 1 = 0.01 , p 2 = 0.01 , p 3 = 0.01 ] , from two viewpoints ((a) and (b)). Resolved by using EHPPM method.

Next, we choose an auxiliary system as (41) Z 1 ( x , y , z ) = x + y + z - 3 = 0 , Z 2 ( x , y , z ) = 3 x - 2 y + z - 2 = 0 , Z 3 ( x , y , z ) = 2 x + y - z - 2 = 0 , that has a solution at ( 1 , 1 , 1 ) .

Resorting to (28) , we apply (40) , (41) to (27) , resulting (42) f 1 ( x , y , z ) = x + y + z - 3 = 0 , f 2 ( x , y , z ) = 3 x - 2 y + z - 2 = 0 , f 3 ( x , y , z ) = 2 x + y - z - 2 + p 1 δ 1 + p 2 δ 2 + p 3 δ 3 - 1.11111111 p 1 - 0.57803468 p 2 - 7.69230769 p 3 = 0 , δ 1 = ( x - 0.3 ) 2 + ( y - 0.4 ) 2 + ( z - 0.7 ) 2 - 0.04 , δ 2 = ( x - 0.3 ) 2 + ( y - 0.2 ) 2 + ( z - 0.2 ) 2 - 0.04 , δ 3 = ( x - 0.8 ) 2 + ( y - 0.7 ) 2 + ( z - 0.8 ) 2 - 0.04 , where system satisfies f 1 ( 1 , 1 , 1 ) = 0 , f 2 ( 1 , 1 , 1 ) = 0 , and f 3 ( 1 , 1 , 1 ) = 0 .

Above equation is the nonlinear algebraic equation system representing the 3D configuration space. Moreover, using (42) and considering the initial position of the robot at x 0 = y 0 = z 0 = 0 , we can proceed to establish the homotopy map as (43) H 1 ( x , y , z ) = x + y + z - 3 + 3 ( 1 - λ ) = 0 , H 2 ( x , y , z ) = 3 x - 2 y + z - 2 + 2 ( 1 - λ ) = 0 , H 3 ( x , y , z ) = 2 x + y - z - 2 + p 1 δ 1 + p 2 δ 2 + p 3 δ 3 - 1.11111111 p 1 - 0.57803468 p 2 - 7.69230769 p 3 - ( 1 - λ ) ( - 2 + 0.317460317460 p 1 + 7.114273010227 p 2 - 7.114273010227 p 3 ) = 0 .

Considering a step size with value of Δ λ = 0.02 , the execution time and iterations of numerical continuation were [0.444 s, 112 steps] and [0.544 s, 128 steps] for T 1 and T 2 trajectories, respectively. The resulting collision free trajectories are shown in Fig. 6 .
6.5. Several configuration spaces with several obstacles

In order to show the collision free trajectories and isolate paths, we will use implicitplot command from Maple 13 for the rest of case studies of this section.

Fig. 7 , Fig. 8 , Fig. 9 show several configuration spaces (with several obstacles depicted as solid black lines) and collision free trajectories from point A to B . The configuration parameters are presented in Table 1 , Table 2 .

    Download : Download full-size image 

Fig. 7 . Different scenarios for collision free paths resolved by using HPPM method. The number inside the obstacle represents the number of object.

    Download : Download full-size image 

Fig. 8 . Scenario with seven obstacles resolved by using EHPPM method. The number inside the obstacle represents the number of object.

    Download : Download full-size image 

Fig. 9 . Scenario with two inverted sets of straight lines and the same set of p parameters. Resolved by using HPPM method. See Table 2 for configuration space. The number inside the obstacle represents the number of object.

Table 1 . Environment maps and simulation parameters treated with HPPM and EHPPM methods. For EHPPM method each value from p set corresponds to an obstacle.
Fig. 7 (a) HPPM	p  = [3E−9, 2E−8, 1.5E−7, 6E−7, 3.8E−6, 9E−6]
l 1 ( x ) = - y + 8 x - 7 = 0 , l 2 ( x ) = - y - x + 2 = 0
Obstacle #	Obstacle type	x i 	y i 	r 	a 	b
1	Circle	0.75	1.1	0.04	–	–
2	Circle	0.5	0.75	0.1	–	–
3	Circle	0.1	0.3	0.1	–	–
4	Circle	0.2	0.7	0.1	–	–
5	Circle	0.5	0.5	0.1	–	–
6	Circle	0.6	0.2	0.06	–	–
7	Circle	0.8	0.64	0.08	–	–

Fig. 7 (b) HPPM	p  = [1E−7, 9.9E−7, 8E−4, 1E−1, 7E−1, 3]
l 1 ( x ) = - y + 8 x - 7 = 0 , l 2 ( x ) = - y - x + 2 = 0
1	Rectangle	0.76	0.39	–	0.13	0.13
2	Circle	0.5	0.75	0.1	–	–
3	Circle	0.1	0.3	0.1	–	–
4	Rectangle	0.2	0.7	–	0.13	0.13
5	Circle	0.48	0.5	0.1	–	–
6	Circle	0.6	0.2	0.06	–	–
7	Circle	0.8	0.64	0.08	–	–

Fig. 8 EHPPM	Set p [1E−5, 1E−3, 3E−3, 1E−7, 1E−7, 1E−7, 2E−4]
l 1 ( x ) = - y - 2 x + 3 = 0 , l 2 ( x ) = - y + 0.1 x + 0.9 = 0
1	Circle	0.8	0.3	0.08	–	–
2	Circle	0.8	0.46	0.08	–	–
3	Circle	0.8	0.62	0.08	–	–
4	Circle	0.28	0.75	0.08	–	–
5	Circle	0.44	0.75	0.08	–	–
6	Circle	0.6	0.75	0.08	–	–
7	Circle	0.8	0.8	0.1	–	–

Table 2 . Configuration space and simulation parameters of Fig. 9 (a) and (b), treated with EHPPM method.
Fig. 9 (a)	p  = [1E−15, 7E−10, 1E−7, 1E−6, 1E−5, 2E−5]
l 1 ( x ) = - y - 2 x + 3 = 0 , l 2 ( x ) = - y + 0.1 x + 0.9 = 0
Obstacle #	Obstacle type	x i 	y i 	r 	a 	b
1	Circle	0.8	0.3	0.08	–	–
2	Circle	0.8	0.46	0.08	–	–
3	Circle	0.8	0.62	0.08	–	–
4	Circle	0.28	0.75	0.08	–	–
5	Circle	0.44	0.75	0.08	–	–
6	Circle	0.6	0.75	0.08	–	–
7	Circle	0.93	0.85	0.07	–	–

Fig. 9 (b)	p  = [1E−15, 7E−10, 1E−7, 1E−6, 1E−5, 2E−5]
l 1 ( x ) = - y + 0.1 x + 0.9 = 0 , l 2 ( x ) = - y - 2 x + 3 = 0
1	Circle	0.8	0.3	0.08	–	–
2	Circle	0.8	0.46	0.08	–	–
3	Circle	0.8	0.62	0.08	–	–
4	Circle	0.28	0.75	0.08	–	–
5	Circle	0.44	0.75	0.08	–	–
6	Circle	0.6	0.75	0.08	–	–
7	Circle	0.93	0.85	0.07	–	–

On one side, Fig. 7 (a) and (b) present two different scenarios successfully treated by the HPPM method. On the other side, the scenario in Fig. 8 was resolved using the EHPPM method. In Fig. 7 (a) it can be seen that T 1 path is the optimum (shortest path) having the lowest value for p ; in general terms, lower values of p makes straight paths, and higher values creates curved paths.

For the EHPPM method, the control is more precise given the fact that each i th obstacle has its own repulsive parameter p i ; therefore, it is possible to regulate, individually, the repulsion level for each obstacle (see Fig. 8 ). In Fig. 7 (a) we can see EIP paths (obstacles 1, 2, 3, 4, and 5) and IIP paths (obstacles 6 and 7). In addition, Fig. 7 , Fig. 8 show their corresponding EIP and IIP paths. EIP paths serve to create new connections, thus, new paths as we modify the value of p . For instance, in Fig. 7 (a) objects 2 and 5 have their own contour and EIP path which belongs to the T 1 path; when the value of p is increased to obtain T 2 path, the EIP path aforementioned connects to the main path and becomes part of the T 2 path. Moreover, IIP paths do not create connections, for instance, the IIP for object 6 in Fig. 7 (a) does not play a relevant role for the creation of new paths. Hence, it is necessary to perform deeper study to determine how to eliminate or find a use for IIP paths.

Fig. 9 (a) and (b), show a configuration space treated with HPPM method. The value of p parameters is the same for both cases. Nevertheless, an interchange of auxiliary equations l 1 ( x ) and l 2 ( x ) , unchained a drastic change of behavior of the collision free homotopy paths. In fact, the EIP and IIP paths interchanged roles, creating a new set of trajectories. Therefore, this phenomenon deserves deeper investigation in order to take advantage of this characteristic.
7. Discussion

The HPPM and EHPPM methods in two and three dimensions are a novelty path planning tool, capable to provide collision-free trajectories for different possible configuration spaces having obstacles of different: position, shape, and dimensions. Here, the parameter p plays a fundamental role, affecting the behavior of the collision free homotopy paths. In addition, auxiliary Eqs. (10) , (24) can affect the fundamental behavior of the IIP and EIP paths as shown in study cases of Fig. 9 .

In general, the average time of simulation for the first three examples was less than 0.5 s using Maple 13. Nevertheless, other programming languages like C , FORTRAN, among others, are significantly faster than MAPLE language. Moreover, the Maple code used was implemented only as proof of concept [37] ; in fact, there are more advanced, faster, and powerful packages like: PHCpack [69] , Bertini [70] , HOMPACK [62] , HOM4PS [71] , [72] , Homlab [73] , and PHoM [74] . Then, the properly use of this packages may lead to real time implementations capable of handling dynamical complex environment maps.

As have been described in this paper, homotopy path planning has demonstrated to be a powerful alternative to the current methods used in mobile robotics community. While graph-based methods are very fast, the collision-free path that they provide is a sparse distribution of points in the configuration space. It makes necessary to reconstruct the speed profile for the whole trajectory, which in turn is going to be provided to the robot in the path following process. As discussed early, methods based on artificial potential fields provide paths that can be converted easily to a speed profile, however the problem of local minimums is a constraint. Homotopy collision-free path can be converted easily to a speed profile, while it is possible to adapt or select a path considering the holonomic restrictions of the robot.

The proposed methods require further work in aspects such as:

1.

    It is important to establish a way to correlate the holonomic restrictions [1] of the robot to the homotopy path that will follow to reach its objective; it would allow to deal with the problem of path tracking. From (15) , (20) is possible to calculate the slope of the tangent for the homotopy path as well as their curvature radius. It would be a first step to reach the goal of connect the present path planning technique to the holonomic restrictions. In addition, a real robot possesses dimensions, then, it will be necessary to add a tolerance space to the equations of the obstacles that can guarantee a effective collision free path. If the robot is circular with radius r , the tolerance space will be the radius of the robot as depicted in Fig. 10 .

        Download : Download full-size image 

    Fig. 10 . Considering holonomic restrictions: circular robot of radius r .
2.

    The p parameter for the HPPM method or the set of p parameters for the EHPPM method play an important influence in the behavior of the homotopy paths. Therefore, it is important to perform a research in order to create a systematic method to establish values for p to create an optimum collision free path. A first step would be the calculation by numerical or analytical methods of the trajectory length, as means to optimize the travelled distance.
3.

    One problem for the homotopy methods is the design of numerical continuation techniques. This technique can be implemented using some benchmark reports of literature [62] , [73] , [51] , [63] , [64] , [65] , [38] , [29] , [30] . In particular, accidental jumping from the main path into IIP paths is a real issue in this method that needs to be handled. In Section 6.3 , we presented a case of collision paths due to curve jumping from the main path into the IIP path of obstacle 2. The numerical results from that Section show that EHPPM can be more tolerant to step size increasing; indicating that EHPPM is superior to HPPM. Moreover, as explained in Section 2 , [29] , [30] reported a strategy to deal with this issue. In this paper, we assume that the step size is small enough to reduce near to zero the probability of curve jumping. However, further work will address this problem using as starting point the report [71] .
4.

    HCM methods are capable to locate in just one path more than one solution for the nonlinear equation [62] , [71] , [36] , [39] . Therefore, one possible future research line would be the proposal of a HPPM method capable to generate, in just one path, a trajectory that goes from A through different goal points/solutions ( B , C and D ) as depicted in Fig. 11 . The new NAES possesses three solutions B , C , and D .

        Download : Download full-size image 

    Fig. 11 . Single collision free trajectory considering multiple objectives.
5.

    There are several HCM methods that can be applied to obtain different collision free paths like: polyhedral [74] , fixed point [39] , variable dimension [40] , threading [41] , multiple parameters [42] , DBPH homotopy [36] , and constructive homotopy [43] , multiparameter DBPH [75] , among many others. The application of other HCM methods may lead to optimal collision free trajectories.
6.

    This work proposed a way to establish the restriction equation; nevertheless, this is not the only way. As long as the restriction equation possesses a singularity around the obstacles as (11) or (16) , it can be considered as a potential restriction equation. One possible future research line may be the formulation of new restriction equations to create optimized paths.
7.

    Auxiliary Eqs. (10) , (24) modify the behavior of the collision free paths, EIP paths, and IIP paths (see Fig. 9 ). Therefore, deeper research should be done in order to propose a methodology to formulate auxiliary equations that helps to create optimized paths.

8. Conclusions

This paper presented a method for planning collision free paths based on the HCM methods. Such method was presented in two versions, HPPM and EHPPM, which serve to solve problems in two and three dimensions. A series of simulations demonstrated that the proposed methods might effectively establish collision free paths in two and three dimensions taking acceptable short times for the generation of paths. Finally, it was discussed a series of future research lines that emerge from this work; among them stands out the establishment of a link between the generation of the homotopy collision free path and the holonomic restrictions of the robot.
Acknowledgments

We gratefully acknowledge the financial support of the National Council for Science and Technology of Mexico (CONACyT) through Grant CB-2010-01 #157024 . The author would like to acknowledge Rogelio-Alejandro Callejas-Molina and Roberto Ruiz-Gomez for their contribution to this project.
References

[1]
    R. Siegwart, I. Nourbakhsh
    Introduction to Autonomous Mobile Robots
    The MIT Press, Cambridge (2004)
    Google Scholar
[2]
    H. Durrant-Whyte, T. Bailey
    Simultaneous localization and mapping: Part I
    IEEE Robotics Automation Magazine, 13 (2) (2006), pp. 99-110, 10.1109/MRA.2006.1638022
    View PDF
    View Record in Scopus Google Scholar
[3]
    Q. Zhao, S. Yan
    Collision-free path planning for mobile robots using chaotic particle swarm optimization
    Lecture Notes in Computer Science, 3612 (2005), pp. 632-635
    View PDF
    CrossRef View Record in Scopus Google Scholar
[4]
    N. Bourbakis
    Heuristic collision-free path planning for an autonomous platform
    Journal of Intelligent and Robotic Systems, 1 (4) (1989), pp. 375-387
    View Record in Scopus Google Scholar
[5]
    I. Namgung
    A global collision-free path planning using parametric parabola through geometry mapping of obstacles in robot work space
    KSME Journal, 10 (4) (1996), pp. 443-449
    Google Scholar
[6]
    A. Adamatzky, B. de Lacy Costello
    Collision-free path planning in the Belousov–Zhabotinsky medium assisted by a cellular automation
    Naturwissenschaften, 89 (2002), pp. 474-478
    View Record in Scopus Google Scholar
[7]
    K.-S. Hwang, M.-Y. Ju
    3D collision-free motion based on collision index
    Journal of Intelligent and Robotic Systems, 33 (2002), pp. 45-60
    View Record in Scopus Google Scholar
[8]
    Q. Xue, Y.-P. Chien
    Fast collision-free path planning of tightly coordinated two planar robots
    Engineering Applications of Artificial Intelligence, 7 (3) (1994), pp. 267-277, 10.1016/0952-1976(94)90054-X
    Article Download PDF View Record in Scopus Google Scholar
[9]
    S. Lahouar, E. Ottaviano, S. Zeghoul, L. Romdhane, M. Ceccarelli
    Collision free path-planning for cable-driven parallel robots
    Robotics and Autonomous Systems, 57 (11) (2009), pp. 1083-1093, 10.1016/j.robot.2009.07.006
    Article Download PDF View Record in Scopus Google Scholar
[10]
    M. Givehchi, A. Ng, L. Wang
    Evolutionary optimization of robotic assembly operation sequencing with collision-free paths
    Journal of Manufacturing Systems, 30 (4) (2011), pp. 196-203, 10.1016/j.jmsy.2011.08.00
    (Selected papers of 39th North American Manufacturing Research Conference)
    Article Download PDF View Record in Scopus Google Scholar
[11]
    G. Conte, S. Longhi, R. Zulli
    Cad-based generation of collision-free paths for robotic manipulators
    Control Engineering Practice, 1 (6) (1993), pp. 1069-1074, 10.1016/0967-0661(93)90019-N
    Article Download PDF View Record in Scopus Google Scholar
[12]
    K.-Y. Young, C.-Y. Huang
    Collision-free path planning and modification based on task requirements
    Mechanism and Machine Theory, 32 (1) (1997), pp. 21-37, 10.1016/0094-114X(96)00042-0
    Article Download PDF View Record in Scopus Google Scholar
[13]
    C.E. Campbell Jr.
    Collision-free path planning for a three-degree-of-freedom robot
    Computers & Electrical Engineering, 17 (3) (1991), pp. 163-172, 10.1016/0045-790(91)90032-U
    (Special issue Robotics Research at the NASA/Goddard Space Flight Center)
    Article Download PDF View Record in Scopus Google Scholar
[14]
    A. Sorgen, H. Holm
    A new heuristic approach to the robot free-path problem by stepwise path improvement
    Engineering Applications of Artificial Intelligence, 6 (1) (1993), pp. 3-19, 10.1016/0952-1976(93)90036-W
    Article Download PDF View Record in Scopus Google Scholar
[15]
    Lirov Yuval
    K th shortest collision-free path planning
    Applied Mathematics Letters, 1 (1) (1988), pp. 61-64, 10.1016/0893-9659(88)90177-2
    View PDF
    Google Scholar
[16]
    Wang Dajin
    A linear-time algorithm for computing collision-free path on reconfigurable mesh
    Parallel Computing, 34 (9) (2008), pp. 487-496, 10.1016/j.parco.2008.03.002
    View PDF
    Google Scholar
[17]
    A. Gonzalez-Rodriguez, A. Gonzalez-Rodriguez
    Collision-free motion planning and scheduling
    Robotics and Computer-Integrated Manufacturing, 27 (3) (2011), pp. 657-665, 10.1016/j.rcim.2010.11.006
    Article Download PDF View Record in Scopus Google Scholar
[18]
    H. Yu, R. Beard, J. Byrne
    Vision-based navigation frame mapping and planning for collision avoidance for miniature air vehicles
    Control Engineering Practice, 18 (7) (2010), pp. 824-836, 10.1016/j.conengprac.2010.02.00
    (Special issue on Aerial, Robotics)
    Article Download PDF View Record in Scopus Google Scholar
[19]
    K. Ioannidis, G. Sirakoulis, I. Andreadis
    Cellular ants: a method to create collision free trajectories for a cooperative robot team
    Robotics and Autonomous Systems, 59 (2) (2011), pp. 113-127, 10.1016/j.robot.2010.10.004
    Article Download PDF View Record in Scopus Google Scholar
[20]
    R. Kala, A. Shukla, R. Tiwari
    Robotic path planning in static environment using hierarchical multi-neuron heuristic search and probability based fitness
    Neurocomputing, 74 (1415) (2011), pp. 2314-2335, 10.1016/j.neucom.2011.03.006
    Article Download PDF View Record in Scopus Google Scholar
[21]
    J. Craig
    Introduction to Robotics: Mechanics and Control
    Pearson Prentice Hall, Upper Saddle River (2005)
    Google Scholar
[22]
    R. Brooks
    Solving the find-path problem by good representation of free space
    IEEE Transactions on Systems, Man and Cybernetics, SMC-13 (1983), pp. 190-197
    View PDF
    CrossRef Google Scholar
[23]
    O. Khatib
    Real-time obstacle avoidance for manipulators and mobile robots
    The International Journal of Robotics Research, 5 (1) (1986), pp. 90-98
    View PDF
    CrossRef Google Scholar
[24]
    O. Brock, O. Khatib, Real-time replanning in high-dimensional configuration spaces using sets of homotopic paths, in: Proc. of the International Conference on Advanced Robotics, San Francisco, USA, 2000, pp. 550–555.
    Google Scholar
[25]
    E. Lee, C. Mavroidis
    Solving the geometric design problem of spatial 3r robot manipulators using polynomial homotopy continuation
    ASME Journal of Mechanical Design, 124 (2002), pp. 652-661
    View Record in Scopus Google Scholar
[26]
    T. Wu
    Searching all the roots of inverse kinematics problem of robot by homotopy continuation method
    Journal of Applied Sciences, 5 (4) (2005), pp. 666-673
    View PDF
    CrossRef Google Scholar
[27]
    T. Wu
    The inverse kinematics problem of spatial 4p3r robot manipulator by the homotopy continuation method with an adjustable auxiliary homotopy function
    Nonlinear Analysis, 64 (2006), pp. 2373-2380
    Article Download PDF View Record in Scopus Google Scholar
[28]
    L.T. Watson
    Globally convergent homotopy algorithms for nonlinear systems of equations
    Nonlinear Dynamics, 1 (1990), pp. 143-191
    View Record in Scopus Google Scholar
[29]
    D.J. Bates, J.D. Hauenstein, A.J. Sommese, C.W. Wampler II
    Adaptive multiprecision path tracking
    SIAM Journal on Numerical Analysis, 46 (2) (2008), pp. 722-746
    View PDF
    CrossRef View Record in Scopus Google Scholar
[30]
    D.-J. Bates, J.-D. Hauenstein, A.-J. Sommese, C.-W. Wampler
    Stepsize control for adaptive multiprecision path tracking
    Contemporary Mathematics, 496 (2009), pp. 21-31
    View PDF
    CrossRef View Record in Scopus Google Scholar
[31]
    A. Morgan, A. Sommese
    Computing all solutions to polynomial systems using homotopy continuation
    Applied Mathematics and Computation, 24 (2) (1987), pp. 115-138
    Article Download PDF View Record in Scopus Google Scholar
[32]
    H. Vazquez-Leal, R. Castaneda-Sheissa, A. Yildirim, Y. Khan, A. Sarmiento-Reyes, V. Jimenez-Fernandez, A. Herrera-May, U. Filobello-Nino, F. Rabago-Bernal, C. Hoyos-Reyes
    Biparameter homotopy-based direct current simulation of multistable circuits
    Journal of Mathematics & Computer Science, 2 (3) (2012), pp. 137-150
    View Record in Scopus Google Scholar
[33]
    A. Ushida, Y. Yamagami, Y. Nishio, I. Kinouchi, Y. Inoue
    An efficient algorithm for finding multiple dc solutions based on the spice-oriented newton homotopy method
    IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems, 21 (3) (2002), pp. 337-348
    View Record in Scopus Google Scholar
[34]
    L.T. Watson
    Probability-one homotopies in computational science
    Journal of Computational and Applied Mathematics, 140 (1–2) (2002), pp. 785-807
    Article Download PDF View Record in Scopus Google Scholar
[35]
    R.-C. Melville, L. Trajkovic, S.-C. Fang, L.-T. Watson
    Artificial parameter homotopy methods for the dc operating point problem
    IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems, 12 (6) (1993), pp. 861-877
    View Record in Scopus Google Scholar
[36]
    H. Vazquez-Leal, L. Hernandez-Martinez, A. Sarmiento-Reyes, R. Castaneda-Sheissa, A. Gallardo-Del-Angel
    Homotopy method with a formal stop criterion applied to circuit simulation
    IEICE Electronic Express, 8 (21) (2011), pp. 1808-1815
    View PDF
    CrossRef View Record in Scopus Google Scholar
[37]
    H. Vazquez-Leal, L. Hemandez-Martinez, A. Sarmiento-Reyes, R. Castaneda-Sheissa, Numerical continuation scheme for tracing the double bounded homotopy for analysing nonlinear circuits, in: Proc. 2005 International Conference on Communications, Circuits and Systems, Hong Kong, China, 2005, pp. 1122–1126.
    Google Scholar
[38]
    H. Vazquez-Leal, R. Castaneda-Sheissa, F. Rabago-Bernal, L. Hernandez-Martinez, A. Sarmiento-Reyes, U. Filobello-Nino
    Powering multiparameter homotopy-based simulation with a fast path-following technique
    ISRN Applied Mathematics, 2011 (2011)
    7p (Article ID 610637)
    Google Scholar
[39]
    K. Yamamura, T. Sekiguchi, Y. Inuoe
    A fixed-point homotopy method for solving modified nodal equations
    IEEE Transactions on Circuits and Systems-I: Fundamental Theory and Applications, 46 (6) (1999), pp. 654-664
    View Record in Scopus Google Scholar
[40]
    L. Vandenberghe, J. Vandewalle
    Variable dimension algorithms for solving resistive circuits
    International Journal of Circuit Theory and Applications, 18 (5) (1990), pp. 443-474
    View PDF
    CrossRef View Record in Scopus Google Scholar
[41]
    R. Geoghgan, J. Lagarias, R. Melville
    Threading homotopies and dc operating points of nonlinear circuits
    Society for Industrial and Applied Mathematics, 9 (1) (1998), pp. 159-178
    Google Scholar
[42]
    D. Wolf, S.R. Sanders
    Multiparameter homotopy methods for finding dc operating points of nonlinear circuits
    IEEE Transactions on Circuits and Systems-I: Fundamental Theory and Applications, 43 (10) (1996), pp. 824-837
    View Record in Scopus Google Scholar
[43]
    J. Lee, H.-D. Chiang
    Constructive homotopy methods for finding all or multiple dc operating points of nonlinear circuits and systems
    IEEE Transactions on Circuits and Systems-I: Fundamental Theory and Applications, 48 (1) (2001), pp. 51-66
    View Record in Scopus Google Scholar
[44]
    K. Reif, K. Weinzierl, A. Zell, R. Unbehauen
    A homotopy approach for nonlinear control synthesis
    IEEE Transactions on Automatic Control, 43 (9) (1998), pp. 1311-1318
    View Record in Scopus Google Scholar
[45]
    F. Kubler, K. Schmedders
    Computing equilibria in stochastic finance economies
    Computational Economics, 15 (1–2) (2000), pp. 145-172
    View Record in Scopus Google Scholar
[46]
    H.-C. Chen, L.-Y. Chung
    Load flow solution for ill-conditioned by homotopy continuation method
    International Journal of Power and Energy Systems, 28 (1) (2000), pp. 99-106
    Google Scholar
[47]
    E. Dratman, G. Matera
    On the solution of the polynomial systems arising in the discretization of certain odes
    Computing, 85 (4) (2009), pp. 301-337
    View PDF
    CrossRef View Record in Scopus Google Scholar
[48]
    L.T. Watson, R.T. Haftka
    Modern homotopy methods in optimization
    Computer Methods in Applied Mechanics and Engineering, 74 (3) (1989), pp. 289-305
    Article Download PDF View Record in Scopus Google Scholar
[49]
    V. Pérez, J. Renaud, L. Watson
    Homotopy curve tracking in approximate interior point optimization
    Optimization and Engineering, 10 (2009), pp. 91-108
    View PDF
    CrossRef View Record in Scopus Google Scholar
[50]
    M. Kuno, J.-D. Seader
    Computing all real solutions to systems of nonlinear equations with a global fixed-point homotopy
    Industrial & Engineering Chemistry Research, 27 (1988), pp. 1320-1329
    View PDF
    CrossRef View Record in Scopus Google Scholar
[51]
    L.T. Watson
    Numerical linear algebra aspects of globally convergent homotopy methods
    SIAM Review, 28 (4) (1986), pp. 529-545
    View PDF
    CrossRef View Record in Scopus Google Scholar
[52]
    M. Sosonkina, L.T. Watson, D.E. Stewart
    Note on the end game in homotopy zero curve tracking
    ACM Transactions on Mathematical Software, 22 (3) (1996), pp. 281-287
    View Record in Scopus Google Scholar
[53]
    L.T. Watson, S.M. Holzer, M.C. Hansen
    Tracking nonlinear equilibrium paths by a homotopy method
    Nonlinear Analysis: Theory, Methods and Applications, 7 (11) (1983), pp. 1271-1282
    Article Download PDF View Record in Scopus Google Scholar
[54]
    L.T. Watson
    Globally convergent homotopy methods: a tutorial
    Applied Mathematics and Computation, 31 (1989), pp. 369-396
    Article Download PDF CrossRef Google Scholar
[55]
    K. Ahuja, L. Watson, S. Billups
    Probability-one homotopy maps for mixed complementarity problems
    Computational Optimization and Applications, 41 (2008), pp. 363-375
    View PDF
    CrossRef View Record in Scopus Google Scholar
[56]
    L.T. Watson
    Globally convergent homotopy methods
    C.A. Floudas, P.M. Pardalos (Eds.), Encyclopedia of Optimization, Springer, US (2009), pp. 1272-1277
    View PDF
    CrossRef View Record in Scopus Google Scholar
[57]
    T. Wu
    A technique to avoid divergence for planar and spatial newton-homotopy continuation method
    Journal of Applied Sciences, 5 (6) (2005), pp. 1036-1040
    View PDF
    CrossRef Google Scholar
[58]
    T. Wu
    A modified formula of ancient chinese algorithm by the homotopy continuation technique
    Applied Mathematics and Computation, 165 (2005), pp. 31-35
    Article Download PDF Google Scholar
[59]
    T. Wu
    Solving the nonlinear equations by the newton-homotopy continuation method with adjustable auxiliary homotopy function
    Applied Mathematics and Computation, 173 (2006), pp. 383-388
    Article Download PDF View Record in Scopus Google Scholar
[60]
    T. Wu
    The secant-homotopy continuation method
    Chaos, Solitons & Fractals, 32 (2007), pp. 888-892
    Article Download PDF View Record in Scopus Google Scholar
[61]
    S. Abbasbandy, Y. Tan, S. Liao
    Newton-homotopy analysis method for nonlinear equations
    Applied Mathematics and Computation, 188 (2007), pp. 1794-1800
    Article Download PDF View Record in Scopus Google Scholar
[62]
    L.T. Watson, S.C. Billups, A.P. Morgan
    Algorithm 652: hompack: a suite of codes for globally convergent homotopy algorithms
    ACM Transactions on Mathematical Software (1987), pp. 281-310
    Google Scholar
[63]
    D. Bates, J. Hauenstein, A. Sommese
    Efficient path tracking methods
    Numerical Algorithms, 58 (2011), pp. 451-459
    View PDF
    CrossRef View Record in Scopus Google Scholar
[64]
    E.L. Allgower, K. Georg, Numerical Path Following, Acta Numerica 2 (1993) 1–64.
    Google Scholar
[65]
    E.L. Allgower, K. Georg, Continuation and Path Following, Handbook of Numerical Analysis 5 (1997).
    Google Scholar
[66]
    K.S. Gritton, J. Seader, W.-J. Lin
    Global homotopy continuation procedures for seeking all roots of a nonlinear equation
    Computers & Chemical Engineering, 25 (78) (2001), pp. 1003-1019
    Article Download PDF View Record in Scopus Google Scholar
[67]
    L. Trajkovic, R.-C. Melville, S.-C. Fang, Passivity and no-gain properties establish global convergence of a homotopy method for dc operating points, in: IEEE International Symposium on Circuits and Systems, vol. 2, 1990, pp. 914–917.
    Google Scholar
[68]
    D. Wolf, S. Sanders
    Multiparameter homotopy methods for finding dc operating points of nonlinear circuits
    IEEE Transactions on Circuits and Systems I: Fundamental Theory and Applications, 43 (10) (1996), pp. 824-838
    View Record in Scopus Google Scholar
[69]
    J. Verschelde
    Polynomial homotopy continuation with PHCpack
    ACM Communications in Computer Algebra, 44 (3/4) (2011), pp. 217-220, 10.1145/1940475.1940524
    <http://doi.acm.org.thi.idm.oclc.org/10.1145/1940475.1940524>
    View PDF
    View Record in Scopus Google Scholar
[70]
    D. Bates, J. Hauenstein, A. Sommese, C. Wampler, Bertini: software for numerical algebraic geometry, Available at <http://www.nd.edu/sommese/bertini> .
    Google Scholar
[71]
    T.L. Lee, T.Y. Li, C.H. Tsai
    Hom4ps-2.0: a software package for solving polynomial systems by the polyhedral homotopy continuation method
    Computing, 83 (2–3) (2008), pp. 109-133
    View PDF
    CrossRef View Record in Scopus Google Scholar
[72]
    T.-Y. Li, C.-H. Tsai
    Hom4ps-2.0para: parallelization of hom4ps-2.0 for solving polynomial systems
    Parallel Computing, 35 (4) (2009), pp. 226-238
    Article Download PDF View Record in Scopus Google Scholar
[73]
    A.J. Sommese, C.W. Wampler II
    The Numerical Solution of Systems of Polynomials: Arising in Engineering And Science
    World Scientific Pub Co Inc (2005)
    Google Scholar
[74]
    T. Gunji, S. Kim, M. Kojima, A. Takeda, K. Fujisawa, T. Mizutani
    Phom – a polyhedral homotopy continuation method for polynomial systems
    Computing, 73 (2003), p. 2004
    Google Scholar
[75]
    H. Vazquez-Leal, R. Castaneda-Sheissa, A. Yldrm, Y. Khan, A. Sarmiento-Reyes, V. Jimenez-Fernandez, A. Herrera-May, U. Filobello-Nino, F. Rabago-Bernal, C. Hoyos-Reyes
    Biparameter homotopy-based direct current simulation of multistable circuits
    British Journal of Mathematics & Computer Science, 2 (3) (2012), pp. 137-150
    View Record in Scopus Google Scholar

Cited by (26)

    A diversified group teaching optimization algorithm with segment-based fitness strategy for unmanned aerial vehicle route planning
    2021, Expert Systems with Applications
    Show abstract
    Implementation of optimized dynamic trajectory modification algorithm to avoid obstacles for secure navigation of UAV
    2020, Applied Soft Computing Journal
    Show abstract
    A novel phase angle-encoded fruit fly optimization algorithm with mutation adaptation mechanism applied to UAV path planning
    2018, Applied Soft Computing Journal
    Show abstract
    Bounded curvature path planning with expected length for Dubins vehicle entering target manifold
    2017, Robotics and Autonomous Systems
    Show abstract
    A Novel Collision-Free Path Planning Modeling and Simulation Methodology for Robotical Arms Using Resistive Grids
    2020, Robotica
    Trajectory Consensus for Coordination of Multiple Curvature-Bounded Vehicles
    2022, IEEE Transactions on Cybernetics

View all citing articles on Scopus
View Abstract
Copyright © 2013 Elsevier Inc. All rights reserved.
Recommended articles

    Solvability of second-order Hamiltonian systems with impulses via variational method
    Applied Mathematics and Computation, Volume 219, Issue 14, 2013, pp. 7542-7555
    Download PDF View details
    Parallel computation of real solving bivariate polynomial systems by zero-matching method
    Applied Mathematics and Computation, Volume 219, Issue 14, 2013, pp. 7533-7541
    Download PDF View details
    Delayed static output feedback control of a network of double integrator agents
    Automatica, Volume 49, Issue 11, 2013, pp. 3498-3501
    Download PDF View details

1 2 Next
Article Metrics
Citations

    Citation Indexes: 26 

Captures

    Exports-Saves: 4
    Readers: 20 

plumX logo
View details
Elsevier logo with wordmark

    About ScienceDirect
    Remote access
    Shopping cart
    Advertise
    Contact and support
    Terms and conditions
    Privacy policy 

We use cookies to help provide and enhance our service and tailor content and ads. By continuing you agree to the use of cookies .

Copyright © 2022 Elsevier B.V. or its licensors or contributors. ScienceDirect® is a registered trademark of Elsevier B.V.

ScienceDirect® is a registered trademark of Elsevier B.V.
RELX group home page
