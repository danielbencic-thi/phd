Zotero automatically redirected your request to ieeexplore.ieee.org through the proxy at thi.idm.oclc.org. Don’t Proxy This Site Proxy Settings ✕
IEEE websites place cookies on your device to give you the best user experience. By using our websites, you agree to the placement of these cookies. To learn more, read our Privacy Policy.
Accept & Close

Skip to Main Content

    IEEE.org
    IEEE Xplore
    IEEE SA
    IEEE Spectrum
    More Sites 

        Cart 
        Create Account
        Personal Sign In 

IEEE Xplore logo - Link to home

    Browse
    My Settings
    Help

Access provided by:
Technische Hochschule Ingolstadt
Sign Out
IEEE logo - Link to IEEE main site homepage
ADVANCED SEARCH
Conferences > 2016 IEEE International Sympo...
Fast and robust homotopy path planning method for mobile robotics
Publisher: IEEE
Cite This
PDF
G. Diaz-Arango ; L. Hernandez-Martinez ; A. Sarmiento-Reyes ; H. Vazquez-Leal
All Authors
3
Paper
Citations
229
Full
Text Views

    Alerts

Abstract
Document Sections

    I.
    Introduction
    II.
    Homotopic Continuation Method
    III.
    Obstacles Representation and Homotopy Path Planning Method
    IV.
    Spherical Tracking Algorithm and Non-Convergence to Solution
    V.
    Solving Complex Configuration Maps and Finding a Shortest Path

Show Full Outline
Authors
Figures
References
Citations
Keywords
Metrics
Abstract:
In this paper, we propose a new scheme to find a free-collision path for complex environment maps. This scheme considers the obstacles in the configuration space as prohibited circular areas. Once the obstacles are modelled, the Non-Linear Algebraic Equation System (NAES) is formulated. Next, we apply a Homotopy Path Planning Method (HPPM) to find a set of points that conforms the solution path on the free-space. HPPM uses the Homotopy Continuation Method (HCM) and the Spherical Algorithm (SA) to obtain the solutions of the NAES emanating from the map. In the present work, we propose a scheme for partitioning complex maps into a set of local maps. This is useful for reducing the computation time. Several simulations of complex environment maps with thousands of obstacles are presented. Furthermore, a strategy to obtain the shortest path is applied. Finally, a simulation of the path tracking on Robot Operating System (ROS) for a differential mobile robot is shown.
Published in: 2016 IEEE International Symposium on Circuits and Systems (ISCAS)
Date of Conference: 22-25 May 2016
Date Added to IEEE Xplore : 11 August 2016
ISBN Information:
Electronic ISSN: 2379-447X
INSPEC Accession Number: 16214530
DOI: 10.1109/ISCAS.2016.7539120
Publisher: IEEE
Conference Location: Montreal, QC, Canada
SECTION I.
Introduction

In recent decades, spend attention has been dedicated to solve the path planning issue for mobile robots. The main function of a path planning method is to find collision-free path from an initial position until a goal position is reached. The most common algorithms are based on cell decomposition, artificial potential fields and probabilistic approaches. However, the conditions for proper functionality are different for each application. On one hand, a path is cut off due local minima present in artificial potential fields planning method [1] , [2] . The decomposition cell methods are limited by the resolution of the grid [3] and the probabilistic approach algorithms exhibit a bad performance in narrow maps [4] , [5] . On another approach, path panning methods based on HCM have proved great performance to find a successful path [6] , [7] . These methods model the work space, the obstacles and the robot as a NAES. Subsequently, the equation system is solved applying HCM for finding the set of solutions that constitute the path. In this work we present an efficient path planning method for terrestrial mobile robots. This paper is organized as follows. In Section II , the concepts of the Homotopy Continuation Methods is presented. The Path Planning Method based on HCM and proposed obstacles representation are presented in Section III . In Section IV , the Spherical tracking and the predictor-corrector scheme are briefly explained. The proposed technique to find successful paths for complex maps is presented in Section V . Some simulations for environment maps with thousand obstacles and the tracking by a 3P-DX robot performed in MobileSim software are shown in Section VI . Finally, the conclusions are presented in Section VII .
SECTION II.
Homotopic Continuation Method

Homotopy continuation methods are used to find multiple solutions of NAES of the form:
f ( x ) = 0 : R n → R n , (1)
View Source Right-click on figure for MathML and additional features. \begin{equation*} f(x)=0:\quad \mathbb{R}^{n}\rightarrow \mathbb{R}^{n}, \tag{1} \end{equation*}

HCM creates a continuous perturbation on the original equations system f ( x ) by transforming it into a Homotopic system. In this work we use Newton's Homotopy and represent the system as:
H ( x , λ ) = λ f ( x ) + ( 1 − λ ) ( f ( x ) − f ( x 0 ) ) = 0 , (2)
View Source Right-click on figure for MathML and additional features. \begin{equation*} H(x,\lambda)=\lambda f(x)+(1-\lambda)(f(x)-f(x_{0}))=0, \tag{2} \end{equation*} where λ is the homotopy parameter, x 0 is the starting point, H ( x , λ ) : R n + 1 → R n ,   x ∈ R n . The behaviour of λ is described as:

    If λ = 0 , the homotopy system have a trivial solution H ( f ( x ) , 0 ) = f ( x ) − f ( x 0 ) = 0 .

    If λ = 1 , the homotopy system have the solutions of the original system H ( f ( x ) , 1 ) = f ( x ) = 0 .

During the continuous perturbation from λ = 0 to λ = 1 a sequence of solution points is obtained. This sequence, named Homotopic curve, constitutes the solution path ( γ ) of the NAES [6] , [8] , [9] .
SECTION III.
Obstacles Representation and Homotopy Path Planning Method

HPPM uses the system of equations that model the configuration space and applies Newton's homotopy to convert it into a homotopic system of equations. Next, it applies the SA for proper tracking the homotopic curve. For this system, the curve represents a sequence of points that describes a continuous path from a start point to a goal point while avoiding collisions with obstacles [6] , [7] . The configuration environment is presented as a system of two Non-Linear Algebraic Equations f 1 ( x , y ) = 0 and f 2 ( x , y ) = 0 . For both equations the unique solution lies on the goal point B ( a , b ) [6] , [7] . The configuration space is represented by the equations:
f 2 ( x , y ) f 1 ( x , y ) = L 1 ( x , y ) = 0 , = L 2 ( x , y ) + W ( x , y ) − Q = 0 , (3) (4)
View Source Right-click on figure for MathML and additional features. \begin{align*} &f_{1}(x, y)=L_{1}(x, y)=0,\tag{3}\\ f_{2}(x, y)&=L_{2}(x, y)+W(x, y)-Q=0,\tag{4} \end{align*} where W ( x , y ) represents the obstacles in the map and Q = W ( a , b ) eliminates the effect of the obstacles in the solution point. L 1 and L 2 are two different straight line equations of the form:
L 1 ( x , y ) = − y + m ( x − a ) + b = 0 , (5)
View Source Right-click on figure for MathML and additional features. \begin{equation*} L_{1}(x, y)=-y+m(x-a)+b=0, \tag{5} \end{equation*} where m 1 = − 4 and m 3 = − 1 . These straight lines intersect only at the target point B ( a , b ) as shown in Figure 1a .

Applying Newton's homotopy to equations (3) and (4) , the system is transformed into:
H = { H 1 ( f 1 ( x , y ) , λ ) = f 1 ( x , y ) − ( 1 − λ ) f 1 ( x 0 , y 0 ) = 0 , H 2 ( f 2 ( x , y ) , λ ) = f 2 ( x , y ) − ( 1 − λ ) f 2 ( x 0 , y 0 ) = 0 , (6)
View Source Right-click on figure for MathML and additional features. \begin{equation*} H=\begin{cases} H_{1}(f_{1}(x, y), \lambda)=f_{1}(x, y)-(1-\lambda)f_{1}(x_{0}, y_{0})=0,\\ H_{2}(f_{2}(x, y),\lambda)=f_{2}(x, y)-(1-\lambda)f_{2}(x_{0},y_{0})=0,\end{cases}\tag{6} \end{equation*} where ( x 0 , y 0 ) is the initial point A .

The works [6] , [7] explain that the presence of obstacles in the map produces a set of solution homotopic curves depicted in Figure 1a , which shows the contour of the obstacles in solid line. Besides, γ 0 represents the solution path, D T is the direct path from A to B ,   I H C and E H C represents the internal and external homotopic curves of each obstacle respectively. In this work, we propose the obstacles representation as a circles of the form:
| C i ( x , y ) | + C i ( x , y ) = 0 , (7)
View Source Right-click on figure for MathML and additional features. \begin{equation*} \vert C_{i}(x, y)\vert +C_{i}(x, y)=0, \tag{7} \end{equation*} where ∀ ( x , y ) ∈ R 2 such that ( x − x i ) 2 + ( y − y i ) 2 − − − − − − − − − − − − − − − − √ ≤ r c i i.e. the equation 7 has solution for the all points within the circle. Then, the W ( x , y ) in the equation 4 can be defined by:
W ( x , y ) = ∑ i = 0 i = k − 1 p i | C i ( x , y ) | + C i ( x , y ) , C i ( x , y ) = ( x − x i ) 2 + ( y − y i ) 2 − r c 2 i = 0 , (8) (9)
View Source Right-click on figure for MathML and additional features. \begin{align*} &\quad W(x, y)=\sum\limits_{i=0}^{i=k-1}\frac{p_{i}}{\vert C_{i}(x, y)\vert +C_{i}(x, y)},\tag{8}\\ &C_{i}(x, y)=(x-x_{i})^{2}+(y-y_{i})^{2}-rc_{i}^{2}=0,\tag{9} \end{align*} where the circular shape of each obstacle is defined by C i equation 9 , k is the number of obstacles in the map, p i is the repulsion parameter for the i -th obstacle, r c i is the ratio of the circumference and ( x i , y i ) represents the center of a circular obstacle [6] . Our proposed obstacle representation removes all I H C on the map, as shown in Figure 1b . Using 8, we can represent the obstacles as prohibited areas due that their function is undefined for the points inside of these.

SECTION IV.
Spherical Tracking Algorithm and Non-Convergence to Solution

Previous works have demonstrated the effectiveness of SA for tracking homotopic curves [9] , [10] . The center of initial sphere is set on the point ( x 0 , y 0 ) . Then, the intersection point between the homotopic curve and sphere is calculated. Subsequently in each step the center of a new sphere is placed on the previous intersection point. Figure 2 shows the schematic procedure of the spherical algorithm. As a result, the homotopic system is augmented with the SA:
H S = ⎧ ⎩ ⎨ H 1 ( x , y , λ ) = 0 , H 2 ( x , y , λ ) = 0 , S i ( x , y , λ ) = 0. (10)
View Source Right-click on figure for MathML and additional features. \begin{equation*} H_{S}=\begin{cases} H_{1}(x, y, \lambda)=0,\\ H_{2}(x, y,\lambda)=0,\\ S_{i}(x, y,\lambda)=0. \end{cases} \tag{10} \end{equation*} for three dimensions, the sphere is represent as:
S i ( x , y , λ ) = ( x − c x ) 2 + ( y − c y ) 2 + ( λ − c λ ) 2 − r 2 = 0 , (11)
View Source Right-click on figure for MathML and additional features. \begin{equation*} S_{i}(x, y, \lambda)=(x-c_{x})^{2}+(y-c_{y})^{2}+(\lambda-c_{\lambda})^{2}-r^{2}=0, \tag{11} \end{equation*} where r is the radius and ( c x , c y , c λ ) is the center of the sphere in each spherical tracking step.

Figure 1:

Homotopic paths presents in configuration space map.

Show All
Figure 2:

Spherical tracking for a homotopy curve.

Show All

Predictor-Corrector Scheme

A proper predictor-corrector scheme allows SA to reach a correct homotopy curve. In this work, we use the scheme reported in [7] . Figure 3 shows the point ( x p , y p , λ p ) as a predictor, this represents the intersection between the sphere S i and the tangent vector ( v ⃗  p ) . Once the predictor point is known, then the Newton-Raphson method (N-R)is applied as corrector to find the intersection point ( x i + 1 , y i + 1 , λ i + 1 ) between the homotopy curve and the sphere.
Figure 3:

Predictor-corrector scheme.

Show All

The predictor point is calculated by using the next expression:
( x p , y p , λ p ) = ( c x , c y , c λ ) + r ∥ v ⃗  p ∥ (12)
View Source Right-click on figure for MathML and additional features. \begin{equation*} (x_{p}, y_{p}, \lambda_{p})=(c_{x},c_{y}, c_{\lambda})+r\Vert\vec{v}_{p}\Vert \tag{12} \end{equation*} where, ( c x , c y , c λ ) is the center of the sphere, r is the sphere radius and v p → is the tangent vector [9] . N-R can be recast as:
( x j + 1 , y j + 1 , λ j + 1 ) = ( x j , y j , λ j ) − [ J ( H S ) ) ] − 1 H S , (13)
View Source Right-click on figure for MathML and additional features. \begin{equation*} (x_{j+1},y_{j+1},\lambda_{j+1})=(x_{j},y_{j}, \lambda_{j})-[J(H_{S}))]^{-1}H_{S}, \tag{13} \end{equation*} where j , is the current iteration, ( x j , y j , λ j ) is the point obtained during each iteration, [ J ( x j , y j , λ j ) ] − 1 is the inverse matrix of the Jacobian H S ( x j , y j , λ j ) . The tolerance criterion for N-R method in this work is set as:
∥ H S ( x j + 1 , y j + 1 , λ j + 1 ) ∥ < 1 × 10 − 6 , (14)
View Source Right-click on figure for MathML and additional features. \begin{equation*} \Vert H_{S}(x_{j+1}, y_{j+1},\lambda_{j+1})\Vert < 1\times 10^{-6}, \tag{14} \end{equation*} and the maximum number of iterations is set to j m a x = 20 .

The existence of I H C due to the original obstacle representation produces traps inside the obstacles. When the predictor point is placed within the obstacles edge, the tracking could cycled and not reach the target. On the other hand, for the new representation if the predictor point is placed on the prohibited area, then the SA is truncated due a zero-division present in the equation 8 . Figure 4 show the predictor point that produces spherical tracking failure.
Figure 4:

Predictor point issue.

Show All

SECTION V.
Solving Complex Configuration Maps and Finding a Shortest Path

In the previous work [7] we explain how a set of auxiliary paths ( γ ′ 0 ) can be found by using intermediate points and different obstacle repulsion parameters. Figure 5a shows the auxiliary path for the proposed obstacle representation. This Figure shows the initial point A , goal point C , auxiliary point B and auxiliary paths γ ′ 0 , 1 ,   γ ′ 0 , 2 ,   γ ′ 0 , 3 and γ ′ 0 , 4 . In order to avoid the trivial path that passes along the edges of the map we propose to confine the interest region by using walls. The walls are represented by elliptical approximations 16. The four obstacles are added to 15 and then, the expression is redefined as:
W ( x , y ) = W ( x , y ) + ∑ i = 1 i = 4 p i | R i ( x , y ) | + R i ( x , y ) , R i ( x , y ) = ( x − x i α ) 2 η + ( y − y i β ) 2 η − 1 = 0 , (15) (16)
View Source Right-click on figure for MathML and additional features. \begin{align*} &W(x, y)=W(x, y)+\sum\limits_{i=1}^{i=4}\frac{p_{i}}{\vert R_{i}(x, y)\vert +R_{i}(x, y)},\tag{15}\\ &R_{i}(x, y)=\left(\frac{x-x_{i}}{\alpha}\right)^{2\eta}+\left(\frac{y-y_{i}}{\beta}\right)^{2\eta}-1=0,\tag{16} \end{align*} where α is the width, β is the height, η defines the corners, p i is the repulsion parameter and ( x i , y i ) is the center for each wall [6] . Only the obstacles within the interest area are considered. The repulsion parameter for walls and circular obstacles in the edges automatically chosen such that the path is forced to stay inside, as shown in Figure 5b .

Figure 5:

Strategies to solve a complex environment map.

Show All

In this work, we proposed an automatically procedure to chose the auxiliary points by using N-R to solve the NAES that represent the free-space 17 and the direct path 18. The initial conditions of the NR are a set of points of the direct psth uniformly separated.
F S = ∑ i = 0 i = k − 1 | C i ( x , y ) | − C i ( x , y ) , D T = − y + ( b − y 0 a − x 0 ) ( x − x 0 ) + y 0 , (17) (18)
View Source Right-click on figure for MathML and additional features. \begin{align*} &\quad FS=\sum\limits_{i=0}^{i=k-1}\vert C_{i}(x, y)\vert-C_{i}(x, y),\tag{17}\\ &DT=-y+\left(\frac{b-y_{0}}{a-x_{0}}\right)(x-x_{0})+y_{0},\tag{18} \end{align*} where ( x 0 , y 0 ) is the initial point and ( a , b ) is the goal point. A set of auxiliary, goal and initial points are depicted in Figure 5c . We apply a similar scheme as a the reported in [7] and a local confined maps scheme for generated a set of auxiliary paths for complex environments. Subsequently, the shortest path is built using a combination of the shortest auxiliary paths. Figure 6a shows a complex map with 2000 obstacles and Figure 6b presents the corresponding sectioned map, where the interest obstacles are denoted in blue and the irrelevant in red.

Figure 6:

Scheme for solve 2-D complex environment maps.

Show All

SECTION VI.
Experiments

The efficiency of the proposed scheme is validated using a series of simulations for full complex maps and for a one sectioned map. Subsequently, one example of successful path is applied to a virtual Model of a P3-DX robot on ROS. All simulations presented in this work, were performed on C++ using a double precision data on a PC with Intel Core i 5 at 2.5 GHz and 6GB of RAM.
A. Successful Path for Maps with 200 and 2000 Obstacles

We consider two study cases one with 200 obstacles and another with 2000 obstacles. For both cases, initial and the target points are set at (0, 0) and (1, 1) respectively. In order to avoid the trivial path, the maps are confined in the normalized space using four rectangular obstacles. Figures 7a and 7b show four successful paths for each configuration. The computation time and length of each path are presented in Table I .
Table I: Computation time and length in normalized units for four successful path of two environment maps.
Figure 7:

Successful paths for two different environment maps.

Show All

B. Shortest Path

Figure 8a shows unsuccessful auxiliary paths can be observed for the strategy reported in [7] due the complexity of the map. For the same configuration, the proposed scheme of this work reaches to goal point successful, as shown in Figure 8b . Figure 8c shows a shortest and auxiliary paths for another configuration of initial and goal points for map with 2000 obstacles.
Figure 8:

Complex environment map with 2000 obstacles solved by sectioned strategy.

Show All
Table II: Comparative of a proposed approach and the scheme reported in [7].

It shows a decrease of 26385 ms for path planning of the Figures 8b and path 2 in 7b i.e. the computation time is reduced 67.93 per cent. In similar way, the length decreased 26.2 per cent.
C. ROS Simulations

In this paper, we show the effective tracking of the obtained paths using MobileSim and ROS. In this case study, we use the package of the differential-drive mobile robot Pioneer 3P-DX. Figure 9b shows the simulation on ROS for a mobile robot 3P-DX developed on a square map of 40 meters per side.
Figure 9:

Scheme for solve 2-D maps with many obstacles.

Show All

SECTION VII.
Conclusions

In this work, a modified strategy to solve complex environment maps is proposed. In same way, we proposed a scheme for reducing the complexity of maps with many obstacles by using local maps. Additionally, this approach is used to find the shortest path and to reduce the computing time. The experiments prove that the proposed scheme for HPPM is appropriate to find a successful path in complex configuration maps with thousand obstacles. The ROS simulation verified the advantages of HPPM for applications in real robots. Finally, the computing times in Tables I and II show that the proposed scheme for solving complex maps reduces the calculation time by approximately 60 percent.

Authors
Figures
References
Citations
Keywords
Metrics
More Like This
Hybrid Learning Approach for the Collision Avoidance Behavior of a Mobile Robot

2006 International Conference on Mechatronics and Automation

Published: 2006
Application of Fuzzy Logic for Collision Avoidance of Mobile Robots in Dynamic-Indoor Environments

2021 2nd International Conference on Robotics, Electrical and Signal Processing Techniques (ICREST)

Published: 2021
Show More
References
1.
M. C. Lee and M. G. Park, "Artificial potential field based path planning for mobile robots using a virtual obstacle concept", Advanced Intelligent Mechatronics IEEE/ASME International Conference , vol. 2, pp. 735-740, 2003.
Show in Context Google Scholar
2.
M. A. P. Castañeda, J. Savage, A. Hernández and F. A. Cosío, "Local autonomous robot navigation using potential fields" in Motion Planning, InTech, 2008.
Show in Context Google Scholar
3.
H. dong Zhang, B. hua Dong, Y. wan Cen, R. Zheng, S. Hashimoto and R. Saegusa, "Path planning algorithm for mobile robot based on path grids encoding novel mechanism", Natural Computation 2007. ICNC 2007. Third International Conference on , vol. 4, pp. 351-356, Aug 2007.
Show in Context CrossRef Google Scholar
4.
C. bae Moon and W. Chung, "Kinodynamic planner dual-tree rrt (dt-rrt) for two-wheeled mobile robots using the rapidly exploring random tree", Industrial Electronics IEEE Transactions on , vol. 62, pp. 1080-1090, Feb 2015.
Show in Context View Article
Google Scholar
5.
M. Elbanhawi and M. Simic, "Sampling-based robot motion planning: A review", Access IEEE , vol. 2, pp. 56-77, 2014.
Show in Context View Article
Google Scholar
6.
H. Vazquez-Leal, A. Marin-Hernandez, Y. Khan, A. Yildirim, U. Filobello-Nino, R. Castaneda-Sheissa, et al., "Exploring collision-free path planning by using homotopy continuation methods", Applied Mathematics and Computation , vol. 219, pp. 7514-7532, 2013.
Show in Context CrossRef Google Scholar
7.
G. Diaz-Arango, A. Sarmiento-Reyes, L. Hemandez-Martinez, H. Vazquez-Leal, D. Lopez-Hernandez and A. Marin-Hernandez, "Path optimization for terrestrial robots using homotopy path planning method", Circuits and Systems (ISCAS) 2015 IEEE International Symposium on , pp. 2824-2827, May 2015.
Show in Context View Article
Google Scholar
8.
T. L. Wayburn and J. D. Seader, "Homotopy continuation methots for computer-aided process design", Computers and Chemical Engineering , vol. 11, pp. 7-25, 1987.
Show in Context CrossRef Google Scholar
9.
J. M. Oliveros-Munoz and H. Jiménez-Islas, "Hyperspherical path tracking methodology as correction step in homotopic continuation methods", Chemical Engineering Science , vol. 97, pp. 413-429, 2013.
Show in Context CrossRef Google Scholar
10.
Y. K., "Simple algorithms for tracing solution curves", IEEE International Symposium on Circuits and Systems , vol. 6, pp. 2801-2804, 1992.
Show in Context Google Scholar
IEEE Personal Account

    Change username/password 

Purchase Details

    Payment Options
    View Purchased Documents 

Profile Information

    Communications Preferences
    Profession and Education
    Technical interests 

Need Help?

    US & Canada: +1 800 678 4333
    Worldwide: +1 732 981 0060
    Contact & Support 

Follow

About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | Privacy & Opting Out of Cookies

A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity.

© Copyright 2022 IEEE - All rights reserved.
