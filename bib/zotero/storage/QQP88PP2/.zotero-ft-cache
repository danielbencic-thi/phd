2014 IEEE International Conference on Robotics & Automation (ICRA) Hong Kong Convention and Exhibition Center May 31 - June 7, 2014. Hong Kong, China

Multi-Sensor Fusion for Robust Autonomous Flight in Indoor and Outdoor Environments with a Rotorcraft MAV

Shaojie Shen, Yash Mulgaonkar, Nathan Michael, and Vijay Kumar

Abstract— We present a modular and extensible approach to integrate noisy measurements from multiple heterogeneous sensors that yield either absolute or relative observations at different and varying time intervals, and to provide smooth and globally consistent estimates of position in real time for autonomous ﬂight. We describe the development of algorithms and software architecture for a new 1.9 kg MAV platform equipped with an IMU, laser scanner, stereo cameras, pressure altimeter, magnetometer, and a GPS receiver, in which the state estimation and control are performed onboard on an Intel NUC 3rd generation i3 processor. We illustrate the robustness of our framework in large-scale, indoor-outdoor autonomous aerial navigation experiments involving traversals of over 440 meters at average speeds of 1.5 m/s with winds around 10 mph while entering and exiting buildings.

Fig. 1. Our 1.9 kg MAV platform equipped with an IMU, laser scanner,
stereo cameras, pressure altimeter, magnetometer, and GPS receiver. All the computation is performed onboard on an Intel NUC computer with 3rd
generation i3 processor.

I. INTRODUCTION
Rotorcraft micro aerial vehicles (MAVs) are ideal platforms for surveillance and search and rescue in conﬁned indoor and outdoor environments due to their small size, superior mobility, and hover capability. In such missions, it is essential that the MAV is capable of autonomous ﬂight to minimize operator workload. Robust state estimation is critical to autonomous ﬂight especially because of the inherently fast dynamics of MAVs. Due to cost and payload constraints, most MAVs are equipped with low cost proprioceptive sensors (e.g. MEMS IMUs) that are incapable for long term state estimation. As such, exteroceptive sensors, such as GPS, cameras, and laser scanners, are usually fused with proprioceptive sensors to improve estimation accuracy.
Besides the well-developed GPS-based navigation technology [1, 2]. There is recent literature on robust state estimation for autonomous ﬂight in GPS-denied environments using laser scanners [3, 4], monocular camera [5, 6], stereo cameras [7, 8], and RGB-D sensors [9]. However, all these approaches rely on a single exteroceptive sensing modality that is only functional under certain environment conditions. For example, laser-based approaches require structured environments, vision based approaches demand sufﬁcient lighting and features, and GPS only works outdoors. This makes them prone to failure in large-scale environments involving indooroutdoor transitions, in which the environment can change
S. Shen, Y. Mulgaonkar, and V. Kumar are with the GRASP Laboratory, University of Pennsylvania, Philadelphia, PA 19104, USA. {shaojie, yashm, kumar}@grasp.upenn.edu
N. Michael is with the Robotics Institute, Carnegie Mellon University, Pittsburgh, PA 15213, USA. nmichael@cmu.edu
We gratefully acknowledge the support of AFOSR Grant FA9550-10-10567, ARL grant W911NF-08-2-0004, ONR grants N00014-07-1-0829 and N00014-09-1-1051, NSF grants PFI-1113830 and CNS-1138110, and the UPS Foundation.

signiﬁcantly. It is clear that in such scenarios, multiple measurements from GPS, cameras, and lasers may be available, and the fusion of all these measurements yields increased estimator accuracy and robustness. In practice, however, this extra information is either ignored or handled as switching between sensor suites [10].
The main goal of this work is to develop a modular and extensible approach to integrate noisy measurements from multiple heterogeneous sensors that yield either absolute or relative observations at different and varying time intervals, and to provide smooth and globally consistent estimates of position in real time for autonomous ﬂight. The ﬁrst key contribution, that is central to our work, is a principled approach, building on [11], to fusing relative measurements by augmenting the vehicle state with copies of previous states to create an augmented state vector for which consistent estimates are obtained and maintained using a ﬁltering framework. A second signiﬁcant contribution is our Unscented Kalman Filter (UKF) formulation in which the propagation and update steps circumvent the difﬁculties that result from the semi-deﬁniteness of the covariance matrix for the augmented state. Finally, we demonstrate results with a new experimental platform (Fig. 1) to illustrate the robustness of our framework in large-scale, indoor-outdoor autonomous aerial navigation experiments involving traversals of over 440 meters at average speeds of 1.5 m/s with winds around 10 mph while entering and exiting two buildings.
Next, we present previous work on which our work is based. In Section III, we outline the modeling framework before presenting the key contributions of UKF-based sensor fusion scheme in Section IV. We bring all the ideas together in our description of the experimental platform and the experimental results in Section VI.

978-1-4799-3685-4/14/$31.00 ©2014 IEEE

4974

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on April 20,2022 at 11:36:19 UTC from IEEE Xplore. Restrictions apply.

II. PREVIOUS WORK
We are interested in applying constant computation complexity ﬁltering-based approaches, such as nonlinear variants of the Kalman ﬁlter, to fuse all available sensor information. We stress that although SLAM-based multi-sensor fusion approaches [12, 13] yield optimal results, they are computationally expensive for real-time state feedback for the purpose of autonomous control.
While it is straightforward to fuse multiple absolute measurements such as GPS, pressure/laser altimeter in a recursive ﬁltering formulation, the fusion of multiple relative measurements obtained from laser or visual odometry are more involved. It is common to accumulate the relative measurements with the previous state estimates fuse them as pseudo-absolute measurements [5, 14]. However, such fusion is sub-optimal since the resulting global position and yaw covariance is inconsistently small compared to the actual estimation error. This violates the observability properties [6], which suggests that such global quantities are in fact unobservable. As such, we develop our method based on state augmentation techniques [11] to properly account for the state uncertainty when applying multiple relative measurements from multiple sensors.
We aim to develop a modular framework that allows easy addition and removal of sensors with minimum coding and mathematical derivation. We note that in the popular EKFbased formulation [5, 8], the computation of Jacobians can be problematic for complex systems like MAVs. As such, we employ a loosely coupled, derivative-free Unscented Kalman Filter (UKF) framework [1]. Switching from EKF to UKF poses several challenges, which will be detailed and addressed in Sect. IV-A. [15] is similar to our work. However, the EKF-based estimator in [15] does not support fusion of multiple relative measurements.
III. MULTI-SENSOR SYSTEM MODEL
We deﬁne vectors in the world and body frames as (·)w and (·)b respectively. For the sake of brevity, we assume that all onboard sensors are calibrated and are attached to the body frame. The main states of the MAV is deﬁned as:
x = pw, Φw, p˙ b, bba, bbω, bwz T
where pw = [xw, yw, zw] T is the 3D position in the world frame, Φw = [ψw, θw, φw] T is the yaw, pitch, and roll Euler angles that represent the 3-D orientation of the body in the world frame 1, from which a matrix Rwb that represent the rotation of a vector from the body frame to the world frame can be obtained. p˙ b is the 3D velocity in the body frame. bba and bbω are the bias of the accelerometer and gyroscope, both expressed in the body frame. bwz models the bias of the laser and/or pressure altimeter in the world frame.
1It is straightforward to formulate the ﬁlter with quaternion-based rotation representation [8, 15], We present the direct formulation for the brevity of presentation in Sect. IV.

We consider an IMU-based state propagation model:

ut = ab, ωb T

vt = [va, vω, vba , vbω , vbz ] T

(1)

xt+1 = f (xt, ut, vt)

where u is the measurement of linear accelerations and angular velocities from the IMU in the body frame. vt ∼ N (0, Dt) ∈ Rm is the process noise. va and vω represent additive noise associated with the gyroscope and the accelerometer. vba ,vbω , vbz model the Gaussian random walk of the gyroscope, accelerometer and altimeter bias. The function f (·) is a discretized version of the continuous time dynamical equation [6].
Exteroceptive sensors are usually used to correct the errors in the state propagation. Following [11], we consider measurements as either being absolute or relative, depending on the nature of the underlying sensor. We allow an arbitrary number of either absolute or relative measurement models.

A. Absolute Measurements All absolute measurements can be modeled in the form:

zt+m = ha(xt+m, nt+m)

(2)

where nt+m ∼ N (0, Qt) ∈ Rp is the measurement noise that can be either additive or not. ha(·) is in general a nonlinear function. An absolute measurement connects the current state with the sensor output. Examples are shown in in Sect. V-B.

B. Relative Measurements
A relative measurement connects the current and the past states with the sensor output, which can be written as:

zt+m = hr(xt+m, xt, nt+m)

(3)

The formulation accurately models the nature of odometrylike algorithms (Sect. V-C and Sect. V-D) as odometry measures the incremental changes between two time instants of the state. We also note that, in order to avoid temporal drifting, most state-of-the-art laser/visual odometry algorithms are keyframe based. As such, we allow multiple future measurement (m ∈ M, |M| > 1) that corresponds to the same past state xt.

IV. UKF-BASED MULTI-SENSOR FUSION
We wish to design a modular sensor-fusion ﬁlter that is easily extensible even for inexperienced users. This means that amount of coding and mathematical deviation for the addition/removal of sensors should be minimal. One disadvantage of the popular EKF-based ﬁltering framework is the requirement of computing the Jacobian matrices, which is proven to be difﬁcult and time consuming for a complex MAV system. As such, we employ the derivative-free UKFbased approach [1]. The key of UKF is the approximation of the propagation of Gaussian random vectors through nonlinear functions via the propagation of sigma points. Let x ∼ N (xˆ, Pxx) ∈ Rn and consider the nonlinear function:

y = g(x),

(4)

4975

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on April 20,2022 at 11:36:19 UTC from IEEE Xplore. Restrictions apply.

and let:

X = xˆ, xˆ ± Yi = g(Xi),

(n + λ)Pxx for i = 1, ..., n

i

(5)

where g(·) is a nonlinear function, λ is a UKF parameter.
(n + λ)Pxx is the ith column of the square root
i
covariance matrix, which is usually computed via Cholesky decomposition. And X are called the sigma points. The mean, covariance of the random vector y, and the crosscovariance between x and y, can be approximated as:

2n

yˆ = wimYi

i=0

2n

Pyy = wic(Yi − yˆ)(Yi − yˆ)T

(6)

i=0

2n

Pyx = wic(Yi − yˆ)(Xi − xˆ)T

i=0

where wim and wic are weights for the sigma points. This unscented transform can be used to keep track of the covariance in both the state propagation and measurement update, thus avoiding the need of a Jacobian-based covariance approximation.

Similarly, the removal of an augmented state xj is given as:

xˇ− = M−xˇ,

M− =

Ia 0b×n

0a×nj 0b×nj

0a×b Ib

,

where a = n +

j−1 i=1

ni

and

b

=

I i=j+1

ni.

The

updated

augmented state covariance is given as:

Pˇ ± = M±Pˇ M±T.

The change of keyframes in an odometry-like measurement model is simply the removal of an augmented state xi followed by the addition of another augmented state with the same Bi. Since we allow multiple relative measurements that correspond to the same augmented state, contrast to [11], augmented states are not deleted after measurement updates (Sect. IV-D).
This state augmentation formulation works well in an EKF setting, however, it poses issues when we try to apply it to the UKF. Since the addition of a new augmented state (8) is essentially a copy of the main state. The resulting covariance matrix Pˇ + will not be positive deﬁnite, and the Cholesky decomposition (5) for state propagation will fail (non-unique). We now wish to have something that is similar to the Jacobian matrices for EKF, but without explicitly computing the Jacobians.

A. State Augmentation for Multiple Relative Measurements
Since a relative measurement depends both the current and past states, it is a violation of the fundamental assumption in the Kalman ﬁlter that the measurement should only depend on the current state. One way to deal with this is through state augmentation [11], where a copy of the past state is maintained in the ﬁlter. Here we present an extension of [11] to handle arbitrary number of relative measurement models with the possiblity that multiple measurements correspond to the same augmented state. Our generic ﬁltering framework allows convenient setup, and facilitates addition and removal of absolute and relative measurement models.
Note that a measurement may not affect all components in the state x. For example, a visual odometry only affects the 6-DOF pose, not the velocity or the bias terms. We deﬁne the ith augmented state as xi ∈ Rni , ni ≤ n. xi is an arbitrary subset of x. We deﬁne a binary selection matrix Bi of size ni ×n, such that xi = Bix. Consider a time instant, there are I augmented states in the ﬁlter, along with the covariance:

xˇ = [xˆ, xˆ1, ..., xˆI ] T

 Pxx Pxx1 · · · PxxI 

Px1x Px1x1 · · · Px1xI 

Pˇ =   

...

...

...

...

.  

(7)

PxI x PxI x1 · · · PxI xI

The addition of a new augmented state xI+1 can be done by:

xˇ+ = M+xˇ,

M+ =

In+ I ni BI +1

(8)

B. Jacobians for UKF

In [16], the authors present a new interpretation of the UKF as a Linear Regression Kalman Filter (LRKF). In LRKF, we seek to ﬁnd the optimal linear approximation y = Ax + b + e of the nonlinear function (4) given a weighted discrete (or sigma points (6)) representation of the distribution N (xˆ, Pxx). The objective is to ﬁnd the regression matrix A and vector b that minimize the linearizion error e:

2n
min wi(Yi − AXi − b)(Yi − AXi − b)T.
A,b i=0

As shown in [16], the optimal linear regression is given by:

A = PyxPxx−1 , b = yˆ − Axˆ

(9)

The linear regression matrix A in (9) serves as the linear approximation of the nonlinear fuction (4). It is similar to the Jacobian in the EKF formulation. As such, the propagation and update steps in UKF can be performed in a similar fashion as EKF.

C. State Propagation

Observing the fact that during state propagation only the main state changes, we start off by partitioning the augmented state and the covariance (7) into:

xˇt|t =

xˆt|t xˆ It|t

,

Pˇ t|t =

Pxt|xt Ptx|It x

Pxt|xt I Ptx|It xI

.

4976

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on April 20,2022 at 11:36:19 UTC from IEEE Xplore. Restrictions apply.

The linear approximation of the nonlinear state propagation (1), applied on the augmented state (7), is:

xˇt+1|t = f (xˇt|t, ut, vt)

=

Ft 0

0 I|I|

xˇt|t +

Jt 0

Gt 0

ut vt

+ bt + et,

(10)

propagation as in (5) and (6). We obtain zˆt+m|t, Pzt+z m|t, Ptz+x`m|t, and:
Ptz+x`m|tP` −t+1m|t = Hxt+m|t, Hxt+j m|t, Lt+m .
We can apply the measurement update similar to an EKF:

from which we can see that the propagation of the full aug-
mented state is actually unnecessary since the only nontrivial
regression matrix corresponds to the main state. We can propagate only the main state x via sigma points generated from Pxt|xt and use the UKF Jacobian Ft to update the crosscovariance Pxt|xt I . Since the covariance matrix of the main state Pxt|xt is always positive deﬁnite, we avoid the Cholesky decomposition failure problem.

Kˇ t+m = Pˇ t+m|tHt+m|tTPzt+z−m1|t xˇt+m|t+m = xˇt+m|t + Kˇ t+m zt+m − zˆt+m|t Pˇ t+m|t+m = Pˇ t+m|t − Kˇ t+mHt+m|tPˇ t+m|t,
where zt+m is the actual sensor measurement. Both the main and augmented states will be corrected during measurement update. We note that entries in Ht+m|t that correspond to inactive augmented states are zero. This can be utilized to

Since the process noise is not additive, we augment the speed up the matrix multiplication.

main state with the process noise and generate sigma points The fusion of absolute measurements can simply be done

from:

x¯t|t =

xˆt|t 0

,

P¯ t|t =

Pxt|xt 0

0 .
Dt

by setting xˆjt+m|t = ø and applying the corresponding (11) absolute measurement model (2).
As shown in Fig. 9, fusion of multiple relative measure-

The state is then propagated forward by substituting (11) into (1), (5) and (6). We obtain xˆt+1|t, the estimated value of x at time t + 1 given the measurements up to t, as well

ments results in slow growing, but unbounded covariance in the global position and yaw. This is consistent with results in [6] that these global quantities are unobservable.

as Pxt+x1|t and Pxt+x¯1|t. Following (9), we know that:

E. Delayed, Out-of-Order Measurement Update

Pxt+x¯1|tP¯ −t|t1 = [Ft, Gt] .

When fusing multiple measurements, it is possible that the measurements arrive out-of-order to the ﬁlter, that is,

The propagated augmented state and its covariance is updated according to (10):

xˇt+1|t =

xˆt+1|t xˆ It|t

,

Pˇ t+1|t =

Pxt+x1|t Pxt|It xFtT

FtPxt|xt I Pxt|It xI

.

(12)

a measurement that corresponds to an earlier state arrives after the measurement that corresponds to a later state. This violates the Markov assumption of the Kalman ﬁlter. Also, due to the sensor processing delay, measurements may lag behind the state propagation.
We address these two issues by storing measurements in a priority queue, where the top of the queue corresponds to

D. Measurement Update

the oldest measurement. A pre-deﬁned a maximum allowable

Let there be m state propagations between two measurements, and we maintain xˇt+m|t and Pˇ t+m|t as the newest measurement arrives. Consider a relative measurement (3) that depends on the jth augmented state, the measurement prediction and its linear regression approximation can be written as:
zˆt+m|t = hr(xˆt+m|t, Bj Txˆjt+m|t , nt+m)

sensor delay td of 100 ms was set for our MAV platform. Newly arrived measurements that correspond to a state older than td from the current state (generated by state propagation) are directly discarded. After each state propagation, we check the queue and process all measurements in the queue that are older than td. The priority queue essentially serves as a measurement reordering mechanism (Fig. 2) for all measurements that are not older than td from the current

= Ht+m|txˇt+m|t + Lt+mnt+m + bt+m + et+m Ht+m|t = Hxt+m|t, 0, Hxt+j m|t, 0 .

state. In the ﬁlter, we always utilize the most recent IMU measurement to propagate the state forward. We, however, only propagate the covariance on demand. As illustrated in

Again, since only the main state and one augmented state Fig. 2, the covariance is only propagated from the time of are involved in each measurement update, we can construct the last measurement to the current measurement.

another augmented state together with the possibly non- F. An Alternative Way for Handling Global Pose Measure-

additive measurement noise:

ments

xˆt+m|t 

Pxt+xm|t

x`t+m|t = xˆjt+m|t  , P` t+m|t = Pxt+j xm|t

Pxt+xmj |t Ptx+j xmj|t

0  As the vehicle moves through the environment, global 0  . pose measurements from GPS and magnetometer may be

0

0

0 Qt+m available. It is straightforward to fuse the GPS as a global

pose measurement and generate the optimal state estimate.

After the state propagation (12), P` t+m|t is guaranteed to However, this may not be the best for real-world applications.

be positive deﬁnite, thus it is safe to perform sigma point A vehicle that operates in a GPS-denied environment may

4977

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on April 20,2022 at 11:36:19 UTC from IEEE Xplore. Restrictions apply.

Update Sequence 𝐳2

Priority Queue, t𝑑=3 𝐳3 𝐳4

Arrival Sequence 𝐳4 𝐳1 𝐳2 𝐳3

𝐱1

𝐱2

𝐱3

𝐱4

𝐱5

State Propagation Covariance Propagation Measurement Update

Fig. 2. Delayed, out-of-order measurement with priority queue. While z4 arrives before z2, z2 is ﬁrst applied to the ﬁlter. z4 is temporary stored in the queue. z1 is discarded since it is older than td from the current state. The covariance is only propagated up to time where the most recent
measurement is applied to the ﬁlter. The state is propagated till the most
recent IMU input.

𝐬2
𝐬1 𝐳5

𝐬3 𝐬4
𝐬5

𝐬2+

𝐬3+

𝐬1+ 𝐳5 𝐬5+

𝐬4+

(a)

(b)

Fig. 3. In Fig. 3(a), GPS signal is regained at k = 5, resulting in large discrepancies between the measurement z5 and the state s5. Pose graph SLAM produces a globally consistent graph (Fig. 3(b)).

suffer from accumulated drift. When the vehicle gains GPS signal, as illustrated in Fig. 3(a), there maybe large discrepancies between the GPS measurement and the estimated state (z5 − s5). Directly applying GPS as global measurements will result in undesirable behaviors in both estimation (large linearizion error) and control (sudden pose change).
This is not a new problem and it has been studied for ground vehicles [17] under the term of local frame-based navigation. However, [17] assumes that a reasonably accurate local estimate of the vehicle is always available (e.g. wheel odometry). This is not the case for MAVs since the state estimates with only the onboard IMUs drifts away vastly within a few seconds. The major difference between dead reckoning with IMU and wheel odometry is that the former drifts temporally, while the latter only drifts spatially. However, we have relative exteroceptive sensors that are able to produce temporally drift-free estimates. As such, we only need to deal with the case that all relative exteroceptive sensors have failed. Therefore, our goal is to properly transform the global GPS measurement into the local frame to bridge the gap between relative sensor failures.
Consider a pose-only graph SLAM formulation with sk = [xwk , ykw, ψkw] T ∈ Θ being 2D poses. The SLAM module may run at a much lower rate than the UKF-based estimator. We optimize the pose graph given incremental motion constraints dk from laser/visual odometry, spatial loop closure constraints lk, and absolute pose constraints zk from GPS:

M

min
Θ

hi(sk−1, dk) − sk Pdk

k=1

L

N

+

hl(sk, lk) − sl(k) Plk +

zk − sk Pzk .

k=1

k=1

The optimal pose graph conﬁguration can be found with available solvers [18], as shown in Fig. 3(b). The pose graph is disconnected if there are no relative exteroceptive measurements between two nodes. Let two pose graphs be disconnected between k − 1 and k.
The pose graph SLAM provides the transformation between the non-optimized sk−1 and the SLAM-optimized s+k−1 state. This transform can be utilized to transform the

𝐬2 𝐬1 𝐬7
𝐬6 𝐳6−
(a)

𝐬3
𝐬4 𝐬5 𝐳5−

𝐬7+

𝐬2+

𝐬3+

𝐬1+ 𝐳5 𝐬5+

𝐬4+

𝐳6 𝐬6+

(b)

Fig. 4. Fig. 4(a) illustrates the alternative GPS fusion, the discrepancy
between transformed GPS measurement z5 and the non-optimized state s5 is minimized. Fusion of such indirect GPS measurement will lead to smooth
state estimate (green dashed line).

global GPS measurement to be aligned with sk−1:
∆t−1 = sk−1 s+k−1 z−k−1 = ∆t−1 ⊕ zk−1,
where ⊕ and are pose compound operations as deﬁned in [19]. The covariance P∆t−1 of ∆t−1 and subsequently the covariance Pzt−−1 of z−k−1 can be computed following [19]. This formulation minimizes the discrepancies between z−k−1 and sk−1, and thus maintains smoothness in the state estimate. The transformed GPS z−k−1, is still applied as an absolute measurement to the UKF (Fig. 4(a)).
However, despite the large scale in our ﬁeld experiments (Sect. VI), we hardly ﬁnd a case where the accumulated drift is large enough to cause issues with direct GPS fusion. In the future, we will seek for even larger scale experiments to verify the necessity of the above local frame-based approach.
V. IMPLEMENTATION DETAILS
A. Experimental Platform
The experimental platform shown in Fig. 1 is based on the Pelican quadrotor from Ascending Technologies, GmbH2. This platform is natively equipped with an AutoPilot board consisting of an IMU and a user-programmable ARM7 microcontroller. The main computation unit onboard is an Intel NUC with a 1.8 GHz Core i3 processor with 8 GB of RAM and a 120 GB SSD. The sensor suite includes a ublox LEA-6T GPS module, a Hokuyo UTM-30LX LiDAR and two mvBlueFOX-MLC200w grayscale HDR cameras
2Ascending Technologies, GmbH, http://www.asctec.de/

4978

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on April 20,2022 at 11:36:19 UTC from IEEE Xplore. Restrictions apply.

with ﬁsheye lenses that capture 752 × 480 images at 25 Hz. We use hardware triggering for frame synchronization. The onboard auto exposure controller is ﬁne tuned to enable fast adaption during rapid light condition changes. A 3-D printed laser housing redirects some of the laser beams for altitude measurement. The total mass of the platform is 1.87kg. The entire algorithm is developed in C++ using ROS3 as the interfacing robotics middleware.

B. Absolute Measurements

Some onboard sensors are capable of producing absolute measurements (Sect. III-A), here are their details:
1) GPS And Magnetometer:

 xwt

 ytw

zt

=

 Rwb



x˙ bt y˙tb

ψtw





 

+

nt.





2) Laser/Pressure Altimeter:

zt = ztw + bwzt + nt.

3) Pseudo Gravity Vector: If the MAVs is near hover or moving at approximately constant speed, we may say that the accelerometer output provides a pseudo measurement of the gravity vector. Let g = [0, 0, g] T, we have:

zt = Rwb Tgw + bbat + nt.

C. Relative Measurement - Laser-Based Odometry

We utilize the laser-based odometry that we developed in our earlier work [4]. Observing that man-made indoor environments mostly contains vertical walls, we can make a 2.5-D environment assumption. With this assumption, we can make use of the onboard roll and pitch estimates to project the laser scanner onto a common ground plane. As such, 2D scan matching can be utilized to estimate the incremental horizontal motion of the vehicle. We keep a local map to avoid drifting while hovering.

zt+m =

xwt 

xwt+m 

2d ytw  ⊕2d ytw+m  + nt+m,

ψtw

ψtw+m

where p2dt = [xwt , ytw, ψtw] T, ⊕2d and 2d are the 2-D pose compound operations as deﬁned in [19].

D. Relative Measurement - Visual Odometry
We implemented a classic keyframe-based visual odometry algorithm. Keyframe-based approaches have the beneﬁt of being temporally drift-free. We choose to use light-weight corner features but run the algorithm at a high-rate (25 Hz). Features are tracked across images via KLT tracker. Given a keyframe with a set of triangulated feature points, we run a robust iterative 2D-3D pose estimation [8] to estimate the 6DOF motion of the vehicle with respect to the keyframe. New

3Robot Operating System, http://www.ros.org/

X (m)

Y (m)

Vx (m/s)

Onboard

Onboard

5

Vicon

5

Vicon

0

0

−5

20

40

60

80

100

Time (sec)

2

0

−2

−4

20

40

60

80

100

Time (sec)

4

2

0

−2

20

40

60

80

100

Time (sec)

Vz (m/s)

Vy (m/s)

−5

20

40

60

80

100

Time (sec)

2

0

−2

−4

20

40

60

80

100

Time (sec)

2

0

−2

20

40

60

80

100

Time (sec)

(a) Position

(b) Velocity

Z (m)

Fig. 5. The MAV maneuvers aggressively with a maximum speed of 3.5 m/s (Fig. 5(b)). The horizontal position also compares well with the ground truth with slight drift (Fig. 5(a)).

keyframes are inserted depending on the distance traveled and the current number of valid 3D points.

zt+m =

pwt Φwt

⊕

pwt+m Φwt+m

+ nt+m

E. Feedback Control

To achieve stable ﬂight across different environments with possibly large orientation changes, we choose to use a position tracking controller with a nonlinear error metric [20]. The 100 Hz ﬁlter output (Sect. IV) is used directly as the feedback for the controller. In our implementation, the attitude controller runs at 1 kHz on the ARM processor on the MAV’s AutoPilot board, while the position tracking control operates at 100 Hz on the main computer. We implemented both setpoint trajectory tracking and velocity control to allow ﬂexible operations.

VI. EXPERIMENTAL RESULTS
Multiple experiments are conducted to demonstrate the robustness of our system. We begin with an quantitative evaluation in a lab environment equipped with a motion capture systems. We then test our system in two realworld autonomous ﬂight experiments, including an industrial complex and a tree-lined campus.

A. Evaluation of Estimator Performance
We would like to push the limits of our onboard estimator. Therefore, we have a professional pilot to aggressively ﬂy the quadrotor with a 3.5 m/s maximum speed and large attitude of up to 40◦. The onboard state estimates are compared the ground truth from the motion capture system. Since there is no GPS measurement indoor, our system relies on a fusion of relative measurements from laser and vision. We do observe occasional laser failure due to large attitude violating the 2.5-D assumption (Sect. V-C). However, the multi-sensor ﬁlter still tracks the vehicle state throughout (Fig. 5). We do not quantify the absolute pose error since it is unbounded. However, the body frame velocity (Fig. 5(b)) compares well with the ground truth with standard deviations of {0.1021, 0.1185, 0.0755} T (m/s) in x, y, and z, respectively.

4979

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on April 20,2022 at 11:36:19 UTC from IEEE Xplore. Restrictions apply.

G & V & L V & L G & V G & L G V L

XY 3*std

Yaw 3*std

1.5

GPS Available

1

0.5

0 200 220 240 260 280 300 320

Time (sec)

4
2
200 220 240 260 280 300 320 Time (sec)

0.5
0 200 220 240 260 280 300 320
Time (sec)

XY Vel 3*std

Fig. 9. Covariance changes as the vehicle ﬂies through a dense building area (between 200s - 300s, top of Fig. 7, green line). The GPS comes in and out due to building shadowing. The covariance of x, y, and yaw increases as GPS fails and decreases as GPS resumes. Note that the body frame velocity are observable regardless of GPS measurements, and thus its covariance remains small. The spike in the velocity covariance is due to the vehicle directly facing the sun. The X-Y covariance is calculated from the Frobenius norm of the covariance submatrix.

Fig. 7. Vehicle trajectory aligned with satellite imagery. Different colors indicate different combinations of sensing modalities. G=GPS, V=Vision, and L=Laser.

G & V & L V & L G & V G & L G V L

Laser

Vision

GPS 0

100

200

300

400

500

Time (sec)

Fig. 8. Sensor availability over time. Note that failures occurred to all sensors. This shows that multi-sensor fusion is a must for this kind of indoor-outdoor missions.

Fig. 10. Vehicle trajectory overlaid on a satellite map. The vehicle operates in a tree-lined campus environment, where there is high risk of GPS failure during operation.

B. Autonomous Flight in Large-Scale Indoor and Outdoor Environments
We tested our system in a challenging industrial complex. The testing site spans a variety of environments, including outdoor open space, densely ﬁlled trees, cluttered building area, and indoor environments (Fig. 6). The MAV is autonomously controlled using the onboard state estimates. However, a human operator always has the option of sending high level waypoints or velocity commands to the vehicle. The total ﬂight time is approximately 8 minutes, and the vehicle travels 445 meters with an average speed of 1.5 m/s. As shown in the map-aligned trajectory (Fig. 7), during the experiment, frequent sensor failures occurred (Fig. 8), indicating the necessity of multi-sensor fusion. Fig. 9 shows the evolution of covariance as the vehicle ﬂies through a GPS shadowing area. The global x, y and yaw error is bounded by GPS measurement, without which the error will grow unbounded. This matches the observability analysis results. It should be noted that the error on body frame velocity does not grow, regardless of the availability of GPS. The spike in velocity covariance in Fig. 9 is due to the camera facing direct sunlight.

C. Autonomous Flight in Tree-Lined Campus
We also conduct experiments in a tree-lined campus environment, as shown in Fig. 10. Autonomous ﬂight in this environment is challenging due to nontrivial light condition changes as the vehicle moves in and out of tree shadows. The risk of GPS failure is also very high due to the trees above the vehicle. Laser-based odometry only works when close to buildings. The total trajectory length is 281 meters.
VII. CONCLUSION AND FUTURE WORK
In this work, we present a modular and extensible approach to integrate noisy measurements from multiple het-

(a)

(b)

Fig. 11. Onboard (Fig. 11(a)) and external (Fig. 11(b)) camera images as the MAV autonomously ﬂies through a tree-lined campus environment. Note the nontrivial light condition.

4980

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on April 20,2022 at 11:36:19 UTC from IEEE Xplore. Restrictions apply.

(a)

(b)

(c)

(d)

(e)

(f)

(g)

(h)

Fig. 6. Images from the onboard camera (Figs. 6(a)- 6(d)) and an external camera (Figs. 6(e)- 6(h)). Note the vast variety of environments, including open space, trees, complex building structures, and indoor environments. We highlight the position of the MAV with a red circle. Videos of the experiments are available in the video attachment and at http://mrsl.grasp.upenn.edu/shaojie/ICRA2014.mp4.

erogeneous sensors that yield either absolute or relative observations at different and varying time intervals. Our approach generates high rate state estimates in real-time for autonomous ﬂight. The proposed approach runs onboard our new 1.9 kg MAV platform equipped with multiple heterogeneous sensors. We demonstrate the robustness of our framework in large-scale, indoor and outdoor autonomous ﬂight experiments that involves traversal through a industrial complex and a tree-lined campus.
In the near future, we would like to integrate higher level planning and situational awareness on our MAV platform to achieve fully autonomous operation across large-scale complex environments.
REFERENCES
[1] S. J. Julier and J. K. Uhlmann, “A new extension of the kalman ﬁlter to nonlinear systems,” in Proc. of SPIE, I. Kadar, Ed., vol. 3068, July 1997, pp. 182–193.
[2] R. V. D. Merwe, E. A. Wan, and S. I. Julier, “Sigma-point kalman ﬁlters for nonlinear estimation: Applications to integrated navigation,” in Proc. of AIAA Guidance, Navigation, and Controls Conf., Providence, RI, Aug. 2004.
[3] A. Bachrach, S. Prentice, R. He, and N. Roy, “RANGE-robust autonomous navigation in gps-denied environments,” J. Field Robotics, vol. 28, no. 5, pp. 644–666, 2011.
[4] S. Shen, N. Michael, and V. Kumar, “Autonomous multi-ﬂoor indoor navigation with a computationally constrained MAV,” in Proc. of the IEEE Intl. Conf. on Robot. and Autom., Shanghai, China, May 2011, pp. 20–25.
[5] S. Weiss, M. W. Achtelik, S. Lynen, M. Chli, and R. Siegwart, “Realtime onboard visual-inertial state estimation and self-calibration of mavs in unknown environments,” in Proc. of the IEEE Intl. Conf. on Robot. and Autom., Saint Paul, MN, May 2012, pp. 957–964.
[6] D. G. Kottas, J. A. Hesch, S. L. Bowman, and S. I. Roumeliotis, “On the consistency of vision-aided inertial navigation,” in Proc. of the Intl. Sym. on Exp. Robot., Quebec, Canada, June 2012.
[7] F. Fraundorfer, L. Heng, D. Honegger, G. H. Lee, L. Meier, P. Tanskanen, , and M. Pollefeys, “Vision-based autonomous mapping and exploration using a quadrotor MAV,” in Proc. of the IEEE/RSJ Intl. Conf. on Intell. Robots and Syst., Vilamoura, Algarve, Portugal, Oct. 2012.

[8] K. Schmid, T. Tomic, F. Ruess, H. Hirschmuller, and M. Suppa, “Stereo vision based indoor/outdoor navigation for ﬂying robots,” in Proc. of the IEEE/RSJ Intl. Conf. on Intell. Robots and Syst., Tokyo, Japan, Nov. 2013.
[9] A. S. Huang, A. Bachrach, P. Henry, M. Krainin, D. Maturana, D. Fox, and N. Roy, “Visual odometry and mapping for autonomous ﬂight using an RGB-D camera,” in Proc. of the Intl. Sym. of Robot. Research, Flagstaff, AZ, Aug. 2011.
[10] T. Tomic, K. Schmid, P. Lutz, A. Domel, M. Kassecker, E. Mair, I. L. Grixa, F. Ruess, M. Suppa, and D. Burschka, “Autonomous UAV: Research platform for indoor and outdoor urban search and rescue,” IEEE Robot. Autom. Mag., vol. 19, no. 3, pp. 46–56, 2012.
[11] S. I. Roumeliotis and J. W. Burdick, “Stochastic cloning: A generalized framework for processing relative state measurements,” in Proc. of the IEEE Intl. Conf. on Robot. and Autom., Washington, DC, May 2002, pp. 1788–1795.
[12] J. Carlson, “Mapping large urban environments with GPS-aided SLAM,” Ph.D. dissertation, CMU, Pittsburgh, PA, July 2010.
[13] D. Schleicher, L. M. Bergasa, M. Ocaa, R. Barea, and E. Lpez, “Realtime hierarchical GPS aided visual SLAM on urban environments,” in Proc. of the IEEE Intl. Conf. on Robot. and Autom., Kobe, Japan, May 2009, pp. 4381–4386.
[14] S. Shen, Y. Mulgaonkar, N. Michael, and V. Kumar, “Vision-based state estimation and trajectory control towards high-speed ﬂight with a quadrotor,” in Proc. of Robot.: Sci. and Syst., Berlin, Germany, 2013.
[15] S. Lynen, M. W. Achtelik, S. Weiss, M. Chli, and R. Siegwart, “A robust and modular multi-sensor fusion approach applied to mav navigation,” in Proc. of the IEEE/RSJ Intl. Conf. on Intell. Robots and Syst., Tokyo, Japan, Nov. 2013.
[16] T. Lefebvre, H. Bruyninckx, and J. D. Schuller, “Comment on ”a new method for the nonlinear transformation of means and covariances in ﬁlters and estimators”,” IEEE Trans. Autom. Control, vol. 47, no. 8, pp. 1406–1409, 2002.
[17] D. C. Moore, A. S. Huang, M. Walter, and E. Olson, “Simultaneous local and global state estimation for robotic navigation,” in Proc. of the IEEE Intl. Conf. on Robot. and Autom., Kobe, Japan, May 2009, pp. 3794–3799.
[18] R. Kuemmerle, G. Grisetti, H. Strasdat, K. Konolige, and W. Burgard, “g2o: A general framework for graph optimizations,” in Proc. of the IEEE Intl. Conf. on Robot. and Autom., Shanghai, China, May 2011, pp. 3607–3613.
[19] R. Smith, M. Self, and P. Cheeseman, “Estimating uncertain spatial relationships in robotics,” in Proc. of the IEEE Intl. Conf. on Robot. and Autom., vol. 4, Rayleigh, NC, Mar. 1987, p. 850.
[20] T. Lee, M. Leoky, and N. McClamroch, “Geometric tracking control of a quadrotor uav on SE(3),” in Proc. of the Intl. Conf. on Decision and Control, Atlanta, GA, Dec. 2010, pp. 5420–5425.

4981

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on April 20,2022 at 11:36:19 UTC from IEEE Xplore. Restrictions apply.

