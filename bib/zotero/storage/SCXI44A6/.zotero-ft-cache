IEEE websites place cookies on your device to give you the best user experience. By using our websites, you agree to the placement of these cookies. To learn more, read our Privacy Policy.
Accept & Close
Loading [MathJax]/extensions/MathZoom.js

Skip to Main Content

    IEEE.org
    IEEE Xplore
    IEEE SA
    IEEE Spectrum
    More Sites 

    Cart 
    Create Account
    Personal Sign In

IEEE Xplore logo - Link to home

    Browse
    My Settings
    Help

Access provided by:
Technische Hochschule Ingolstadt
Sign Out
IEEE logo - Link to IEEE main site homepage
ADVANCED SEARCH
Conferences > 2021 IEEE/RSJ International C...
A Topological Approach to Finding Coarsely Diverse Paths
Publisher: IEEE
Cite This
PDF
Aakriti Upadhyay ; Boris Goldfarb ; Chinwe Ekenna
All Authors
44
Full
Text Views

    Alerts

Abstract
Document Sections

    I.
    Introduction
    II.
    RELATED WORK
    III.
    Preliminaries
    IV.
    Methodology
    V.
    Environment setup

Show Full Outline
Authors
Figures
References
Keywords
Metrics
Footnotes
Abstract:
We present a topological method for finding coarsely diverse pathways. The use of pre-computed paths for online planning in a dynamic context reduces the overhead of re-planning alternate routes. Our algorithm applied the notion of discrete Morse theory to identify critical points incident on the obstacles and used this information to identify and return a diverse set of coarse paths. Three sampling-based planning approaches are converted to topology-aware planners and compared to another that employs the SPARS2 path planning algorithm. We report on the number of coarse pathways found, computation time, and average path length and show that our approach outperformed previously published path diversity algorithms.
Published in: 2021 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)
Date of Conference: 27 Sept.-1 Oct. 2021
Date Added to IEEE Xplore : 16 December 2021
ISBN Information:
ISSN Information:
INSPEC Accession Number: 21406919
DOI: 10.1109/IROS51168.2021.9636714
Publisher: IEEE
Conference Location: Prague, Czech Republic
SECTION I.
Introduction

Path planning is needed to successfully maneuver autonomous robots while avoiding obstacles and banging into walls in a small passage. Many sampling-based algorithms are used in motion planning, including RRT (Rapidly Exploring Random Trees) [1] and Probabilistic Roadmaps (PRM) [2] . Because these methods create random samples in space, they are easier to implement than discrete approaches like A*. Due to the randomness of these sampling-based procedures, probabilistic completeness is the best that can be accomplished. For every failed path due to an unexpected new obstacle, a re-computation is required with just a probabilistic completeness guarantee and large time overhead.

Unfortunately, little effort has gone into providing robots with valid paths (alternative routes). Kavraki et al. termed this as path diversity in [3] . It saves time and delivers more information on space’s properties and topology. It can help self-driving cars by offering alternate routes from a single map if one becomes invalid, and it also helps to service robots like the Roomba [4] .

We present a new approach to identify and provide path sets during a single roadmap generation. We achieve this by applying discrete Morse theory on the topological roadmap to identify critical points which contain information about different regions of the space. Figure 1 gives an illustration of our approach. Using this information, we identify different path set incidents to these critical points and formally define path diversity for our work. We perform experiments in the configuration space ( C space  ) using different sampling methods to generate our dense map, i.e. Uniform [2] , Gaussian [5] and Bridge-Test [6] and provide analysis of the path sets returned. We compare our method with a baseline method presented in [3] . Our results show that we can generate more diverse paths with reduced path length. We also show that our algorithm can provide a set of coarsely-diverse paths that can be distinguished based on critical points information. This capability can have application in real-world scenarios where alternate energy-efficient routes are needed.
Fig. 1 - Proposed Approach
Fig. 1

Proposed Approach

Show All
SECTION II.
RELATED WORK
A. Motion Planning Preliminaries

A robot’s placement, or configuration, can be uniquely described by a point ( x 1 , x 2 , ..., x n ) in a n dimensional space ( x i being the i th degree of freedom (DOF)). The space consisting of collection of feasible configurations ( C free  ) and unfeasible configurations ( C obst  ) of robot is called configuration space ( C space  ) [7] . The motion planning problem can be defined as finding a valid solution (e.g., collision-free and satisfying all joint limit and/or loop closure constraints) in C free  on successfully connecting start and goal configurations [8] .
B. Sampling Based Motion Planning

A number of strategies have been proposed to modify the sampling strategy to increase the number of nodes sampling in narrow and difficult regions of the environments. Uniform sampling method [2] generates nodes uniformly at random in C space  retaining valid ones, however, show inability to sample in narrow passages efficiently. Obstacle-Based PRM (OBPRM) [9] samples configurations near C obst  surfaces either by pushing configurations to the C obst  boundary or by finding surface intersections of randomly placed line segments. Even if OBPRM excels in narrow passages, it can be expensive because it requires many validity tests. Gaussian [5] and Bridge-Test [6] filter samples with inexpensive tests to find samples near C obst  boundaries or directly in narrow passages, respectively. However, both methods perform the same basic sampling as uniform random sampling and suffer from needing many samples to find one in a narrow passage. We use these auxiliary samplers to generate the topological maps for our approach except OBPRM, which continuously failed to generate a dense map to meet our stopping criteria.
C. Prior Work in Path Diversity

Knepper and Matthew in [10] introduced an important concept about path set as being a collection of feasible paths and their corresponding control sequences. A path set contains high path diversity if there is an improved performance in the presence of obstacles and goal-seeking behaviors. The importance of path diversity cannot be over-emphasized, and the ability of a motion planning algorithm to return path sets, thus, giving the robot or a self-driving car choice of alternative paths reduces complexity and re-planning scenarios. Voss et al. in [3] proposed an algorithm that returned low-cost diverse paths from a sparse graph by calculating the closest distance between path curves using Fréchet distance measure. However, the method required tuning of two parameters to return paths set.

For a graph with a broad explicit set of paths, Branicky et al. [11] provided two approximate algorithms (Inner-Product and Inclusion-Exclusion) that pruned large sets of candidate paths or trajectories down to smaller subsets while maintaining desirable characteristics in terms of overall reachability and path length. Extended work in [12] focused discussion on the survivability of the path from the collection of diverse paths w.r.t. random placement of the robot into an obstacle field in a static or dynamic space. In this paper, we instead produce a topologically rich graph, which implicitly provides critical point information, and our method generates paths with different path class representations.

Recent work in [13] iteratively found diverse paths in the C space  for a simplified multiple path problem by reducing the size of the robot (called inhibited regions). Although their method provided an increased success rate for new solutions, the oversimplification of the robot’s dimension reduced the robustness of the approach. In this work, we propose a topology-based solution to maximize the use of non-degenerate critical points derived from discrete Morse theory to compute diverse paths in the environment.
SECTION III.
Preliminaries

Definition 1: (Vietoris-Rips complex) Given a set X of points in a Euclidean space E , the Vietoris-Rips complex R ε ( X ) is the abstract simplicial complex whose k -simplices are the subsets of k + 1 points in X of diameter at most ε.

In [14] , a simplicial collapse, on constructed simplicial complex, removed redundant information to provide a space approximation of C f r e e   as a pre-processing step. An extension in work [15] , we applied discrete Morse theory to the same simplicial complex to identify critical points on the boundary of C o b s t . We make the following formal definitions.

Definition 2: Let D be the Euclidean distance function that measures the distance between the point x ∈ C f r e e and the nearest point y on the closest obstacle O i ∈ C o b s t that D ( x ) = min y ∈ O i | | x − y | | .

Definition 3: Let Γ ( y , ϱ ) be a density function where ϱ > 0 and y is the point on the obstacle. The function Γ counts all neighbors close to y in S within distance ϱ .

Definition 4: Let f be a discrete Morse function on R ( S ) restricted to the vertices of the Vietoris-Rips complex. One option was defined in [15] . In our case, this is also the restriction of a Morse function formally defined at any point in C space  by
f ( x ) = D ( x ) × Γ ( y , ϱ ) (1)
View Source Right-click on figure for MathML and additional features. \begin{equation*}f(x) = D(x) \times \Gamma (y,\varrho )\tag{1}\end{equation*}

Definition 5: (Critical points) The set of critical points is defined as the set of non-degenerate points on the convex hull of C o b s t   when the given discrete Morse function f reaches its extreme values, i.e. local minima or maxima.

Here, we denote critical points set as C. The derived feasible critical points information near C o b s t was obtained within C f r e e   by essentially shifting the critical points radially at a distance % from C o b s t to within S , thus providing a set of vertices in S ⊆ C f r e e   . The computation of ϱ value does not affect the identification of feasible critical points, and, thus, can be of any choice. Here, we calculate the value of ϱ as defined in [15] .

Definition 6: (Feasible critical points) This set is defined as all vertices in S at a radial clearance of ϱ from a critical point of C o b s t . In other words, it is the union of intersections of vertices in S within the metric balls of radius ϱ centered at some critical point.

Let c i denote an element of the set C , i.e. c i ∈ C , and let v j denote an element of the set S , ∀ i , j > 0 . We denote the list of the feasible critical points within ϱ from c i by F ( c i ) = { v 0 , … , v q } , ∀ q , 0 ≤ q < size ( S ) .

To this end let us think of F as a function from critical points C to the power set of S , that is the set of its subsets. If all F ( c i ) are disjoint, which happens when all critical points are at least 2 ϱ apart, then there is a well-defined function F −1 from feasible critical points F ( C ) back to C. Even when this is not true, we can think of F −1 ( v ) as the pre-image of v under the multi-valued function F . For each path p , we then have F −1 ( p ) which is the union ⋃ v ∈ p F − 1 ( v ) but can also be thought of as a sequence in C because it inherits the order from p.

Definition 7: (Path diversity) Given a set of paths P , two paths p a and p b in P are diverse if p a ≠ p b . They are called coarsely diverse , or more precisely ϱ  - coarsely  diverse if for some time t > 0 we have distance d ( p a ( t ) , p b ( t ) ) > ϱ . Two paths that are not coarsely diverse are called fellow travelers.

d is the Hausdorff distance function that measures the distance between two paths at time t.

Proposition 1: Suppose the distance between any two critical points is at least 3 ϱ . Then two paths p a and p b in P are coarsely diverse if F − 1 ( p a ) ≠ F − 1 ( p b ) .

Proof: The inequality means that for some t > 0, F − 1 ( p a ( t ) ) ≠ F − 1 ( p b ( t ) ) , so d ( F − 1 ( p a ( t ) ) , F − 1 ( p b ( t ) ) ) > 3 ϱ . Since d ( F − 1 ( p a ( t ) ) , p a ( t ) ) < ϱ and similarly d ( F − 1 ( p b ( t ) ) , p b ( t ) ) < ϱ , by the triangle inequality d ( p a ( t ) , p b ( t ) ) > ϱ as needed.

Proposition 2: The equation F −1 ( p a ) = F −1 ( p b ) defines an equivalence relation on paths. All paths in the same equivalence class are pairwise fellow travelers within the bound 2 ϱ .

Proof: The first statement is clear. For the second notice that d ( p a ( t ) , p b ( t ) ) ≤ 2 ϱ for all t > 0 as d ( p a ( t ) , F − 1 ( p a ( t ) ) ≤ ϱ , d ( p b ( t ) , F − 1 ( p b ( t ) ) ≤ ϱ , and by the assumption F − 1 ( p a ( t ) ) = F − 1 ( p b ( t ) ) for all t > 0.

We can conclude that to obtain a collection of diverse paths, or even better, coarsely diverse paths, it suffices to makes sure the collection contains paths that map via F −1 to distinct sets of critical points.

Corollary 1: Suppose c is in F −1 ( p a ) but is not in F −1 ( p b ). Then p a and p b are coarsely diverse.
SECTION IV.
Methodology

In this algorithm, multiple paths map to a different collection of critical points incidents to them, as defined in Def.7. Critical points represent the important intersection points on the surface of C o b s t , i.e., high or low curve points. These critical points are non-degenerate, and, so, do not change with change in the dimensionality of the robot, as C o b s t are rigid (non-deformable). The number of critical points for a C o b s t in 2D space, like square, can be a small countable value, but a polyhedral representation of C o b s t can have enormous critical points due to its intricate structure in 3D space. In such a framework, the possibility of having multiple paths increases around a single C o b s t using its critical points information. So, the pruning process removes only those critical points close to the path within distance 2 ϱ , from the identified critical points set. After pruning, there exists a possibility that different paths map to the untouched critical points of the same C o b s t in the future. Therefore, it also validates the output paths to make sure that they pass along different groups of C o b s t using proposition 1.

Algorithm 1 finds coarsely-diverse paths using identified critical points information and pre-computed simplicial complex from our previous work [14] , [15] , in lines 2-5. The algorithm calls ConstructComplex method to construct simplicial complex S (Def.1), on a verified Hausdorff distance measure of the dense graph G , and performs a sequence of simplicial collapse on S in the method TopologicalCollapse. The discrete Morse function f on S identifies critical points as the computed morse values in eq. (1) reaches its extrema, in method IdentifyCriticalPoints. Finally, it executes GetFea-siblePoints method to get vertices in S at ϱ  - clearance  (Def.6) from the critical point of C o b s t . The resulting topology map is a complete connected graph combined with necessary topological information, i.e., vertices and edges, of the C f r e e   and the critical point information. The algorithm solves a query from start to goal position and uncovers different paths in the C s p a c e   , using this map. At each iteration (line 6), the algorithm updates the graph while pruning the sets of feasible critical points and constituting critical points of the already found path such that no future path passes through the same groupset.

As a result, when the local planner begins to build a path for every updated graph complex S , it provides a path incident on feasible critical points representing a different collection of critical points compared to all other paths previously obtained (line 8). The algorithm terminates when all possible combinations of the paths for the environment have been visited, and, no more query can be solved with the available vertices in the S (line 18).
Algorithm 1 Planning coarsely diverse paths
Table 1- Planning coarsely diverse paths

Once all the possible paths are found, the algorithm performs a validation to accept only paths that map via F −1 to distinct sets of critical points of coarsely-diverse path classes, and lists all the C o b s t a particular path covers (lines 20-25). Finally, the algorithm outputs the total number of paths, i.e., n , and the set of coarsely-diverse paths, i.e., P , for a given C s p a c e   .
SECTION V.
Environment setup

The experiments were executed on a Dell Optiplex 7040 desktop machine running OpenSUSE operating system, and the algorithms were implemented in C++ language.

We performed experiments in 3 different environments:

    3D Cluttered environment: Obstacles are cluttered around the room as shown in Figure 5a . The robot has to traverse through these obstacles successfully to reach its goal.

    House environment: A L-shaped robot is placed in a house-like space with four different rooms, see Figure 5b . The obstacles, like, a box and two tables, are placed randomly in the different rooms, and the robot is required to pass through these obstacles to reach the goal position.

    Kuka YouBot environment: An 8 DOF robot in an environment with four different rooms, see Figure 5c .

This robot is a simulation replica of Kuka YouBot [16] . The robot moves through different rooms within narrow passages and arrives at its destination where it performs an action (grasps or puts an object down).
SECTION VI.
Experimental results

This section provides a discussion on the results obtained for Uniform [2] , Gaussian [5] and Bridge-Test [6] planners using our approach, and compared with the Voss method [3] which used the SPARS2 algorithm [17] . RAPID [18] was used as our collision detection method during the sampling, connection and query stages. The experiment results were averaged over the value of 10 runs for topological map generation and 10 runs for diverse path planning for each method in all environments.
A. Generating a Dense Topology Map

We generate a dense graph in all three environments using the different planning methods. Table I shows the size of the maps needed to meet the criteria defined in the definitions and proposition as discussed in Section III .
TABLE I Number of samples in the topology map
Table I- Number of samples in the topology map

Figure 2 show the number of edges formed on connecting nodes in a topological map for all planning methods.
B. Number of Diverse Paths

Figure 3 gives the information about the number of diverse paths returned after running Algorithm 1 on our different environment scenarios. The distance between the pair of paths was measured using the Hausdorff distance metric. We observe that the Voss method returned fewer paths in the 3D cluttered environment (3) compared to our approach that returned 5 diverse paths for all 3 planners. In the House environment, the Voss returned 8 paths while our method returned 5 in all planners’ cases. We increase 100 units more for the path threshold T to obtain 8 paths for all planners, as shown in Figure 3b . Interestingly, the average path length of our coarse paths in all planners’ cases was lower than Voss, as can be seen in Figure 4b . Finally, in the Kuka YouBot environment, the Voss method failed to complete and returned 0 paths while our approach returned 4 paths for all 3 planners. Voss method was unsuccessful due to its dependency on the SPARS2 that is limited to handle only planar and rigid body configurations (SE(2) and SE(3)), as discussed in [17] . It can also be viewed, from the Figure 3 that as the number of paths increases, the distance between paths decreases, and our method in all 3 planners maintained good diversity between obtained paths.
Fig. 2 - Total edges in the Topological maps
Fig. 2

Total edges in the Topological maps

Show All
C. Setting a Threshold

We set a threshold for returned paths based on the range from the shortest diverse path length to a path of length T , where T is the mean of all shortest path lengths returned. It is due to the infinitely large number of diverse paths that can be generated in any environment depending on the mapping of paths to a plethora of critical point group combinations (detailed discussion available in Section IV ). Table II to IV give information about our threshold and the diverse paths returned.
TABLE II Paths generated in 3D Cluttered environment
Table II- Paths generated in 3D Cluttered environment
TABLE III Paths generated in House environment
Table III- Paths generated in House environment
TABLE IV Paths generated in Kuka YouBot environment
Table IV- Paths generated in Kuka YouBot environment
Fig. 3 - We show a decrease in the average hausdorff distance between paths as the number of coarsely diverse paths increase.For our method U = Uniform topological planner, G = Gaussian topological planner, and B = Bridge-Test topological planner.
Fig. 3

We show a decrease in the average hausdorff distance between paths as the number of coarsely diverse paths increase.For our method U = Uniform topological planner, G = Gaussian topological planner, and B = Bridge-Test topological planner.

Show All
D. Computation Time and Average Path Length

In Figure 4a , we can see that the time needed to build the maps and generate the diverse paths differ in the environments. The Voss method uses less time in the 3D cluttered environment than our method but was outperformed by the Uniform topological planner in the House environment. No result was recorded for Voss in the Kuka YouBot environment since it failed to complete. However, comparing the results of the topology methods in the Kuka YouBot environment, we see that the Uniform topology method uses less time than Bridge-Test and Gaussian and returns paths with a smaller average length, as seen in Figure 4b . We can postulate that Uniform planner worked best with our topology approach due to the need to form a dense map in the environment as quickly as possible, which is a strength Uniform (Basic PRM) has over the other methods. Although Gaussian and Bridge-Test provide samples closer to the C o b s t , the approaches require enormous samples to cover the entire, resulting in oversampling around the C o b s t . Thus, Gaussian and Bridge-Test operate effectively in maze-like situations when combined with our technique. A detailed description of the properties of these different planners is available in the related work section.
E. Critical Points Analysis and the Environment Topology

We show some interesting analyses to aid an appreciation for the critical points and their role in identifying these diverse paths. Figures 5a to 5c show examples of paths returned in the 3D Cluttered, House, and Kuka YouBot environments, showing the paths that map to a different set of critical points within a close distance of ϱ .

To better explain the relationship between the obstacles and the critical points, we create a plot that depicts the number of C o b s t in the environment v/s the diverse paths that pass through the various groups of critical points of these obstacles, as seen in Figure 5 . Recall that we define our diversity based on the distinct collections of critical points each path constitutes. The number of obstacles in the 3D Cluttered environment is 23 with 170 identified critical points, in the House environment is 3 obstacles with 95 identified critical points and in the Kuka YouBot environment is 26 obstacles with 210 identified critical points. We also previously proved in Proposition 1 that our critical points determine the number of coarsely diverse paths we can generate. In summary, we have successfully provided a new methodology to extract coarsely diverse paths from the topological information of the C s p a c e   and compared it with a baseline method. Our approach has shown successfully that diverse paths of shorter lengths can be possible.
SECTION VII.
Conclusion and future work

While path diversity is already a fruitful topic in robotics, the work in this paper points to methods for the solution of a more compelling problem of finding diverse paths that represent diverse homotopy classes of paths. Suppose the C f r e e   is two-dimensional and not contractible. In this case, we can assume that there is at least one obstacle that is homeomorphically a disk. Construction of non-homotopic paths can be achieved by successively selecting feasible critical points as goalposts near critical points on the boundary of that same disk. For example, suppose one obstacle in a 2D environment is a free-floating regular polygon (that is, not touching a wall). We posit that alternate selection of feasible critical points on diametrically opposite points of the boundary circle will result in the generation of two paths by Algorithm 1 that are not homotopic to each other, i.e. touching on parallel tangential sides of the disk.

Looking to higher dimensions, the key property of the disk in a 2D environment for this purpose of creating homotopically diverse paths is the fact that the core of the disk is dimension 1, and so has codimension 1 in C space  . These ideas generalize directly to obstacles in any dimension that are co-dimension 1. The application of 1-dimensional persistent homology from topological data analysis to higher dimension robots and more complex obstacles will be presented in our future work.
Fig. 4 - Computation Time and Average Path Length Comparisons.
Fig. 4

Computation Time and Average Path Length Comparisons.

Show All
Fig. 5 - The plots below each respective environment show the set of critical points of ${\mathcal{C}_{obst}}$ that map to different coarsely diverse paths within a close distance %, for Uniform topological planner. Different colors denote the output path’s color in these environments, and the dots on each horizontal line represent the mapped critical points of the different ${\mathcal{C}_{obst}}$ for each path, from start to goal positions.
Fig. 5

The plots below each respective environment show the set of critical points of C o b s t that map to different coarsely diverse paths within a close distance % , for Uniform topological planner. Different colors denote the output path’s color in these environments, and the dots on each horizontal line represent the mapped critical points of the different C o b s t for each path, from start to goal positions.

Show All

Authors
Figures
References
Keywords
Metrics
Footnotes
   Back to Results   
More Like This
A New Global Path Planning Strategy for Mobile Robots Using Hierarchical Topology Map and Safety-Aware Navigation Speed

2019 IEEE/ASME International Conference on Advanced Intelligent Mechatronics (AIM)

Published: 2019
Global path planning method of mobile robot in uncertain environment

2010 Chinese Control and Decision Conference

Published: 2010
Show More
References
1. S. M. LaValle and J. J. Kuffner, "Randomized kinodynamic planning", Proc. IEEE Int. Conf. Robot. Autom. (ICRA) , pp. 473-479, 1999.
Show in Context View Article Full Text: PDF (821) Google Scholar
2. L. E. Kavraki, P. Švestka, J. C. Latombe and M. H. Overmars, "Probabilistic roadmaps for path planning in high-dimensional configuration spaces", IEEE Trans. Robot. Automat. , vol. 12, no. 4, pp. 566-580, August 1996.
Show in Context View Article Full Text: PDF (1960) Google Scholar
3. C. Voss, M. Moll and L. E. Kavraki, "A heuristic approach to finding diverse short paths", 2015 IEEE International Conference on Robotics and Automation (ICRA) , pp. 4173-4179, 2015.
Show in Context View Article Full Text: PDF (1165) Google Scholar
4. "Roomba — Wikipedia the free encyclopedia", 2002, [online] Available: https://en.wikipedia.org/wiki/Roomba.
Show in Context Google Scholar
5. V. Boor, M. H. Overmars and A. F. van der Stappen, "The Gaussian sampling strategy for probabilistic roadmap planners", Proc. IEEE Int. Conf. Robot. Autom. (ICRA) , vol. 2, pp. 1018-1023, May 1999.
Show in Context View Article Full Text: PDF (560) Google Scholar
6. D. Hsu, T. Jiang, J. Reif and Z. Sun, "Bridge test for sampling narrow passages with probabilistic roadmap planners", Proc. IEEE Int. Conf. Robot. Autom. (ICRA) , pp. 4420-4426, 2003.
Show in Context View Article Full Text: PDF (483) Google Scholar
7. T. Lozano-Perez, "Spatial planning: A configuration space approach", Computers IEEE Transactions on , vol. 100, no. 2, pp. 108-120, 1983.
Show in Context View Article Full Text: PDF (4986) Google Scholar
8. H. Choset, K. M. Lynch, S. Hutchinson, G. A. Kantor, W. Burgard, L. E. Kavraki, et al., Principles of Robot Motion: Theory Algorithms and Implementations., Cambridge, MA:MIT Press, June 2005.
Show in Context Google Scholar
9. Y. Wu, "An obstacle-based probabilistic roadmap method for path planning", Master’s thesis , 1996.
Show in Context Google Scholar
10. R. A. Knepper and M. T. Mason, "Path diversity is only part of the problem", 2009 IEEE International Conference on Robotics and Automation , pp. 3224-3229, 2009.
Show in Context View Article Full Text: PDF (935) Google Scholar
11. M. S. Branicky, R. A. Knepper and J. J. Kuffner, "Path and trajectory diversity: Theory and algorithms", 2008 IEEE International Conference on Robotics and Automation , pp. 1359-1364, 2008.
Show in Context View Article Full Text: PDF (338) Google Scholar
12. L. H. Erickson and S. M. LaValle, "Survivability: Measuring and ensuring path diversity", 2009 IEEE International Conference on Robotics and Automation , pp. 2068-2073, 2009.
Show in Context View Article Full Text: PDF (316) Google Scholar
13. V. Vonásek, R. Pěnička and B. Kozlíková, "Computing multiple guiding paths for sampling-based motion planning", 2019 19th International Conference on Advanced Robotics (ICAR) , pp. 374-381, 2019.
Show in Context View Article Full Text: PDF (5078) Google Scholar
14. A. Upadhyay, W. Wang and C. Ekenna, "Approximating cfree space topology by constructing vietoris-rips complex", IROS: IEEE/RSJ International Workshop on Intelligent Robots and Systems , pp. 2517-2523, 2019.
Show in Context View Article Full Text: PDF (815) Google Scholar
15. A. Upadhyay, B. Goldfarb, W. Wang and C. Ekenna, "Planning among obstacles: using discrete morse theory for topological extraction of geometric features", State University of New York Albany NY (United States) Tech. Rep. , 2020, [online] Available: https://aakupadhyay.github.io/assets/images/DMT_in_cspace.pdf.
Show in Context Google Scholar
16. Kuka YouBot, "Research and application development in mobile robotics", 2021, [online] Available: https://www.generationrobots.com/img/Kuka-YouBot-Technical-Specs.pdf.
Show in Context Google Scholar
17. A. Dobson and K. E. Bekris, "Improving sparse roadmap spanners", 2013 IEEE International Conference on Robotics and Automation , pp. 4106-4111, 2013.
Show in Context View Article Full Text: PDF (1615) Google Scholar
18. S. Gottschalk, M. Lin and D. Manocha, "Obb-tree: A hierarchical structure for rapid interference detection", Technical Report TR96-013 , 1996.
Show in Context Google Scholar
IEEE Personal Account

    Change username/password 

Purchase Details

    Payment Options
    View Purchased Documents 

Profile Information

    Communications Preferences
    Profession and Education
    Technical interests 

Need Help?

    US & Canada: +1 800 678 4333
    Worldwide: +1 732 981 0060
    Contact & Support 

Follow

About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | Privacy & Opting Out of Cookies

A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity.

© Copyright 2022 IEEE - All rights reserved.
