COMPUTATIONAL TOPOLOGY
AN INTRODUCTION
Herbert Edelsbrunner and John Harer Departments of Computer Science and Mathematics
Duke University

To our families and friends

Table of Contents

Part A

I Graphs

1

1 Connected Components

2

2 Curves in the Plane

9

3 Knots and Links

15

4 Planar Graphs

22

Exercises

29

II Surfaces

31

1 Two-dimensional Manifolds 32

2 Searching a Triangulation 39

3 Self-intersections

45

4 Surface Simpliﬁcation

51

Exercises

57

III Complexes

59

1 Simplicial Complexes

60

2 Convex Set Systems

67

3 Delaunay Complexes

74

4 Alpha Complexes

81

Exercises

88

Part B

IV Homology

91

1 Homology Groups

92

2 Matrix Reduction

98

3 Relative Homology

104

4 Exact Sequences

111

Exercises

118

V Duality

121

1 Cohomology

122

2 Poincar´e Duality

128

3 Intersection Theory

132

4 Alexander Duality

136

Exercises

139

VI Morse Functions

141

1 Generic Smooth Functions 142

2 Transversality

148

3 Piecewise Linear Functions 154

4 Reeb Graphs

160

Exercises

167

Part C

VII Persistence

169

1 Persistent Homology

170

2 Eﬃcient Implementations

178

3 Extended Persistence

184

4 Spectral Sequences

191

Exercises

198

VIII Stability

201

1 Time Series

202

2 Stability Theorems

208

3 Length of a Curve

215

4 Bipartite Graph Matching

221

Exercises

228

IX Applications

231

1 Image Segmentation

2 Elevation

3 Gene Expression

4 Local Homology for Plant Root Architecture

Exercises

Part D

X Open Problems

237

1 Complexity of Reidemeister Moves 238

2 Shelling a 3-ball

239

3 Geometric Realization of 2-manifolds 241

4 Embedding in Three Dimensions

242

5 Equipartion in Four Dimensions

243

6 Running-time of Matrix Reduction 244

7 Multi-parameter Persistence

245

8 Unfolding PL Critical Points

246

9 PL in the Limit

247

10 Counting Halving Sets

248

Index

259

Preface
The last ten years have witnessed that geometry, topology, and algorithms form a potent mix of disciplines with many applications inside and outside academia. We aim at bringing these developments to a larger audience. This book has been written to be taught, and it is based on notes developed during courses delivered at Duke University and at the Berlin Mathematical School, primarily to students of computer science and mathematics. The organization into chapters, sections, exercises, and open problems reﬂects the teaching style we practice. Each chapter develops a major topic and is worth about two weeks of teaching. The chapters are divided into sections, each a lecture of one and a quarter hours. To convey a feeling for the boundary of the current knowledge, we complement the material with descriptions of open problems. An interesting challenge is the mixed background of the audience. How do we teach topology to students with limited background in mathematics, and how do we convey algorithms to students with limited background in computer science? Assuming no prior knowledge and appealing to the intelligence of the listener is a good ﬁrst step. Motivating the material by relating it to situations in diﬀerent walks of life is helpful in building up intuition that can cut through otherwise necessary formalism. Exposing central ideas with simple means helps and so does minimizing the necessary amount of detail.
The material in this book is a combination of topics in geometry, topology, and algorithms. Far from getting diluted, we ﬁnd that the ﬁelds beneﬁt from each other. Geometry gives a concrete face to topological structures and algorithms oﬀer a means to construct them at a level of complexity that passes the threshold necessary for practical applications. As always, algorithms have to be fast because time is the one fundamental resource human kind did not yet learn to manipulate for its selﬁsh purposes. Beyond these obvious relationships, there is a symbiotic aﬃnity between algorithms and the algebra used to capture topological information. It is telling that both ﬁelds trace their name back to the writing of the same Persian mathematician, al-Khwarizmi, work-

ing in Baghdad during the ninth century after Christ. Besides living in the triangle spanned by geometry, topology, and algorithms, we ﬁnd it useful to contemplate the place of the material in the tension between extremes such as
local vs. global;
discrete vs. continuous;
abstract vs. concrete;
intrinsic vs. extrinsic.
Global insights are often obtained by a meaningful integration of local information. This is how we proceed in many ﬁelds, taking on bigger challenges after mastering the small. But small things are big from up close and big ones small from afar. Indeed, the question of scale lurking behind this thought is the driving force for much of the development described in this book. The dichotomy between discrete and continuous structures is driven by opposing goals, machine computation and human understanding. Both are illusions that are useful to have but should not be confused with anything intangible like reality. The tension between the abstract and the concrete as well as between the intrinsic and the extrinsic have everything to do with human approach to knowledge. An example close to home is the step from geometry to topology in which we remove the burdens of size to focus on the phenomenon of connectivity. The more abstract the context the more general the insight. Now, generality is good but it is not a substitute for the concrete steps that have to be taken to build bridges to applications. Zooming in and out of generality leads to unifying viewpoints and suggests meaningful integrations where they exist.
While these thoughts have certainly inﬂuenced us in the selection of the material and in its presentation, there is a long way to the concrete instantiation we call this book. The hardest part is to land, and we do in four parts decomposed into a total of ten chapters. Part A is a gentle introduction to topological thought. Discussing Graphs in Chapter I, Surfaces in Chapter II, and Complexes in Chapter III, we gradually build up topological sophistication, always in combination with geometric and algorithmic ideas. Part B presents classical material from topology. We focus on what we deem useful and eﬃciently computable. The material on Homology in Chapter IV and on Duality in Chapter V is exclusively algebraic. In the discussion of Morse Theory in Chapter VI, we build a bridge to diﬀerential concepts in topology. Part C is mostly novel and indeed the main reason we write this book. The main new concept is Persistence introduced in Chapter VII and its Stability discussed in Chapter VIII. Finally, we address connections to Singularities in Chapter IX. Part D concludes the book with a small collection of open problems in computational

topology. It is our hope that they point in the right direction, leading a new generation of researchers far and beyond what we currently imagine.
In a project like writing this book there are many who contribute, directly or indirectly. We want to thank all and we don’t know where to begin. Above all, we thank our colleagues in academia and industry, our students, and our postdoctoral fellows for their ideas, criticism, and encouragement. And most of all for the sense of purpose they provide. We thank Duke University for providing the facilities and intellectual environment that allowed us to engage in the line of research leading to this book. We thank the Computer Science and the Mathematics Departments at Duke University and the Berlin Mathematical School for the opportunity to teach computational topology to their students. These courses provided the motivation to develop the notes that turned into this book. Last not least, we thank the funding agencies, in particular DARPA but also NSF and NIH, for nurturing this research and for opening up numerous connections to topics that lie well beyond the scope of this book.
Herbert Edelsbrunner and John Harer Durham, North Carolina, 2008

Chapter I
Graphs
In topology we think of a graph as a 1-dimensional geometric object, vertices being points and edges being curves connecting these points in pairs. This view is diﬀerent but compatible with the interpretation of a graph common in discrete mathematics where the vertices are abstract elements and the edges are pairs of these elements. In more than one way, this book lives in the tension between the discrete and the continuous and graphs are just one example of this phenomenon. We begin with the discussion of an intrinsic property, namely whether a graph is connected or not. Indeed, this does not depend on where we draw the graph, on paper or in the air. Following are extrinsic considerations about curves and graphs in the plane and in three-dimensional space. While the extrinsic questions are natural to people, the mathematician usually favors the intrinsic point of view since it tends to lead to more fundamental insights of more general validity.
I.1 Connected Components I.2 Curves in the Plane I.3 Knots and Links I.4 Planar Graphs
Exercises
1

2

I Graphs

I.1 Connected Components
A theme that goes through this entire book is the exchange between discrete and continuous models of reality. In this ﬁrst section, we compare the notion of connectedness in discrete graphs and continuous spaces.

Simple graphs. An abstract graph is a pair G = (V, E) consisting of a set of

vertices, V , and a set of edges, E, each a pair of vertices. We draw the vertices

as points or little circles and edges as line segments or curves connecting the

points. For now, crossings between the curves are allowed. The graph is simple

if the edge set is a subset of the set of unordered pairs, E ⊆

V 2

, which means

that no two edges connect the same two vertices and no edge joins a vertex

to itself. For n = card V vertices, the number of edges is m = card E ≤

n 2

.

Every simple graph with n vertices is a subgraph of the complete graph, Kn,

that contains an edge for every pair of vertices; see Figure I.1.

Figure I.1: The complete graph with ﬁve vertices, K5. It has ten edges which form ﬁve crossings if drawn as sides and diagonals of a convex pentagon. The four thick edges connect the same ﬁve vertices and form a spanning tree of the complete graph.
In a simple graph, a path between vertices u and v can be described by a sequence of vertices, u = u0, u1, u2, . . . , uk = v, with an edge between ui and ui+1 for each 0 ≤ i ≤ k − 1. The length of this path is its number of edges, k. Vertices can repeat, allowing the path to cross itself or backtrack. The path is simple if the vertices in the sequence are distinct, that is, ui = uj whenever i = j.
Definition A. A simple graph is connected if there is a path between every pair of vertices.

I.1 Connected Components

3

A (connected) component is a maximal subgraph that is connected. The smallest connected graphs are the trees, which are characterized by having a unique simple path between every pair of vertices. Removing any one edge disconnects the tree. A spanning tree of G = (V, E) is a tree (V, T ) with T ⊆ E; see Figure I.1. It has the same vertex set as the graph and uses a minimal set of edges necessary to be connected. This requires that the graph is connected to begin with. Indeed, a graph is connected iﬀ it has a spanning tree. An alternative characterization of a connected graph can be based on the impossibility to cut it in two.
Definition B. A separation is a non-trivial partition of the vertices, that is, V = U ∪˙ W with U, W = ∅, such that no edge connects a vertex in U with a vertex in W . A simple graph is connected if it has no separation.
Topological spaces. We now switch to a continuous model of reality, the topological space. There are similarities to graphs, in particular if our interest is limited to questions of connectedness. Starting with a point set, we consider a topology, which is a way to deﬁne which points are near without specifying how near they are from each other. Think of it as an abstraction of Euclidean space in which neighborhoods are open balls around points. Concretely, a topology on a point set X is a collection U of subsets of X, called open sets, such that
(i) X is open and the empty set ∅ is open;
(ii) if U1 and U2 are open, then U1 ∩ U2 is open;
(iii) if Ui is open for all i in some possibly inﬁnite, possible uncountable, index set, then the union of all Ui is open.
The pair (X, U) is a called a topological space, but we will usually tacitly assume that U is understood and refer to X a topological space. Since we can repeat the pairwise intersection, Condition (ii) is equivalent to requiring that common intersections of ﬁnitely many open sets are open.
To build interesting topologies, we start with some initial notion of which sets might be open and then form appropriate combinations of these until the three conditions are satisﬁed. A basis of a topology on a point set X is a collection B of subsets of X, called basis elements, such that each x ∈ X is contained in at least one B ∈ B and x ∈ B1 ∩ B2 implies there is a third basis element with x ∈ B3 ⊆ B1 ∩ B2. The topology U generated by B consists of all sets U ⊆ X for which x ∈ U implies there is a basis element x ∈ B ⊆ U . This topology can be constructed explicitly by taking all possible unions of all possible ﬁnite

4

I Graphs

intersections of basis sets. As an example consider the real line, X = R, and

let B be the collection of open intervals. This gives the usual topology of the

real

line.

Note

that

the

intersection

of

the

intervals

(−

1 k

,

+

1 k

),

for

the

inﬁnitely

many integers k ≥ 1, is the point 0. This is not an open set which illustrates

the need for the restriction to ﬁnite intersections.

We often encounter sets inside other sets, Y ⊆ X, and in these cases we can borrow the topology of the latter for the former. Speciﬁcally, if U is a topology of X then the collection of sets Y ∩ U , for U ∈ U, is the subspace topology of Y. As an example consider the closed interval [0, 1] ⊆ R. We have seen that the open intervals form the basis for a topology of the real line. The intersections of open intervals with [0, 1] form the basis of the subspace topology of the closed interval. Note that the interval (1/2, 1] is considered an open set in [0, 1], but isn’t open when considered as a set in R.

Continuity, paths and connectedness. A function from one topological space to another is continuous if the preimage of every open set is open. This is derived from the concept of continuity familar from calculus; for example the function f : R → R that maps (−∞, 0] to 0 and (0, ∞) to 1 is not continuous because for any 0 < ε < 1, (−ε, ε) is open, but f −1((−ε, ε)) is not.
A path is a continuous function from the unit interval, γ : [0, 1] → X. It connects the point γ(0) to the point γ(1) in X. Similar to paths in graphs we allow for self-intersections, that is, values s = t in the unit interval for which γ(s) = γ(t). If there are no self-intersections then the function is injective and the path is simple. Now we are ready to adapt our ﬁrst deﬁnition of connectedness to topological spaces.
Definition A. A topological space is path-connected if every pair of points is connected by a path.
There is also a counterpart of our second deﬁnition of connectedness. We formulate it using open sets and there is an equivalent formulation in terms of closed sets which, by deﬁnition, are complements of open sets.
Definition B. A separation of a topological space X is a partition X = U ∪˙ W into two non-empty, open subsets. A topological space is connected if it has no separation.
It turns out connectedness is strictly weaker than path-connectedness, although for most spaces we will encounter they are the same. An example of a space that

I.1 Connected Components

5

is connected but not path-connected is the comb with a single tooth deleted. It

is constructed by gluing vertical teeth to a horizontal bar and ﬁnally deleting

the

interior

of

the

last

tooth:

taking

the

union

of

[0, 1] × 0

with

1 k

× [0, 1],

for

all positive integers k, we ﬁnally delete 0 × (0, 1). To construct a topology,

we take the collection of open disks as the basis of a topology on R2 and we

use the subspace topology for the comb. This space is connected because it is

the union of a path-connected set and a limit point. It is not path-connected

because no path from anywhere else can reach 0 × 1.

Disjoint set systems. We return to graphs and consider the algorithmic question of deciding connectedness. There are many approaches and we present a solution based on maintaining a disjoint set system. This particular algorithm has various other applications, some of which will be discussed in later chapters of this book. Using the integers from 1 to n as the names of the vertices, we store each component of the graph as a subset of [n] = {1, 2, . . . , n}. Adding the edges one at a time and maintaining the system of sets representing the components, we ﬁnd that the graph is connected iﬀ in the end there is only one set left, namely [n]. Formulated as an abstract data type, we have two operations manipulating the system:
Find(i): return the name of the set that contains i;
Union(i, j): assuming i and j belong to diﬀerent sets in the system, replace the two sets by their union.
We need the ﬁnd operation to test whether i and j indeed belong to diﬀerent sets. Each successful union operation reduces the number of sets in the system by one. Starting with n singleton sets, it therefore takes n − 1 union operations to get to a single set. Since trees connecting the n vertices can be generated this way, we thus have a proof that every tree with n vertices has m = n − 1 edges.
A standard data structure implementing a disjoint set system stores each set as a tree embedded in a linear array, V [1..n]. Each node in the tree is equipped with a pointer to its parent, except for the root which has no parent; see Figure I.2. Who is parent of whom is not important as long as the vertices are connected in a single tree. We implement the ﬁnd operation by traversing the tree upward until we reach the root, reporting the root as the name of the set.

6

I Graphs

6

7

16

13

12

11

9

1

10

8

15

3

14

2

4

5

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
Figure I.2: Top: two trees representing two disjoint sets. Bottom: storing the two trees in a linear array using an arbitrary ordering of the nodes.
int Find(i) if V [i].parent = null then return Find(V [i].parent) else return i endif.
If i is not the root then we ﬁnd the root recursively and ﬁnally return it. Otherwise, we return i as the root. We implement the union operation by linking one root to the other.
void Union(i, j) x = Find(i); y = Find(j); if x = y then V [x].parent = y endif.
After making sure that the two sets are diﬀerent, we assign one root as the parent of the other.
Improving the running time. The above implementation is not very efﬁcient, in particular if we have long paths that are repeatedly traversed. To

I.1 Connected Components

7

prevent this from happening we always link the smaller to the larger tree.
void Union(i, j) x = Find(i); y = Find(j); if x = y then if V [x].size > V [y].size then x ↔ y endif; V [x].parent = y endif.
Now a tree of k nodes cannot have paths longer than log2 k edges since the size of the subtree grows by at least a factor of two each time we pass to the parent. To further improve the eﬃciency, we compress paths whenever we traverse them. Here it is convenient to assume that roots are identiﬁed by pointing to themselves.
int Find(i) if V [i].parent = i then return V [i].parent = Find(V [i].parent ) endif; return i.
If i is not the root then the function recursively ﬁnds the root, makes the root the parent of i, reports the root, and exits. Otherwise, the function reports i as the root and exits.
In analyzing the algorithm, we are interested in the running-time for executing a sequence of m union and ﬁnd operations. Finding tight bounds turns out to be a diﬃcult problem and we limit ourselves to stating the result. Speciﬁcally, if n is the number of vertices then the running-time is never more than O(mα(n)), where α(n) is the notoriously slow growing inverse of the Ackermann function. Eventually, α(n) goes to inﬁnity but to reach even beyond ﬁve we need an astronomically large number of vertices, more than the estimated number of electrons in our Universe. In other words, for all practical purposes the algorithm takes constant average time per operation but theoretically this is not a true statement.
Bibliographic notes. Graphs are ubiquitous objects and appear in most disciplines. Within mathematics, the theory of graphs is considered part of combinatorics. There are many good books on the subject, including the one by Tutte [3]. The basic topological notions of connectedness are treated in books on point-set or general topology, including the text by Munkres [1]. The computational problem of maintaining a system of disjoint sets, often

8

I Graphs

referred to as the union-ﬁnd problem, is a classic topic in the ﬁeld of algorithms. Solutions to it are known as union-ﬁnd data structures and the most eﬃcient of all is the up-tree representation maintained through weighted union and pathcompression as explained in this section. A complete description of the highly non-trivial analysis of the algorithm can be found in the text by Tarjan [2].
[1] J. R. Munkres. Topology. A First Course. Prentice-Hall, Englewood Cliﬀs, New Jersey, 1975.
[2] R. E. Tarjan. Data Structures and Network Algorithms. SIAM, Philadelphia, Pennsylvania, 1983.
[3] W. T. Tutte. Graph Theory. Addison-Wesley, Reading, Massachusetts, 1984.

I.2 Curves in the Plane

9

I.2 Curves in the Plane
In the previous section, we used paths to merge points into connected components. To capture aspects of connectivity that go beyond components, we need diﬀerent maps.
Closed curves. We distinguish primarily between two kinds of (connected) curves, paths and closed curves. As deﬁned in the previous section, paths are continuous maps from [0, 1] to X. Sometimes, a closed curve is deﬁned as a path in which 0 and 1 map to the same point. Usually, we will deﬁne a closed curve to be a map from the unit circle, γ : S1 → X, where S1 = {x ∈ R2 | x = 1}. This second version emphasizes the important fact that paths and closed curves capture diﬀerent properties of topological spaces, since the interval and the circle are diﬀerent topological spaces. To make this precise, we call two topological spaces homeomorphic or topologically equivalent if there exists a continuous bijection from one space to the other whose inverse is also continuous. A map with these properties is called a homeomorphism. Notice that a homeomorphism between two spaces gives a bijection between their open sets. The unit interval and the unit circle are not homeomorphic. Indeed, removing the midpoint decomposes the interval into two components while removing its image leaves the circle connected. This contradicts the existence of a bijection that is continuous in both directions.

Figure I.3: The shaded inside and the white outside of a simple closed curve in the plane.
Considering maps into the Euclidean plane, X = R2, it makes sense to distinguish curves with and without self-intersections. A simple closed curve is

10

I Graphs

a curve without self-intersections, that is, a continuous injection γ : S1 → R2. Interestingly, every such curve decomposes the plane into two pieces, one on each side of the curve, as in Figure I.3.
Jordan Curve Theorem. Removing the image of a simple closed curve from R2 leaves two connected components, the bounded inside and the unbounded outside. The inside together with the image of the curve is homeomorphic to a closed disk.
This may seem obvious but proving it is challenged by the generality of the claim which is formulated for all and not just smooth or piecewise linear simple closed curves. There are reasons to believe that there is no simple proof for such a general claim. The fact that the inside together with the curve is homeomorphic to the closed disk, B2 = {x ∈ R2 | x ≤ 1}, is known as the Scho¨nﬂies Theorem. The Jordan Curve Theorem remains valid if we replace the plane by the sphere, S2 = {x ∈ R3 | x = 1}, but not if we replace it by the torus.
Parity algorithm. Given a simple closed curve in the plane, a fundamental computational question asks whether a given query point x ∈ R2 lies inside, on, or outside the curve. To write an algorithm answering this question, we assume a ﬁnite approximation of the curve. For example, we may specify γ at a ﬁnite number of points and interpolate linearly between them. The result is a closed polygon; see Figure I.4. It is simple if it is a closed curve itself. To decide whether the point x lies inside such a simple closed polygon, we draw a half-line emanating from x and count how often it crosses the polygon. Assuming x does not lie on the polygon, it lies inside if the number of crossings is odd and outside if that number is even. Hence, the name Parity Algorithm. In the implementation of this idea, we let x = (x1, x2) be the query point and a = (a1, a2), b = (b1, b2) the endpoints of an edge of the polygon. We assume the generic case in which no three points are collinear and no two lie on a common vertical or horizontal line. To simplify the code, we choose the horizontal half-line leaving x toward the right and we assume that a is below b, that is, a2 < b2. We ﬁrst make sure that the entire horizontal line crosses the edge, which we do by testing a2 < x2 < b2. If it does then we test whether the crossing lies to the left or the right of the query point. To this end we compute the determinant of the matrix
 1 x1 x2  ∆(x, a, b) =  1 a1 a2  ,
1 b1 b2

I.2 Curves in the Plane

11

x

Figure I.4: Approximation of the simple closed curve in Figure I.3 by a simple closed polygon. The point x lies inside the polygon and the half-line crosses the polygon an odd number of times.
which is positive iﬀ the sequence of points x, a, b forms a left-turn. To see this, we verify the claim for x = (0, 0), a = (1, 0), b = (0, 1) and then notice that the sign of the determinant switches exactly when the three points become collinear. We use this fact to decide whether the half-line crosses the edge:
boolean doesCross(x, a, b) if not a2 < x2 < b2 then return false endif; return det ∆(x, a, b) > 0.
Now we run this test for all edges and this way count the crossings. The trouble with this implementation are the non-generic cases. We ﬁnesse them using two inﬁnitesimally small, positive numbers 0 < ε1 ≪ ε2 and substituting x′ = (x1 + ε1, x2 + ε2) for x. A generic case for x is generic for x′ and we get the same decision for both points. A non-generic case for x is generic for x′ and we use the decision for x′.
Polygon triangulation. Sometimes it is useful to have a more structured representation of the inside of the polygon, for example for navigation to ﬁnd the exit out of a maze. The most common such structural representation is a triangulation which is a decomposition into triangles. Here we require that the triangles use the vertices of the polygon but do not introduce new ones. Furthermore, they use the edges of the polygon together with diagonals, which are new edges that connect non-adjacent vertices of the polygon. The diagonals

12

I Graphs

are required to pass through the inside and not cross any other diagonals and any polygon edges; see Figure I.5.

Figure I.5: A triangulation of the polygon in Figure I.4. Each diagonal passes from one side of the inside to the other.
To prove that a triangulation always exists we just need to show that there is at least one diagonal, unless the number of edges in the polygon is n = 3. Indeed, we may consider the leftmost vertex, b, of the polygon. Either we can connect its two neighbors, a and c, or we can connect b to the leftmost vertex u that lies inside the triangular region abc. Drawing this diagonal decomposes the n-gon into two, an n1-gon and an n2-gon. We have n1 +n2 = n+2 and since both are at least three, we also have n1, n2 < n. We can thus use induction to complete the proof. The same inductive argument shows that there are n − 3 diagonals and n− 2 triangles, no matter how we triangulate. This is suggestive. Indeed, we can think of the triangles as the nodes and the diagonals as the arcs of a tree. Since every tree with n − 2 ≥ 2 nodes has at least one leaf, that is, a node with only one neighbor, every triangulation has an ear, that is, a triangle formed by one diagonal and two polygon edges. Incidentally, this property does not generalize to tetrahedral decompositions in R3.
Winding number. We return to a general, not necessarily simple, closed curve γ : S1 → R2. Let x be a point not in the image of the curve. Suppose we traverse γ and view the moving point from x. Speciﬁcally, we let s go once around the circle and observe the unit vector (γ(s) − x)/ γ(s) − x rotate about the origin. When the vector completes a full turn we count +1 or −1 depending on whether this turn is counterclockwise or clockwise. The sum of these numbers is the winding number of γ and x, denoted as W (γ, x). It

I.2 Curves in the Plane

13

is necessarily an integer and gives the net number of counterclockwise turns we observe. If γ is simple then the points inside the curve all have the same winding number, −1 or +1. To reduce this to one case we may reorient the curve, e.g. by reﬂecting the unit circle along the horizontal coordinate axis, and get

W (γ, x) =

+1 if x is inside; 0 if x is outside.

However, for non-simple curves we can get winding numbers of absolute value larger than one; see Figure I.6. Suppose we move x in the plane. As long as

+1 0
+2
+3

+1

+4

+2

+3 +4

+5

+4

+4
+3 +2 +1

+3 +2 +1

Figure I.6: An oriented non-simple closed curve with regions distinguished by the winding number of their points.
it does not cross the curve, the winding number does not change. Crossing the curve changes the winding number, namely by −1 if we cross from left to right and by +1 if we cross from right to left. But this implies that at least two regions in the decomposition deﬁned by γ have their boundary arcs consistently oriented. Speciﬁcally, the neighbors of a region with locally maximum winding number all have winding number one less so the region lies to the left of all its boundary arcs. Similarly, a region with locally minimal winding number lies to the right of all its boundary arcs.

Bibliographic notes. The Jordan Curve Theorem is well known also beyond topology, in part because it seems so obvious but at the same time is diﬃcult to prove. We refer to [4] for a deeper discussion. The diﬃculties encountered in the implementation of the parity algorithm have been voiced in

14

I Graphs

[3]. A provably correct implementation can be achieved with exact arithmetic and symbolic perturbation as described in [2]. Triangulations of simple closed polygons in the plane have been studied in computational geometry. Constructing such a triangulation in time proportional to the number of vertices seems rather diﬃcult and the algorithm by Chazelle [1] that achieves this feat is not recommended for implementation.
[1] B. Chazelle. Triangulating a simple polygon in linear time. Discrete Comput. Geom. 6 (1991), 485–524.
[2] H. Edelsbrunner and E. P. Mu¨cke. Simulation of Simplicity: a technique to cope with degenerate cases in geometric algorithms. ACM Trans. Graphics 9 (1990), 86–104.
[3] A. R. Forest. Computational geometry in practice. In Fundamental Algorithms for Computer Graphics, E. A. Earnshaw (ed.), Springer-Verlag, Berlin, Germany, 1985, 707–724.
[4] C. T. C. Wall. A Geometric Introduction to Topology. Addison-Wesley, 1971.

I.3 Knots and Links

15

I.3 Knots and Links
In this section, we study closed curves in three-dimensional Euclidean space and questions about how they relate to each other or to themselves.
Knots. A closed curve embedded in R3 does not decompose the space but it can be tangled up in inescapable ways. The ﬁeld of mathematics that studies such tangles is knot theory. Its prime subject is a knot which is an embedding κ : S1 → R3, that is, an injective, continuous function that is a homeomorphism onto its image. It turns out that any injective, continuous function from the S1 to R3 is an embedding, but this is not true for general domains. Another knot is equivalent to κ if it can be continuously deformed into κ without crossing itself during this process. Equivalent knots are considered the same. The simplest

Figure I.7: From left to right: the unknot, the trefoil knot, and the ﬁgure-eight knot. The trefoil knot is tricolored.
knot is the unknot, also known as the trivial knot, which can be deformed to a geometric circle in R3. Two other and only slightly tangled up knots are the trefoil and the ﬁgure-eight knots, both illustrated in Figure I.7. A subtlety in the deﬁnition of equivalence is that deformations in which knotted parts disappear in the limit are not allowed. It is therefore useful to think of knots as curves with small but positive thickness, similar to shoelaces and ropes.
Reidemeister moves. Let us follow a deformation of a knot by drawing its projections to a plane, keeping track of the under- and over-passes at crossings. We are primarily interested in generic projections deﬁned by the absence of any violations to injectivity, other than a discrete collection of double-points where the curve crosses itself in the plane. In a generic deformation, we observe three types of non-generic projections that transition between generic projections, which are illustrated in Figure I.8. It is plausible and also true that any two generic projections of the same knot can be transformed into each other by Reidemeister moves.

16

I Graphs

Type I

Type II

Type III

Figure I.8: The three types of Reidemeister moves.

It seems clear that the trefoil knot is not equivalent to the unknot, and there is indeed an elementary proof using Reidemeister moves. Call a piece of the knot from one under-pass to the next a strand. A tricoloring of a generic projection colors each strand with one of three colors such that
(i) at each crossing either three colors or only one color come together; (ii) at least two colors are used.
Figure I.7 shows that the standard projection of the trefoil knot is tricolorable. A useful property of Reidemeister moves is that they preserve tricolorability, that is, the projection before the move is tricolorable iﬀ the projection after the move is tricolorable.

Figure I.9: The diﬀerent cases in the proof that the Type III Reidemeister move preserves tricolorability. In each case there is only one new strand whose color can be chosen anew.
Type I. Going from left to right in Figure I.8, we use the same one color, and

I.3 Knots and Links

17

going from right to left we observe that we have only one color coming together at the crossing.
Type II. From left to right we have two possibilities, either using only one color or going from two to three colors. The reverse direction is symmetric.
Type III. There are ﬁve cases to be checked, all shown in Figure I.9.
The trefoil knot is tricolorable and the unknot is not tricolorable. It follows that the two are not equivalent. It is not diﬃcult to see that the ﬁgure-eight knot is not tricolorable. This implies that the trefoil knot and the ﬁgure-eight knot are diﬀerent but the method is not powerful enough to distinguish the ﬁgure-eight from the unknot.
Links. A link is a collection of two or more disjoint knots. Equivalence between links is deﬁned the same way as between knots, and Reidemeister moves again suﬃce to go from one generic projection to another. A disjoint plane splits a link if there are knots on both sides. A link is splittable if an equivalent link has a splitting plane. The unlink or trivial link of size two consists of two unknots that can be split, like the two circles in Figure I.10 on the left. The easiest non-splittable link consisting of two unknots is the Hopf link, which is shown in Figure I.10 in the middle. We can again

Figure I.10: From left to right: the unlink, the Hopf link, and the Whitehead link.

use tricolorability to prove that the Hopf link is diﬀerent from the unlink. Alternatively, we may count the crossings between the two knots, κ and λ, counting with a sign. Speciﬁcally, we orient each knot arbitrarily and we look at each crossing locally. If the under-pass goes from the left of the over-pass to its right then we count +1 and otherwise we count −1. Letting x be a crossing and signx be plus or minus one as explained, the linking number is half the sum of these numbers over all crossings,

Lk(κ, λ)

=

1 2

signx.

x

Changing the orientation of one knot but not the other has the eﬀect of reversing the sign of the linking number. Clearly, Reidemeister moves do not aﬀect

18

I Graphs

the linking number. Since the linking number of the unlink is zero and that of the Hopf link is plus or minus one, we have another proof that the two links are diﬀerent. An easy link that is not splittable but has vanishing linking number is the Whitehead link in Figure I.10. It consists of two unknots but cannot be tricolored, which implies that it is not splittable.

Writhing number. Next we introduce a number that measures how contorted the curve is in space. Let κ : R1 → R3 be a knot and assume that it is smooth and its tangent vector κ˙ (s) is non-zero for every s. Projecting along a direction u ∈ S2 we get a closed curve in the plane. Assuming the projection is generic, we distinguish under- from over-passes and count each crossing plus or minus one time, as before. However, diﬀerent from the case of the linking number, we count crossings the curve makes with itself and we do not divide by two. The sum of these numbers is the directional writhing number, DWr(κ, u). The writhing number is the average over all directions. This is the integral of the directional writhing number over all directions divided by the area of the unit sphere,

1

Wr(κ)

=

4π

DWr(κ, u) du.
u∈S2

The directions with non-generic projections form only a measure zero subset of the sphere. We therefore make no mistake when we average only over all generic projections. In contrast to the linking number, the writhing number is not necessarily an integer and it depends on the exact shape of the curve. Besides the shape it also captures topological information as we will see shortly.
The main motivation for studying the writhing number comes from molecular biology and, more speciﬁcally, the shape of DNA within the cell. Modeling its double-helix structure with a constant width ribbon, we are interested in the writhing number of the center axis, κ. The boundary of the ribbon consists of two closed curves. We need only one, λ : S1 → R3. In the case of DNA, λ twists and turns around κ. Intuitively, the twisting number is the average motion of λ relative to κ. To formalize this idea, we assume that the center axis and the boundary curve are one unit of length apart and parametrized such that λ(s) − κ(s) has unit length and is normal to the center axis. We construct a frame of mutually orthogonal unit vectors consisting of the tangent vector at s, T (s) = κ˙ (s)/ κ˙ (s) , the normal vector connecting the two curves, N (s) = λ(s) − κ(s), and the binormal vector, B(s) = T (s) × N (s). Using this frame, the twisting number is the average length of the projection of the

I.3 Knots and Links

19

derivative of the normal vector onto the binormal vector,

T w(κ, λ) = 1

N˙ (s), B(s) ds.

2π s∈S1

This number may be interpreted as the number of local crossings between κ and λ, counted with a sign and averaged over all directions u ∈ S2. To make sense of the idea of a local crossing we use a limit process in which the distance between κ and λ goes to zero. Details are omitted. Similarly, the writhing number of κ may be interpreted as the number of global crossings between κ and λ, again counted with a sign, averaged over all directions, and in the limit when the separation between the knots goes to zero. Since the linking number counts all crossings, we get a relationship between the three measures, which we state without formal proof.

Ca˘luga˘reanu-White Formula. Let κ be smooth closed curve in R3 and λ one of the two boundary curves of a ribbon centered along κ. Then Lk(κ, λ) = T w(κ, λ) + Wr(κ).

Relation to winding number. The writhing number of a is related to the winding number of the curve of critical directions. It is deﬁned such that the directional writhing number remains unchanged as long as we move u on the sphere of directions without crossing the curve and it changes as soon as we cross the curve. The only Reidemeister move that aﬀects the directional writhing number is Type I. The curve of critical directions is therefore traced out by the unit tangent vector and its negative, T, −T : S1 → S2. In other words, we have two curves decomposing the sphere into maximal faces of invariant directional writhing number. It will be convenient to identify antipodal points on the sphere and think of a direction as a pair (u, −u). Formally, this means we replace the sphere by the two-dimensional projective plane but we don’t have to be this formal yet. The pair (u, −u) crosses the curve T iﬀ u crosses T or −T .
Recall that the winding number is deﬁned for a closed curve and a point in the plane. Here we have a closed curve and an antipodal point pair on the sphere. Assuming u and −u are not on the curve, we let the winding number be the net number of counterclockwise turns formed by T around the directed line deﬁned by u. We use the same notation as in the plane denoting this number by W (T, u). Here we deﬁne counterclockwise as seen by looking in the direction u. Figure I.11 illustrates the situation in which −u crosses T from its left to its right. The winding number of T and (u, −u) thus decreases by one, same as the directional writhing number. Indeed, the two change in synchrony

20

I Graphs

u u’

T

+1

0

0

−1

Figure I.11: The change of the viewpoint from u to u′ is indicated on the sphere of directions. On the left, this removes a positive crossing and on the right, this adds a negative crossing. The eﬀect is the same, namely a decrease in the directional writhing number by one. It remains the same even if the curves change their orientation.

in all cases and we have DWr(κ, u0) − DWr(κ, u) = W (T, u0) − W (T, u) for all u0, u ∈ S2. As a consequence, the average winding number diﬀers from the average directional writhing number by an integer. Integrating the above relation over all directions of the sphere gives DWr(κ, u0) minus Wr(κ) on the left and W (κ, u0) minus the average winding number on the right. Hence,

Wr(κ)

=

DWr(κ,

u0)

−

W (κ, u0)

+

1 4π

W (κ, u) du.
u∈S2

Bibliographic notes. Knots and links have been studied for centuries and there are a number of excellent books on the subject, including the text by Adams [1]. Motivation for studying the writhing number of a space curve and the twisting number of a ribbon is derived from the double-helix structure of DNA whose discovery is comparably recent [7]. These numbers measure how wound up, locally and globally, DNA is within the cell [3]. The noteworthy relation between writhing, twisting, and linking numbers has been discovered independently by C˘aluga˘reanu [4], Fuller [5], Pohl [6], and White [8]. The relationship to the winding number has been described in [2] and used to give an algorithm that computes the writhing number of a closed space polygon in subquadratic time.

[1] C. C. Adams. The Knot Book. W. H. Freeman, New York, 1994.
[2] P. K. Agarwal, H. Edelsbrunner and Y. Wang. Computing the writhing number of a polygonal knot. Discrete Comput. Geom. 32 (2004), 37–53.
[3] W. R. Bauer, F. H. C. Crick, and J. H. White. Supercoiled DNA. Scientiﬁc American 243 (1980), 118–133.

I.3 Knots and Links

21

[4] G. Ca˘luga˘reanu. Sur les classes d’isotopie des noeuds tridimensionnels et leurs invariants. Czech. Math. J. 11 (1961), 588–625.
[5] F. B. Fuller. The writhing number of a space curve. Proc. Natl. Acad. Sci. USA 68 (1971), 815–819.
[6] W. F. Pohl. The self-linking number of a closed space curve. J. Math. Mech. 17 (1968), 975–985.
[7] J. D. Watson and F. H. C. Crick. Molecular structure of nucleic acid. A structure for deoxyribose nucleic acid. Nature 171 (1953), 737–738.
[8] J. H. White. Self-linking and the Gauss integral in higher dimensions. Amer. J. Math. XCI (1969), 693–728.

22

I Graphs

I.4 Planar Graphs
Only graphs with relatively few edges can be drawn without crossings in the plane. We consider properties that distinguish such graphs from others. We also prove Tutte’s Theorem which implies that every graph that can be drawn without crossing can also be drawn this way with straight edges.
Embeddings. Let G = (V, E) be a simple, undirected graph. A drawing maps every vertex u ∈ V to a point f (u) in R2, and it maps every edge uv ∈ E to a path with endpoints f (u) and f (v). The drawing is an embedding if the points are distinct, the paths are simple and do not cross each other, and incidences are limited to endpoints. Not every graph can be drawn without crossings. The graph is planar if it has an embedding in the plane. As illustrated in Figure I.12 for the complete graph of four vertices, there are many drawings of a planar graph, some with and some without crossings. A face of

Figure I.12: Three drawings of K4. From left to right: a drawing that is not an embedding, and embedding with one curved edge, and a straight-line embedding.
an embedding is a component in the deﬁned decomposition of the plane. We write n = card V , m = card E, and ℓ for the number of faces. Euler’s formula is a linear relation between these numbers.
Euler Relation for Planar Graphs. Every embedding of a connected graph in the plane satisﬁes n − m + ℓ = 2.
Proof. Choose a spanning tree of G = (V, E). It has n vertices, n − 1 edges, and one face. We have n − (n − 1) + 1 = 2, which proves the formula if G is a tree. Otherwise, draw the remaining edges, one at a time. Each edge decomposes one face into two, thus maintaining the relation by increasing both the number of edges and the number of faces by one.
If the graph has more than one connected component then the right hand side of the equation is replaced by one plus that number. Note that the Euler Relation implies that the number of faces is the same for all embeddings and is

I.4 Planar Graphs

23

therefore a property of the graph. We get bounds on the number of edges and

faces, in terms of the number of vertices, by considering maximally connected

graphs for which adding any one edge would violate planarity. Every face of a

maximally connected planar graph with three or more vertices is necessarily a

triangle, for if there is a face with more than three edges we can add a path that

crosses none of the earlier paths. Let n ≥ 3 be the number of vertices, as before.

Since every face has three edges and every edge belong to two triangles, we have

3ℓ = 2m.

We

use

this

relation

to

rewrite

the

Euler

Relation:

n−m+

2m 3

=2

and

n−

3ℓ 2

+ℓ

=

2

and

hence

m

=

3n − 6

and

ℓ

=

2n − 4.

Every

planar

graph

can be completed to a maximally connected planar graph, which implies that

it has at most these numbers of edges and faces.

Non-planarity. We can use the Euler Relation to prove that the complete graph of ﬁve vertices and the complete bipartite graph of three plus three vertices are not planar. Consider ﬁrst K5, which is drawn in Figure I.13, left. It

Figure I.13: K5 on the left and K3,3 on the right, each drawn with the unavoidable one crossing.
has n = 5 vertices and m = 10 edges, contradicting the upper bound of at most 3n−6 = 9 edges for maximally connected planar graphs. Consider second K3,3, which is drawn in Figure I.13, right. It has n = 6 vertices and m = 9 edges. Each cycle has even length, which implies that each face of a hypothetical embedding has four or more edges. We get 4ℓ ≤ 2m and m ≤ 2n − 4 = 8 after plugging the inequality into the Euler Relation, again a contradiction.
In a sense, K5 and K3,3 are the quintessential non-planar graphs. Two graphs are homeomorphic if one can be obtained from the other by a sequence of operations, each deleting a degree-2 vertex and merging their two edges into one or doing the inverse.
Kuratowski Theorem. A simple graph is planar iﬀ no subgraph is homeomorphic to K5 or to K3,3.

24

I Graphs

The proof of this result is omitted. The remainder of this section focuses on straight-line embeddings of planar graphs.

Convex combinations. Two points a0 = a1 deﬁne a unique line that passes through both. Each point on this line can be written as x = (1 − t)a0 + ta1, for some t ∈ R. For t = 0 we get x = a0, for t = 1 we get x = a1, and for 0 < t < 1 we get a point in between. If we have more that two points, we repeat the
construction by adding all points y = (1 − t)x + ta2 for which 0 ≤ t ≤ 1, and so on, as illustrated in Figure I.14. Given k + 1 points a0, a1, . . . , ak, we can

Figure I.14: From left to right: the construction of the convex hull of ﬁve points by adding one point at a time.

do the same construction in one step, calling a point x =

k i=0

tiai

a

convex

combination of the ai if

k i=0

ti

=

1

and

ti

≥ 0 for all 0 ≤ i ≤ k.

The set of

convex combinations is the convex hull of the ai.

We are interested in graphs that arise as edge-skeletons of triangulations of the disk, like the one in Figure I.15. Letting G = (V, E) be such a graph, we
distinguish edges and vertices on the boundary from the ones in the interior of the disk. When we embed G in R2, we make sure that the boundary edges
and vertices map to the boundary of the outer face. Since we only consider
straight-line embeddings, it suﬃces to study mappings of the vertex set into the plane. We call f : V → R2 a strictly convex combination mapping if for every interior vertex u ∈ V there are real numbers tuv > 0 with v tuv = 1 and f (u) = v tuvf (v), where both sums are over all neighbors v of u. In words, every interior vertex maps to a point in the interior of the convex hull of the
images of its neighbors. We will repeatedly use this mapping in combination with a linear function h : R2 → R deﬁned by h(x) = x, p + c, where p ∈ R2 is a non-zero vector and c is a real number. Composing f with h we get
h(f (u)) = v tuvh(f (v)). In words, the value we get for u is the same strictly convex combination of the values for its neighbors.

I.4 Planar Graphs

25

Straight-line embeddings. Suppose we have a straight-line embedding of G in which the boundary edges map to the boundary of the outer face. Then every interior vertex lies inside the cycle connecting its neighbors. It follows that this embedding deﬁnes a strictly convex combination mapping. We now show that the reverse is also true provided the boundary vertices map to the corners of a strictly convex polygon.
Tutte’s Theorem. Let G = (V, E) be the edge-skeleton of a triangulation of the disk and f : V → R2 a strictly convex combination mapping that maps the boundary vertices to the corners of a strictly convex polygon. Then drawing straight edges between the image points gives a straight-line embedding.
We will give the proof in three steps, which we now prepare with two observations. A separating edge of G is an interior edge that connects two boundary vertices. It is convenient to assume that G has no separating edge, but if it does we can split the graph into two and do the argument for each piece. Call a path in G interior if all its vertices are interior except possibly the ﬁrst and the last. Under the assumption of no separating edge, every interior vertex u can be connected to every boundary vertex by an interior path. Indeed, we can ﬁnd an interior path that connects u to a ﬁrst boundary vertex w. Let w0 and w1 be the neighboring boundary vertices. Since none of the edges separate, the neighbors of w form a unique interior path connecting w0 to w1. It follows that there is an interior path connecting u to w0. By repeating the argument substituting w0 for w we eventually see that u has interior paths to all boundary vertices.
Now suppose that h ◦ f takes its maximum at an interior vertex, u. Since h ◦ f (u) is a strictly convex combination of the values the the neighbors, we conclude that h ◦ f (v) = h ◦ f (u) for all neighbors v of u. We can iterate and because of the mentioned interior path property we eventually reach every vertex. It thus follows that h ◦ f has the same value at all vertices of G. We refer to this observation as the maximum principle and its symmetric version as the minimum principle.
Proof of Tutte’s Theorem. We now present the proof in three steps. First, all interior vertices u of V map to the interior of the strictly convex polygon whose corners are the images of the boundary vertices. To see this, choose p ∈ R2 and c ∈ R such that the line h−1(0) deﬁned by h(x) = x, p + c passes through a boundary edge and h(f (w)) > 0 for all boundary vertices other than the endpoints of that edge. Then h(f (u)) > 0 else the maximum principle would imply h(f (v)) = 0 for all vertices. Repeating this argument for

26

I Graphs

all edges of the convex polygon implies that all interior vertices u have f (u) in the interior of the polygon. This implies in particular that each triangle incident to a boundary edge is non-degenerate, that is, its three vertices are not collinear.
Second, letting yuv and zuv be the two triangles sharing the interior edge uv in G, the points f (y) and f (z) lie on opposite sides of the line h−1(0) that passes through f (u) and f (v). To see this, assume h(f (y)) > 0 and ﬁnd a strictly rising path connecting y to the boundary. It exists because h(f (y)) > h(f (u)) so one of the neighbors of y has strictly larger function value, and the same is true for the next vertex on the path and so on. Similarly, ﬁnd a strictly falling path connecting u to the boundary and the same for v, as illustrated in Figure I.15. The rising path does not cross the falling paths, but the two falling

u

y

z

v

Figure I.15: One strictly rising and two strictly falling paths connecting y, u, and v to the boundary.
paths may share a vertex, as in Figure I.15. In either case, we get a piece of the triangulation bounded by vertices with non-positive function values. Other than u and v all other vertices in this boundary have strictly negative function values. If z belongs to the boundary of this piece then it has strictly negative function value simply because it diﬀers from u and v. Else it belongs to the interior of the piece and we have h(f (z)) < 0 by the maximum principle. We note that this argument uses h(f (y)) > 0 in an essential manner. To show that this assumption is justiﬁed, we connect yuv by a sequence of triangles to one incident to a boundary edge. In this sequence, any two contiguous triangles share an edge. As observed in the ﬁrst step, the image of the last triangle is non-degenerate. Going backward, this implies that the image of the second to the last triangle is non-degenerate and so on. Finally, the image of yuv is non-degenerate, as required.

I.4 Planar Graphs

27

Third, no two of the edges cross. To get a contradiction, assume x is a point in the common interiors of two edges, uv and u′v′. Choose a half-line that emanates from x and avoids the images of all vertices. Since the vertices y and z that form triangles with uv map to opposite sides of the line passing through f (u) and f (v), the half-line intersects exactly one of the edges yu, yv, zu, zv. Continuing this way we get a sequence of edges starting with uv and ending with a boundary edge. Similarly, the half-lines deﬁnes another sequence of edges starting with u′v′ and ending with the same boundary edge. Going back in both sequences, we pass from one edge to an unambiguously deﬁne preceding edge. Since we start with the same boundary edge we get uv = u′v′. This completes the proof of Tutte’s Theorem.

Constructing straight-line embeddings. Tutte’s Theorem leads to a simple algorithm for constructing a straight-line embedding of a planar graph. For simplicity, we assume that it is the edge-skeleton of a triangulation of the disk and that none of its edges separates. We reindex such that u1 to uk are ordered along the boundary of the outer face and uk+1 to un are the interior vertices of the graph. First, we set f (ui) = (cos(2iπ/k), sin(2iπ/k)), for 1 ≤ i ≤ k, to place the boundary vertices in order on the unit circle in the plane. They form the corners of a strictly convex polygon, as required. Expressing the image of each interior vertex as a strictly convex combination of the images of its neighbors, we write

f (uj)

=

1 dj

f (v),

for each k + 1 ≤ j ≤ n, where dj is the degree of ui and the sum is over all neighbors v of uj in the graph. We get a system of n − k linear equations in n − k unknowns, the images of the interior vertices. Writing the system in matrix form, we get one non-zero coeﬃcient for each interior vertex and two more for each edge connecting two interior vertices. By Euler’s relation, the number of edges is less than 3n. If follows that the system is sparse with fewer than 7n non-zero coeﬃcients. It thus permits eﬃcient methods to ﬁnd the solution, which by Tutte’s Theorem corresponds to a straight-line embedding of the graph.

Bibliographic notes. Graphs that can be drawn in the plane without crossings arise in a number of applications, including geometric modeling, geographic information systems, and others. We refer to [3] for a collection of mathematical and algorithmic results speciﬁc to planar graphs. The fact that all planar

28

I Graphs

graphs have straight-line embeddings has been known long before Tutte’s Theorem. Early last century, Steinitz showed that every 3-connected planar graph is the edge-skeleton of a convex polytope in R3 [4]. This skeleton can be projected to R2 to give a straight-line embedding. In the 1930s, Koebe proved that every planar graph is the intersection graph of a collection of possibly touching but not otherwise overlapping closed disks in R2 [2]. We get a straight-line embedding by connecting the centers of the touching disks. The original theorem by Tutte is for coeﬃcients tuv equal to one over the degree of u [6]. The more general version and the proof presented in this section are taken from the more recent paper by Floater [1]. Eﬃcient numerical methods for solving systems of linear equations can be found in the linear algebra text by Strang [5].
[1] M. S. Floater. One-to-one piecewise linear mappings over triangulations. Math. Comput. 72 (2003), 685–696.
[2] P. Koebe. Kontaktprobleme der konformen Abbildung. Ber. S¨achs. Akad. Wiss. Leipzig, Math.-Phys. Kl. 88 (1936), 141–164.
[3] T. Nishizeki and N. Chiba. Planar Graphs: Theory and Algorithms. NorthHolland, Amsterdam, the Netherlands, 1988.
[4] E. Steinitz. Polyeder und Raumeinteilung. In Enzykl. Math. Wiss., Part 3AB12 (1922), 1–139.
[5] G. Strang. Introduction to Linear Algebra. Wellesley-Cambridge Press, Wellesley, Massachusetts, 1993.
[6] W. T. Tutte. How to draw a graph. Proc. London Math. Soc. 13 (1963), 743– 768.

Exercises

29

Exercises
The credit assignment reﬂects a subjective assessment of diﬃculty. A typical question can be answered using knowledge of the material combined with some thought and analysis.
1. Deciding connectivity (two credits). Given a simple graph with n vertices and m edges, the disjoint set system takes time proportional to (n + m)α(n) to decide whether or not the graph is connected.
(i) Describe a diﬀerent an algorithm that makes the same decision in time proportional to n + m.
(ii) Modify the algorithm so it computes the connected components in time proportional to n + m.
2. Shelling disks (three credits). Consider a triangulation of a simple closed polygon in the plane, but one that may have interior vertices inside the polygon. A shelling is a total order of the triangles such that the union of the triangles in any initial sequence is homeomorphic to a closed disk. Prove that every such triangulation has a shelling.
3. Jordan curve (one credit). Recall the Jordan Curve Theorem which says that every simple closed curve in the plane decomposes R2 into two.
(i) Show the same is true for a simple closed curve on the sphere, S2 = {x ∈ R2 | x = 1}.
(ii) Give an example that shows the result does not hold for simple closed curves on the torus.
4. Homeomorphisms (two credits). Give explicit homeomorphisms to show that the following spaces with topologies inherited from the respective containing Euclidean spaces are homeomorphic:
• R1 = R , the real line; • (0, 1), the open interval; • S1 − {(0, 1)}, the circle with one point removed.
Generalize your homeomorphisms to show the same for the Euclidean plane, the open disk, and the sphere with one point removed.
5. Splitting a link (two credits). Prove that the Borromean rings shown in Figure I.16 on the left are not splittable.

30

I Graphs

Figure I.16: Left: Any two of the three knots of the Borromean rings can be split but are held together by the third knot. Right: Two generic projections of the Whitehead link.
6. Deforming a link (two credits). Use Reidemeister moves to demonstrate that the two links in Figure I.16 in the middle and on the right are equivalent.
7. Planar graph coloring (two credits). Recall that every planar graph has a vertex of degree at most ﬁve. We can use this fact to show that every planar graph has a vertex 6-coloring, that is, a coloring of each vertex with one of six colors such that any two adjacent vertices have diﬀerent colors. Indeed, after removing a vertex with fewer than six neighbors we use induction to 6-color the remaining graph and when we put the vertex back we choose a color that diﬀers from the colors of its neighbors. Reﬁne the argument to prove that every planar graph has a vertex 5-coloring.
8. Edge coloring (three credits). We color each edge of a maximally connected planar graph with one of three colors such that each face (triangle) has all three colors in its boundary.
(i) Show that a 4-coloring of the vertices implies a 3-coloring of the edges. (ii) Show that a 3-coloring of the edges implies a 4-coloring of the vertices.
In other words, proving that every planar graph has a vertex 4-coloring is equivalent to proving that every triangulation in the plane has an edge 3-coloring.

Chapter II
Surfaces
The most common two-dimensional spaces are 2-manifolds, or surfaces, which come in two varieties: with and without boundary. We usually envision them put into three-dimensional space, sometimes with and preferably without selfintersections. Not all surfaces can be embedded in three-dimensional Euclidean space and self-intersections are unavoidable, but often they are accidental. Indeed, choosing a nice embedding of a surface in space is an interesting computational problem. We address this question for surfaces made out of triangles.
II.1 Two-dimensional Manifolds II.2 Searching a Triangulation II.3 Self-intersections II.4 Surface Simpliﬁcation
Exercises
31

32

II Surfaces

II.1 Two-dimensional Manifolds
In our physical world, the use of the term surface usually implies a 3dimensional, solid shape of which this surface is the boundary. In mathematics, the solid shape is not assumed and we discuss surfaces in their own right. Indeed, there are closed surfaces that are not the boundary of any solid shape. They are non-orientable and do not embed into three-dimensional Euclidean space, which is why our intuition for them is lacking.
Topological 2-manifolds. Consider the open disk of points at distance less than one from the origin, D = {x ∈ R2 | x < 1}. It is homeomorphic to R2, as for example established by the homeomorphism f : D → R2 deﬁned by f (x) = x/(1 − x ). We will call any subset of a topological space that is homemorphic to D an open disk. A 2-manifold (without boundary) is a topological space M whose points all lie in open disks. Intuitively, this means that M looks locally like the plane.
M is compact if for every covering of M by open sets, called an open cover, we can ﬁnd a ﬁnite number of the sets that cover M. We say that the open cover always has ﬁnite subcover. Examples of non-compact 2-manifolds are R2 itself and open subsets of R2. Examples of compact 2-manifolds are shown in Figure II.1, top row. We get 2-manifolds with boundary by removing open disks from

Figure II.1: Top from left to right: the sphere, S2, the torus, T2, the double torus, T2#T2. Bottom from left to right: the disk, the cylinder, the M¨obius strip.
2-manifolds without boundary. Alternatively, we could require that each point has a neighborhood homeomorphic to either D or to D+, the half disk obtained by removing all points with negative second coordinate from D. The boundary

II.1 Two-dimensional Manifolds

33

of a 2-manifold with boundary consists of all points x whose neighborhoods are homemorphic. Within the boundary, the neighborhood of every point x is an open interval, which is the deﬁning property of a 1-manifold, or curve. There is only one type of connected, compact 1-manifold, namely the closed curve. Following the practice of considering topologically equivalent spaces the same, we will therefore often refer to it as a circle. If M is compact, this implies that its boundary is a collection of circles. Examples of 2-manifolds with boundary are the (closed) disk, the cylinder, and the Mo¨bius strip, all illustrated in Figure II.1, bottom row.
We get new 2-manifolds from old ones by gluing them to each other. Speciﬁcally, remove an open disk each from two 2-manifolds, M and N, ﬁnd a homeomorphism between the two boundary circles, and identify corresponding points. The result is the connected sum of the two manifolds, denoted as M#N. Forming the connected sum with the sphere does not change the manifold since it just means replacing one disk by another. Adding the torus is the same as attaching the cylinder at both boundary circles after removing two open disks.
Orientability. Of the examples we have seen so far, the Mo¨bius strip has the curious property that it seems to have two sides locally at every interior point but there is only one side globally. To express this property intrinsically, without reference to the embedding in R3, we consider a small, oriented circle inside the strip. We move it around without altering its orientation, like a clock whose ﬁngers keep turning in the same direction. However, if we slide the clock

Figure II.2: Left: the projective plane, P2, obtained by gluing a disk to a M¨obius strip. Right: the Klein bottle obtained by gluing two M¨obius strips together. The vertical lines are self-intersections that are topologically not important.
once around the strip its orientation is the reverse of what it used to be and we call the path of its center an orientation-reversing closed curve. There are also orientation-preserving closed curves in the Mo¨bius strip, such as the one

34

II Surfaces

that goes around the strip twice following along close to the boundary. If all closed curves in a 2-manifold are orientation-preserving then the 2-manifold is orientable, else it is non-orientable. The curves drawn on the projective plane and the Klein bottle in Figure II.2 are all orientation-preserving. We leave ﬁnding orientation reversing curves on the same two surfaces as an instructive exercise to the reader.
Note that the boundary of the Mo¨bius strip is a single circle. We can therefore glue the strip to a sphere or a torus after removing an open disk from the latter. This operation is often referred to as adding a cross-cap to the sphere or torus. In the ﬁrst case we get the projective plane, the sphere with one cross-cap, and in the second case we get the Klein bottle, the sphere with two cross-caps. Both cannot be embedded in R3, so we have to draw them with self-intersections, but these should be ignored when we think about these surfaces.

Classiﬁcation. As it turns out, we have seen examples of each major kind of compact 2-manifold. They have been completely classiﬁed about a century ago by cutting and gluing to arrive at a unique representation for each type. This representation is a convex polygon whose edges are glued in pairs, called a

b

a

a

a

b

ab

bb

bb

b

a

a

a1

b2

b1

a

a

a1

a4

a1

a2

a1

a4

a2

b2

b1

a2

a3

a2

a3

Figure II.3: Top from left to right: the sphere, the torus, the projective plane, and the Klein bottle. After removing the (darker) M¨obius strip from the last two, we are left with a disk in the case of the projective plane and another M¨obius strip in the case of the Klein bottle. Bottom: the polygonal schema in standard form for the double torus on the left and the double Klein bottle on the right.

polygonal schema. Figure II.3 shows that the sphere, the torus, the projective

II.1 Two-dimensional Manifolds

35

plane, and the Klein bottle can all be constructed from the square. More generally, we have a 4g-gon for a sphere with g tubes and a 2g-gon for a sphere with g cross-caps attached to it. The gluing pattern is shown in the second row of Figure II.3. Note that the square of the torus is in standard form but that of the Klein bottle is not.
Classification Theorem for Compact 2-manifolds. The two inﬁnite families S2, T2, T2#T2, . . . and P2, P2#P2, . . . exhaust the family of compact 2-manifolds without boundary.
The ﬁrst family of orientable, compact 2-manifolds consists of the sphere, the torus, the double torus, and so on. The second family of non-orientable, compact 2-manifolds consists of the projective plane, the Klein bottle, the triple projective plane, and so on. To get a classiﬁcation of the connected, compact 2manifolds with boundary we can take one without boundary and make h holes by removing the same number of open disks. Each starting compact 2-manifold and each h ≥ 1 give a diﬀerent surface and they exhaust all possibilities.
Triangulations. To triangulate a 2-manifold we decompose it into triangular regions, each a disk whose boundary circle is cut at three points into three paths. We may think of the region and its boundary as the homeomorphic image of a triangle. By taking a geometric triangle for each region and arranging them so they share vertices and edges the same way as the regions we obtain a piecewise linear model which is a triangulation if it is homeomorphic to the 2-manifold. See Figure II.4 for a triangulation of the sphere. The condition

Figure II.4: The sphere is homeomorphic to the surface of an octahedron, which is a triangulation of the sphere.
of homeomorphism requires that any two triangles are either disjoint, share an

36

II Surfaces

edge, or share a vertex. Sharing two edges is not permitted for then the two triangles would be the same. It is also not permitted that two vertices of a triangle are the same. To illustrate these conditions we note that the triangulation of the ﬁrst square in Figure II.3 is not a valid triangulation of the sphere, but the triangulation of the second square is a valid triangulation of the torus.
Given a triangulation of a 2-manifold M, we may orient each triangle. Two triangles sharing an edge are consistently oriented if they induce opposite orientations on the shared edge, as in Figure II.4. Then M is orientable iﬀ the triangles can be oriented in such a way that every adjacent pair is consistently oriented.
Euler characteristic. Recall that a triangulation is a collection of triangles, edges, and vertices. We are only interested in ﬁnite triangulations. Letting n, m, and ℓ be the numbers of vertices, edges, and triangles, same as in the previous chapter, the Euler characteristic is their alternating sum, χ = n− m+ ℓ. We have seen that the Euler characteristic of the sphere is χ = 2, no matter how we triangulate. More generally, the Euler characteristic is independent of the triangulation for every 2-manifold.
Euler Characteristic of Compact 2-manifolds. A sphere with g tubes has χ = 2 − 2g and a sphere with g cross-caps has χ = 2 − g.
The number g is the genus of M; it is the maximum number of disjoint closed curves along which we can cut without disconnecting M. To see this result we may triangulate the polygonal schema of M. For a sphere with g tubes we have ℓ = 1 region, m = 2g edges, and n = 1 vertex. Further decomposing the edges and regions does not change the alternating sum, so we have χ = 2 − 2g. For a sphere with g cross-caps we have ℓ = 1 region, m = g edges, and n = 1 vertex giving χ = 2 − g.
Observe that adding a tube decreases the Euler characteristic by two while adding a cross-cap decreases it by only one. Indeed, we can substitute k handles for 2k cross-caps and obtain the g-fold projective plane from the k-fold torus by gluing g − 2k cross-caps, provided g > 2k. Note that non-orientability cannot be cancelled by the connected sum. Hence, this operation can get us from the orientable to the non-orientable manifolds but not back.
Doubling. The compact, non-orientable 2-manifolds can be obtained from the orientable 2-manifolds by identifying points in pairs. For example, if we identify opposite (antipodal ) points of the sphere we get the projective plane.

II.1 Two-dimensional Manifolds

37

We can also go the other direction, constructing orientable manifolds from non-

Figure II.5: Doubling the Klein bottle produces the torus.
orientable ones; see Figure II.5. Imagine a triangulation of a connected, compact, non-orientable 2-manifold N in R3, drawn with self-intersections, which we ignore. Make two copies of each triangle, edge, and vertex oﬀ-setting them slightly, one on either side of the manifold. Here sidedness is local and therefore well deﬁned. The triangles ﬁt together locally, and because N is connected, they form the triangulation of a connected 2-manifold, M. It is orientable because one side is consistently facing N. Since all triangles, edges, vertices are doubled, we have χ(M) = 2χ(N). Using the relation between genus and Euler characteristic we have χ(N) = 2 − g(N) and therefore χ(M) = 4 − 2g(N) = 2 − 2g(M). It follows that M has g(M) = g(N) − 1 tubes. As listed in Table II.1, the doubling operation constructs the sphere from the projective plane, the torus from the Klein bottle, etc.. The double is sometimes called the double cover, since the reverse operation of re-identifying doubled regions maps M to N covering it twice.

χ(N) 1 0 −1 ...

g(N) 1 2 3 ...

N
P2 P2#P2 P2#P2#P
...

M S2 T2 T2#T2 ...

g(M) 0 1 2 ...

χ(M) 2 0 −2 ...

Table II.1: Doubling turns the non-orientable 2-manifold on the left into the orientable 2-manifold on the right.

Bibliographic notes. The confusing aspects of non-orientable 2-manifolds have been captured in a delightful novel about the life within such a surface [1]. The classiﬁcation of compact 2-manifolds is sometimes credited to Brahana [2]

38

II Surfaces

and other times to Dehn and Heegard [3]. The classiﬁcation of 3-manifolds, on the other hand, is an ongoing project within mathematics. With the proof of the Poincar´e conjecture by Perelman, there is new hope that this can be soon accomplished. In contrast, recognizing whether two triangulated 4-manifolds are homeomorphic is undecidable [4]. The classiﬁcation of manifolds beyond dimension three is therefore a hopeless undertaking.
[1] E. A. Abbot. Flatland. Dover, New York, 1952.
[2] H. R. Brahana. Systems of circuits on two-dimensional manifolds. Ann. Math. 23 (1922), 144–168.
[3] M. Dehn and P. Heegard. Analysis situ. Enz. Math. Wiss. III A B 3, Leipzig (1907).
[4] A. A. Markov. Insolubility of the problem of homeomorphy. In Proc. Int. Congr. Math., 1958, 14–21.

II.2 Searching a Triangulation

39

II.2 Searching a Triangulation
Many algorithms beneﬁt from a convenient data structure that represents a surface by storing its triangulation. In this section, we describe such a data structure and show how to use it to determine the topological type of a surface.

Ordered triangles. We begin with the description of the core piece of the data structure, which is a representation of the symmetry group of the standard triangle. Its main function will be to keep track of direction and orientation when we navigate the triangulation. This group is isomorphic to the group of permutations of three elements, the vertices of the triangle. We call each permutation an ordered triangle and use cyclic shifts and transpositions to move between them. As illustrated in Figure II.6, the cyclic shift from abc to

ENEXT

c

a

b

ENEXT

ENEXT

a

bb

SYM

cc
SYM

a
SYM

c

a

b

ENEXT

ENEXT

b

ac

ba

c

ENEXT

Figure II.6: The symmetry group of the standard triangle consists of six ordered versions. The cyclic shifts partition the group into two orientations, each consisting of three ordered triangles.
bca corresponds to advancing the leading directed edge to next position, from ab to bc. The transposition of the leading two vertices corresponds to reversing the direction of the lead edge while keeping the third vertex ﬁxed.
We store each triangle in a single node of the data structure to be described shortly. A reference to the triangle consists of a pointer to this node, µ, together with a three-bit integer, ι, identifying the ordered version of the triangle. Using the ﬁrst bit to identify the orientation, we represent abc, bca, cab, bac, cba, acb by ι = 0, 1, 2, 4, 5, 6, in this sequence. Moving between diﬀerent ordered versions

40

II Surfaces

of the same triangle can be done with simple arithmetic operations on ι. To advance the lead edge, we increment using modulo arithmetic.
ordTri enext(µ, ι) if ι ≤ 2 then return (µ, (ι + 1) mod 3) else return (µ, (ι + 1) mod 3 + 4) endif.
To reverse the direction of the lead edge, we ﬂip the ﬁrst bit.
ordTri sym(µ, ι) return (µ, (ι + 4) mod 8).
We see that encoding the symmetry group requires very little overhead, just a few bits whenever we point to a triangle.

Data structure. We are now ready to describe the data structure representing the triangulation K of a connected, compact, 2-manifold without boundary. We store the vertices of K in a linear array, V [1..n], and the triangles in the nodes of a graph. The arcs connect nodes of neighboring triangles deﬁned by shared edges. Since every triangle has exactly three neighbors, the degree of every node is three. Inside a node, we store pointers to the three neighbors as well as to the three vertices, which are indices into V .

y

c

z

a

b

x
Figure II.7: The triangle abc with its three neighbors. The arrowheads identify the directed lead edges.
Let abc be a triangle and x, y, z the respective third vertices of the neighbor triangles. Each ordered version of the triangle points to its lead vertex and the ordered neighbor triangle that shares the directed lead edge. To describe this in an example, we assume the nodes µ, µx, µy, µz store the four triangles

II.2 Searching a Triangulation

41

with ι = 0 corresponding to the ordered versions abc, abx, ayc, zbc, as drawn in Figure II.7. Assuming a is stored at positions i in V and observing that ab is the lead edge of abx, the ordered triangle abc stores pointers (µ, 0).org = i and (µ, 0).fnext = (µx, 0). Assuming furthermore that b and c are stored at positions j and k of the vertex array, the other ﬁve ordered triangles in µ store pointers to the positions j, k, j, k, i and to the ordered triangles (µz, 1), (µy, 2), (µx, 4), (µz, 5), (µy, 6), in this sequence. To move around in the triangulation, we use simple functions to retrieve this information.
ordTri fnext(µ, ι) return (µ, ι).fnext .
int org(µ, ι) return (µ, ι).org .
There is clearly redundancy left in the proposed data structure, but we resist further optimizations to keep the implementation transparent.
Depth-ﬁrst Search. A common operation is visiting all triangles of the triangulation. This corresponds to searching the entire representing graph. Two of the most popular strategies are Breadth-ﬁrst Search and Depth-ﬁrst Search. As suggested by the name, Bepth-ﬁrst Search proceeds along an advancing front that expands around an initial node. In contrast, Depth-ﬁrst Search ventures directly into the unknown and covers the neighborhood only after returning from the adventure. We implement the latter strategy using a recursive function. Assuming all nodes are initially unmarked, we start the search by calling that function for an arbitrary ﬁrst node, µ0.
void Visit(µ) if µ is unmarked then mark µ; P1; forall neighbors ν of µ do Visit(ν) endfor; P2 else P3 endif.
The search proceeds along a spanning tree of the graph deﬁned by calling a neighboring node ν a child of µ if the ﬁrst visit to ν originates from µ. The root of this tree is µ0. To customize the function, we would add instructions at the three indicated places:

42

II Surfaces

P1. steps to be executed the ﬁrst time the node is visited;
P2. steps to be executed after all children have been processed;
P3. steps to be executed each time the node is revisited.
We will see examples of such customizations shortly. After searching the graph once, we will typically search it once more to remove all the marks and prepare the graph for further processing. Without accounting for the additional instructions, the running time of Depth-ﬁrst Search is linear in n + m, the number of nodes and arcs in the graph. Indeed, each arc is traversed exactly twice, once in each direction.
Orientability. We use Depth-ﬁrst Search to decide whether a connected, compact 2-manifold without boundary given by a triangulation K is orientable. We do this by orienting all triangles in a consistent manner and report nonorientability if the attempt fails. In other words, we choose one of two orientations for each triangle such that the shared edge between neighboring triangles are directed in opposite ways. Assuming none of the orientations are yet chosen, we start the process by calling the function for an arbitrary ﬁrst ordered triangle, (µ0, ι0).
boolean isOrientable(µ, ι) if µ is unmarked then mark µ and choose orientation containing ι; bx = isOrientable(fnext(sym(µ, ι))); by = isOrientable(fnext(enext(sym(µ, ι)))); bz = isOrientable(fnext(enext2(sym(µ, ι)))); return bx and by and bz else return [orientation of µ contains ι] endif.
Here we orient µ at P1, we unwind the for-loop, and we return a boolean value at P2 and another at P3. The latter value indicates whether or not we have consistent orientations in spite of the triangle µ having been oriented prior to the current visit. The boolean value returned at P2 indicates whether or not we have found a contradiction to orientability. A single value of false anywhere during the computation is propagated to the root of the search tree telling us that the surface is non-orientable. Since each triangle has only three neighbors, the running time of the algorithm is linear in the number of triangles.
Classiﬁcation. Recall from the preceding section that the type of a connected, compact 2-manifold without boundary is uniquely determined by its

II.2 Searching a Triangulation

43

genus and whether or not it is orientable. Since every triangle has three edges and every edge belongs to two triangles, we have 3ℓ = 2m and therefore 2n − ℓ = 4 − 4g in the orientable case and 2n − ℓ = 4 − 2g in the non-orientable case. Assuming we know the number of vertices from the size of the array, we just need to count the triangles, which we do again by Depth-ﬁrst Search.
int #Triangles(µ, ι) if µ is unmarked then mark µ; ℓx = #Triangles(fnext(µ, ι)); ℓy = #Triangles(fnext(enext(µ, ι))); ℓz = #Triangles(fnext(enext2(µ, ι))); return ℓx + ℓy + ℓz + 1 else return 0 endif.
Combining the information, it is now easy to determine the genus.
int Genus(µ, ι) ℓ = #Triangles(µ, ι); if isOrientable(µ, ι) then return (ℓ − 2n + 4)/4 else return (ℓ − 2n + 4)/2 endif.
In summary, we can decide the topological type of a triangulated, compact 2-manifold without boundary in time linear in the number of triangles. We can clearly not do it faster since the entire triangulation must be searched, else we could alter the type by a small modiﬁcation. By adding another search counting the boundaries, we can extend this result to compact 2-manifolds with boundary.
Bibliographic notes. Data structures for storing triangulated 2-manifolds have been described in the computer science literature since Baumgart [3]; see also the doubly-linked edge lists in [7] and the quad-edge structure in [6]. These data structures diﬀer in their details from the graph representation described in this section but are functionally very similar. Extensions to storing 3- and higher-dimensional complexes can be found in [5] and in [2]. Searching graphs is a core topic in computer science and descriptions of Depth-ﬁrst Search can be found in most algorithms texts, including [1] and [4].
[1] A. V. Aho, J. E. Hopcroft and J. D. Ullman. The Design and Analysis of Computer Algorithms. Addison-Wesley, Reading, Massachusetts, 1973.

44

II Surfaces

[2] E. Brisson. Representing geometric structures in d dimensions: topology and order. Discrete Comput. Geom. 9 (1993), 387–426.
[3] B. Baumgart. A polyhedron representation for computer vision. In “Proc. Natl. Comput. Conf., 1975”, 589–596.
[4] T. H. Cormen, C. E. Leiserson, R. L. Rivest and C. Stein. Introduction to Algorithms. Second edition, McGraw Hill, Boston, 2001.
[5] D. P. Dobkin and M. J. Laszlo. Primitives for the manipulation of threedimensional subdivisions. Algorithmica 4 (1989), 3–32.
[6] L. J. Guibas and J. Stolfi. Primitives for the manipulation of general subdivisions and the computation of Voronoi diagrams. ACM Trans. Graphics 4 (1985), 74–123.
[7] F. P. Preparata and M. I. Shamos. Computational Geometry: an Introduction. Springer-Verlag, New York, 1985.

II.3 Self-intersections

45

II.3 Self-intersections
Since non-orientable, compact 2-manifolds without boundary cannot be embedded in three-dimensional Euclidean space, all their models in that space occur with self-intersections. In contrast, all orientable, compact 2-manifolds have embeddings, but their models may have accidental self-intersections. Removes those is a core topic in repairing surface models of solid shapes.

Mapping into space. Let M be a compact 2-manifold without boundary.
We want to say what it means for M to be smooth and for a continuous map f : M → R3 to be a smooth mapping. We deﬁne a coordinate chart {(U, φ)} to be an open set U ⊂ M together with a continuous map φ : U → R2 that is a
homeomorphism onto its image. Two coordinate charts {(U, φ)} and {(V, ψ)}
are compatible if U and V are disjoint, or the map

φ ◦ ψ−1 : ψ(U ∩ V ) → φ(U ∩ V )

extends to a smooth (C∞) map R2 → R2. We deﬁne M to be smooth if it is covered by a maximal collection {(U, φ)} of compatible coordinate charts. A continuous function f : M → R is smooth if for each coordinate chart {(U, φ)}, f ◦ φ−1 is smooth. A map to f : M → R3 is smooth if each of the component functions fi = πi ◦f is smooth, where πi denotes projection onto the i-th factor.
For the time being, we assume that M and f are smooth. If we choose a coordinate chart, we get a local parameterization of M with two variables. We then think of the coordinate functions fi as mapping pairs (s1, s2) to xi, for i = 1, 2, 3. Collecting the gradients of the coordinate functions in a matrix, we get the Jacobian of f ,

 ∂f1
∂s1



J

=

 

∂f2

 ∂s1




∂f3 ∂s1

∂f1 
∂s2



∂f2 ∂s2

 . 




∂f3 ∂s2

While this Jacobian matrix depends on the choice of local coordinates, its rank does not. Notice that the rank of the Jacobian is at most two. The mapping f is an immersion if the Jacobian has full rank two at all points of M. It is an embedding if f is a homeomorphism onto its image, an embedding is necessarily an immersion, but not vice-versa. For smooth mappings, there are three types of generic self-intersections, all illustrated in Figure II.8. The most interesting of the three is the branch point, which comes in several guises. We

46

II Surfaces

x

x

x

Figure II.8: From left to right: a double point, a triple point, a branch point.
can construct it by cutting a disk from two sides toward the center, folding it, and re-glueing the sides as shown in Figure II.9. Embeddings have no selfintersections at all and immersions have only the ﬁrst two types and no branch points.

Figure II.9: Constructing the Whitney umbrella from a disk.
The piecewise linear case. The classiﬁcation of generic self-intersections is similar in the piecewise linear case in which M is given by a ﬁnite triangulation, K. However, in contrast to the smooth case, the enumeration of the generic types is elementary. Since M is a 2-manifold, the triangles that contain a vertex form a disk. It is not diﬃcult to see that imposing this condition on the vertices suﬃces to guarantee that K triangulates a 2-manifold without boundary. On the other hand, requiring that each edge belongs to exactly two triangles is not suﬃcient.
We put K into space by mapping each vertex to a point in R3. The edges and triangles are mapped to the convex hulls of the images of their vertices.

II.3 Self-intersections

47

Figure II.10: The three ways two triangles whose vertices are in general position in R3 can cross each other.

This mapping is an embedding iﬀ any two triangles are either disjoint or they share a vertex or they share an edge. Any other type of intersection is improper and referred to as a crossing. It is convenient to assume that the points are in general position, that is, no three are collinear and no four are coplanar. Under this assumption, there are only three types of crossings possible between two triangles, all shown in Figure II.10. Each crossing is a line segment common to two triangles. In the ﬁrst case, one of the endpoints of the line segment coincides with the image of a vertex, which necessarily belongs to both crossing triangles. In the other two cases, each endpoint of the line segment lies on the images of an edge in the triangulation.

Recognizing crossings. We reduce the recognition problem from two triangles to an edge and a triangle and further to four points in space. Writing a1, a2, a3 for the coordinates of the point a in space and similarly for the points x, y, and z, we say the sequence axyz has positive orientation if the matrix

 1 a1 a2 a3 

∆(a, x, y, z)

=

1

 

1

x1 y1

x2 y2

x3 

y3

 

1 z1 z2 z3

has positive determinant. We observe that this corresponds to the case in which a sees xyz make a right-turn in space. The four points lie in a common plane iﬀ the determinant vanishes. Finally, we say axyz has negative orientation if det ∆(a, x, y, z) < 0.
Using the ability to decide the orientation of a sequence of four points, we now return to the next more complicated problem given by ﬁve points, a, b, x, y, z in R3. We say the edge ab stabs the triangle xyz if the two have an improper intersection. Assuming the ﬁve points are distinct and in general position, we

48

II Surfaces

have only two cases, namely either the intersection is empty or a point in the common interior of the edge and the triangle. Thus, ab stabs xyz iﬀ a and b lie on diﬀerent sides of the plane spanned by xyz and ab forms the same orientation with the three directed edges xy, yz, and zx.
boolean doesStab(a, b, x, y, z) return sign det ∆(a, x, y, z) = sign det ∆(b, x, y, z) and sign det ∆(a, b, x, y) = sign det ∆(a, b, y, z) = sign det ∆(a, b, z, x).
We ﬁnally return to the original recognition problem formulated for two triangles, abc and xyz. We ﬁrst consider the case in which they share one of the points, a = x. Then we have a crossing iﬀ one of the respective opposite edges stabs the other triangle. We second consider the case in which the six points are distinct. Then the triangles are disjoint iﬀ none of the six edges stabs the other triangle, and the triangles cross iﬀ exactly two edges stab the other triangle. Assuming general position, there are no other cases. If the two stabbing edges belong to the same triangle, we have the case in the middle in Figure II.10, and if they belong to diﬀerent triangles, we have the case on the right.
Curves and preimages. Returning to the case on the left in Figure II.10, we see that one endpoint of the line segment lies on the image of an edge of the triangulation. There is a unique triangle on the other side of that edge that continues the intersections. Similarly, there are unique continuations of the intersection in the middle and the right case. Starting at a crossing, we can therefore trace the intersection triangle by triangle, adding a line segment at a time. Since we only have ﬁnitely many triangles, the curve must either end or close up by coming back to where it started. These are the only two cases:
• a path that starts at the image of a vertex and ends at the image of another vertex;
• a closed curve that avoids the images of all vertices in the triangulation.
Almost all points of such a path or closed curve are double points. Exceptions are triple points at which the curves intersects each other or themselves. The number of triple points is at most the number of ways we can choose three triangles, which is ﬁnite, and generically there are no points that belong to more than three triangles.
When we trace a path or a closed curve in space, we can, at the same time, trace its preimage under the mapping f . In the case of a path, we get two

II.3 Self-intersections

49

arcs starting at a common vertex and ending at another common vertex of the triangulation. In the case of the closed curve, we get either two loops or one loop whose image covers the curve twice. The three cases are illustrated in Figure II.11. The most interesting case is the double-covering loop. Such a

f

f

f

Figure II.11: The preimage of an intersection curve. From left to right: two arcs with common endpoints, two loops, one loop covering the closed curve twice.

loop is necessarily orientation-reversing. To see this, we may again trace the closed curve, its image in R3, and this time draw parallel curves to the left and the right on one of the two intersecting sheets. At the time we come back to where we started, the parallel curves have moved to the other sheet. There is either a clockwise or a counterclockwise rotation of the ﬁrst sheet to the second that maps each curve locally to itself. If the rotation is clockwise, as seen by looking in the direction of the curve, then it is clockwise at all points of the curve. Same for counterclockwise. This implies that after another round we map the ﬁrst sheet to itself but with reversed orientation. The double-covering loop can thus only happen if M is non-orientable. No conclusion can be drawn if the preimage consists of two loops.

To construct an example of a double-covering loop, we sweep the midpoint

of a rod (a line segment) along a circle in space. The rod is normal to the circle

at all times but it may rotate within the normal plane as we sweep along. If

there is no rotation then the rod sweeps out a cylinder, and if the rotation is

π after one time around then we get a Mo¨bius strip. However, if the rotation

is

π 2

,

we

need

a

second

time

around

to

complete

the

surface.

We thus get a

Mo¨bius strip that crosses itself along the center circle, which is covered twice.

Immersions of the Klein bottle. We have seen a ﬁrst picture of the Klein bottle in Figure II.2. The surface in that drawing intersects itself along a

50

II Surfaces

path which ends at two branch points. In the smooth case, we get rankdeﬁcient Jacobians at the branch points implying that this is not the image of an immersion. However, the Klein bottle can also be mapped without branch points and we conclude this section with the description of two such mappings.

Figure II.12: Two immersions of the Klein bottle. Both models intersect themselves in a closed curve whose preimage are two loops. On the left, these loops are orientationpreserving and on the right, they are orientation-reversing.
In the ﬁrst immersion, the neck of the bottle extends and turns back to the body, like a sleeping Flamingo, but then continues and passes through the surface, as sketched in Figure II.12 on the left. The closed intersection curve is the common image of two orientation-preserving loops. The second immersion is obtained by sweeping the cross point of a ﬁgure-8 along a circle in space. Similar to the rod example above, we keep the ﬁgure-8 normal to the circle at all times but we rotate within the normal plane. Turning the ﬁgure-8 upside down during one time around we exchange the lobes and form a surface that intersects itself along the circle, as sketched in Figure II.12 on the right. The preimage of the circle consists of two loops, both of which are orientation-reversing.
Bibliographic notes. The way surfaces in three-dimensional space intersect each other and themselves is discussed in length and with many illustrations by Carter [2]. In the generic case, a smooth mapping to R3 has only three types of singularities, double points, triple points, and branch points. Whitney proved that every d-manifold has an immersion in R2d−1 [4]. This implies that every 2manifold can be immersed in R3, meaning there are smooth mappings without branch points. For the projective plane, we must have a branch point or a triple

II.3 Self-intersections

51

point which implies that every immersion has a triple point [1]. Whitney also proved that every d-manifold can be embedded in R2d [3], implying that every 2-manifold can be embedded in R4.
[1] T. F. Banchoff. Triple points and surgery of immersed surfaces. Proc. Amer. Math. Soc. 46 (1974), 403–413.
[2] J. S. Carter. How Surfaces Intersect in Space. An Introduction to Topology. Second edition, World Scientiﬁc, Singapore, 1995.
[3] H. Whitney. The self-intersections of a smooth n-manifold in 2n-space. Annals of Math. 45 (1944), 220–246.
[4] H. Whitney. The singularities of a smooth n-manifold in (2n − 1)-space. Annals of Math. 45 (1944), 247–293.

52

II Surfaces

II.4 Surface Simpliﬁcation
In applications, it is often necessary to simplify the data or its representation. One reason is measurement noise, which we would like to eliminate, another are features, which we look for at various levels of resolution. In this section, we study edge contractions used in simplifying triangulated surface models of solid shapes.
Edge contraction. Suppose K is a triangulation of a 2-manifold without boundary. We recall this means that edges are shared by pairs and vertices by rings of triangles, as depicted in Figure II.13. Let a and b be two vertices and ab the connecting edge in K. By the contraction of ab we mean the operation that identiﬁes a with b and removes duplicates from the triangulation. Calling the new vertex c, we get the new triangulation L from K by
• removing ab, abx, and aby; • substituting c for a and for b wherever they occur in the remaining set of
vertices, edges, and triangles; • removing resulting duplications making sure L is a set.
As a consequence of the operation, there are new incidences between edges and triangles that did not exist in K; see Figure II.13.

x

x

a

b

c

y

y

Figure II.13: To contract ab, we remove the two dark triangles and repair the hole by gluing their two left edges to their two right edges.

Algorithm. To simplify a triangulation, we iterate the edge contraction operation. In the abstract setting, any edge is as good as any other. In a practical

II.4 Surface Simpliﬁcation

53

situation, we will want to prioritize the edges so that contractions that preserve the shape of the manifold are preferred. To give meaning to this statement, we will deﬁne shape to mean the topological type of the surface as well as the geometric form we get when we embed the triangulation in R3. We will discuss the latter meaning later and for now assume we have a function that assigns to each edge ab a non-negative real number Error(ab) assessing the damage the contraction of ab causes to the geometric form. Small numbers will mean little damage. To write the algorithm, we assume a priority queue storing all edges ordered by the mentioned numerical error assessment. This is a data structure that supports the operations of returning the top priority edge as well as of inserting and deleting an edge, each in time at most logarithmic in the number of edges in the queue. Speciﬁcally, we assume a a function isEmpty that tests whether or not the priority queue still contains edges, and a function MinExtract that removes the edge with minimum error from the priority queue and returns it. Furthermore, we assume the availability of a boolean test isSafe that decides whether or not the contraction of an edge preserves the topological type of the surface.
while not isEmpty do ab = MinExtract; if isSafe(ab) then contract ab endif
endwhile.
Some modiﬁcations are necessary to recognize edges that no longer belong to the triangulation and to put edges back into the priority queue when they become safe for contraction. Details are omitted. The running time of the algorithm depends on the size of local neighborhoods in the triangulation and on the data structure we maintain to represent it. Under reasonable assumptions, the most time-consuming step is the maintenance of the priority queue, which for each step is only logarithmic in the number of edges.
Topological type. We now consider the question whether or not the contraction of an edge preserves the topological type. Deﬁne the link of an edge ab as the set of vertices that span triangles with ab, and the link of a vertex a as the set of vertices that span edges with a and the set of edges that span triangles with a,
Lk ab = {x ∈ K | abx ∈ K};
Lk a = {x, xy ∈ K | ax, axy ∈ K}.
Since the topological type of K is that of a 2-manifold without boundary, each edge link is a pair of vertices and each vertex link is a closed curve made up of

54

II Surfaces

edges and vertices in K. Let L be obtained from K by contracting the edge ab. We show that the contraction of the edge ab preserves the topological type of the surface iﬀ the links of the endpoints, a and b, meet in exactly two points, namely in the vertices x and y in the link of ab, as in Figure II.13. We will simplify language by blurring the diﬀerence between a triangulation and the topological space it triangulates.
Link Condition Lemma. The triangulations K and L have the same topological type iﬀ Lk ab = Lk a ∩ Lk b.
Proof. We have Lk ab ⊆ Lk a, Lk b, by deﬁnition. The only possible violation to the link condition is therefore an extra edge or vertex in the intersection of the two vertex links. If Lk a and Lk b share an edge then the contraction of ab creates a triangle sticking out of the surface, contradicting that L triangulates a 2-manifold. Similarly, if the two vertex links share a vertex z ∈ Lk ab then the contraction of ab creates an edge cz that belongs to four triangles, again contradicting that L triangulates a 2-manifold.

c

a

b

Figure II.14: Mapping the neighborhood of c in L to a triangulated polygon and overlaying it with a similar mapping of the neighborhoods of a and b in K.
To prove the other direction, we draw the link of c in L as a convex polygon in R2; see Figure II.14. Using Tutte’s Theorem from the previous chapter, we can decompose the polygon by drawing the triangles incident to c in L. Similarly, we can decompose the polygon by drawing the triangles incident to a and b in K. We superimpose the two triangulations and reﬁne to get a new triangulation, if necessary. The result is mapped back to K and to L, eﬀectively reﬁning the neighborhoods of a and b in K and that of c in L. The link of c and everything outside that link is untouched by the contraction. Hence, on

II.4 Surface Simpliﬁcation

55

and outside the link K and L are the same and inside the link K and L are now isomorphic by reﬁnement. It follows that K and L are isomorphic and therefore have the same topological type.

Squared distance. To talk about the geometric meaning of shape, we now assume that K is embedded in R3, with straight edges and ﬂat triangles. To
develop an error measure, we use the planes spanned by the triangles. Letting u ∈ S2 be the unit normal of a plane h and δ ∈ R its oﬀset, we can write h as the set of points y ∈ R3 for which y, u = −δ. Using matrix notation for the scalar product, the signed distance of a point x ∈ R3 from h is

d(x, h) = (x − y)T · u = xT · u + δ.

Deﬁning xT = (xT , 1) and uT = (uT , δ), we can write this as a four-dimensional scalar product, xT · u. We use this to express the sum of squared distances
from a set of planes in matrix form. Letting H be a ﬁnite set of planes, this gives a function EH : R3 → R deﬁned by

EH (x) =

d2(x, hi)

hi ∈H

=

(xT · ui)(uTi · x)

hi ∈H

= xT ·

ui · uTi · x.

hi∈H

Hence EH (x) = xT · Q · x, where

A P Q U 

Q=

(ui · uTi ) =

P B

 

Q

R

R C

V

W

 

hi∈H

UV W Z

is a symmetric, four-by-four matrix we refer to as the fundamental quadric of the map EH . Writing xT = (x1, x2, x3) we get
EH (x) = Ax21 + Bx22 + Cx23 + 2(P x1x2 + Qx1x3 + Rx2x3) + 2(U x1 + V x2 + W x3) + Z.

We see that EH is a quadratic map that is non-negative and unbounded.

56

II Surfaces

Error assessment. In the application, we are interested in measuring the
damage to the geometric form caused by contracting the edge ab to the new vertex c. We think of the operation as a map between vertices, ϕ : Vert K →
Vert L, deﬁned by ϕ(a) = ϕ(b) = c and ϕ(x) = x for all x = a, b. Letting K0 be the initial triangulation, we obtain L by a sequence of edge contractions giving rise to a composition of vertex maps, which is again a vertex map, ϕ0 : Vert K0 → Vert L. The vertices in Vc = ϕ−0 1(c) ⊆ Vert K0 all map to c and we let H be the set of planes spanned by triangles in K0 incident to at least one vertex in Vc. Finally, we deﬁne the error of the contraction of ab as the minimum, over all possible placements of c as a point in R3, of the sum of squared distances from the planes,

Error(ab) = min EH (c).
c∈R3

For generic sets of planes, this minimum is unique and easy to compute. The

gradient of E = EH at a point x is the vector of steepest increase, ∇E(x) =

(

∂E ∂x1

(x),

∂E ∂x2

(x),

∂E ∂x3

(x)).

It is zero iﬀ x minimizes E.

The derivative with

respect to xi can be computed using the multiplication rule,

∂E ∂xi

=

∂xT ∂xi

· Q · x + xT

·Q·

∂x ∂xi

= Q[i]T · x + xT · Q[i],

where Q[i] is the i-th column and Q[i]T is the i-th row of Q. The point c ∈ R3

that

minimizes

E

can

thus

be

computed

by

setting

∂E ∂xi

to

zero, for

i = 1, 2, 3,

and solving the resulting system of three linear equations.

Maintenance of the error measure. It can be expensive to compute the fundamental quadric from scratch but relatively inexpensive to maintain it throughout the algorithm. When we contract an edge ab we associate the new vertex with the union of the two plane sets, Hc = Ha ∪ Hb. Unfortunately, this is not a disjoint union and we cannot just add the two quadrics. Instead, we use inclusion-exclusion and subtract the quadric of Hab = Ha ∩ Hb, which we store with the contracted edge. We describe how this works from the beginning.
Starting with the initial complex, K0, we store a quadric with every vertex, every edge, and every triangle. For a triangle, abx, we store the quadric Qabx deﬁned by the one plane that contains the triangle. An edge, ab, is shared by two triangles, abx and aby, and we store the quadric deﬁned by the two corresponding planes, Qab = Qabx + Qaby. A vertex, a, is shared by the ring of triangles in its star and we initialize its quadric, Qa, to the sum of the quadrics of these triangles. Note that the triangles that share the edge ab are

II.4 Surface Simpliﬁcation

57

precisely the ones that share both endpoints, a and b. This gives rise to a simple relationship between the sets of planes.
Invariant. Let abx be a triangle in the surface triangulation, with edges ab, ax, ay and vertices a, b, x. Then Hab = Ha ∩ Hb and Habx = Hax ∩ Hbx.
To maintain these two relations past an edge contraction, it is important that we limit ourselves to those that satisfy the Link Condition Lemma and therefore the topological type of the surface. The relations are therefore indeed invariants of the algorithm. Now consider the contraction of the edge ab. By the Invariant, the set of planes associated with the edge is the intersection of those of the endpoints. Hence we can compute the quadric of the new vertex as Qc = Qa + Qb − Qab. We also get two new edges, cx and cy, and to maintain the Invariant, we associate each with the union of plane sets of the corresponding old edges. By the Invariant, these two sets overlap in the plane set of the shared triangle, which consists of a single plane. Hence, we get Qcx = Qax+Qbx−Qabx and Qcy = Qay + Qby − Qaby.
Bibliographic notes. The algorithm described in this section is essentially the surface simpliﬁcation algorithm by Garland and Heckbert [2]. They combine edge contractions with the error measure remembering the original form through accumulated quadrics. However, instead of maintaining the quadric through inclusion-exclusion, they take a short-cut and compute the quadric of the new vertex as the sum of quadrics of the endpoints of the contracted edge, without removing duplicates. In practice, this makes little diﬀerence because planes contribute at most in triplicates The test for maintaining the topological type has been added later and more general versions of the Link Condition Lemma can be found in [1]. Priority queues are standard tools in computer science and implementations are described in most texts on algorithms, including volume three of Knuth’s pioneering series [3].
[1] T. Dey, H. Edelsbrunner, S. Guha and D. V. Nekhayev. Topology preserving edge contraction. Publ. Inst. Math. (Beograd) (N.S.) 66 (1999), 23-45.
[2] M. Garland and P. S. Heckbert. Surface simpliﬁcation using quadric error metrics. Computer Graphics, Proc. siggraph, 1997, 209–216.
[3] D. E. Knuth. Sorting and Searching. The Art of Computer Programming, Vol. 3. Addison-Wesley, Reading, Massachusetts, 1973.

58

II Surfaces

Exercises
The credit assignment reﬂects a subjective assessment of diﬃculty. A typical question can be answered using knowledge of the material combined with some thought and analysis.
1. Classifying 2-manifolds (two credits). Characterize the two surfaces depicted in Figure II.15 in terms of genus, boundary, and orientability.

Figure II.15: Left: a 2-manifold without boundary obtained by adding tunnels inside the sphere. We see four tunnel openings and one tunnel passing though a fork of the other. Right: a 2-manifold with boundary obtained by thickening a graph.
2. 2-coloring (two credits). Let K be a triangulation of an orientable 2manifold without boundary. Construct L by decomposing each edge into two and each triangle into six. To do this, we add a new vertex in the interior of each edge. Similarly, we add a new vertex in the interior of each triangle, connecting it to the six vertices in the boundary of the triangle. The resulting structure is the same as the barycentric subdivision of K, which we will deﬁne in Chapter III.
(i) Show that the vertices of L can be 3-colored such that no two neighboring vertices receive the same color.
(ii) Prove that the triangles of L can be 2-colored such that no two triangles sharing an edge receive the same color.
3. Klein bottle (two credits). Cut and paste the standard polygonal schema for the Klein bottle (a, a, b, b) to obtain the polygonal schema in which opposite edges of a square are identiﬁed (a, b, a−1, b); see Figure II.3.

Exercises

59

4. Triangulation of 2-manifold (two credits). Let V = {1, 2, . . . , n} be a set

of n vertices and F ⊆

V 3

a set of ℓ = card F triangles. Give an algorithm

that takes time at most proportional to n + ℓ for the following tasks:

(i) decide whether or not every edge is shared by exactly two triangles;
(ii) decide whether or not every vertex belongs to a set of triangles whose union is a disk.

5. Intersection tests in R3 (two credits). Let a, b, c ∈ R3 and u, v, w ∈ R3 be the vertices of two triangles in space. Write numerical tests for the following questions:

(i) does u see a, b, c form a left-turn or a right-turn?
(ii) does the line segment with endpoints u and v cross the plane that passes through a, b, c?
(iii) are the boundaries of the two triangles linked in R3?

6. Irreducible triangulations (three credits). An irreducible triangulation is one in which every edge contraction changes its topological type. Prove that the only irreducible triangulation of S2 is the boundary of the tetrahedron, which consists of four triangles sharing six edges and four vertices.
7. Graphs on Mo¨bius strip (one credit). Is every graph that can be embedded on the Mo¨bius strip planar?
8. Squared distance minimization (two credits). Let S be a ﬁnite set of points in R3 and f : R3 → R be deﬁned by f (x) = p∈S x − p 2.
(i) Show that f is a quadratic function and has a unique minimum. (ii) At which point does f attain its minimum?

60

II Surfaces

Chapter III
Complexes
There are many ways to represent a topological space, one being a decomposition into simple pieces. This decomposition qualiﬁes to be called a complex if the pieces are topologically simple and their common intersections are lowerdimensional pieces of the same kind. Within these requirements, we still have a great deal of freedom. Particularly attractive are the extreme choices: few complicated or many simple pieces. The former choice lends itself to handcalculations of topological invariants but also to the design of aesthetically pleasing shapes, such as car bodies and the like. The latter choice is preferred in computation and automation. Since we focus on computational aspects of topology, we favor the latter extreme choice of which the simplicial complex is the prime example.
III.1 Simplicial Complexes III.2 Convex Set Systems III.3 Delaunay Complexes III.4 Alpha Complexes
Exercises
61

62

III Complexes

III.1 Simplicial Complexes

In this book, we use simplicial complexes as the prime data structure to represent topological spaces. In this section, we introduce them in their geometric as well as abstract forms. The main technical result is the existence of simplicial maps that approximate continuous maps arbitrarily closely.

Simplices. Let u0, u1, . . . , uk be points in Rd. A point x =

k i=0

λi

ui

is

an

aﬃne combination of the ui if the λi sum to 1. The aﬃne hull is the set of

aﬃne combinations. It is a k-plane if the k+1 points are aﬃnely independent by

which we mean that any two aﬃne combinations, x = λiui and y = µiui,

are the same iﬀ λi = µi for all i. The k + 1 points are aﬃnely independent iﬀ the k vectors ui − u0, for 1 ≤ i ≤ k, are linearly independent. In Rd we can

have at most d linearly independent vectors and therefore at most d + 1 aﬃnely

independent points.

An aﬃne combination, x = λiui, is a convex combination if all λi are nonnegative. The convex hull is the set of convex combinations. A k-simplex is the convex hull of k + 1 aﬃnely independent points, σ = conv {u0, u1, . . . , uk}. We sometimes say the ui span σ. Its dimension is dim σ = k. We use special names for the ﬁrst few dimensions, vertex for 0-simplex, edge for 1-simplex, triangle
for 2-simplex, and tetrahedron for 3-simplex; see Figure III.1. Any subset of

Figure III.1: From left to right: a vertex, an edge, a triangle, and a tetrahedron. We note that an edge has two vertices, a triangle has three edges, and a tetrahedron has four triangles as faces.
aﬃnely independent points is again aﬃnely independent and therefore also deﬁnes a simplex. A face of σ is the convex hull of a non-empty subset of the ui and it is proper if the subset is not the entire set. We sometimes write τ ≤ σ if τ is a face and τ < σ if it is a proper face of σ. If τ is a (proper) face of σ we call σ a (proper) coface of τ . Since a set of size k +1 has 2k+1 subsets, including the empty set, σ has 2k+1 − 1 faces, all of which are proper except for σ itself. The boundary of σ, denoted as bd σ, is the union of all proper faces, and the interior is everything else, int σ = σ − bd σ. A point x ∈ σ belongs to int σ iﬀ

III.1 Simplicial Complexes

63

all its coeﬃcients λi are positive. It follows that every point x ∈ σ belongs to the interior of exactly one face, namely the one spanned by the points ui that correspond to positive coeﬃcients λi.
Simplicial complexes. We are interested in sets of simplices that are closed under taking faces and that have no improper intersections.
Definition. A simplicial complex is a ﬁnite collection of simplices K such that σ ∈ K and τ ≤ σ implies τ ∈ K, and σ, σ0 ∈ K implies σ ∩ σ0 is either empty or a face of both.
The dimension of K is the maximum dimension of any of its simplices. The underlying space, denoted as |K|, is the union of its simplices together with the topology inherited from the ambient Euclidean space in which the simplices live. A polyhedron is the underlying space of a simplicial complex. A triangulation of a topological space X is a simplicial complex K together with a homeomorphism between X and |K|. The topological space is triangulable if it has a triangulation. A subcomplex of K is a simplicial complex L ⊆ K. It is full if it contains all simplices in K spanned by vertices in L. A particular subcomplex is the j-skeleton consisting of all simplices of dimension j or less, K(j) = {σ ∈ K | dim σ ≤ j}. The 0-skeleton is also referred to as the vertex set, Vert K = K(0). Skeleta are generally not full.
A subset of a simplicial complex useful in talking about local neighborhoods is the star of a simplex τ consisting of all cofaces of τ , St τ = {σ ∈ K | τ ≤ σ}. Generally, the star is not closed under taking faces. We can make it into a complex by adding all missing faces. The result is the closed star, St τ , which is the smallest subcomplex that contains the star. The link consists of all simplices in the closed star that are disjoint from τ , Lk τ = {υ ∈ St τ | υ ∩ τ = ∅}. It τ is a vertex then the link is just the diﬀerence between the closed star and the star. More generally, it is the closed star minus the stars of all faces of τ . For example if K triangulates a 2-manifold without boundary then the link of an edge is a pair of points, a 0-sphere, and the link of a vertex is a cycle of edges and vertices, a 1-sphere.
Abstract simplicial complex. It is often easier to construct a complex abstractly and to worry about how to put it into Euclidean space later, if at all.
Definition. An abstract simplicial complex is a ﬁnite collection of sets A such that α ∈ A and β ⊆ α implies β ∈ A.

64

III Complexes

The sets in A are its simplices. The dimension of a simplex is dim α = card α−1 and the dimension of the complex is the maximum dimension of any of its simplices. A face of α is a non-empty subset β ⊆ α, which is proper if β = α. The vertex set is the union of all simplices, Vert A = A, the collection of all α such that α ∈ A for some simplex A. A subcomplex is an abstract simplicial complex B ⊆ A. Two abstract simplicial complexes are isomorphic if there is a bijection b : Vert A → Vert B such that α ∈ A iﬀ b(α) ∈ B. The largest abstract simplicial complex with a vertex set of size n + 1 is the n-dimensional simplex with a total number of 2n+1 − 1 faces. Given a (geometric) simplicial complex K, we can construct an abstract simplicial complex A by throwing away all simplices and retaining only their sets of vertices. We call A a vertex scheme of K. Symmetrically, we call K a geometric realization of A. Constructing geometric realizations is surprisingly easy if the dimension of the ambient space is suﬃciently high.
Geometric Realization Theorem. Every abstract simplicial complex of dimension d has a geometric realization in R2d+1.
Proof. Let f : Vert A → R2d+1 be an injection whose image is a set of points in general position. Speciﬁcally, any 2d + 2 or fewer of the points are aﬃnely independent. Let α and α0 be simplices in A with k = dim α and k0 = dim α0. The union of the two has size card (α ∪ α0) = card α+card α0 −card (α ∩ α0) ≤ k + k0 + 2 ≤ 2d + 2. The points in α ∪ α0 are therefore aﬃnely independent, which implies that every convex combination x of points in α ∪ α0 is unique. Hence, x belongs to σ = conv f (α) as well as to σ0 = conv f (α0) iﬀ x is a convex combination of α ∩ α0. This implies that the intersection of σ and σ0 is either empty of the simplex conv f (α ∩ α0), as required.

Simplicial maps. The natural equivalent of continuous maps between topo-

logical spaces are simplicial maps between simplicial complexes, which we now

introduce. Let K be a simplicial complex with vertices u0, u1, . . . , un. Every point x ∈ |K| belongs to the interior of exactly one simplex in K. Let-

ting σ = conv {u0, u1, . . . , uk} be this simplex, we have x =

k i=0

λiui

with

k i=0

λi

for k +1

= ≤

1 and λi i ≤ n we

> 0 for all have x =

i. Setting bi(x) = λi for 0 ≤ i ≤ k and bi(x) = 0

n i=0

bi(x)ui

and

we

call

the

bi(x)

the

barycentric

coordinates of x in K.

We use these coordinates to construct a piecewise linear, continuous map from a particular kind of map between the vertices of two simplicial complexes. A vertex map is a function ϕ : Vert K → Vert L with the property that the vertices of every simplex in K map to vertices of a simplex in L. Then ϕ can

III.1 Simplicial Complexes

65

be extended to a continuous map f : |K| → |L| deﬁned by

n

f (x) =

bi (x)ϕ(ui ),

i=0

the simplicial map induced by ϕ. There is an alternative way to think of this construction. Fix a vertex uj and consider the map bj : |K| → R which maps each point x to its j-th barycentric coordinate. The graph of this map has the shape of a hat, increasing from zero on and outside the link to one at uj. The map bj is continuous and is sometimes referred to as a basis function. The simplicial map is thus the weighted sum of the n + 1 basis functions. To emphasize that the simplicial map is linear on every simplex, we usually drop the underlying space from the notation and write f : K → L.

A

D

G

A

G H

B

E

H

B

C

F

I

C

A

D

G

A

I A

B

C

D
E F

Figure III.2: A vertex map and its induced simplicial map from the square to the torus.

As an example, we consider the simplicial map f : [0, 1]2 → T2 illustrated in Figure III.2. Given the vertex map, the simplicial map is unique and glues the simplices of the triangulation of the square to obtain a triangulation of the torus. If the vertex map ϕ : Vert K → Vert L is bijective and ϕ−1 : Vert L → Vert K is also a vertex map then the induced simplicial map f is a homeomorphism. In this case we call f a simplicial homeomorphism or an isomorphism between K and L.

Subdivisions. A simplicial complex L is a subdivision of another simplicial complex K if |L| = |K| and every simplex in L is contained in a simplex in K. There are many ways to construct subdivisions. A particular one is the barycentric subdivision, L = SdK, illustrated in Figure III.3. A crucial concept in its construction is the barycenter of a simplex, which is the average of its vertices. We proceed by induction over the dimension. To get started, the

66

III Complexes

Figure III.3: Left: a simplicial complex consisting of two triangles, six edges, and ﬁve vertices. Middle and right: its ﬁrst two barycentric subdivisions.

barycentric subdivision of the 0-skeleton is the same, SdK(0) = K(0). Assuming we have the barycentric subdivision of K(j−1), we construct SdK(j) by adding the barycenter of every j-simplex as a new vertex and connecting it to the simplices that subdivide the boundary of the j-simplex.
The diameter of a set in Euclidean space is the supremum over the distances between its points. Since the simplices of K are point sets in Euclidean space, their diameters are well deﬁned. The mesh of K is the maximum diameter of any simplex or, equivalently, the length of its longest edge.

Mesh Lemma. Letting δ be the mesh of the d-dimensional simplicial com-

plex

K,

the

mesh

of

SdK

is

at

most

d d+1

δ.

Proof. Let τ and υ be complementary faces of a simplex σ ∈ K, that is,

τ ∩ υ = ∅ and dim τ + dim υ = dim σ − 1. The line segment connecting the

barycenters of τ and υ has length at most δ, and it splits into two edges in

SdK, in proportions 1 + dim υ to 1 + dim τ . The fraction of length is therefore

between

1 k+1

and

k k+1

,

where

k

=

dim σ.

Both

edges

have

therefore

length

at

most

k k+1

≤

d d+1

times

δ.

By the Mesh Lemma, we can make the diameters of the simplices as small as

we like by iterating the subdivision operation. For n ≥ 1, the n-th barycentric subdivision of K is SdnK = Sd(Sdn−1K). As n goes to inﬁnity, the mesh of SdnK goes to zero.

Simplicial approximations. It is sometimes convenient to think of a vertex star as an open set of points. Formally, we deﬁne N (u) = σ∈St u int σ. Let K

III.1 Simplicial Complexes

67

and L be simplicial complexes. A continuous map g : |K| → |L| satisﬁes the star condition if the image of every vertex star in K is contained in a vertex star in L, that is, for each vertex u ∈ K there is a vertex v ∈ L such that g(N (u)) ⊆ N (v). Let ϕ : Vert K → Vert L map u to the vertex ϕ(u) = v that exists by the star condition. To understand this new function, we take a point x in the interior of a simplex σ in K. Its image, g(x), lies in the interior of a unique simplex τ in L. It follows that the star of every vertex u of σ maps into the star of a vertex v in L that contains the interior of τ . But this implies that v is a vertex of τ . We conclude that each vertex u of σ maps to a vertex ϕ(u) of τ . Hence, ϕ is a vertex map and thus induces a simplicial map f : K → L. This map satisﬁes the condition of an simplicial approximation of g, namely g(N (u)) ⊆ N (f (u)) for each vertex u of K.

BA P

C

O

D

N

E

M

F
G HI

L
K J

A=P

O

D =E

B C
B =C
D

A

PO

M =N N

M L

EG FG

K=L

H

K

JI

F

H=I

J

Figure III.4: The circle on the left is mapped into the closed annulus by a continuous map and a simplicial approximation of that map. Corresponding vertices are labeled by the same letter.

We illustrated the deﬁnitions in Figure III.4. The image we have in mind is that g and f are not too diﬀerent. In particular, g(x) and f (x) belong to a common simplex in L for every x ∈ |K|. Given a continuous map g : |K| → |L|, it is plausible that we can subdivide K suﬃciently ﬁnely so that a simplicial approximation exists. To be sure we prove this fact.

Simplicial Approximation Theorem. If g : |K| → |L| is continuous then there is a suﬃciently large integer n such that g has a simplicial approximation f : SdnK → L.
Proof. Cover |K| with open sets of the form g−1(N (v)), v ∈ Vert L. Since |K| is compact there is a positive real number λ such that any set of diameter less

68

III Complexes

than λ is contained in one of the sets in the open cover. Choose n such that each simplex in SdnK has diameter less than half of λ. Then each star in K has diameter less than λ implying it lies in one of the sets g−1(N (v)). Hence g
satisﬁes the star condition implying the existence of a simplicial approximation.

Bibliographic notes. The terminology we use for abstract and geometric simplicial complexes follows the one in Munkres [3]. The geometric realization of a d-dimensional abstract simplicial complex in R2d+1 goes back to Karl Menger. We have seen that 2d + 1 dimensions suﬃce for the geometric realization of any d-dimensional abstract simplicial complex. Complexes that require that many dimensions have been described by Flores [1] and van Kampen [5]. An example of such a complex is the d-skeleton of the (2d + 2)-simplex, which does not embed in R2d. For d = 1 this is the complete graph of ﬁve vertices, which does not embed in the plane as discussed in Chapter I.
A stronger version of the Simplicial Approximation Theorem played an important role in the development of combinatorial topology during the ﬁrst half of the twentieth century. Known as the Hauptvermutung (German for “main conjecture”), it claimed that any two simplicial complexes that triangulate the same topological space have isomorphic subdivisions. This turned out to be correct for simplicial complexes of dimension 2 and 3 but not higher. The ﬁrst counterexample found by Milnor was a simplicial complex of dimension 7 [2]. We refer to the book edited by Ranicki [4] for further information on the topic.
[1] A. Flores. U¨ ber n-dimensionale Komplexe die in R2n+1 selbstverschlungen sind. Ergeb. Math. Koll. 6 (1933/34), 4–7.
[2] J. Milnor. Two complexes which are homeomorphic but combinatorially distinct. Ann. of Math. 74 (1961), 575–590.
[3] J. R. Munkres. Elements of Algebraic Topology. Perseus, Cambridge, Massachusetts, 1984.
[4] A. A. Ranicki (editor). The Hauptvermutung Book. Kluwer, Dordrecht, the Netherlands, 1996.
[5] E. R. van Kampen. Komplexe in euklidischen R¨aumen. Abh. Math. Sem. Univ. Hamburg 9 (1933), 72-78.

III.2 Convex Set Systems

69

III.2 Convex Set Systems
Simplicial complexes often arise as intersection patterns of collections of sets. We begin with two fundamental results for convex sets and then proceed to the special case in which the sets are geometric balls.

Sets with common points. Let F be a ﬁnite collection of convex sets in Rd. The smaller the dimension of the ambient Euclidean space, d, the more restrictive are the intersection patterns we observe. For example, if d = 1 and we have three intervals that intersect in pairs then it is not possible that they do not intersect as a triplet. This result generalizes to higher dimensions.

Helly’s Theorem. Let F be a ﬁnite collection of closed, convex sets in Rd. Every d + 1 of the sets have a non-empty common intersection iﬀ they all have a non-empty common intersection.

Proof. We prove only the non-obvious direction, by induction over the dimen-

sion, d, and the number of sets, n = card F . The implication is clearly true for

d = 1 and all n as well as for n = d + 1. Now suppose we have a minimal coun-

terexample consisting of n > d+1 closed, convex sets in Rd, which we denote as

X1, X2, . . . , Xn. By minimality of the counterexample, the set Yn =

n−1 i=1

Xi

is non-empty and disjoint from Xn. Because Yn and Xn are both closed and

convex, we can ﬁnd a (d − 1)-dimensional plane h that separates and is disjoint

from both sets, as in Figure III.5. Let F ′ be the collection of sets Zi = Xi ∩ h,

Yn
Xn h
Figure III.5: The (d − 1)-plane separates the n-th set from the common intersection of the ﬁrst n − 1 sets in F . for 1 ≤ i ≤ n−1, each a non-empty, closed, convex set in Rd−1. By assumption, any d of the ﬁrst n − 1 sets Xi have a common intersection with Xn. It follows that the common intersection of the d sets contains points on both sides of h

70

III Complexes

implying that any d of the sets Zi have a non-empty common intersection. By minimality of the counterexample, this implies F ′ = ∅. This intersection is

n−1

F′ =

(Xi ∩ h) = Yn ∩ h.

i=1

But this contradicts the choice of h as a (d − 1)-plane disjoint from Yn.

Convexity is a convenient but unnecessarily strong requirement in Helly’s Theorem. Indeed, the conclusion holds if the sets in F are closed and all their non-empty common intersections are contractible, a property we will deﬁne shortly.

Homotopy type. We prepare the next step by introducing a notion of equivalence between topological spaces that is weaker than topological equivalence. We begin by considering two continuous maps, f, g : X → Y. A homotopy between f and g is another continuous map H : X × [0, 1] → Y that agrees with f for t = 0 and with g for t = 1, that is, H(x, 0) = f (x) and H(x, 1) = g(x) for all x ∈ X. We may think of t ∈ [0, 1] as time and the homotopy as a time-series of functions ft : X → Y deﬁned by ft(x) = H(x, t). It starts at f0 = f and ends at f1 = g. Noting that this deﬁnes an equivalence relation, we write f ≃ g and call f and g if there is a homotopy between them.
This notion can be used to relate spaces. Beginning with a special case, we call Y ⊆ X a retract of X if there is a continuous map r : X → Y with r(y) = y for all y ∈ Y. The map r is called a retraction. We call Y a deformation retract and r a deformation retraction if there is a homotopy between r and the identity on X, r ≃ idX. Clearly, every deformation retract is a retract but not the other way round. For example, a connected interval on the circle is a retract but not a deformation retract of S1. An insubstantial generalization of the notion of deformation retract is obtained by considering maps in both directions. Speciﬁcally, we call two not necessarily nested topological spaces, X and Y, homotopy equivalent if there are continuous maps f : X → Y and g : Y → X such that g ◦ f ≃ idX and f ◦ g ≃ idY. This gives an equivalence relation and we write X ≃ Y and say they have the same homotopy type if they are homotopy equivalent. The maps f and g are sometimes referred to as homotopy equivalences and as homotopy inverses of each other.
To see that having the same homotopy type indeed generalizes being a deformation retract we note if r : X → Y is a deformation retraction then f = r and g = idY are continuous maps that satisfy the conditions and thus establish X ≃ Y. If Y is a single point then X has the homotopy type of a point and we say X is contractible.

III.2 Convex Set Systems

71

Nerves. We now return to our ﬁnite collection of sets, F . Without assuming the sets are convex, we deﬁne the nerve to consist of all non-empty subcollections whose sets have a non-empty common intersection,
Nrv F = {X ⊆ F | X = ∅}.
It is always an abstract simplicial complex, no matter what sets we have in F . Indeed, if X = ∅ and Y ⊆ X then Y = ∅. We can realize the nerve geometrically in some Euclidean space, so it makes sense to talk about its topology type and its homotopy type. We will sometimes do this without explicit construction of the geometric realization. As an example, consider the collection of four sets in Figure III.6 whose union is obviously not homotopy equivalent to the nerve. Nevertheless, taking the nerve preserves the homotopy type if the sets in the collection are convex. This is a fundamental result which we state formally but without proof.

Figure III.6: A collection of four sets whose union is a disk with three holes in the plane. The nerve is the boundary complex of the tetrahedron which has the homotopy type of a sphere.

Nerve Theorem. Let F be a ﬁnite collection of closed, convex sets in Euclidean space. Then the nerve of F and the union of the sets in F have the same homotopy type.

Similar to Helly’s Theorem, the requirement on the sets can be relaxed without

sacriﬁcing the conclusion. Speciﬁcally, if F is triangulable, all sets in F are

closed, and all non-empty common intersections are contractible then Nrv F ≃

F . We note that Helly’s Theorem can be interpreted as a constraint on the

structure of the nerve. Speciﬁcally, if the sets live in Rd then a subcollection

of k ≥ d + 1 sets cannot have all

k d+1

d-simplices in the nerve without having

the entire k-simplex in the nerve.

72

III Complexes

Cˇ ech complexes. We now consider the special case in which the convex sets are closed geometric balls, all of the same radius, r. Let S be a ﬁnite set of points in Rd and write Bx(r) = x + rBd for the closed ball with center x and radius r. The Cˇech complex of S and r is isomorphic to the nerve of this collection of balls,
Cˇ ech(r) = {σ ⊆ S | Bx(r) = ∅}.
x∈σ
Clearly, a set of balls has a non-empty intersection iﬀ their centers lies inside a common ball of the same radius. Indeed, a point y belongs to all balls iﬀ x − y ≤ r for all centers x. An easy consequence of Helly’s Theorem is therefore that every d+1 points in S are contained in a common ball of radius r iﬀ all points in S are. This is Jung’s Theorem which predates the more general theorem by Helly. The Cˇ ech complex does not necessarily have a geometric realization in Rd but it is ﬁne as an abstract simplicial complex; see Figure III.7. For larger radius, the disks are bigger and create more overlaps while

Figure III.7: Nine points with pairwise intersections among the disks indicated by straight edges connecting their centers. The Cˇ ech complex ﬁlls nine of the ten possible triangles as well as the two tetrahedra. The only diﬀerence between the Vietoris-Rips and the Cˇ ech complexes is the tenth triangle, which belongs only to the former.
retaining the ones for smaller radius. Hence Cˇ ech(r0) ⊆ Cˇ ech(r) whenever r0 ≤ r. If we continuously increase the radius, from 0 to ∞, we get a discrete family of nested Cˇ ech complexes. We will come back to this construction later.
Smallest enclosing balls. Beyonds sets of two points it seems cumbersome to recognize the ones that form simplices in the Cˇ ech complex. Nevertheless, there is a fast algorithm for the purpose.

III.2 Convex Set Systems

73

Let σ ⊆ S be a subset of the given points. We have seen that deciding whether or not σ belongs to Cˇ ech(r) is equivalent to deciding whether or not σ ﬁts inside a ball of radius r. Let the miniball of σ be the smallest closed ball that contains σ, which we note is unique. The radius of the miniball is smaller than or equal to r iﬀ σ ∈ Cˇ ech(r), so ﬁnding it solves our problem. Observe that the miniball is already determined by a subset of k + 1 ≤ d + 1 of the points, which all lie on its boundary. If we know this subset then we can verify the miniball by testing that it indeed contains all the other points. In a situation in which we have many more points than dimensions, the chance that a point belongs to this subset is small and discarding it is easy. This is the strategy of the Miniball Algorithm. It takes two disjoint subsets τ and υ of σ and returns the miniball that contains all points of τ in its interior and all points of υ on its boundary. To get the miniball of σ we call MiniBall(σ, ∅).

ball MiniBall(τ, υ) if τ = ∅ then compute the miniball B of υ directly else choose a random point u ∈ τ ; B = MiniBall(τ − {u}, υ); if u ∈ B then B = MiniBall(τ − {u}, υ ∪ {u})
endif
endif; return B.

When τ is empty, we have a set υ of at most d + 1 points, which we know all lie on the boundary. Assuming the dimension, d, is a constant, we can compute their miniball directly and in constant time. To analyze the running time, we ask how often we execute the test “u ∈ B”. Let tj(n) be the expected number of such tests for calling MiniBall with n points in τ and j = d + 1 − card υ possibly open positions on the boundary of the miniball. Obviously, tj(0) = 0, and it is reassuring that the constant amount of work needed to compute the ball for the at most d + 1 points in υ is payed for by the test that initiated the call. Consider n > 0. We have one call with parameters n − 1 and j, one test “u ∈ B”, and one call with parameters n − 1 and j − 1. The probability that the second call indeed happens is at most j out of n. Hence,

tj (n)

≤

tj (n

−

1)

+

1

+

j n

·

tj−1(n

−

1).

Setting j = 0 we get t0(n) ≤ t0(n − 1) + 1 and therefore t0(n) ≤ n. Similarly, t1(n) ≤ t1(n − 1) + 2 ≤ 2n. More generally, we get tj(n) ≤ (j + 1)!n, which is a constant times n since j ≤ d + 1 is a constant. In summary, for constant
dimension the algorithm takes expected constant time per point.

74

III Complexes

Vietoris-Rips complexes. Instead of checking all subcollections, we may just check pairs and add 2- and higher-dimensional simplices whenever we can. This simpliﬁcation leads to the Vietoris-Rips complex of S and r consisting of all subsets of diameter at most 2r,
Vietoris-Rips(r) = {σ ⊆ S | diam σ ≤ 2r}.
Clearly, the edges in the Vietoris-Rips complex are the same as in the Cˇ ech complex. Furthermore, Cˇ ech(r) ⊆ Vietoris-Rips(r) because the latter contains every simplex warranted by the given edges. We now prove that the containment relation can be reversed if we are willing to increase the radius of the Cˇ ech complex by a multiplicative constant.

Vietoris-Rips Lemma. Letting S be a space and r ≥ 0, we have Vietoris-Rips(r)

ﬁ⊆niCˇteecshet(√of2pr)o.ints

in

some

Euclidean

Proof. A simplex is regular if all its edges have the same length. A convenient representation for dimension d is the standard d-simplex, ∆d, spanned by the endpoints of the unit coordinate vectors in Rd+1; see Figure III.8. Each edge of

z 0

Figure III.8: The standard triangle connecting the unit coordinate vectors in R3.

√ ∆d has length 2. By symmetry, the distance of the origin from the standard

simplex is its distance from the barycenter, the

are

all

equal

to

1 d+1

.

That

distance

is

therefore

point z w√hose d + z = 1/ d + 1.

1 coordinates The barycen-

ter is also the center of the smallest d-sphere that passes through the vertices of

∆d. Writing rd for the radius of that sphere, we have rd2 = 1 −

z

2

=

d d+1

.

For

dimension 1, this is indeed half the length of the interval, and for dimension

2, it is the radius of the equilateral triangle. As the dimension goes to inﬁnity,

the radius grows and approaches 1 from below. Any set of d + 1 or fewer points

III.2 Convex Set Systems

75

f√or which the same d-ball of radius rd is the miniball h√as a pair at distance Crˇde2c≤ho(r1rdlaf)or.grMearul.lltIditp, fltoyhlilneogwlawsttittehhra√tis2eavrewsruyebgscieomtmpVplieleextxoorofisfd-CRˇiaeimpchse((tr√e)r2⊆r)C2ˇ, ewocrhhi(lce√hss2irmbredpl)ol.ineSsgisnthctoee claimed subcomplex relationship.
Bibliographic notes. Helly proved his theorem at the beginning of last century, ﬁrst for convex sets and then for sets with contractible common intersections [4, 5]. The concept of nerve has been introduced at about the same time by Alexandrov [1]. The Nerve Theorem goes back to Borsuk [2], Leray [6], and others. It has a complicated literature, with version diﬀering in the generality of the assumption and the strength of the conclusion. The Cˇ ech complexes are inspired by the theory of Cˇ ech homology, from which they borrow their name. The Vietoris-Rips complex appears in Vietoris [7] and in later work by Rips; see [3]. Algorithms for ﬁnding the smallest ball enclosing a ﬁnite set of points have been studied in computational geometry, culminating in the randomized minidisk algorithm of Welzl which has versions that are eﬃcient even for large sets in high dimensions [8].
[1] P. S. Alexandrov. U¨ ber den allgemeinen Dimensionsbegriﬀ und seine Beziehungen zur elementaren geometrischen Anschauung. Math. Ann. 98 (1928), 617–635.
[2] K. Borsuk. On the imbedding of systems of compacta in simplicial complexes. Fund. Math. 35 (1948), 217–234.
[3] M. Gromov. Hyperbolic groups. In Essays in Group Theory, MSRI Publ. 8, Springer-Verlag, 1987.
[4] E. Helly. U¨ ber Mengen konvexer K¨orper mit gemeinschaftlichen Punkten. Jahresber. Deutsch. Math.-Verein. 32 (1923), 175–176.
[5] E. Helly. U¨ ber Systeme von abgeschlossenen Mengen mit gemeinschaftlichen Punkten. Monatsh. Math. Physik 37 (1930), 281–302.
[6] J. Leray. Sur la forme des espaces topologiques et sur les points ﬁxes des repr´esentations. J. Math. Pures Appl. 24 (1945), 95–167.
[7] L. Vietoris. U¨ ber den h¨oheren Zusammenhang kompakter R¨aume and eine Klasse von zusammenhangstreuen Abbildungen. Math. Ann. 97 (1927), 454–472.
[8] E. Welzl. Smallest enclosing disks (balls and ellipsoids). In New Results and New Trends in Computer Science, H. A. Maurer (ed.), Springer-Verlag, Lecture Notes in Computer Science 555 (1991), 359–370.

76

III Complexes

III.3 Delaunay Complexes
In this section, we introduce a geometric constructions that limits the dimension of the simplices we get from a nerve. The main new structures are the Voronoi diagram and the Delaunay complex of a ﬁnite set of points. We begin by studying the inversion of space.
Inversion. Recall that Sd is the d-dimensional sphere with center at the origin and unit radius in Rd+1. To invert Rd+1, we map each point x = 0 to the point on the same half-line whose distance from the origin is one over the distance of x from 0. More formally, the inversion maps x to ι(x) = x/ x 2. It exchanges inside with outside and leaves points on Sd ﬁxed. Clearly, ι(ι(x)) = x. We construct the image of a point x inside Sd by drawing right-angled triangles. First, we get a point p ∈ Sd such that 0xp has a right angle at x. Second, we choose x′ on the half-line of x such that 0px′ has a right angle at p. The angle at 0 is the same in both so the two triangles are similar. Hence,
x : p = p : x′ which implies x x′ = p 2 = 1 and thus x′ = ι(x). We use this construction to show that the inversion maps spheres to spheres. We note, however, that it generally does not map centers to centers.
z’
z

x’

x

0

y’

y

Figure III.9: As z sweeps out the circle passing through x and y, its image, z′ = ι(z), sweeps out the circle passing through x′ and y′.
Inversion Lemma. Let Σ be a d-sphere in Rd+1. If 0 ∈ Σ then ι(Σ) is a d-sphere and if 0 ∈ Σ then ι(Σ) is a d-plane.
Proof. Consider ﬁrst the case in which Σ does not pass through the origin, as in Figure III.9. If 0 is the center of Σ then the result is obvious, so assume 0 is

III.3 Delaunay Complexes

77

not the center. Draw the line passing through 0 and the center; it intersects Σ in points x and y, which we invert to get points x′ = ι(x) and y′ = ι(y). Let z be another point on Σ and z′ = ι(z) its inverse. Then x x′ = z z′ = 1 which implies that the triangles 0xz and 0z′x′ are similar. By the same token, 0yz and 0z′y′ are similar. But xyz has a right angle at z implying the angles at x′ and y′ inside x′y′z′ add up to a right angle. It follows that x′y′z′ has a right angle at z′. As z travels on Σ, the sphere with diameter xy, the image z′ travels on ι(Σ), the sphere with diameter x′y′. What happens when Σ passes through the origin, say 0 = x? Then the triangle 0y′z′ has a right angle at y′. Equivalently, the image of Σ is the plane normal to the vector y and passing through the point y′.
The Inversion Lemma suggests we think of a d-plane as a special kind of d-sphere, namely one that passes through the point at inﬁnity.

Stereographic projection. The inversion can be deﬁned relative to any

center z ∈ Rd+1

and

any

radius

r

>

0,

that

is,

ιz,r (x)

=

r

·

ι(

x−z r

)

+

z.

It is

not diﬃcult to check that x and x′ = ιz,r(x) indeed lie on the same half-line

emanating from z and the product of their distances is x − z x′ − z = r2,

as desired. We consider the special case in which the center is the point N =

N

Figure III.10: The stereographic projection maps a circle on the unit sphere to a circle in the plane. If the circle on the sphere passes through the north-pole then its image is a line, that is, a circle that passes through the point at inﬁnity.

(0, . . . , 0, 1),

the

north-pole

of

Sd,

and

the

radius

is

r

=

√ 2,

the

Euclidean

distance between the north-pole and the equator. The image of Sd is the d-

plane of points with vanishing (d + 1)-st coordinates, which we denote as Rd.

The stereographic projection is the restriction of this particular inversion to

the unit sphere, that is, ς : Sd − {N } → Rd deﬁned by ς(x) = ιN,√2(x), as

78

III Complexes

sketched in Figure III.10. Similar to the inversion, the stereographic projection preserves spheres.
Stereographic Projection Lemma. Let Σ′ be a (d − 1)-sphere on Sd. If N ∈ Σ′ then ς(Σ′) is a (d − 1)-sphere and if N ∈ Σ′ then ς(Σ′) is a (d − 1)-plane in Rd.
Indeed, every (d − 1)-sphere considered in the lemma is the intersection of Sd with another d-sphere. Its image is therefore the intersection of Rd with the image of the d-sphere, which is either a d-sphere or a d-plane. The intersection is thus either a (d − 1)-sphere or a (d − 1)-plane. As before, we consider a plane as a special sphere that passes through the point at inﬁnity.
Voronoi diagram. We use the stereographic projection and the more general inversion to elucidate the construction of a particular simplicial complex from a ﬁnite set S ⊆ Rd. The Voronoi cell of a point u in S is the set of points for which u is the closest, Vu = {x ∈ Rd | x − u ≤ x − v , v ∈ S}. It is the

Figure III.11: The Voronoi diagram of nine points in the plane. By deﬁnition, each vertex of the diagram is equally far from the points that generate the incident Voronoi cells and further from all other points in S.
intersection of half-spaces of points at least as close to u as to v, over all points v in S. Hence, Vu is a convex polyhedron in Rd. Any two Voronoi cells meet at most in a common piece of their boundary, and together the Voronoi cells cover the entire space, as illustrated in Figure III.11. The Voronoi diagram of S is the collection of Voronoi cells of its points.
We will shortly use a generalization of the concept to points u with real weights wu. The weighted squared distance, or power, of a point x ∈ Rd from

III.3 Delaunay Complexes

79

u is then πu(x) = x − u 2 − wu. For positive weight, we can interpret the weighted point as the sphere with center u and square radius wu. For a point x outside this sphere, the power is positive and equal to the square length of a tangent line segment from x to the sphere. For x on the sphere the power vanishes, and for x inside the sphere the power is negative. The bisector of two weighted points is the set of points with equal power from both. Just like in the unweighted case, the bisector is a plane normal to the line connecting the two points, except that is not necessarily halfway between them; see Figure III.12. Given a ﬁnite set of weighted points, we can thus deﬁne the weighted

Figure III.12: The bisectors of pairs of weighted points. From left to right: two disjoint circles side by side, two intersecting circles, and two nested circles.
Voronoi cell, or power cell, of u as the set of points x ∈ Rd with πu(x) ≤ πv(x) for all weighted points v in the set. Finally, the weighted Voronoi diagram, or power diagram, is the set of power cells of the weighted points.
Lifting. We get a diﬀerent and perhaps more illuminating view of the Voronoi diagram by lifting its cells to one higher dimension. Let S be a ﬁnite set of points in Rd, as before, but draw them in Rd+1, adding zeros as (d + 1)-st coordinates. Map each point u ∈ S to Sd using the inverse of the stereographic projection, and let Πu be the d-plane tangent to Sd touching the sphere in the point ς−1(u), as illustrated in Figure III.13. Using inversion, we now map each d-plane Πu to the d-sphere Σu = ι(Πu). It passes through the north-pole and is tangent to Rd, the preimage of Sd. The arrangements of planes and of spheres are closely related to the Voronoi diagram. We focus on the spheres ﬁrst.
First Sphere Lemma. A point x ∈ Rd belongs to the Voronoi cell of u ∈ S iﬀ the ﬁrst intersection of the directed line segment from x to N is with the d-sphere Σu.
Proof. Interpret the sphere Σu as a weighted point, namely its center with weight equal to the square of its radius. The power of a point x is the squared length of a tangent line segment, which is equal to x − u 2 if x ∈ Rd. It

80

III Complexes

N

Σv

Σu

u

v

Πu

Πv

Figure III.13: We map the points u and v in R1 to the lines Πu and Πv tangent to S1 and further to the circles Σu and Σv passing through N and tangent to R1. The dashed line connecting N and the midpoint between u and v passes through the intersection of the two circles and the intersection of the two lines.
follows that the weighted Voronoi cell of the weighted center intersect Rd in the Voronoi cell of u. The claim follows because all bisectors of the weighted points pass through N .
Switching from spheres to planes we get a similar characterization of the Voronoi diagram in terms of tangent planes.
First Plane Lemma. A point x ∈ Rd belongs to the Voronoi cell of u ∈ S iﬀ the ﬁrst intersection of the directed line segment from N to x is with the d-plane Πu.
Delaunay triangulation. The Delaunay complex of a ﬁnite set S ⊆ Rd is isomorphic to the nerve of the Voronoi diagram,
Delaunay = {σ ⊆ S | Vu = ∅}.
u∈σ
We say the set S is in general position if no d + 2 of the points lie on a common (d − 1)-sphere. This assumption implies that no d + 2 Voronoi cells have a non-empty common intersection. Equivalently, the dimension of any simplex

III.3 Delaunay Complexes

81

in the Delaunay complex is at most d. Assuming general position, we get a geometric realization by taking convex hulls of abstract simplices, as in Figure III.14. The result is often referred to as the Delaunay triangulation of S. To

Figure III.14: The Delaunay triangulation superimposed on the Voronoi diagram. No four of the given points are cocircular implying the Delaunay complex has simplices of dimension at most two and a canonical geometric realization in R2.
see that this construction gives indeed a geometric realization of the Delaunay complex, we lift the points to the set ς−1(S) on Sd. Similarly, we lift a general point x ∈ Rd to the d-plane Πx tangent to Sd at the point ς−1(x). Keeping the same normal direction, we move this plane toward N . This corresponds to growing a (d − 1)-sphere around x. The ﬁrst point encountered by the plane corresponds to the ﬁrst point encountered by the sphere, which is therefore the nearest to x. This suggests we add N to the set of lifted points and we take the convex hull in Rd+1. The boundary of the resulting convex polytope consists of faces up to dimension d, some of which share N as a vertex. We are interested in the other faces, since they are spanned by points that correspond to Voronoi cells with a non-empty common intersection. Using central projection from N , we map these faces to Rd. By convexity of the polytope, the images of the faces have no improper intersections. Indeed, we get the geometric realization of the Delaunay complex, as promised.
Similar to the Voronoi diagram, we can generalize the Delaunay complex to a ﬁnite set of points with real weights. Speciﬁcally, the weighted Delaunay complex is the abstract simplicial complex that contains a subset of the weighted points iﬀ their weighted Voronoi cells have a non-empty common intersection. In contrast to the unweighted case, the cell of a weighted point can be empty, a diﬀerence that is sometimes overlooked. As a consequence, the vertex set of the weighted Delaunay triangulation is a subset and not necessarily the entire set

82

III Complexes

of given weighted points. Assuming general position, this complex can again be geometrically realized by taking convex hulls of the abstract simplices. The appropriate notion of general position is that no point of Rd has the same power from more than d + 1 of the weighted points. This property is satisﬁed with probability one, a necessary requirement for a general position assumption.
Bibliographic notes. Voronoi diagrams are named after Georgy Voronoi [4] and Delaunay triangulations after Boris Delaunay (also Delone) [2]. Both structures have been studied centuries earlier by others, including Dirichlet, Gauß, and Descartes. Weighted Voronoi diagrams are perhaps as old as the unweighted ones and are known under a plethora of diﬀerent names, including Thiessen polygons, Dirichlet tessellations, and power diagrams; see the survey article by Aurenhammer [1]. Their dual weighted Delaunay triangulations are also known under a variety of names, including regular triangulations and coherent triangulations; see e.g. [3].
[1] F. Aurenhammer. Voronoi diagrams — a study of a fundamental geometric data structure. ACM Comput. Surveys 23 (1991), 345–405.
[2] B. Delaunay. Sur la sph`ere vide. Izv. Akad. Nauk SSSR, Otdelenie Matematicheskii i Estestvennyka Nauk 7 (1934), 793–800.
[3] I. M. Gelfand, M. M. Kapranov and A. V. Zelevinsky. Discriminants, Resultants and Multidimensional Determinants. Birkh¨auser, Boston, Massachusetts, 1994.
[4] G. Voronoi. Nouvelles applications des param`etres continus `a la th´eorie des formes quadratiques. J. Reine Angew. Math. 133 (1907), 97–178, and 134 (1908), 198–287.

III.4 Alpha Complexes

83

III.4 Alpha Complexes
In this section, we use a radius constraint to introduce a family of subcomplexes of the Delaunay complex. These complexes are similar to the Cˇ ech complexes but diﬀer from them by having canonical geometric realizations.
Union of balls. Let S be a ﬁnite set of points in Rd and r a non-negative real number. For each u ∈ S, we let Bu(r) = u + rBd be the closed ball with center u and radius r. The union of these balls is the set of points at distance at most r from at least one of the points in S. To decompose the union, we intersect each ball with the corresponding Voronoi cell, Ru(r) = Bu(r) ∩ Vu. Since balls and Voronoi cells are convex, the Ru(r) are also convex. Any two of them are disjoint or overlap along a common piece of their boundaries, and together the Ru(r) cover the entire union, as in Figure III.15. The alpha complex is isomorphic to the nerve of this cover,
Alpha(r) = {σ ⊆ S | Ru(r) = ∅}.
u∈σ
Since Ru(r) ⊆ Vu, the alpha complex is a subcomplex of the Delaunay complex.

Figure III.15: The union of disks is decomposed into convex regions by the Voronoi diagram. The corresponding alpha complex is superimposed.
It follows that for a set S in general position, we get a geometric realization by taking convex hulls of abstract simplices, same as in the previous section. Furthermore, Ru(r) ⊆ Bu(r) which implies Alpha(r) ⊆ Cˇ ech(r). Since the Ru(r) are closed and convex and together they cover the union, the Nerve

84

III Complexes

Theorem implies that the union of balls and Alpha(r) have the same homotopy type, u∈S Bu(r) ≃ |Alpha(r)|.
Weighted alpha complexes. For many applications, it is useful to permit balls with diﬀerent sizes. An example of signiﬁcant importance is the modeling of biomolecules, such as proteins, RNA, and DNA. Each atom is represented by a ball whose radius reﬂects the range of its van der Waals interactions and thus depends on the atom type. Let therefore S be a ﬁnite set of points u with real weights wu. Same as in the previous section, we think of u as a ball Bu with center u and squared radius ru2 = wu. We again consider the union of the balls, which we decompose into convex regions, now using weighted Voronoi cells, Ru = Bu ∩ Vu. This is illustrated in Figure III.16. In analogy to

Figure III.16: Convex decomposition of a union of disks and the weighted alpha complex superimposed.
the unweighted case, the weighted alpha complex of S is isomorphic to the nerve of the regions Ru, that is, the set of abstract simplices σ ⊆ S such that
u∈σ Ru = ∅. The weighted alpha complex is a subcomplex of the weighted Delaunay complex. Assuming the weighted points are in general position, we get again a geometric realization by taking convex hulls of abstract simplices. It will be convenient to blur the diﬀerence, which we do by using the exact same notation and dropping the term weighted unless it is essential.
Filtration. There is a free parameter, r, which we may vary to get smaller and larger unions and smaller and larger alpha complexes. Sometimes, there is

III.4 Alpha Complexes

85

a best choice of r but more often it does not exist. Indeed, the more interesting object is the family of alpha complexes, since it represents the data at diﬀerent scale levels, if you will, and it allows us to draw conclusions from comparisons between diﬀerent complexes in the same family.
We ﬁrst explain the construction in the relatively straightforward unweighted case. Given a ﬁnite set S ⊆ Rd, we continuously increase the radius and thus get a 1-parameter family of nested unions. Correspondingly, we get a 1-parameter family of nested alpha complexes, but because they are all subcomplexes of the same Delaunay complex, which is ﬁnite, only ﬁnitely many them are distinct. Writing Ki for the i-th alpha complex in this sequence, we get

∅ = K0 ⊆ K1 ⊆ . . . ⊆ Km,

which we call a ﬁltration of Km = Delaunay. What we have here is a stepwise assembly of the ﬁnal complex in such a way that every set along the way is a simplicial complex.

There is more than one way to generalize this construction to the weighted

case. with

For Bu,

example, we could which has radius

√grwouw,

the we

corresponding balls would increase the

uniformly. radius to

√Swtaurt+ingr

for r > 0. This makes sense in many applications, including the modeling of

biomolecules, but has the complicating side eﬀect that the Voronoi diagram of

the set of balls for diﬀerent values of r are not necessarily the same. Hence,

the resulting alpha complexes are not necessarily nested. Instead, we let Bu(r) be the ball with center u and squared radius wu + r2. The points x with equal power from Bu(r) and Bv(r) satisfy x − u 2 −(wu +r2) = x − v 2 −(wv +r2). The squared radius cancels, implying that the same points x form the bisector

for all choices of r. Hence, the union of balls are decomposed into convex sets

by the same weighted Voronoi diagram for any r. Similarly, the weighted alpha

complexes are all subcomplexes of the weighted Delaunay triangulation of the

given points. More speciﬁcally, the alpha complex for r0 is a subcomplex of that for r whenever r0 ≤ r and we get again a ﬁltration that starts with the

empty complex and ends with the entire weighted Delaunay complex, same as

in the unweighted case.

The structure of a simplex. We are interested in the diﬀerence between two contiguous complexes in the ﬁltration, Ki+1 − Ki. For this purpose, we study the structure of an abstract simplex, and not just because it arises as element of the alpha complex. Recall that an abstract d-simplex, α, is a set of d + 1 points. It has 2d+1 subsets, including the empty set and α itself. In the Hasse diagram of this set system, we draw a node for each subset of α and

86

III Complexes

an arc for each subset relation, avoiding arcs that are implied by transitivity. Drawing the containing sets above the contained ones and keeping subsets of same cardinality in common rows, we get a picture like in Figure III.17. It looks

Figure III.17: The Hasse diagram of an abstract 3-simplex. From top to bottom, the rows of nodes contain the 3-simplex, the four 2-simplices, the six 1-simplices, the four 0-simplices, and the empty set.
like the edge-skeleton of the (d + 1)-dimensional cube, and not by coincidence. Indeed, we can construct the Hasse diagram inductively, ﬁrst drawing the Hasse diagram of a (d − 1)-face. By inductive assumption, this is the edge-skeleton of a d-cube. When we add the last point, ud, to the simplex, we get a new set β ∪ {ud} for each old set β. To update the Hasse diagram, we add a second copy of the d-cube and connect corresponding sets. This is precisely the recipe for drawing the (d + 1)-cube.
Another useful method constructs the Hasse diagram one pair of adjacent nodes at a time. We describe this in the other direction, disassembling the diagram one pair at a time. Speciﬁcally, we allowed ourselves to remove a pair β0 ⊂ β if β is the only remaining set that properly contains β0. Note that β is necessarily maximal and we have dim β0 = dim β − 1 because the operation maintains the system as an abstract simplicial complex. It is easy to see that disassembling the Hasse diagram of the d-simplex this way is possible, for example by removing the pairs β0 ⊂ β0 ∪ {ud} in the order of decreasing dimension of β0.
Collapses. Now suppose we have a geometric d-simplex, σ, and we consider the Hasse diagram of its system of faces, to which we add the empty set to be consistent with before. The operation of removing a pair β0 ⊂ β corresponds to

III.4 Alpha Complexes

87

removing a pair of faces τ0 < τ . The condition is that τ is the only remaining proper coface of τ0. The operation of removing the pair τ0 < τ is referred to as an elementary collapse, or a (k, k + 1)-collapse when k = dim τ0. As illustrated in Figure III.18, a d-simplex can be reduced to a single simplex by a sequence of 2d − 1 elementary collapses. Since the elementary collapses maintain the set as a simplicial complex, the remaining simplex is necessarily a vertex. We can apply elementary collapses more generally to any simplicial complex, K, and not just that consisting of all faces of a simplex. Letting L be the result of the collapse, we note that there is a deformation retraction from |K| to |L|. This implies that K and L have the same homotopy type. We call K collapsible if there is a sequence of elementary collapses that reduces K to a single vertex. Since collapses preserve the homotopy type, this is only possible if |K| is contractible. As it turns out, not every simplicial complex with contractible underlying space is also collapsible.

Figure III.18: From left to right: a tetrahedron, the three triangles left after a (2, 3)collapse, the three edges left after three additional (1, 2)-collapses, and the vertex left after three additional (0, 1)-collapses.

It is convenient to extend the notion of collapse and consider pairs of simplices

τ < υ whose dimensions diﬀer by one or more. Instead of requiring that υ is

the only proper coface of τ , we now require that all cofaces of τ are faces of

υ.

Letting k = dim τ and ℓ = dim υ, we get

ℓ−k i

simplices of dimension

i + k and therefore a total of 2ℓ−k =

ℓ−k i=0

ℓ−k i

simplices between τ and υ,

including the two. The Hasse diagram of this set of faces has the structure of

an (ℓ − k − 1)-simplex, which we have seen can be collapsed down to a vertex

by a sequence of 2ℓ−k−1 − 1 elementary collapses. Each (i, i + 1)-collapse in this

sequence corresponds to an (i + k + 1, i + k + 2)-collapse in the sequence that

removes the cofaces of τ . We append a (k, k + 1)-collapse which ﬁnally removes

τ together with the last remaining proper coface. We refer to this sequence

of 2ℓ−k−1 elementary collapses as a (k, ℓ)-collapse. Since elementary collapses

preserve the homotopy type so do the more general collapses.

88

III Complexes

Critical and regular events. Let ri be the smallest radius such that Ki = Alpha(ri). A simplex τ belongs to Ki+1 but not to Ki if the balls with radius ri+1 have a non-empty common intersection with the corresponding intersection of Voronoi cells but the balls with radius ri do not; see Figure III.19. Assuming general position and dim τ = k, the intersection of Voronoi cells, Vτ = u∈τ Vu, is a convex polyhedron of dimension d − k. By deﬁnition of ri+1, the balls Bu(ri+1) intersect Vτ in a single point, x.

Figure III.19: Left: three points spanning an acute triangle. In the alpha complex evolution, the three edges appear before a critical event adds the triangle. Right: three points spanning an obtuse triangle. Two edges appear before a regular event adds the triangle together with the third edge.
Consider ﬁrst the case that x lies on the boundary of Vτ . Then there are other Voronoi polyhedra for which x is the ﬁrst contact with the union of balls. Assume Vτ is the polyhedron with highest dimension in this collection and let Vυ be the polyhedron with lowest dimension. Correspondingly, τ is the simplex with lowest dimension in Ki+1−Ki and υ is the simplex with highest dimension. The other simplices in Ki+1 − Ki are the faces of υ that are cofaces of τ . In other words, we obtain Ki from Ki+1 by a (k, ℓ)-collapse, where k = dim τ and ℓ = dim υ. We call this collapse a regular event in the evolution of the alpha complex.
Consider second the case that x lies in the interior of Vτ and it is not the ﬁrst contact for any higher-dimensional Voronoi polyhedron. In other words, τ is the only simplex in Ki+1 − Ki. We call the addition of τ a critical!event because it changes the homotopy type of the complex. Since the union of balls has the homotopy type of the complex, we know that also the union changes its type when the radius reaches ri+1.

