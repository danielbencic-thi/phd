Complexity of the Mover's Problem and Generalizations Extended Abstract
John H. Reif* Computer Science Department
University of Rochester Rochester, New York 14627

o. Summary
This paper concerns the problem of moving a polyhedron through Euclidean space while avoiding polyhedral obstacles.
1. Introduct ion
The classical mover's_ problem in d-space is:
Input: (R,S,PI,PF) where R is a set of polyhedral obstacles fixed in Euclidean d-space, and S (say, a sofa) is a.r~gid polyhedron with distinguished posltlons PI and PF·
Property: Can S be moved (by a sequence of translations and rotations in d-space) from position PI to PF without contacting any element of R?
We consider the discretized version of this problem; the input Rand S are given as systems of linear inequalities within a fixed accuracy
T,O<T<l.
L _.-._'. ---------- _..---"'1 ~-P~ ~~1

A correct algorithm for the discretized mover's problem is allowed to yield an inconclusive answer (i.e., "maybe") only in the case that:
1) S, contracted by a factor of (l-T), can be moved from PI to PF' but
2) the move is impossible if S is expanded by a factor of (l+T).
We present (Section 4) a polynomial-time algorithm for the classical mover's problem in 2 and 3 dimensions. In spite of considerable previous work on this problem 1 ,2,3,4 by workers in the robotics field, no algorithm guaranteed to run in polynomial time and with fixed accuracy has previously appeared.
The mover's problem may be qeneralized to allow S (the object to be moved) to consist of multiple polyhedra freely linked together at various distinguished vertices. (A typical example is a robot arm with multiple joints.) Again, the input is specified by systems of linear inequalities with accuracy T.

1-1-~~~ ~;.,~~=~=--~.~--=:~
ll=-=~-=_~_: .---------------- -_.- --.

~i, :It: 1: A PI t) ~·'F ,,~

Pr'Jh'c'T;: e'l 1,',~'n';]le S

It unt .le:.; rlq <3:'

1e in R?

oved

*The author has recently moved to Aiken Computation Laboratory, Harvard University, Cambridge, r1assachusetts.

- - - -- '-1

I

I

P8

I

'- -- _ --'

Figure 2: A siJll;ticn to the 2-~ ~:over's PraLle ::'f ~ig_ure 1. S may be r:,Qved through p051tlOIlS p("rJ,p,,·· .• P;o-Pr·

421

CH 1471-2/79/0000-0421$00.75 © 1979 IEEE

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on August 25,2022 at 13:43:13 UTC from IEEE Xplore. Restrictions apply.

Generalized mover's problems have been considered5~G~1n addition to the previously sited references.
We present (Section 3) a polynomial-space algorithm for the generalized mover's problem. Furthermore~ we show (Section 2) the generalized mover's problem in 3-space is P-space hard, by a direct log-space reduction from the acceptance problem for polynomial space bounded Turing machines.
The generalized mover's problem is thus the ii!st know~ ~spa(e complete computational geometry problem and is one of very few known p-space complete combinatorial problems which is not a game with a polynomial time limit.)
2. The Generalized Mover's Problem is P-Space Hard
Let Mbe a deterministic Turing Machine with polynomial space bound s(n) ~.n. We assume without loss of generality, M has
1) one tape with tape alphabet {O,l}, and
2) a planar finite state diagram.
Let 0 be the set of states of M, with
distinguished initial state qI sO. Let we {O,l}n
be an input string. We construct a generalized mover's problem (R,S,PI,PF) in 3-space which has
a solution if and only if Maccepts w. Assuming a fixed binary encoding of the generalized mover's problem into {O,l}*, our construction requi res O( log n) work space on a determi ni st i c Turing machine.
In our constructed generalized mover's problem, the obstacles R define a flat slab (of thickness 2s(n)+1). Within the slab is a network of open channels. These channels are connected as in the finite-state control of M:
1) there are 101 junctions between the channels and each junction is named for a distinct state q s 0, and
2) the channels are in one-to-one correspondence with the state transitions of M.
Figure 3 illustrates the object S to be moved; it consists of a vertical bar of length s(n) units, with s(n) "arms" freely linked to the bar at unit intervals. The cross-section of a typical channel is illustrated in Figure 4, and consists of 2s(n)-1 "arm slots" at levels {1,2, ... ,2s(n)-1}. S is positioned with-in a channel as in Figure 5, with each arm in either the left or right portion of an arm slot. (The "elbow" at the end of each arm constrains the arm to remain either to the left or to the right.) The key idea is that the position of S encodes the tape contents of M:

1) the position (left,right) of the ith arm describes the symbol (0 or 1, respectively) on the ith tape cell, and
2) the vertical position of S describes the position of the read/write head of M (in particular~ the arm of S currently in the arm slot of level s(n) corresponds to the currently scanned tape cell).

3: nrc 8bj.'Ct S to b·
C, 0,1, ... ,1,1 ,G.

T I

S(tl)

t e,

.I

1 i 11 ~, r;

;r:cdi:l'l

---- ~\-- _.-.----- -------------------- -- ----T-------

\

-t-

I

I

~~i":

J I

/ /
/

I'

l

.

~s(r,) i 1
:
~__,_._.

\
\

Figure 5: S P()s1t~cnc'd I\·~thin a U'oss-sEctio'l s(n) '" 5~ S encodes taCJc conter:ts 0,0,1,0,1 current Iy IJLd,.'r tnt' tc ~e hud.

a L:pe

.I',itf] Ii is

422

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on August 25,2022 at 13:43:13 UTC from IEEE Xplore. Restrictions apply.

We now provide the further details of the construction of the channels which simulate the state transitions of M.
If the tape is moved to the right in a state transition, then in the corresponding channel the arm slots slant upward one unit so as to force S to be moved vertically ~ one unit. A symmetric construction is used in the case a tape is moved to the left (see Figure 6).

We assume that the read/write head of M is not moved on any transition during which a tape cell is written.
In a state transition in which the currently scanned tape cell is set to 1, we have a corresponding channel with a special crosssection described in Figure 8, which forces the arm at level s(n) to move from the left to the right. (Note: the arms of S are so configured that it is not possible for an arm to be positioned in the center of a channel crosssection.) The case in which a tape ~p~l originally 1 is set to 0 is symmetric.

q'
fJ5JL:_15~': /', l('~<]th:is0 (;"",- ,eetion cf 2. ch'rllcl \ lief :ur"u2', S U,' one unit in "1 stdtt: lrdl~ili('r; iro~l q to q'.
To test if the currently scanned tape cell is 0 or 1, we construct a junction which forces S to branch to left or right channels, depending on the position of the arm within the arm slot of level s(n). (If this arm is originally positioned to the left, then S branches left, and vice versa.) See Figure 7.
brJrlch : ':1 t

fl' I

I~

lJ ~

I

,
I

! (j;

c'
.~
7;
c'
~_:

or i gin a 1 pc! 'OJ i ti 0 r, 0 f a rrr;
(r", ;J-5ection -3t 10,,,1 <;(11) \r:h~h for"ce', tfH' ann cf ::, 1I ()I~, til" left to tne rirJht po"itia:; (If th~' M"] slot.

fi9~!".-e_t: Crosc;-sE'ctir;n at lE:v~l s(n) of-: jl;nct 1'::, r",ich for,:es S to brancf; left Or' right d,:~J(?ndina on the ~,ositirJn of t">.' Grin at level s(n).

In the initial position PI' let S be within
the junction corresponding to the initial state qI and with the arms of S encoding the input
string w. Let the final position PF have S
within the junction corresponding to the final state qF and with the arms of S in some arbitrary
position. (We assume that this final junction does not constrain the arms of S.)
In the resulting generalized mover's problem, S can be moved from position PI to posi-
tion PF if and only if Maccepts input string w.

423 Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on August 25,2022 at 13:43:13 UTC from IEEE Xplore. Restrictions apply.

3. A Polynomial-Space Algorithm. for the Generalized Mover's Problem
We now sketch a simple polynomial-space algorithm for the generalized mover's problem in d-space_ with a set of polyhedral obstacles R fixed in d-space and a connected set S of polyhedra freely linked at various distinguished vertices, and distinguished positions PI and PF
of S. The input is assumed to be specified within accuracy T, 0 < T < 1.

A QQ; rl P of S will be specified by a sequence p \1.1"" ,xdI) of length d' =d+(d-l )h+l with each ~lement of Xi given within accuracy T. We wish to determine if S can be moved from position PI to position PF without contacting any of the obstacles of R.
Let ¢R,S(P) be the predicate which is true iff position p is both a feasible position of S and S contacts no element of R. ¢R~S can be specified by a system of multinomial inequalities (of size polynomial in the input) over given values of the variables x1,x 2, ... ,xd, . Thus ¢R,S(P) can be computed, wiihin accuracy T, in polynomial time for any given position p.
The following algorithm runs in nondeterministic polynomial space (and can be implemented in deterministic polynomial space 7 ).
Algorithm A
Input (R,S,PI,PF)
[IJ P+Pr
[2J if. ¢R,S(P) t true then fail
[3 J if P = PF then accept
[4J nondeterministically choose a position pi of S so that no vertex of S is moved more than T
[5J p+p'
[6J goto [2J.

To solve a generalized mover's problem (R,S,PI,PF) within accuracy T, we let S+T and
5_ be derived from 5 by expanding by a factor T
(l+T) and contracting by (I-T), respectively.

First apply algorithm A to (R~S+T,PI,PF);

if

the

a1gori thm

accepts

then

output

yes Il

II

and

halt. Else apply algorithm A to (R,S_T,PI'P F);

if the algorithm does not accept then output Il no ." Otherwise, output "maybe. II (Recall that a correct algorithm for the mover's problem is allowed to output an inconclusive answer if the problem is not determinable within accuracy T.)
4. A Polynomial-Time Algorithm for the Classical Mover's Problem in 2 and 3-D
We consider here the classical mover's problem (R,S,PI,PF) for dimensions d =2 and 3.
Recall from Section 1 that this problem is restricted to moving a Sijgle polyhedron S (with ~o freely connected links through d-space avoidlng polyhedral obstacles R. Our basic approach is to transform the classical mover's problem to the problem of moving ~ single point in d'-space
(where d l =3 if d =2 and d' =6 if d-; 3), avoid---
ing certain obstacles (forbidden subspaces). Each position of S corresponds to a point in dr-space, and each of the obstacles in the transformed mover's problem corresponds to positions in which S contacts an obstacle of R (see Fi gure 9).

C\/2 ::

CS~ /:;

·,r·..1../'C.7' 'j~~--.~.-.--
{j
l----~--j

C\
rE~5~_5l
~==~~~

figure 9: lri1r;sf,;r"'.','d rr:;ver's rrc~:1c- fror. Fiq'J'-'" 1 if l-eu r,ta ..'t set" (lite

obstaclE'S of til" trdf,",formt.',i rrot:1(-.) define c

~:;,"h (ros',-s~'ctiof".

C\ il1ustratr-d for r =: O. -c/~. "/;',3-/4, 11. ~ n.dJ L- r·j,d tr·r(J,r~h r ti,j["

PI :::PO,PI,··"f18 7P F as in Figure 2.

424
Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on August 25,2022 at 13:43:13 UTC from IEEE Xplore. Restrictions apply.

Certain previous research has also taken this approach 3 ,4. The fundamental difficulty is that the obstacles in the transformed problem are nonlinear. Lozano-Perez and Wesl ey4 approximate the obstacles in the transformed problem by
linear constraints; however, to solve the mover's problem within the accuracy T of the input, in
the worst case an exponential number (in the input size) of linear constraints are required to approximate the obstacles in the transformed problem. To solve the 2 and 3 dimensional mover's problems within both polynomial time ?nd accuracy T~ we describe the obstacles in the transformed problem by systems of multinomials of low degree with coefficients specified within accuracy T.

50me definitions are now required. For
each position p of 5, let the contact vertices of p be those vertices of R contacting~­ those vert ices of 5 contact i ng R. For II > 0, 1et a ll-contact set be a maximal connected set of positions wi~at least II common contact vertices. If IRI, 151 are the number of inequalities defining R,5, then there are O(IRlll/51 11 ) ll-contact sets.

We

can

show

that

for

> d II

I,

any

ll-contact

set is also a d'-contact set~ For II = 2,3, ... ,d'

the ll-contact sets will be constructed by inter-

secting all (ll-I)-contact sets with I-contact

sets.

Consider, for example, a classical mover's problem (R,5,PI,PF) restricted to 2-space, with
the obstacles R consisting of a set of line segments and 5 a single polygon. A position of 5 can be specified by a triple (X,y,8) where (x,y) are the cartesian coordinates of some fixed vertex of 5 and 8 is the angle of rotation around this vertex. We define a mapping t from the
position of 5 to 3-space. Let t(X,y,8) =
(x' ,y' , z') where y =z " tan (8 ) = x' / y', and
x= (X')2+(y')2- o, for some sufficiently
1arge constant 0 >O. (0 may be taken as the diameter of a circle enclosing S.) See Figure 10.

y(x' ,y' )
:y/ ;y '7' I

Figure 10: The mapping t{x,y,S) = {x',y',z'}.

In thi s case wi th d = 2, the I-contact sets

(the obstacles in this transformed problem in

3-space) are quadratic surface patches of the

form: {r (x,y , 8) Ia 0X+Soy = cos (8- 80) and

rt.x+S.y> A.COS(8-8.) for i = 1,2} where the

1 1- 1

1

ai' 6i , Ai' 8i are constants given within the

accuracy T of the input.

The quadratic inequalities describing each
of these o( IRII 5I) I-contact sets can be deter-
mined in constant time from pairs of line segments and vertices taken from Rand S.
The O(IRI 2ISI2) 2-contact sets are formed from intersections of all pairs of I-contact sets. Comba 8 presents an efficient procedure for determining the intersection of general quadratic surface patches. Since the I-contact sets are 1inear x and y in the case of d = 2, each of the 2-contact sets are quadratic and can be simply determined without the application of Combals procedure. The 3-contact sets may be computed by Comba's procedure from intersections of I and 2-contact sets, both of which are quadratic.

In the 3-dimensional version of the classical mover's problem (R,S,PI,PF)' a position of S
can be specified by a tuple (X,y,z,8 1 ,8 2,8 3 ) where (x,y,z) are the cartesian coordinates of a distinguished vertex of Sand 81,8 2,8 3 specify the angular displacement of S. An appropriate mapping t can be defined from positions of S to 6-space. In this case I-contact sets (the obstacles in this transformed problem) can be defined by constraints of the form:

{t(x,y,z,8,~)luox+BoY+YOZ =
COS(81-~01)·cOS(82-~02)·cOS(83-~03)

and
Ui x+BiY+Y i Z~ AiCOS(81-1JJi I)cos( 82-~i 2)cos( 83-~i3)
for i = 1,2, ... , k} where the u., B., y., A., ~ ..
1 1 1 1 lJ
are constants.
Again, each of these systems of inequalities describing a I-contact set can be easily constructed by considering pairs of faces and vertices of Rand S.
For II =2,3, ... ,6 = d' the ll-contact sets are constructed by intersecting all I-contact and (ll-I)-contact sets. (These intersections require the repeated solution with accuracy T of multinomials of low degree with many subcases; the details will be presented in a later version of this paper.)
Now we sketch the further computations required to solve the mover's problem in 2 and 3 dimensions, assuming the ll-contact sets have been determined.

425 Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on August 25,2022 at 13:43:13 UTC from IEEE Xplore. Restrictions apply.

Let a ].J:uni~~. ~ontact set be a maximal connected set of positions, each with precisely the same set of contact vertices of size ~. Our goal is to determine all O-uniq~ contact sets~ these are the maximal connected sets of positions between which S may be moved without
contacting an obstacle in R.

For each 0 =0,1, ... ,d', let Co be the class
of ~ - con t act set s 0 f dimension 0, wit h 11 > 1. Also, let Co be the class of all l1-uniquecontact sets of dimensi on 0, wi th 11 > O. Observe
that cd' is the set of all o-unique ~ontact sets,
as required.

We can easily show that Co =C o• For o = 1, ... ,d I we have an effi ci ent a1gori thm for constructing Co from the previously constructed
Coand Co, ... ,Co- 1. (In the case that 0 =1, the C1 are "l-dimensional curves" and the C1
correspond to the ll.f.urve segments" partitioned by the "points" of Co = Co. In the case that 0=2, the C2 are "surface patches" partitioned into planar maps by fo (the l'vertices") and Cl (the "edges"). The C2 are the faces of these maps. The cases 0 > 2 are similar, with Co parti-
tioned by Co, ... ,Co-l into a o-cell complex.)

Finally, to determine if S may be moved from position PI to PF without contacting an
obstacle of R, we test if:

1) <PR,S(PI) = <PR,S(PF) = true (where <PR,S
is the polynomial-time predicate of Section 3 which holds for all positions for which there is no contact between Sand R) and

2) P1,P F a~lin the same a-unique contact set PE C

If this test is successful, we construct a move for S from PI to PF' as follows. Let PI'
(PF') be any position of S on the boundary of
the o-unique contact set P, reached by a linear translation of S from PI (PF). Then simply move
S on the boundary of P from PI' to PF'·

for

The worst the mover's

case time problem

cost of is O(IRl

d9uIrsladl'g)o, rithm

(where IRI and lsi are the number of inequali-

ties defining Rand S).

The time complexity of this algorithm can
be significantly improved in certain special cases by applying the divide and conquer techniques of Preparata and Muller9 and Zolnowskylq For example, the 2-dimensional mover's problem
requires O(k4 IRI \SI) time if S is convex and R consists of k convex obstacles. Also, in the case where the mover's problem contains numerous
obstacles with very fine detail (i.e., many

vertices) we have developed efficient approximate techniques which enclose non convex sets of obstacles with convex polyhedra, using again the convex hull algorithms of Preparata and Muller and of Zolnowsky.
5. Conclusion: Applications -
Theoretical &Applied
This work was originally motivated by applications to robotics: the author felt it was important to examine computational complexity issues in robots. given the recent development of mechanical devices autonomously controlled by micro and minicomputers, and the swiftly increasing computational power of these controllers (see Paul 11 ).
However, our computational complexity results have more general applications, both theoretical and applied (those detailed below are discussed more thoroughly in the full paper) .
The technique (used in our polynomial time algorithm for the mover's problem) of mapping ~ optimization problem in low dimension to a simpler problem in higher dimensions can also be applied to a variety of other optimization problems in computational geometry. For example, we present a polynomial time algorithm for a packing problem discussed by Shamos1 2 involving the optimal orientation of identically shaped polygons so as to minimally pack the polygons within a thin rectangular strip (each polygon must have the same orientation). The transformed problem in this case is to find the minimal width cross-section (corresponding to an optimal orientation) of a torus defined by quadratic surface patches.

The reduction technique used in Section 2 to show that the generalized mover's problem is
P-space complete can also be used to show a
variety of other combinatorial problems P-space complete. (This is significant, since almost
all known P-space complete combinatorial problems are games.) For example, we show the following
coloring problem to be P-space complete:

Input Graph G= (V,E) with initial and final k-colorings CI,C F respectively, ~
integer m> o.

Problem

Is there a sequence of k-colorings

of G, CI = CO'C 1 ,.·· ,Cj _1 ,Cj =CF

such that C. differs from C. 1

1

1-

on at most m vertices?

(Similar P-space complete problems can be derived from other known NP-complete problems such as 3-SAT, KNAPSACK, and HAMILTONIANCIRCUIT.)

426
Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on August 25,2022 at 13:43:13 UTC from IEEE Xplore. Restrictions apply.

6. References INilsson, N.J., "A mobile automaton: An applica-
tion of artificial intelligence techniques,1I Proceedings, IJCAI-69, 509-520. 2lgnat'yev~ M.B., F.M. Kulakov, and A.M. Pokrovski, IIRobot-Manipulator Control Algorithms," NTIS Report JPRS 59717, August 1973. 3Udupa, S., "Collision detection and avoidance in computer controlled manipulators," Cal. lnst. Tech., Ph.D. thesis, 1977. 4Lozano-Perez, T. and M.A. Wesley, "An algorithm for planning collision-free paths amongst polyhedral obstacles," IBM T.J. Watson Research Report RC 7171, June 1978. spaul, R., "Modelling trajectory calculation and servoing of a computer controlled arm," Ph.D. thesis, Stanford University, Nov. 1972. 6Widdoes, C., IIA heuristic collision avoider for the Stanford robot arm," Stanford CS Memo 227, June 1974. 7Sav itch'l W.J., IIRelationships between nondeterministic and deterministic tape complexities," J. Computer Sci. 4, 177-192, 1970. 8Comba, P.G., IIA procedure for detecting intersections of three-dimensional objects," J. ACM ~~ 3, 354-366, July 1968. 9Preparata, F.P. and D.E. Muller, IIFinding the intersection of a set of n half-spaces in time 0(n10gn)," Univ. Illinois Coordinated Science Lab. TR ##-803(ACT-7); UILU-ENG772250, December 1977. lOZolnowsky, J.E., "Topics in computational geometry,1I SLAC Report 206, STAN-CS-78-659, May 1978. Ilpaul, R., "Robots, Models, and Automation," Computer, 19-27, July 1979. 12Shamos, M.l., IINotes on combinatorial geometry,1I Computer Science Department, CarnegieMellon University, 1977.
427
Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on August 25,2022 at 13:43:13 UTC from IEEE Xplore. Restrictions apply.

