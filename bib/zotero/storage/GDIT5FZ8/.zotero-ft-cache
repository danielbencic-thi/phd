IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 17, NO. 4, APRIL 2016

1135

A Review of Motion Planning Techniques for Automated Vehicles
David González, Joshué Pérez, Vicente Milanés, and Fawzi Nashashibi

Abstract—Intelligent vehicles have increased their capabilities for highly and, even fully, automated driving under controlled environments. Scene information is received using onboard sensors and communication network systems, i.e., infrastructure and other vehicles. Considering the available information, different motion planning and control techniques have been implemented to autonomously driving on complex environments. The main goal is focused on executing strategies to improve safety, comfort, and energy optimization. However, research challenges such as navigation in urban dynamic environments with obstacle avoidance capabilities, i.e., vulnerable road users (VRU) and vehicles, and cooperative maneuvers among automated and semi-automated vehicles still need further efforts for a real environment implementation. This paper presents a review of motion planning techniques implemented in the intelligent vehicles literature. A description of the technique used by research teams, their contributions in motion planning, and a comparison among these techniques is also presented. Relevant works in the overtaking and obstacle avoidance maneuvers are presented, allowing the understanding of the gaps and challenges to be addressed in the next years. Finally, an overview of future research direction and applications is given.
Index Terms—Motion planning, automated vehicles, path planning, intelligent transportation systems.
I. INTRODUCTION
T HE application of intelligent transportation systems is signiﬁcantly aiding drivers, reducing some drivingassociated tedious tasks. Speciﬁcally, highway driving has become safer thanks to the development of the Cruise Control (CC), Adaptive CC (ACC) and, lately, the Cooperative ACC (CACC) where both longitudinal actuators, throttle and brake pedals, are controlled using a pre-deﬁned gap with the preceding vehicle [1]. For urban environments, systems like emergency braking with assistance of active suspension [2], automatic parking [3] or blind angle vehicle detection [4] are also contributing toward a safer driving in populated areas.
These systems improve safety, comfort, transport time and energy consumption. Such systems are known as advanced driving assistance system (ADAS). Fully automated driving
Manuscript received June 22, 2015; revised October 19, 2015; accepted October 28, 2015. Date of publication November 26, 2015; date of current version March 25, 2016. This work was supported in part by ECSEL project DESERVE and in part by FP7 CityMobil2. The Associate Editor for this paper was J. E. Naranjo.
The authors are with the Robotics and Intelligent Transportation Systems Team, Inria Paris-Rocquencourt, 78153 Le Chesnay, France (e-mail: david. gonzalez-bautista@inria.fr; joshue.perez_rastelli@inria.fr; vicente.milanes@ inria.fr; fawzi.nashashibi@inria.fr).
Color versions of one or more of the ﬁgures in this paper are available online at http://ieeexplore.ieee.org.
Digital Object Identiﬁer 10.1109/TITS.2015.2498841

capabilities, that is, vehicles able to drive by themselves without human interventions are an extension of current partial automated ADAS. As a matter of fact, recent demonstrations on automated driving are facing complex real scenarios. Implementations from Google (with more than 700 000 hours of automated driving in different environments), Daimler and Karlsruhe Institute of Technology (KIT), recreating the ﬁrst cross-country automobile journey in history, in an autonomous way [5]; and Vislab and the University of Parma, showing automated driving capabilities in the PROUD project demo on 2013 [6], are some of the recent demonstrations with promising results regarding automated driving technologies. Despite of some remarkable results obtained up to now, there is still a long way to go before having fully automated vehicles on public roads, including technical and legal unsolved challenges [7].
Some initiatives launched between governments and manufactures are currently creating the framework for the new standards and regulations for automated driving. As a matter of fact, some ongoing European initiatives address legal matters and promote the standardization of these technologies, as Citymobil2 project [8]. They got permission from local authorities for vehicle demonstrations, and some certiﬁcation procedures were developed. In United States, already four states (Nevada, Florida, California, and Michigan) and the District of Columbia recognize the importance of these technologies for future sustainable mobility and have enacted speciﬁc laws to allow automated driving in common trafﬁc [9].
When it comes to develop automated vehicles, a literature review shows different proposed control architectures. Stanford and Carnegie Mellon University (CMU) [10] pioneered the implementation of fully automated vehicles in the Grand and Urban DARPA challenges. In Europe, the VIAC project [11] and Daimler with KIT [5] described the different processing stages needed for the control architecture of automated vehicles, where perception, decision and control are the most important. Fig. 1 shows a general architecture for automated vehicles that can be extracted from earlier developments, including interconnections based on previous real automated vehicle implementations.
This work pays special attention to the decision stage in automated vehicles, presenting a state of the art in motion planning strategies. This topic has been extensively investigated in the literature, starting from the ﬁrst developments in mobile robotics applications [12]. It is considered a key aspect for robot navigation since it provides global and local trajectory planning to describe the behavior of the robot. It considers the dynamic and kinematic models of the robot to go from a starting position to a ﬁnal one. The main difference between vehicles and robots

1524-9050 © 2015 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on July 14,2022 at 16:22:30 UTC from IEEE Xplore. Restrictions apply.

1136

IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 17, NO. 4, APRIL 2016

Fig. 1. Control architecture for automated vehicles. General abstraction based on: [5], [6], [10], [15]–[18].
for carrying out motion planning are in the fact that the former addresses road networks where trafﬁc rules have to be obeyed; whereas the latter has to cope with open environments without much speciﬁc rules to follow, only to reach the ﬁnal destination.
This paper makes an overview of the state of the art implementation of motion planning techniques for automated driving. Section II presents an in-deep review of path planning techniques. Section III presents developments in automated driving by research groups worldwide, focusing in the description of the planning techniques applied in real demonstrations. An overview of the tendencies and orientation of the state-ofthe-art according to research centers and industry developments is included. Finally, Section IV presents remaining challenges, current research direction from important researchers and manufactures, including future steps in motion planning developments.
II. MOTION PLANNING STATE-OF-THE-ART
Intelligent vehicles development was very limited before the 90’s because reduced investments in the ﬁeld [13]. Thanks to evolution of information technology applicable to vehicle automation, the Intelligent Transportation Systems (ITS) concept was created. Different research centers around the world were oriented to this end (e.g., California PATH, Parma University, among others), improving intelligent vehicle systems. An overview of some important development events in automated navigation systems is presented in Section III.
A description of the ﬁrst automated vehicles—dating back to the late 80’s and beginning of the 90’s (see also Fig. 3)—are mentioned by [13] and [14]. Shladover et al. [13] describe longitudinal control systems (including vehicle following control, inter-vehicular communications and a comparison between different methods), and lateral control systems (considering vehicle lateral dynamics and magnetic sensors as path reference with no path planning involved), in order to improve the Advance Highway Systems (AHS). Behringer et al. [14] describe the architecture proposed for the VaMoRs-L vehicle in the PROMETHEUS project. A vehicle that was able to perform automated driving, aided by vision and path generation algorithms.

Following these ﬁrst implementations, different control architectures have been proposed for automated driving. In Fig. 1, perception, decision and control are the three main components of the software conﬁguration. The main focus of this work is related to the decision component of the architecture, speciﬁcally path planning techniques in automated vehicles.
Path planning in mobile robotics has been a subject of study for the last decades. Most of the authors divide the problem into global and local planning. A review of the different approaches and concept deﬁnitions (as global, local or reactive motion planning) can be found in [19]–[21].
A great amount of navigation techniques have been taken from mobile robotics and modiﬁed to face the challenges of road networks and driving rules. These planning techniques were classiﬁed in four groups, according to their implementation in automated driving: graph search, sampling, interpolating and numerical optimization (see Table I). The most relevant path planning algorithms implemented in motion planning for automated driving are described below.
A. Graph Search Based Planners
In automated driving, the basic idea is to traverse a state space to get from point A to point B. This state space is often represented as an occupancy grid or lattice that depicts where objects are in the environment. From the planning point of view, a path can be set implementing graph searching algorithms that visit the different states in the grid, giving a solution (that not necessarily is the optimal one) or not (there is no possible solution) to the path planning problem. Some of these algorithms have been applied to the automated vehicles development.
Dijkstra Algorithm: It is a graph searching algorithm that ﬁnds single-source shortest path in the graph. The conﬁguration space is approximated as a discrete cell-grid space, lattices, among others (e.g., [22], [23]).
Description of the concept and implementation of the algorithm can be found in [24] and [25]. In automated driving, it has been implemented by [26] in multi-vehicles simulations, in the Little Ben vehicle (Ben Franklin racing team’s entry to the Darpa Urban Challenge [27]) and also team VictorTango [28]. An urban implementation is shown in Fig. 2(a) [29].
A-Star Algorithm (A∗): It is a graph searching algorithm that enables a fast node search due to the implementation of heuristics (it is an extension of Dijkstra’s graph search algorithm). Its most important design aspect is the determination of the cost function, which deﬁnes the weights of the nodes. It is suitable for searching spaces mostly known a priori by the vehicle [30], but costly in terms of memory and speed for vast areas.
Several applications in mobile robotics have used as basis for improvement, such as the dynamic A∗ (D∗) [31], Field D∗ [32], Theta∗ [33], Anytime repairing A∗ (ARA∗) and Anytime D∗ (AD∗) [34], among others. Ziegler et al. [35] implemented the A∗ algorithm along with Voronoi cost functions for planning in unstructured spaces and parking lots. In [36] (hybrid A∗) and [37] (A∗), it served as part of the DARPA Urban Challenge in Junior [Stanford University automated vehicle, see Fig. 2(d)] and AnnieWAY (KIT) respectively. In [16] AD∗ was used by Boss, the winning vehicle of the DARPA Urban Challenge.

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on July 14,2022 at 16:22:30 UTC from IEEE Xplore. Restrictions apply.

GONZÁLEZ et al.: REVIEW OF MOTION PLANNING TECHNIQUES FOR AUTOMATED VEHICLES
TABLE I TAXONOMY OF MOTION PLANNING TECHNIQUES APPLIED IN AUTOMATED DRIVING SCENARIOS

1137

Fig. 2. Planning algorithms as presented in the literature. a) Representation of a global path by the Dijkstra algorithm in [29]. b) Trajectory optimization from [38], taking into account a vehicle in the other lane. c) Lattices and motion primitives as presented in [39]. d) Hybrid A∗ as implemented in the DARPA Challenge by Junior [36]. e) RRT∗ as showed in [40]. f) Optimal path to turn the vehicle around as proven in [41]. g) Planning a turn for the Audi TTS from Stanford [42]. h) Different motion states, planned with polynomial curves as presented in [43]. i) Evaluation of several Bézier curve in a turn, as showed in [44]. j) Spline behavior when a knot changes place, as presented in [45].
Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on July 14,2022 at 16:22:30 UTC from IEEE Xplore. Restrictions apply.

1138

IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 17, NO. 4, APRIL 2016

State Lattice Algorithm: The algorithm uses a discrete representation of the planning area with a grid of states (often a hyper-dimensional one). This grid is referred as state lattice over of which the motion planning search is applied [46]. The path search in this algorithm is based in local queries from a set of lattices or primitives containing all feasible features, allowing vehicles to travel from an initial state to several others. A cost function decides the best path between the precomputed lattices. A node search algorithm is applied in different implementations (e.g., A∗ in [47] or D∗ in [48]).
Howard and Kelly applied state lattices in rough terrains for a wheeled mobile robot [49], where simulations give promising results of global and local planning. Table I shows the authors reference for automated driving implementations divided in state and spatio-temporal lattices. Most of the works consider time and speed dimensions as [39] and [50]. A good example is presented in Fig. 2(c) from [39], where the nontemporal lattice is presented on the left and a ﬁner discretization, on the right, also includes curvature.
B. Sampling Based Planners
These planners try to solve timing constrains—i.e., planning in high dimensional spaces—that deterministic methods cannot meet. The approach consists on randomly sampling the conﬁguration space or state space, looking for connectivity inside it [21]. The downside is the fact that the solution is suboptimal. The most commonly used methods in robotics are the Probabilistic Roadmap Method (PRM) [93] and the Rapidly-exploring Random Tree (RRT) [94]. The latter has been extensively tested for automated vehicles.
Rapidly-Exploring Random Tree (RRT): It belongs to the sampling-based algorithms applicable to on-line path planning [95]. It allows a fast planning in semi structured spaces [94] by executing a random search through the navigation area. It also has the ability to consider non-holonomic constraints (such as maximum turning radius and momentum of the vehicle).
In [21] and [95] descriptions, applications and improvements of these algorithms are reviewed. In automated driving, it has been used for the MIT team at DARPA Urban Challenge [61]. However, the resulting path is not optimal, jerky and not curvature continuous. In Karaman et al. [96] a new approach of this algorithm was developed, named RRT∗ (see [40, Fig. 2(e)]). This new implementation converges to an optimal solution but having the same disadvantages. First results are shown in [64]. Further developments and implementations in automated vehicles are mentioned in Table I.
C. Interpolating Curve Planners
Techniques as Computer Aided Geometric Design (CAGD) are often used as path smoothing solutions for a given set of way-points [73]. These allow the motion planners to ﬁt a given description of the road by considering feasibility, comfort, vehicle dynamics and other parameters in order to draw the trajectory.
Interpolation is deﬁned as the process of constructing and inserting a new set of data within the range of a previously

known set (reference points). This means that these algorithms take a previously set of knots (e.g., a given set of way-points describing a global road map), generating a new set of data (a smoother path) in beneﬁt of the trajectory continuity, vehicle constraints and the dynamic environment the vehicle navigates [97]. In the presence of obstacles, it sufﬁces to generate a new path to overcome the event and then re-entry the previously planned path. The interpolating curve planners implement different techniques for path smoothing and curve generation, being the most common in the automated driving ﬁeld those indicated in Tables I and II [see also Fig. 2(f)–(j)].
Lines and Circles: Different segment road network can be represented by interpolating known way-points with straight and circular shapes. It is a simple mathematical method to approach the planning problem in car-like vehicles [41], [98]. An example is presented in Fig. 2(f) for the shortest path to turn around a vehicle to perform forward and backward driving.
Clothoid Curves: This type of curve is deﬁned in terms of Fresnel integrals [73]. Using clothoid curves is possible to deﬁne trajectories with linear changes in curvature since their curvature is equal to their arc-length; making smooth transitions between straight segments to curved ones and vice versa (see [42, Fig. 2(g)]). Clothoids have been implemented in the design of highways and railways and are also suitable for car-like robots [99].
The implementation of clothoid primitives was tested in the VIAC project. In [69] the current curvature is taken from the steering wheel position and then the other proﬁles are evaluated taking into consideration the dynamic limitations (e.g., ﬁshtailing) and the physical ones (e.g., the steering wheel).
Polynomial Curves: These curves are commonly implemented to meet the constraints needed in the points they interpolate, i.e. they are useful in terms of ﬁtting position, angle and curvature constraints, among others. The desired values or constraints in the beginning and ending segment will determine the coefﬁcients of the curve. For the computation of the polynomial coefﬁcient, the reader is referred to [76], [77] and [79].
The Laboratory on Interactions between Vehicles, Infrastructure and Drivers (LIVIC) [77] implemented these curves for line change scenarios. Fourth degree polynomials where used for longitudinal constraints and ﬁfth degree polynomials for the lateral constraints, meeting the desired parameter for different scenarios. Also in [75] cubic polynomials where used to generate safe trajectories for overtaking maneuvers. In [43], cubic (green line) and quartic (red line) polynomial curves are implemented with a state lattice planner [see Fig. 2(h)].
Bézier Curves: These are parametric curves that rely on control points to deﬁne their shape. The core of Bézier curves are the Bernstein polynomials. These curves have been extensively used in CAGD applications, technical drawing, aeronautical and automotive design.
The advantage of this kind of curves is their low computational cost, since the curve behavior is deﬁned by control points. The constraints at the beginning and the end of the curvature can be met by correctly placing these control points according to different properties described in [81], [100].
A good example of the modularity and malleability of Bézier curves is presented in [101], interconnecting circular shapes and

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on July 14,2022 at 16:22:30 UTC from IEEE Xplore. Restrictions apply.

GONZÁLEZ et al.: REVIEW OF MOTION PLANNING TECHNIQUES FOR AUTOMATED VEHICLES
TABLE II COMPARISON OF BENEFITS AND DISADVANTAGES IN MOTION PLANNING TECHNIQUES

1139

also interconnecting Bézier curves with continuous curvature proﬁles in [102]. These curves are often used to approximate clothoid curves [103], [104], or implementing rational Bézier curves for fast planning as in [85], [86]. In [81], [83], and [44] 3rd and 4th degree Béziers [see Fig. 2(i)] are implemented in automated vehicles, evaluating the best applicable curve to the situation in hand (i.e., turns, roundabouts, lane change, obstacle avoidance, among others).
Spline Curves: A spline is a piecewise polynomial parametric curve divided in sub-intervals that can be deﬁned as polynomial curves [28], [76], b-splines [88], [89] (that can also be represented in Bézier curves [105]) or clothoid curves [99]. The junction between each sub-segment is called knot and they commonly possess a high degree of smoothness constraint at the joint between the pieces of the spline. An example of a b-spline with a changing knot is shown in Fig. 2(j).
D. Numerical Optimization
These methods aim to minimize or maximize a function subject to different constrained variables. In path planning is

often used to smooth previously computed trajectories as in [54] and also to compute trajectories from kinematic constraints [5].
Function Optimization: This technique ﬁnds a real valued function’s roots (minimize the variables outcome). It has been implemented to improve the potential ﬁeld method (PFM) in mobile robotics for obstacles and narrow passages, obtaining C1 continuity [106]. In [5], [38] it also aimed to ﬁnd C2 continuous trajectories by minimizing a function that considers position, velocity, acceleration and jerk as planning parameters [see Fig. 2(b)].
In Table I, a taxonomy of motion planning techniques implemented in automated vehicles is presented. It classiﬁes the planning technique in each contribution according to the previously described algorithms. Table II complements Table I, giving a comprehensive review about the pros and cons of each planner technique.
These implementations show that the ﬁrst steps for automated driving have already been set. Different architectures implement motion planners in order to have a safe and continuous path to follow. To mitigate or eliminate risky situations (such as dynamic obstacle avoidance, emergency situations, intersection

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on July 14,2022 at 16:22:30 UTC from IEEE Xplore. Restrictions apply.

1140

IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 17, NO. 4, APRIL 2016

Fig. 3. Timeline with important automated vehicle demonstrations through time and their associated planning techniques.

and merging negotiation, among others) is the current focus in the literature. The consideration of perception limitations (uncertainty in measurements) and control needs for safety and comfort are key aspects in futures steps. Some works have already considered such parameters, by generating driving corridors and trajectory proposals that can be communicated to the driver by an HMI [77], [107]. Others consider the uncertainty in data acquisition [108], communications [109] and even future behavior prediction [110] to avoid situations like the MITCornell collision in the Darpa Urban Challenge [111].
III. MOTION PLANNING DEVELOPMENTS BY ITS GROUPS WORLDWIDE
Although the idea of intelligent vehicles begun in 1939 at New York world fair with GM’s Futurama presentation, it took decades to became the idea in a reality. Fig. 3 shows a timeline with important demonstrations and developments in vehicle automation up to this date. The EUREKA-PROMETHEUS project pioneered in Europe this research between 1987 and 1994, where different vehicles from industrial partners such as Volvo and Daimler were automated. Clothoid paths were implemented in curved segments to aid the control system to follow the route [14].
The PATH program presented its platooning demonstration as part of the Demo ’97 at San Diego CA, in cooperation with GM [112]. It consisted on an eight vehicle platoon in a dedicated lane with vehicle inter-distances of 6 m. Carnegie Mellon University participated as well, providing the free agent demonstration with their Navlab vehicles [113]. Also in the same year, a presentation in The Netherlands introduced the ﬁrst operational service of CTS [114], using shuttle services at Schiphol airport. CTS addressed the last mile problem providing a door-to-door and on-demand service [115]. In the systems above described, reactive control and vehicle-roadway cooperation were preferred over path planning techniques.
One of the ﬁrst projects to test path planning techniques was the ARGO project from VisLab [76]. With a vision-based system, the planning technique consisted in adjusting quintic polynomial splines into the lane markings detected by the front camera. Later, the Darpa PerceptOR program stimulated the development of automated navigation techniques for offroad vehicles [116], [117]. This was achieved by the Darpa Challenges (Grand and Urban challenge) that encouraged the

research in automated navigation systems, developing path planning techniques (see Fig. 3).
The ﬁrst Google Car made its entrance in 2009. Google driverless cars have carried out several public exhibitions showing the automated capabilities of their vehicles, achieving more than 700 0001 miles of travel without accidents attributed to automation. Google also pushed for the legislation of this kind of technology, receiving the ﬁrst license for an automated vehicle in May 2012 (two months after the state of Nevada enacted the ﬁrst automated vehicle law) [118]. Unfortunately, there are no publications about the motion planning or control techniques that have been used to achieve those results.
The VisLab International Autonomous Challenge (VIAC) was carried out in 2010 [11]. 13 000 km traveled from Italy (Parma) to China (Shanghai) in autonomous mode, where the planning consisted on a cost function that considered clothoid curve generation [69]. In the same year and also in 2012, the Hyundai Motor Group organized their own automated vehicle competitions in Korea. The 2010 challenge focused in path following and obstacle avoidance. The 2012 challenge focused in understanding urban driving and detecting trafﬁc signals [17]. Motion planning techniques included clothoids [18], [119], RRT [120], among others.
The European Grand Cooperative Driving Challenge (GCDC) in 2011 promoted longitudinal vehicle control [143]. Nonetheless, some teams have already developed path planning strategies (such as state lattices by AnnieWAY [131]). In this sense, there is a call for a second edition of the GCDC Challenge in 2016,2 where lateral control in platoon, busy road merging and urban environments will be considered.
Recently, Audi presented high performance vehicle control in a conjoint effort with Stanford [42], [144], implementing clothoids to plan curved segments. Among the demonstrations: 1) the climb of Pikes Peak in 2010; 2) a racing lap at the Thunderhill Raceway Park in 2012, reaching 150 mph in a F1 track in 20143; and 3) automated driving in real scenarios from Silicon Valley to Las Vegas in 2015.4 Also in 2015, Delphi Automotive made the ﬁrst coast to coast driving in the US,5
1Available online at: http://goo.gl/a90d1i 2Available online at: http://www.gcdc.net/ 3Available online at: http://goo.gl/g2eJ50 4Available online at: https://goo.gl/voT0cb 5Available online at: http://www.delphi.com/delphi-drive

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on July 14,2022 at 16:22:30 UTC from IEEE Xplore. Restrictions apply.

GONZÁLEZ et al.: REVIEW OF MOTION PLANNING TECHNIQUES FOR AUTOMATED VEHICLES
TABLE III INTERNATIONAL ITS RESEARCH GROUPS

1141

going from San Francisco to New York in 9 days. In Table III an overview of international research groups is presented.
IV. DISCUSSION
The development of intelligent planning algorithms is one of the key issues when designing robotic architectures [20], [21]. The associated constrains in the automated vehicle research area—i.e., trafﬁc rules, high speeds or road layout—turn real-time motion planning in a critical aspect for achieving automated driving on complex environments. This work has reviewed the motion planning state of the art from two points of view: 1) considering the different techniques (see Table I), there are four main algorithms: graph-search, sample-based,

interpolation and numerical optimization; 2) considering the worldwide research groups that have implemented motion planning techniques on automated vehicles, testing the behavior on real roads (see Table III).
There are two main algorithms that have been recently used by research groups in real implementations:
• Most of research groups implement interpolation to solve the planning problems. Speciﬁcally, recent demonstrations have used clothoids (Audi, Parma/Vislab or Stanford), Bézier curves (Inria) and polynomial curves (Daimler or Inria). The main reason for choosing this technique is because an enhanced map in structured environments can provide the needed way-points—i.e., GPS data. Then,

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on July 14,2022 at 16:22:30 UTC from IEEE Xplore. Restrictions apply.

1142

IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 17, NO. 4, APRIL 2016

optimal curves in terms of smoothness, continuity, vehicle constraints, speed and comfort are generated. • Graph search is the second algorithm most applied when dealing with real implementations. Speciﬁcally, state lattices is the most used one—i.e., CMU, KIT, GMC. The main reason for choosing this technique is because a fast search of the optimal path can be performed in real-time, considering comfort, safety and vehicle constraints although the solution is only resolution complete (depends on the resolution of the underlying grid/lattice).
Current challenges are associated to real-time planning calculation on dynamic environments. Urban scenarios where multiple agents—i.e., pedestrians, cyclists, other vehicles—have to be taken into account, require a continuous evaluation (and re-calculation) of the determined trajectories. The limited time for generating a new free collision trajectory with multiple dynamic obstacles is an unsolved challenge. This is mainly caused by the time-consuming perception algorithms [145], reducing dramatically the motion planning decision window. Current implementations are not able to overcome this limitation yet.
Since planning stage is the link between perception and control, current works considers both: perception uncertainties and control constrains when developing new path planning algorithms. Recent developments in path planning aim to properly handle the uncertainty in the data acquisition process for dynamic environments. This permits to have a better environment understanding in real-time, giving the planning process the ability to prevent dangerous situations by considering uncertainties on the acquisition/perception stages of the architecture. From the control point of view, multiple constrains have to be considered, ranging from vehicle kinematic limitations up to passengers’ comfort. Recent developments aim to consider some of these constrains in the planning stage leading to smooth and achievable trajectories, reducing control stage constrains. Next steps should be focused on developing algorithms able to fuse perception uncertainties with control constraints. This work has been already started by KIT [5] and CMU [108].
A new trend on the automated vehicle research is to add the driver in the control loop. From the path planning research perspective, the trajectory is communicated to the driver using an HMI, acting as an ADAS [77], [107]. This creates a new research challenge by multi-fusing perception uncertainties, control constrains and driver knowledge when generating safe, smooth and achievable trajectories.
REFERENCES
[1] V. Milanés et al., “Cooperative adaptive cruise control in real trafﬁc situations,” IEEE Trans. Intell. Transp. Syst., vol. 15, no. 1, pp. 296–305, Feb. 2014.
[2] J.-S. Lin and W.-E. Ting, “Nonlinear control design of anti-lock braking systems with assistance of active suspension,” IET Control Theory Appl., vol. 1, no. 1, pp. 343–348, Jan. 2007.
[3] T. H. Hsu, J.-F. Liu, P.-N. Yu, W.-S. Lee, and J.-S. Hsu, “Development of an automatic parking system for vehicle,” in Proc. IEEE VPPC, 2008, pp. 1–6.
[4] R. OMalley, M. Glavin, and E. Jones, “Vision-based detection and tracking of vehicles to the rear with perspective correction in low-light conditions,” IET Intell. Transp. Syst., vol. 5, no. 1, pp. 1–10, Mar. 2011.
[5] J. Ziegler et al., “Making bertha drive—An autonomous journey on a historic route,” IEEE Intell. Transp. Syst. Mag., vol. 6, no. 2, pp. 8–20, Summer 2014.

[6] A. Broggi et al., “Extensive tests of autonomous driving technologies,” IEEE Trans. Intell. Transp. Syst., vol. 14, no. 3, pp. 1403–1415, Sep. 2013.
[7] M. Van Schijndel-de Nooij et al., “Deﬁnition of necessary vehicle and infrastructure systems for automated driving,” Eur. Commission, Brussels, Belgium, SMART 2010/0064, 2011.
[8] J. van Dijke and M. van Schijndel, “Citymobil, advanced transport for the urban environment: Update,” Transp. Res. Rec., J. Transp. Res. Board, no. 2324, pp. 29–36, 2012.
[9] B. Walker Smith, “Automated driving: Legislative and regulatory action, Center Internet Soc. (CIS) Stanford Law School, Stanford, CA, USA, Tech. Rep., 2013.
[10] C. Urmson et al., “Autonomous driving in urban environments: Boss and the urban challenge,” J. Field Robot., vol. 25, no. 8, pp. 425–466, Aug. 2008.
[11] M. Bertozzi et al., “Viac: An out of ordinary experiment,” in Proc. IV Symp., 2011, pp. 175–180.
[12] S. Han, B. Choi, and J. Lee, “A precise curved motion planning for a differential driving mobile robot,” Mechatronics, vol. 18, no. 9, pp. 486–494, Nov. 2008.
[13] S. E. Shladover et al., “Automated vehicle control developments in the path program,” IEEE Trans. Veh. Technol., vol. 40, no. 1, pp. 114–130, Feb. 1991.
[14] R. Behringer and N. Muller, “Autonomous road vehicle guidance from autobahnen to narrow curves,” IEEE Trans. Robot. Autom., vol. 14, no. 5, pp. 810–815, Oct. 1998.
[15] S. Thrun et al., “Stanley: The robot that won the darpa grand challenge,” J. Field Robot., vol. 23, no. 9, pp. 661–692, Sep. 2006.
[16] D. Ferguson, T. M. Howard, and M. Likhachev, “Motion planning in urban environments,” J. Field Robot., vol. 25, no. 11/12, pp. 939–960, Nov./Dec. 2008.
[17] K. Jo, J. Kim, D. Kim, C. Jang, and M. Sunwoo, “Development of autonomous car—Part i: Distributed system architecture and development process,” IEEE Trans. Ind. Electron., vol. 61, no. 12, pp. 7131–7140, Dec. 2014.
[18] K. Jo, J. Kim, D. Kim, C. Jang, and M. Sunwoo, “Development of autonomous car—Part ii: A case study on the implementation of an autonomous driving system based on distributed architecture,” IEEE Trans. Ind. Electron., vol. 62, no. 8, pp. 5119–5132, Aug. 2015.
[19] V. Kunchev, L. Jain, V. Ivancevic, and A. Finn, “Path Planning and Obstacle Avoidance for Autonomous Mobile Robots: A Review,” in Knowledge-Based Intelligent Information and Engineering Systems. Berlin, Germany: Springer-Verlag, 2006, pp. 537–544.
[20] Y. K. Hwang and N. Ahuja, “Gross motion planning—A survey,” ACM Comput. Surveys, vol. 24, no. 3, pp. 219–291, Sep. 1992.
[21] M. Elbanhawi and M. Simic, “Sampling-based robot motion planning: A review,” IEEE Access, vol. 2, pp. 56–77, 2014.
[22] F. Marchese, “Multiple mobile robots path-planning with mca,” in Proc. ICAS, Jul. 2006, p. 56.
[23] S. LaValle and S. Hutchinson, “Optimal motion planning for multiple robots having independent goals,” IEEE Trans. Robot. Autom., vol. 14, no. 6, pp. 912–925, Dec. 1998.
[24] S. M. LaValle, Planning Algorithms. New York, NY, USA: Cambridge Univ. Press, 2006.
[25] J. Y. Hwang, J. S. Kim, S. S. Lim, and K. H. Park, “A fast path planning by path graph optimization,” IEEE Trans. Syst., Man Cybern., Part A, Syst. Humans, vol. 33, no. 1, pp. 121–129, Jan. 2003.
[26] R. Kala and K. Warwick, “Multi-level planning for semi-autonomous vehicles in trafﬁc scenarios based on separation maximization,” J. Intell. Robot. Syst., vol. 72, no. 3/4, pp. 559–590, Dec. 2013.
[27] J. Bohren et al., “Little Ben: The Ben Franklin racing team’s entry in the 2007 darpa urban challenge,” J. Field Robot., vol. 25, no. 9, pp. 598–614, Sep. 2008.
[28] A. Bacha et al., “Odin: Team victortango’s entry in the darpa urban challenge,” J. Field Robot., vol. 25, no. 8, pp. 467–492, Aug. 2008.
[29] Q. Li, Z. Zeng, B. Yang, and T. Zhang, “Hierarchical route planning based on taxi gps-trajectories,” in Proc. 17th Int. Cong. Geoinformat., Aug. 2009, pp. 1–5.
[30] M. Likhachev and D. Ferguson, “Planning long dynamically feasible maneuvers for autonomous vehicles,” Int. J. Robot. Res., vol. 28, no. 8, pp. 933–945, Aug. 2009.
[31] A. Stentz, “Optimal and efﬁcient path planning for partially-known environments,” in Proc. IEEE Int. Conf. Robot. Autom., 1994, pp. 3310–3317.
[32] D. Ferguson and A. Stentz, “Using interpolation to improve path planning: The ﬁeld d∗ algorithm,” J. Field Robot., vol. 23, no. 2, pp. 79–101, Feb. 2006.

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on July 14,2022 at 16:22:30 UTC from IEEE Xplore. Restrictions apply.

GONZÁLEZ et al.: REVIEW OF MOTION PLANNING TECHNIQUES FOR AUTOMATED VEHICLES

1143

[33] A. Nash, K. Daniel, S. Koenig, and A. Felner, “Theta∗: Any-angle path planning on grids,” in Proc. Nat. Conf. Artif. Intell., 2007, pp. 1177–1183.
[34] M. Likhachev, D. Ferguson, G. Gordon, A. Stentz, and S. Thrun, “Anytime search in dynamic graphs,” Artif. Intell., vol. 172, no. 14, pp. 1613–1643, Sep. 2008.
[35] J. Ziegler, M. Werling, and J. Schroder, “Navigating car-like robots in unstructured environments using an obstacle sensitive cost function,” in Proc. Intell. Veh. Symp., 2008, pp. 787–791.
[36] M. Montemerlo et al., “Junior: The stanford entry in the urban challenge,” J. Field Robot., vol. 25, no. 9, pp. 569–597, Sep. 2008.
[37] S. Kammel et al., “Team annieway’s autonomous system for the 2007 darpa urban challenge,” J. Field Robot., vol. 25, no. 9, pp. 615–639, Sep. 2008.
[38] J. Ziegler, P. Bender, T. Dang, and C. Stiller, “Trajectory planning for bertha—A local, continuous method,” in Proc. IEEE Intell. Veh. Symp., 2014, pp. 450–457.
[39] J. Ziegler and C. Stiller, “Spatiotemporal state lattices for fast trajectory planning in dynamic on-road driving scenarios,” in Proc. IEEE/RSJ Int. Conf. IROS, 2009, pp. 1879–1884.
[40] J. H. Jeon et al., “Optimal motion planning with the half-car dynamical model for autonomous high-speed driving,” in Proc. ACC, Jun. 2013, pp. 188–193.
[41] J. Reeds and L. Shepp, “Optimal paths for a car that goes both forwards and backwards,” Paciﬁc J. Math., vol. 145, no. 2, pp. 367–393, 1990.
[42] J. Funke et al., “Up to the limits: Autonomous audi TTS,” in Proc. IV Symp., Jun. 2012, pp. 541–547.
[43] W. Xu, J. Wei, J. Dolan, H. Zhao, and H. Zha, “A real-time motion planner with trajectory optimization for autonomous vehicles,” in Proc. IEEE ICRA, May 2012, pp. 2061–2067.
[44] D. Gonzalez, J. Perez, R. Lattarulo, V. Milanes, and F. Nashashibi, “Continuous curvature planning with obstacle avoidance capabilities in urban scenarios,” in Proc. IEEE 7th Int. ITSC, Oct. 2014, pp. 1430–1435.
[45] R. T. Farouki, Pythagorean—Hodograph Curves. Berlin, Germany: Springer-Verlag, 2008.
[46] M. Pivtoraiko and A. Kelly, “Efﬁcient constrained path planning via search in state lattices,” in Proc. Int. Symp. Artif. Intell., Robot., Autom. Space, 2005, pp. 1–7.
[47] A. Kushleyev and M. Likhachev, “Time-bounded lattice for efﬁcient planning in dynamic environments,” in Proc. IEEE ICRA, 2009, pp. 1662–1668.
[48] M. Ruﬂi and R. Y. Siegwart, “On the application of the d∗ search algorithm to time-based planning on lattice graphs,” in Proc. ECMR, 2009, vol. 9, pp. 105–110.
[49] T. M. Howard and A. Kelly, “Optimal rough terrain trajectory generation for wheeled mobile robots,” Int. J. Robot. Res., vol. 26, no. 2, pp. 141–166, Feb. 2007.
[50] M. McNaughton, C. Urmson, J. Dolan, and J.-W. Lee, “Motion planning for autonomous driving with a conformal spatiotemporal lattice,” in Proc. IEEE ICRA, May 2011, pp. 4889–4895.
[51] Y.-L. Chen et al., “Terramax: Team oshkosh urban robot,” J. Field Robot., vol. 25, no. 10, pp. 841–860, Oct. 2008.
[52] B. J. Patz, Y. Papelis, R. Pillat, G. Stein, and D. Harper, “A practical approach to robotic design for the darpa urban challenge,” J. Field Robot., vol. 25, no. 8, pp. 528–566, Aug. 2008.
[53] S. J. Anderson, S. B. Karumanchi, and K. Iagnemma, “Constraint-based planning and control for safe, semi-autonomous operation of vehicles,” in Proc. IV Symp., 2012, pp. 383–388.
[54] D. Dolgov, S. Thrun, M. Montemerlo, and J. Diebel, “Path planning for autonomous vehicles in unknown semi-structured environments,” Int. J. Robot. Res., vol. 29, no. 5, pp. 485–501, Apr. 2010.
[55] D. Ferguson, A. Stentz, and S. Thrun, “Pao for planning with hidden state,” in Proc. IEEE ICRA, Apr. 2004, vol. 3, pp. 2840–2847.
[56] I. Miller et al., “Team cornell’s skynet: Robust perception and planning in an urban environment,” J. Field Robot., vol. 25, no. 8, pp. 493–527, Aug. 2008.
[57] T. M. Howard, C. J. Green, A. Kelly, and D. Ferguson, “State space sampling of feasible motions for high-performance mobile robot navigation in complex environments,” J. Field Robot., vol. 25, no. 6/7, pp. 325–345, Jun. 2008.
[58] T. Gu, J. Snider, J. Dolan, and J. Woo Lee, “Focused trajectory planning for autonomous on-road driving,” in Proc. IEEE IV Symp., Jun. 2013, pp. 547–552.
[59] M. Werling, S. Kammel, J. Ziegler, and L. Gröll, “Optimal trajectories for time-critical street scenarios using discretized terminal manifolds,” Int. J. Robot. Res., vol. 31, no. 3, pp. 346–359, Mar. 2012.

[60] P. Furgale et al., “Toward automated driving in cities using close-tomarket sensors: An overview of the v-charge project,” in Proc. IEEE IV Symp., Jun. 2013, pp. 809–816.
[61] Y. Kuwata et al., “Real-time motion planning with applications to autonomous urban driving,” IEEE Trans. Control Syst. Technol., vol. 17, no. 5, pp. 1105–1118, Sep. 2009.
[62] D. Braid, A. Broggi, and G. Schmiedel, “The terramax autonomous vehicle,” J. Field Robot., vol. 23, no. 9, pp. 693–708, Sep. 2006.
[63] J.-H. Ryu, D. Ogay, S. Bulavintsev, H. Kim, and J.-S. Park, “Development and Experiences of an Autonomous Vehicle for High-Speed Navigation and Obstacle Avoidance,” Frontiers of Intelligent Autonomous Systems. Berlin, Germany: Springer-Verlag, 2013, pp. 105–116.
[64] S. Karaman, M. R. Walter, A. Perez, E. Frazzoli, and S. Teller, “Anytime motion planning using the rrt∗,” in Proc. IEEE ICRA, 2011, pp. 1478–1483.
[65] G. S. Aoude, B. D. Luders, D. S. Levine, and J. P. How, “Threat-aware path planning in uncertain urban environments,” in Proc. IEEE/RSJ Int. Conf. IROS, 2010, pp. 6058–6063.
[66] R. Kala and K. Warwick, “Planning of multiple autonomous vehicles using rrt,” in Proc. IEEE 10th Int. Conf. CIS, Sep. 2011, pp. 20–25.
[67] M. F. Hsieh and U. Ozguner, “A parking algorithm for an autonomous vehicle,” in Proc. IEEE Intell. Veh. Symp., Jun. 2008, pp. 1155–1160.
[68] T. Fraichard and A. Scheuer, “From reeds and shepp’s to continuouscurvature paths,” IEEE Trans. Robot., vol. 20, no. 6, pp. 1025–1035, Dec. 2004.
[69] A. Broggi, P. Medici, P. Zani, A. Coati, and M. Panciroli, “Autonomous vehicles control in the vislab intercontinental autonomous challenge,” Annu. Rev. Control, vol. 36, no. 1, pp. 161–171, Apr. 2012.
[70] H. Vorobieva, N. Minoiu-Enache, S. Glaser, and S. Mammar, “Geometric continuous-curvature path planning for automatic parallel parking,” in Proc. IEEE 10th ICNSC, Apr. 2013, pp. 418–423.
[71] H. Vorobieva, S. Glaser, N. Minoiu-Enache, and S. Mammar, “Automatic parallel parking with geometric continuous-curvature path planning,” in Proc. IEEE Intell. Veh. Symp., Jun. 2014, pp. 465–471.
[72] H. Fuji, J. Xiang, Y. Tazaki, B. Levedahl, and T. Suzuki, “Trajectory planning for automated parking using multi-resolution state roadmap considering non-holonomic constraints,” in Proc. IEEE Intell. Veh. Symp., Jun. 2014, pp. 407–413.
[73] M. Brezak and I. Petrovic, “Real-time approximation of clothoids with bounded error for path planning applications,” IEEE Trans. Robot., vol. 30, no. 2, pp. 507–515, Apr. 2014.
[74] D. Coombs, K. Murphy, A. Lacaze, and S. Legowik, “Driving autonomously off-road up to 35 km/h,” in Proc. IEEE IV Symp., 2000, pp. 186–191.
[75] P. Petrov and F. Nashashibi, “Modeling and nonlinear adaptive control for autonomous vehicle overtaking,” IEEE Trans. Intell. Transp. Syst., vol. 15, no. 4, pp. 1643–1656, Aug. 2014.
[76] A. Piazzi, C. G. Lo Bianco, M. Bertozzi, A. Fascioli, and A. Broggi, “Quintic g2-splines for the iterative steering of vision-based autonomous vehicles,” IEEE Trans. Intell. Transp. Syst., vol. 3, no. 1, pp. 27–36, Mar. 2002.
[77] S. Glaser, B. Vanholme, S. Mammar, D. Gruyer, and L. Nouveliere, “Maneuver-based trajectory planning for highly autonomous vehicles on real road with trafﬁc and driver interaction,” IEEE Trans. Intell. Transp. Syst., vol. 11, no. 3, pp. 589–606, Sep. 2010.
[78] J. W. Lee and B. Litkouhi, “A uniﬁed framework of the automated lane centering/changing control for motion smoothness adaptation,” in Proc. 15th IEEE Int. ITSC, Sep. 2012, pp. 282–287.
[79] A. Simon and J. Becker, “Vehicle guidance for an autonomous vehicle,” in Proc. IEEE/IEEJ/JSAI Int. Conf. Intell. Transp. Syst., 1999, pp. 429–434.
[80] C. G. Keller et al., “Active pedestrian safety by automatic braking and evasive steering,” IEEE Trans. Intell. Transp. Syst., vol. 12, no. 4, pp. 1292–1304, Dec. 2011.
[81] J. Perez, R. Lattarulo, and F. Nashashibi, “Dynamic trajectory generation using continuous-curvature algorithms for door to door assistance vehicles,” in Proc. IEEE Intell. Veh. Symp., 2014, pp. 510–515.
[82] J. Pérez, J. Godoy, J. Villagra, and E. Onieva, “Trajectory generator for autonomous vehicles in urban environments,” in Proc. IEEE ICRA, May 2013, pp. 409–414.
[83] L. Han, H. Yashiro, H. T. N. Nejad, Q. H. Do, and S. Mita, “Bezier curve based path planning for autonomous vehicle in urban environment,” in Proc. IV Symp., 2010, pp. 1036–1042.
[84] Z. Liang, G. Zheng, and J. Li, “Automatic parking path optimization based on bezier curve ﬁtting,” in Proc. IEEE ICAL, Aug. 2012, pp. 583–587.

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on July 14,2022 at 16:22:30 UTC from IEEE Xplore. Restrictions apply.

1144

IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 17, NO. 4, APRIL 2016

[85] N. Montes, A. Herraez, L. Armesto, and J. Tornero, “Real-time clothoid approximation by rational bezier curves,” in Proc. IEEE ICRA, May 2008, pp. 2246–2251.
[86] N. Montes, M. Mora, and J. Tornero, “Trajectory generation based on rational bezier curves as clothoids,” in Proc. IEEE Intell. Veh. Symp., Jun. 2007, pp. 505–510.
[87] P. G. Trepagnier, J. Nagel, P. M. Kinney, C. Koutsougeras, and M. Dooner, “Kat-5: Robust systems for autonomous vehicle navigation in challenging and unknown terrain,” J. Field Robot., vol. 23, no. 8, pp. 509–526, Aug. 2006.
[88] Z. Shiller and Y.-R. Gwo, “Dynamic motion planning of autonomous vehicles,” IEEE Trans. Robot. Autom., vol. 7, no. 2, pp. 241–249, Apr. 1991.
[89] T. Berglund, A. Brodnik, H. Jonsson, M. Staffanson, and I. Soderkvist, “Planning smooth and obstacle-avoiding b-spline paths for autonomous mining vehicles,” IEEE Trans. Autom. Sci. Eng., vol. 7, no. 1, pp. 167–172, Jan. 2010.
[90] L. B. Cremean et al., “Alice: An information-rich autonomous vehicle for high-speed desert navigation,” J. Field Robot., vol. 23, no. 9, pp. 777–810, Sep. 2006.
[91] D. Kogan and R. Murray, “Optimization-based navigation for the darpa grand challenge,” in Proc. CDC, 2006, pp. 1–6.
[92] T. Gu and J. M. Dolan, “On-Road Motion Planning for Autonomous Vehicles,” in Intelligent Robotics and Applications. Berlin, Germany: Springer-Verlag, 2012, pp. 588–597.
[93] L. E. Kavraki, P. Svestka, J.-C. Latombe, and M. H. Overmars, “Probabilistic roadmaps for path planning in high-dimensional conﬁguration spaces,” IEEE Trans. Robot. Autom., vol. 12, no. 4, pp. 566–580, Aug. 1996.
[94] S. M. LaValle and J. J. Kuffner, “Randomized kinodynamic planning,” Int. J. Robot. Res., vol. 20, no. 5, pp. 378–400, 2001.
[95] S. Karaman and E. Frazzoli, “Sampling-based algorithms for optimal motion planning,” Int. J. Robot. Res., vol. 30, no. 7, pp. 846–894, Jun. 2011.
[96] S. Karaman and E. Frazzoli, “Optimal kinodynamic motion planning using incremental sampling-based methods,” in Proc. 49th IEEE CDC, Dec. 2010, pp. 7681–7687.
[97] L. Labakhua, U. Nunes, R. Rodrigues, and F. S. Leite, “Smooth Trajectory Planning for Fully Automated Passengers Vehicles: Spline and Clothoid Based Methods and its Simulation,” in Informatics in Control Automation and Robotics. Berlin, Germany: Springer-Verlag, 2008, pp. 169–182.
[98] J. Horst and A. Barbera, “Trajectory generation for an on-road autonomous vehicle,” in Proc. Int. Soc. Opt. Symp. Defense Security, 2006, Art. ID 62302J.
[99] D. Walton and D. Meek, “A controlled clothoid spline,” Comput. Graph., vol. 29, no. 3, pp. 353–363, Jun. 2005.
[100] J.-W. Choi, R. Curry, and G. Elkaim, “Path planning based on bézier curve for autonomous ground vehicles,” in Proc. IEEE IAENG Spec. Ed. WCECS, 2008, pp. 158–166.
[101] D. Walton, D. Meek, and J. Ali, “Planar G2 transition curves composed of cubic Bézier spiral segments,” J. Comput. Appl. Math., vol. 157, no. 2, pp. 453–476, Aug. 2003.
[102] K. Yang and S. Sukkarieh, “An analytical continuous-curvature pathsmoothing algorithm,” IEEE Trans. Robot., vol. 26, no. 3, pp. 561–568, Jun. 2010.
[103] L. Wang, K. Miura, E. Nakamae, T. Yamamoto, and T. Wang, “An approximation approach of the clothoid curve deﬁned in the interval [0, /2] and its offset by free-form curves,” Comput.-Aided Des., vol. 33, no. 14, pp. 1049–1058, Dec. 2001.
[104] J. Sánchez-Reyes and J. Chacón, “Polynomial approximation to clothoids via s-power series,” Comput.-Aided Des., vol. 35, no. 14, pp. 1305–1313, Dec. 2003.
[105] L. Romani and M. Sabin, “The conversion matrix between uniform b-spline and bzier representations,” Comput. Aided Geometric Des., vol. 21, no. 6, pp. 549–560, Jul. 2004.
[106] J. Ren, K. McIsaac, and R. Patel, “Modiﬁed newton’s method applied to potential ﬁeld-based navigation for mobile robots,” IEEE Trans. Robot., vol. 22, no. 2, pp. 384–391, Apr. 2006.
[107] J. Hardy and M. Campbell, “Contingency planning over probabilistic obstacle predictions for autonomous road vehicles,” IEEE Trans. Robot., vol. 29, no. 4, pp. 913–929, Aug. 2013.
[108] W. Xu, J. Pan, J. Wei, and J. Dolan, “Motion planning under uncertainty for on-road autonomous driving,” in Proc. IEEE ICRA, May 2014, pp. 2507–2512.
[109] J. Lee and B. Park, “Development and evaluation of a cooperative vehicle intersection control algorithm under the connected vehicles

environment,” IEEE Trans. Intell. Transp. Syst., vol. 13, no. 1, pp. 81–90, Mar. 2012. [110] F. Havlak and M. Campbell, “Discrete and continuous, probabilistic anticipation for autonomous robots in urban environments,” IEEE Trans. Robot., vol. 30, no. 2, pp. 461–474, Apr. 2014. [111] L. Fletcher et al., “The mit—Cornell collision and why it happened,” J. Field Robot., vol. 25, no. 10, pp. 775–807, Oct. 2008. [112] S. Shladover, “The gm-path platoon scenario,” Intellimotion, vol. 6, no. 3, pp. 2–3, 1997. [113] C. Thorpe, T. Jochem, and D. Pomerleau, “Automated highways and the free agent demonstration,” in Robotics Research. London, U.K.: Springer-Verlag, 1998, pp. 246–254. [114] K. Malone, J. van der Wiel, and B. Saugy, “Cybernetic transport systems: Lessons to be learned from user needs analysis and ﬁeld experience,” in Proc. IEEE Intell. Veh. Symp., Jun. 2002, vol. 2, pp. 551–556. [115] M. Parent, “Advanced urban transport: Automation is on the way,” IEEE Intell. Syst., vol. 22, no. 2, pp. 9–11, Mar./Apr. 2007. [116] A. Kelly et al., “Toward reliable off road autonomous vehicles operating in challenging environments,” Int. J. Robot. Res., vol. 25, no. 5/6, pp. 449–483, May 2006. [117] E. Krotkov et al., “The darpa perceptor evaluation experiments,” Auton. Robots, vol. 22, no. 1, pp. 19–35, Jan. 2007. [118] J. M. Anderson et al., Autonomous Vehicle Technology: A Guide for Policymakers. Santa Monica, CA, USA: Rand Corp., 2014. [119] K. Chu, M. Lee, and M. Sunwoo, “Local path planning for off-road autonomous driving with avoidance of static obstacles,” IEEE Trans. Intell. Transp. Syst., vol. 13, no. 4, pp. 1599–1616, Dec. 2012. [120] K. Jo et al., “Overall reviews of autonomous vehicle a1-system architecture and algorithms,” Intell. Auton. Veh., vol. 8, no. 1, pp. 114–119, 2013. [121] C. Urmson et al., “A robust approach to high-speed navigation for unrehearsed desert terrain,” J. Field Robot., vol. 23, no. 8, pp. 467–508, Aug. 2006. [122] J. Wei et al., “Towards a viable autonomous driving research platform,” in Proc. IEEE IV Symp., 2013, pp. 763–770. [123] T. Gu and J. M. Dolan, “Toward human-like motion planning in urban environments,” in Proc. Intell. Veh. Symp., 2014, pp. 350–355. [124] C. Fulgenzi, C. Tay, A. Spalanzani, and C. Laugier, “Probabilistic navigation in dynamic environment using rapidly-exploring random trees and gaussian processes,” in Proc. IEEE/RSJ Int. Conf. IROS, 2008, pp. 1056–1062. [125] C. Fulgenzi, A. Spalanzani, and C. Laugier, “Probabilistic motion planning among moving obstacles following typical motion patterns,” in Proc. IEEE/RSJ Int. Conf. IROS, 2009, pp. 4027–4033. [126] L. Bouraoui et al., “An on-demand personal automated transport system: The citymobil demonstration in la rochelle,” in Proc. IEEE Intell. Veh. Symp., 2011, vol. 4, pp. 1086–1091. [127] D. González and J. Perez, “Control architecture for cybernetic transportation systems in urban environments,” in Proc. IEEE IV Symp., 2013, pp. 1119–1124. [128] P. Petrov and F. Nashashibi, “Adaptive steering control for autonomous lane change maneuver,” in Proc. IEEE IV Symp., 2013, pp. 835–840. [129] M. Werling, T. Gindele, D. Jagszent, and L. Groll, “A robust algorithm for handling moving trafﬁc in urban scenarios,” in Proc. IEEE Intell. Veh. Symp., 2008, pp. 1108–1112. [130] M. Werling, J. Ziegler, S. Kammel, and S. Thrun, “Optimal trajectory generation for dynamic street scenarios in a frenet frame,” in Proc. IEEE ICRA, 2010, pp. 987–993. [131] A. Geiger et al., “Team annieway’s entry to the 2011 grand cooperative driving challenge,” IEEE Trans. Intell. Transp. Syst., vol. 13, no. 3, pp. 1008–1017, Sep. 2012. [132] Y. Kuwata, G. A. Fiore, J. Teo, E. Frazzoli, and J. P. How, “Motion planning for urban driving using rrt,” in Proc. IEEE/RSJ Int. Conf. IROS, 2008, pp. 1681–1686. [133] A. Broggi, M. Bertozzi, A. Fascioli, C. G. L. Bianco, and A. Piazzi, “The argo autonomous vehicle’s vision and control systems,” Int. J. Intell. Control Syst., vol. 3, no. 4, pp. 409–441, 1999. [134] A. Broggi et al., “Development of the control system for the vislab intercontinental autonomous challenge,” in Proc. 13th Int. ITSC, 2010, pp. 635–640. [135] A. Broggi et al., “Proud-public road urban driverless test: Architecture and results,” in Proc. IEEE Intell. Veh. Symp., 2014, pp. 648–654. [136] A. Broggi, S. Debattisti, M. Panciroli, and P. P. Porta, “Moving from analog to digital driving,” in Proc. IEEE IV Symp., 2013, pp. 1113–1118. [137] S. E. Shladover, “Path at 20-history and major milestones,” IEEE Trans. Intell. Transp. Syst., vol. 8, no. 4, pp. 584–592, Dec. 2007.

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on July 14,2022 at 16:22:30 UTC from IEEE Xplore. Restrictions apply.

GONZÁLEZ et al.: REVIEW OF MOTION PLANNING TECHNIQUES FOR AUTOMATED VEHICLES

1145

[138] R. Kummerle, D. Hahnel, D. Dolgov, S. Thrun, and W. Burgard, “Autonomous driving in a multi-level parking structure,” in Proc. IEEE ICRA, 2009, pp. 3395–3400.
[139] J. Levinson et al., “Towards fully autonomous driving: Systems and algorithms,” in Proc. IEEE IV Symp., 2011, pp. 163–168.
[140] D. Dolgov and S. Thrun, “Autonomous driving in semi-structured environments: Mapping and planning,” in Proc. IEEE ICRA, 2009, pp. 3407–3414.
[141] M. Aeberhard et al., “Experience, results and lessons learned from automated driving on germany’s highways,” IEEE Intell. Transp. Syst. Mag., vol. 7, no. 1, pp. 42–57, Spring, 2015.
[142] D. Madas et al., “On path planning methods for automotive collision avoidance,” in Proc. IEEE IV Symp., 2013, pp. 931–937.
[143] E. van Nunen, R. Kwakkernaat, J. Ploeg, and B. D. Netten, “Cooperative competition for future mobility,” IEEE Trans. Intell. Transp. Syst., vol. 13, no. 3, pp. 1018–1025, Sep. 2012.
[144] K. Kritayakirana and J. C. Gerdes, “Autonomous vehicle control at the limits of handling,” Int. J. Veh. Auton. Syst., vol. 10, no. 4, pp. 271–296, 2012.
[145] T. Gandhi and M. Trivedi, “Pedestrian protection systems: Issues, survey, and challenges,” IEEE Trans. Intell. Transp. Syst., vol. 8, no. 3, pp. 413–430, Sep. 2007.
David González was born in Caracas, Venezuela, in 1989. He received the B.E. degree in electronic engineering from Simón Bolívar University, Venezuela, in 2012. He is currently working toward the Ph.D. degree with the RITS Team, INRIA (ParisRocquencourt) and MINES ParisTech, PSL Research University, France.
His research interest include vehicle automation, motion planning, real-time trajectory generation, fuzzy logic control, and human–machine shared control systems.
Joshué Pérez received the B.E. degree in electronic engineering from Simón Bolívar University, Venezuela, in 2007 and the M.E. and Ph.D. degrees from the University Complutense of Madrid, in 2009 and 2012, respectively.
He is currently a Research Holder with RITS team, INRIA. He has more than eight years of experience in the intelligent transportation system ﬁeld, where he have been working in national and European projects ranging from ADAS up to fully automated vehicles. He has technically led 10+ EU and national projects for demonstrating different ADAS technologies. Since 2013, he works as Project Manager for the EU DESERVE, PICAV and FURBOT projects at INRIA. His research interests include fuzzy logic, modeling, control, path planning, cybercars, cooperative maneuvers, automated vehicles, arbitration and control, and vehicle standards. He serves as an Associate Editor for IEEE Intelligent Vehicle Symposium. He served as a Guest Editor for the IEEE INTELLIGENT TRANSPORTATION SYSTEMS MAGAZINE in the special issue of electro-mobility in 2014. He received the best Ph.D. Thesis Award in Intelligent Control from the Spanish Committee of Automation (CEA).

Vicente Milanés received the Ph.D. degree in electronic engineering from University of Alcalá, Madrid, Spain, in 2010.
From 2006 to 2011, he was with the AUTOPIA Program at the Center for Automation and Robotics (UPM-CSIC, Spain). Then, he was a Fulbright Fellow with California PATH, UC Berkeley. Since 2014, he has been with the RITS Team, INRIA, France. His research interests include autonomous vehicles, fuzzy logic control, intelligent trafﬁc and transport infrastructures, and vehicle–infrastructure cooperation. He serves as the Editor-in-Chief for the Journal of Computer and Communications and as an Associate Editor for the Journal of Intelligent Systems and the Journal of Intelligent Transportation and Urban Planning. He has been awarded with the Best Paper Award in three conferences, and his Ph.D. thesis has received two national and one international awards.
Fawzi Nashashibi received the Master’s degree in automation, industrial engineering and signal processing (LAAS/CNRS); the Ph.D. degree in robotics from Toulouse University, prepared in (LAAS/CNRS) laboratory; and the HDR Diploma (Accreditation to research supervision) from the University of Pierre et Marie Curie (Paris 6). He was a Research Engineer at PROMIP (working on mobile robotics perception dedicated to space exploration) and a Technical Manager at Light Company, where he led the developments of virtual reality/augmented reality applications. Since 1994, he has been a Lecturer in several universities (Mines ParisTech, Paris 8 Saint-Denis, Leonard de Vinci Univ.—ESILV professor, Telecom Sud Paris, INT Evry, and Ecole Centrale dElectronique) in the ﬁelds of image and signal processing, 3-D perception, 3-D infographics, mobile robotics, and C++/JAVA programming. Also since 1994, he has been a Senior Researcher and the Program Manager in the Robotics Center, École des Mines de Paris (Mines ParisTech). Since May 2000, he has been an R&D Engineer and a Project Manager with ARMINES. Since 2010, he has been a Senior Researcher and the Program Manager of the RITS Team, INRIA (ParisRocquencourt). He played key roles in more than 50 European and national French projects such as Carsense, HAVE-it, PICAV, CityMobil, ARCOS, ABV, LOVe, and SPEEDCAM, some of which he has coordinated. He is also involved in many collaborations with French and international academics and industrial partners. He is the author of numerous publications and patents in the ﬁeld of ITS and ADAS systems. His main research interests include environment perception and multisensor fusion, vehicle positioning, and environment 3-D modeling with main applications in intelligent transport systems and robotics. His current research interests include advanced urban mobility through the design and development of highly automated transportation systems, such as highly automated unmanned guided vehicles (such as cybercars) and automated personal vehicles, where he is known as an international expert. He is a member of the ITS Society and the Robotics & Automation Society. He is an Associate Editor of several IEEE international conferences such as ICRA, IROS, IV, ITSC, and ICARCV.

Authorized licensed use limited to: Technische Hochschule Ingolstadt. Downloaded on July 14,2022 at 16:22:30 UTC from IEEE Xplore. Restrictions apply.

