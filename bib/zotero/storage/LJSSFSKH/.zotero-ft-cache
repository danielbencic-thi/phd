Applied Mathematics and Computation 219 (2013) 7514–7532
Contents lists available at SciVerse ScienceDirect
Applied Mathematics and Computation
journal homepage: www.elsevier.com/locate/amc

Exploring collision-free path planning by using homotopy
continuation methods
H. Vazquez-Leal a,⇑, A. Marin-Hernandez b, Y. Khan c, A. Yıldırım d, U. Filobello-Nino a, R. Castaneda-Sheissa a, V.M. Jimenez-Fernandez a
a Electronic Instrumentation and Atmospheric Sciences School, Universidad Veracruzana, Cto. Gonzalo Aguirre Beltrán S/N, Xalapa, Veracruz, México 91000, Mexico b Department of Artiﬁcial Intelligence, Universidad Veracruzana, Sebastián Camacho #5, Xalapa, Veracruz, México 91000, Mexico c Department of Mathematics, Zhejiang University, Hangzhou 310027, China d 4146 Sk. No. 16, Zeytinalani Mah. Urla-Izmir, Turkey

article info
Keywords: Path planning Robot navigation Homotopy continuation method

abstract
Autonomous and semi-autonomous robots play signiﬁcant roles in space and terrestrial exploration, even more in unfavorable and dangerous environments. Although recent advances allow robots to evolve in many such environments, one of the most important problems remains the establishment of collision-free trajectories in static or partially (temporal) static environments. This paper presents a different approach to address this problem, proposing a methodology based on homotopy continuation methods (HCM) capable of generating collision-free trajectories in two and three dimensions. The basic idea behind the proposal relies on the construction of a nonlinear equation representing the map of the environment, making it possible to apply HCM methods to obtain collision-free paths. A series of simulations are presented to show the effectiveness of the method avoiding circular, semi-rectangular, spherical shaped and semi-parallelepipeds obstacles.
Ó 2013 Elsevier Inc. All rights reserved.

1. Introduction
Autonomous and semi-autonomous robots are important in ﬁelds as diverse as: industrial, military or medical, and in numerous applications as: terrestrial and space exploration, nuclear facilities inspection and, in general, for any unsafe or hostile environments. To execute many of the given tasks robots need sophisticated and highly accurate modules, particularly for perception and navigation [1]. To go from one point to another, generally a navigation module requires: (a) a map of the environment and (b) a path-planning algorithm.
Maps can be given to the robot as a priori information (e.g. a CAD model of the environment) or can be constructed by the robot itself in an exploration phase by a proper SLAM algorithm (Simultaneous Localization and Mapping) [2]. For the purposes of this work, is considered that the robot has already a map of the environment allowing us to focus on path planning algorithms.
Path-planning algorithms provide collision-free trajectories; however as they are very time consuming methods it is common to consider the environment as static. While for industrial environments or planetary exploration this statement is generally true, it is not the case for environments like: homes, ofﬁces and, in general, for most of the real-world environments [3–20]. Even so, it is possible to consider a temporal window where the environment could be considered as static.
⇑ Corresponding author.
E-mail address: hvazquez@uv.mx (H. Vazquez-Leal).
0096-3003/$ - see front matter Ó 2013 Elsevier Inc. All rights reserved. http://dx.doi.org/10.1016/j.amc.2013.01.038

H. Vazquez-Leal et al. / Applied Mathematics and Computation 219 (2013) 7514–7532

7515

This window depends on environments and applications. Additionally, in this article we will only explore the collision-free trajectory planning, leaving as future work the problem of path following involving robot holonomic restrictions.
Nowadays, there are many methods for planning and generating collision-free trajectories. Roughly, we can group them into two classiﬁcations [21]: graphs and artiﬁcial potential ﬁelds. On one hand, the graphs approach solves the problem representing the collision free space by an interconnected graph. Then, a search is performed leading to a collision free trajectory, between initial and destination points. Nonetheless, the complexity of this kind of methods grows exponentially when the number of obstacles and possible solutions increase [22]. On the other hand, artiﬁcial potential ﬁelds methods work based on a simulation of repulsive forces around obstacles and an attractor located at the goal point. The solution to the potential ﬁeld map is a collision-free trajectory. Unfortunately, solutions for these methods can be trapped by local minimums of the artiﬁcial ﬁeld, providing wrong trajectories [23].
The use of homotopy as support technique for path planning was exposed in [24], showing a technique for trajectory replanning in environments with unpredictable changes. In the mentioned work, it is employed a homotopy principle for creating a set of homotopy paths from the original path. In addition, the valid homotopy path for the robot is selected using a reactive control algorithm. In [24–31] it is shown that homotopy continuation methods (HCM) can be useful for kinematics problems. Therefore, in this work is proposed the use of HCM methods to generate a family of collision-free homotopy paths in two or three dimensions.
First, we propose a methodology to establish a nonlinear algebraic equation that represents the map of obstacles, using as variables the relative displacement of the robot with respect to initial position. This nonlinear equation has a solution, exact at the goal point of the robot. Second, we construct a homotopy map that use, as starting point, the initial position of the robot. Finally, a numerical continuation procedure is employed as a mechanism to trace the collision-free path that ends at the goal point (solution).
This paper is organized as follows. In Section 2, we brieﬂy review the basic idea of HCM methods. The homotopy path planning method (HPPM) is given in Section 3. The proposal of a modiﬁed version of the HPPM method is provided in Section 4. Section 5, refers to an extension of HPPM and EHPPM methods to three dimensions. Some numerical simulations are presented in Section 6. In Section 7, we summarize our results and present future research. Finally, a brief conclusion is given in Section 8.

2. Basis of homotopy continuation methods

Nonlinear algebraic equations systems (NAES) are very difﬁcult to solve by conventional methods like Newton–Raphson (NR). The NR method converges properly if an initial guess for the solution is available, though there are examples for which the NR method diverges from all initial guesses. Nevertheless, it is common that this initial guess is not available or not simple to obtain. Therefore, convergence of the plain NR method cannot be guaranteed for all practical problems. Hence, one way to circumvent this issue is using HCM methods.
The HCM methods are a continuous transformation from one trivial problem (simple to solve) to the study problem (hard to solve). These kind of methods are applied to such diverse problems like: electronic circuits [32–43], Toeplitz systems, nonlinear control synthesis [44], stochastic ﬁnance economies [45], load ﬂow solutions of ill-conditioned power systems [46], discretization of ordinary differential equations [47], inverse kinematics problems [24–31], optimization [48,49], among many others.
The ﬁrst step to formulate a homotopy [50,33,35,51–53,34,54,48,55,28,49,56–60,36,32,61] is to establish a nonlinear equation that models the problem to be solved; which is deﬁned as

f ðxÞ ¼ 0; f :2 Rn ! Rn;

ð1Þ

where x denotes the variables of the problem and n is the total number of those variables. A homotopy map can be represented as:

Hðf ðxÞ; kÞ ¼ 0; H :2 Rnþ1 ! Rn;

ð2Þ

where k is the homotopy parameter. Eq. (2) represents any homotopy formulation that fulﬁls the following conditions:

 For k ¼ 0, solution for HÀ1ð0Þ is known or easily found using numerical methods.
 For k ¼ 1; Hðf ðxÞ; 1Þ ¼ f ðxÞ. It means that at k ¼ 1 the solution or solutions for f ðxÞ can be found.  The path for HÀ1ð0Þ is a continuous function of k with 0 6 k 6 1.

The homotopy path c is the solution set for HÀ1ð0Þ, representing a continuous curve that can be traced by numerical con-
tinuation techniques or path following methods [62,51,63–65,37,38,29,30]. A possible homotopy map is

Hðf ðxÞ; kÞ ¼ kf ðxÞ þ ð1 À kÞgðxÞ ¼ 0;

ð3Þ

where gðxÞ is a problem easy to solve. The selection gðxÞ determines different speciﬁc homotopies. For instance, the Newton homotopy [38,55,66] can be ob-
tained if we choose gðxÞ ¼ f ðxÞ À f ðx0Þ; after some algebraic steps results

7516

H. Vazquez-Leal et al. / Applied Mathematics and Computation 219 (2013) 7514–7532

Hðf ðxÞ; kÞ ¼ f ðxÞ À ð1 À kÞf ðx0Þ ¼ 0;

ð4Þ

where x0 is the starting point (arbitrarily chosen) of the trajectory. If k ¼ 0, the homotopy map is reduced to the trivial problem

Hðx; 0Þ ¼ f ðxÞ À f ðx0Þ ¼ 0:

ð5Þ

When k ¼ 1, the sought solution is achieved

Hðx; 1Þ ¼ f ðxÞ ¼ 0:

ð6Þ

This process is a continuous deformation from k ¼ 0 to k ¼ 1, transforming the trivial problem f ðxÞ À f ðx0Þ ¼ 0 into the
original problem f ðxÞ ¼ 0. The continuations deformation can create paths c like the ones shown in Fig. 1. It can be noticed that trajectory c2 is a successful case going from starting point A (k ¼ 0) to solution B where k ¼ 1, while the rest of the paths
are cases of failure for the HCM method.
In general terms, numerical continuation methods follow the next steps:

 We choose a starting point ðk0; x0Þ ¼ ð0; x0Þ.  Solve Hðk1; xÞ ¼ 0 for x to obtain x1. Here, k1 ¼ k0 þ Dk; with Dk small enough to prevent an accidental divergence from the
trajectory. This step usually involves predictor and corrector steps. There are many algorithms that can be chosen here, among them, we can mention a typical Euler predictor step and a Newton based corrector step. k can increase and decrease adapting to the turning points of the trajectory. To read a detailed explanation of these methods the reader can refer to [64,65].  The last step is updated and repeated until k ¼ 1. Now, the sought solution is found.

The success of ﬁnding the sought solution depends of several factors:

 Find a methodology to establish the NAES that describes the physical behavior of the problem under study. The properly formulation of NAES can help to guarantee or increase the probability of success of the homotopy simulation [35].
 The behavior of different homotopy maps change for speciﬁc problems.  Constructing a properly numerical continuation algorithm. Even if the homotopy map and NAES are established with the
guarantee of global convergence [35,67], a poor numerical continuation scheme may lead to a failure [51,64,65,62].

The path tracking of the homotopy trajectory is not a trivial task. Therefore, this process can ﬁnd several issues to deal with, like:

 Optimal path tracking. The step size Dk can be adapted to the nature of the trajectory. On one hand, when the curve is ‘‘ﬂat’’ the step size can be increased to reduce the number of iterations. On the other hand, when the curve is near a turning point, in particular for sharp turning points, it is recommended to reduce Dk in order to circumvent the possibility of a failure of the path following. Reducing or increasing the value of Dk is a trade off between the speed of the numerical
continuation and the accuracy of the path tracking of c.
 Curve jumping [29,30]. This issue is related to the optimal path tracking; if Dk is increased in the vicinity of a nearby trajectory, it can produce an accidental jump from one trajectory to another. In [29,30] is reported a strategy to deal with curve jumping based on reduction of the step size in terms of the number of Newton correction steps and the separation of two consecutive iterations of the predictor–corrector step.
 Bifurcation and Singularities [68,62]. These issues are usually due to the physical phenomena and can be treated using artiﬁcial parameter homotopies [35].

Fig. 1. Possible homotopy paths.

H. Vazquez-Leal et al. / Applied Mathematics and Computation 219 (2013) 7514–7532

7517

Eq. (1) usually arises from phenomenon under study. Therefore, as we want to apply HCM for path planning in robotics, we need to propose a novel methodology to describe the conﬁguration space as NAES. Such NAES will describe aspects like: obstacles, initial position of the robot and goal point. This new conﬁguration space will be represented as a nonlinear algebraic equation. Then, a homotopy can be applied to solve it and generate useful trajectories for path planning.
In homotopy continuation methods, usually, the main goal is to ﬁnd the solution to the NAES, leaving the aspect of the trajectory in second place. Nevertheless, in this work, the shape of homotopy trajectory plays as a relevant role as the starting point and the solution. Therefore, all the developed knowledge around numerical continuation methods and HCM methods is a great tool to this new research line.

3. Homotopy applied to collision-free path planning

In mobile robotics, indoor environments are commonly represented by a 2D map, which is only a top view of a given scenario. By using this representation the complexity of the problem is reduced. In this context, the robot position is given as (x; y), being x and y the position within the Cartesian plane x–y.
Computation of collision free paths depends directly on the environment complexity. In order to reduce computational cost it is common to consider simple representations, essentially for obstacles. The most employed representations are: (a) circular, deﬁned by a given position of the centre and a radius; (b) rectangular, deﬁned by its bounding box. Both shapes are considered in this work.
The equation for a circular obstacle is

Ciðx; yÞ ¼ ðx À xiÞ2 þ ðy À yiÞ2 À r2i ;

ð7Þ

where xi and yi are the centre for the i-th circular obstacle with radius ri. As proposed in [23], rectangular shapes can be approximated by an analytical equation named n-ellipsoid. According to

this presentation an n-ellipsoid for two dimensions is described by

Riðx;

yÞ

¼

x

À a

xi 2n

þ

y

À b

yi 2n

À

1;

ð8Þ

where xi and yi are the center of the i-th rectangle, 2a and 2b are approximations to the base and height of the rectangle as n tends to inﬁnity. For this work, we have employed the value of n ¼ 2.
In order to solve the problem, the dimensions of the conﬁguration space are normalized. Normalization is accomplished by considering the goal point B at (1, 1) and the starting point A may not be located at (0, 0) but somewhere between the area delimited by planes x ¼ 0; x ¼ 1; y ¼ 0; y ¼ 1, as depicted in Fig. 2. Additionally, it is necessary to establish an auxiliary equation system having a unique solution at ﬁnal point B of the path. This can be formulated as

f1ðx; yÞ ¼ 0; x; y 2 R;

ð9Þ

f2ðx; yÞ ¼ 0; x; y 2 R;

where f1ð1; 1Þ ¼ 0 and f2ð1; 1Þ ¼ 0. An example of an auxiliary equation system with such characteristics is given by

l1ðx; yÞ ¼ d11y þ d12x þ d13 ¼ 0; l2ðx; yÞ ¼ d21y þ d22x þ d23 ¼ 0;

ð10Þ

where di;j (i ¼ 1; 2 and j ¼ 1; 2; 3) are constants for the straight lines. Furthermore, we establish that each straight line l1ðx; yÞ and l2ðx; yÞ should cross through ð1; 1Þ.

Fig. 2. 2D map environment.

7518

H. Vazquez-Leal et al. / Applied Mathematics and Computation 219 (2013) 7514–7532

To create collision free paths, we use one homotopy property consisting in the tendency of attraction by the two branches f1À1ð0Þ and f2À1ð0Þ and repelled by singularities. Therefore, the proposed NAES describing the map environment are

f1ðx; yÞ ¼ l1ðx; yÞ ¼ 0; x; y 2 R;

ð11Þ

f2ðx; yÞ ¼ l2ðx; yÞ þ pð1=Fðx; yÞ À 1=GÞ ¼ 0; x; y 2 R;

where p is an adjustment parameter that regulates the homotopy path behavior; Fðx; yÞ is the equation deﬁning the obstacle set (circles or semi-rectangles), and G is a correction constant to guarantee that f2ð1; 1Þ ¼ 0. Hereafter, equation f2 will be known as restriction equation.
Now, we deﬁne Fðx; yÞ as

Y i¼k Fðx; yÞ ¼ Oiðx; yÞ;
i¼1
being k the number of obstacles and Oiðx; yÞ represents (7) or (8) for the i-th obstacle. Next, G is a corrector factor that helps to guarantee that f2ð1; 1Þ ¼ 0 and it is deﬁned as
G ¼ Fð1; 1Þ:

ð12Þ ð13Þ

Each Oi obstacle possesses its own position and dimensions. Moreover, the nonlinear equation system (11) is formulated based on linear equation system (10), such that for small values of p solution uniqueness is guaranteed at goal point ð1; 1Þ. Besides, the restriction function f2ðx; yÞ is singular just at the contour of the circles and semi-rectangles, generating a barrier keeping the homotopy path of colliding with such obstacles.
Now, we use Newton homotopy [38,55,66] map (4) to exemplify the proposed method, which is

H1ðx; yÞ ¼ f1ðx; yÞ À ð1 À kÞf ¼ 0;

ð14Þ

H2ðx; yÞ ¼ f2ðx; yÞ À ð1 À kÞn ¼ 0;

where k is the homotopy parameter, f ¼ f1ðx0; y0Þ, and n ¼ f2ðx0; y0Þ establishes initial point ðx0; y0Þ. Solving for k in H1ðx; yÞ and H2ðx; yÞ, equaling both equations, and performing some algebraic manipulations we obtain

G½ðfl2ðx; yÞ À nl1ðx; yÞÞFðx; yÞ À fp þ fpFðx; yÞ ¼ 0;

ð15Þ

solutions of (15) correspond to the solutions family for HÀ1ð0Þ, that is, the homotopy path in the plane x–y. The collision free trajectory depends on the initial point ðx0; y0Þ, obstacles conﬁguration, and p parameter. Hence, there is
a family of possible trajectories. In this context (15) represents the analytic implicit polynomial equation of a collision free trajectory family for all possible free conﬁguration spaces, formed by circles and approximated rectangles. In addition, the degree of (15) is 2M þ 4N þ 1, where M is the number of circles and N is the number of semi-rectangles (N þ M ¼ k), indicating a lineal correspondence with the number of obstacles.
On one side, the optimum way to trace the homotopy path of (14) is using path following methods [51,64,65,62,37,38]. The numerical continuation methods are a huge set of power numerical tools that can be chosen according to needs of the problem to solve. Nevertheless, the two premises for homotopy continuation of never to lose the main path and achieve the ﬁnal point/position at solution (1, 1) should be kept. However, for this speciﬁc application, we should add a third requisite; the numerical procedure should keep an accurate tracking of the path to avoid accidental overlapping with the boundary of the obstacles. On the other side, for research purposes only, it is possible to sketch the graph of the implicit polynomial from (15) by using graph routines of implicit equations; which are available in computer programs like Maple 13 (implicitplot command), making it possible to sketch the collision free path and isolate paths. This procedure is slow due to the nature of implicitplot command; nevertheless, it can give us insights about the behavior of the trajectories.
Notice that, ﬁguratively, (7) and (8) represents some sort of force ﬁelds around the real obstacles. Therefore, the homotopy path cannot cross those ﬁelds, although, it can pass close to them. Then, when position and dimensions of those ﬁelds are chosen, the user should consider a tolerance space between the real obstacle and the ﬁeld that represents the obstacle. We will designate this collision free path search technique as homotopy path planning method (HPPM).

4. Enhanced version of HPPM

This section presents an enhanced version of homotopy path planning method (EHPPM). The modiﬁcation of the HPPM method is done to achieve a more precise control of the generated homotopy paths. In the previous section it was introduced the parameter p which helps to regulate the level of repulsion of the obstacles created by (11). Nevertheless, especially when obstacles conﬁguration becomes complex, it is difﬁcult to properly regulate the trajectory using just one parameter. Therefore, a modiﬁcation of the HPPM method is proposed, and the new NAES formulation is

f1ðx; yÞ ¼ l1ðx; yÞ ¼ 0; x; y 2 R;

ð16Þ

f2ðx; yÞ ¼ l2ðx; yÞ þ Wðx; yÞ À Q ¼ 0; x; y 2 R;

where Wðx; yÞ is:

H. Vazquez-Leal et al. / Applied Mathematics and Computation 219 (2013) 7514–7532

7519

W ðx;

yÞ

¼

X i¼k
i¼1

pi Oiðx;

yÞ

ð17Þ

and Q is represented as:

Q

¼

X i¼k
i¼1

pi Oið1;

1Þ

;

ð18Þ

where k is the number of obstacles, pi represents the repulsion parameter for the i-th obstacle, and Oi is the Eqs. (7) or (8) of the i-th obstacle. Each Oi obstacle possesses its own position and dimensions.
Once NAES (16) is formulated, we establish the homotopy map (14) and solve it by using numerical continuation methods.
For research purposes, we calculate the implicit polynomial of the Newton homotopy trajectory by solving H1ðx; y; kÞ and H2ðx; y; kÞ for k and equaling both results, we obtain

ff2ðx; yÞ À nf1ðx; yÞ þ fQ À fWðx; yÞ ¼ 0:

ð19Þ

Solutions of (19) correspond to the family of solutions for HÀ1ð0Þ, that is, the homotopy path. In order to eliminate the rational terms, we multiply (19) by (12) to obtain

ff2ðx; yÞFðx; yÞ À nf1ðx; yÞFðx; yÞ þ fQFðx; yÞ À fWðx; yÞFðx; yÞ ¼ 0:

ð20Þ

Now, (20) can be traced using the aforementioned ‘‘implicitplot’’ command from Maple.

5. 3D generalization

Between autonomous and semi-autonomous robots there are aquatic robots, aerial robots, and mobile manipulators, as well. All of them require path planning in three dimensions (3D). Therefore, this section proposes an extension to the HPPM and EHPPM methods to deal with 3D environments. The problem here is to create NAES representing the 3D conﬁguration space. To this end, we propose spherical obstacles, represented as

Ciðx; y; zÞ ¼ ðx À xiÞ2 þ ðy À yiÞ2 þ ðz À ziÞ2 À r2i ¼ 0;

where xi; yi, and zi are the center of the i-th obstacle with radius ri. Below is the equation for the parallelepiped approximation [23]

Riðx;

y;

zÞ

¼

x

À a

xi 2n

þ

y

À b

yi 2n

þ

z

À c

zi2n

À

1;

ð21Þ ð22Þ

where xi; yi and zi are the center of the i-th parallelepiped approximation; 2a; 2b, and 2c are its dimensions, and n is an arbitrary constant that deﬁnes the degree of accuracy for the approximation.
As in the 2D case, the 3D space is normalized; being the point B at coordinates ð1; 1; 1Þ and the initial point ðx0; y0; z0Þ being any point within the cube delimited by x ¼ 0; x ¼ 1; y ¼ 0; y ¼ 1; z ¼ 0, and z ¼ 1.
Now, we establish an equation system which has a unique solution at goal point B of the route, that is, ð1; 1; 1Þ; being the general NAES formulation

f1ðx; y; zÞ ¼ 0; x; y; z 2 R;

f2ðx; y; zÞ ¼ 0; x; y; z 2 R;

ð23Þ

f3ðx; y; zÞ ¼ 0; x; y; z 2 R;

where f1ð1; 1; 1Þ ¼ 0; f 2ð1; 1; 1Þ ¼ 0, and f3ð1; 1; 1Þ ¼ 0. Analogously to the HPPM and EHPPM methods in two dimensions, the 3D version uses three auxiliary equations (planes)
formulated as follows

Z1ðx; y; zÞ ¼ d11y þ d12x þ d13z þ d14 ¼ 0; Z2ðx; y; zÞ ¼ d21y þ d22x þ d23z þ d24 ¼ 0; Z3ðx; y; zÞ ¼ d31y þ d32x þ d33z þ d34 ¼ 0;

ð24Þ

where dij (i ¼ 1; 2; 3 and j ¼ 1; 2; 3; 4) are constants of the planes. In addition, we require that (24) possesses a solution at ð1; 1; 1Þ.
For HPPM method, the proposed NAES describing the 3D conﬁguration space is

f1ðx; y; zÞ ¼ Z1ðx; y; zÞ ¼ 0; x; y; z 2 R;

f2ðx; y; zÞ ¼ Z2ðx; y; zÞ ¼ 0; x; y; z 2 R;

ð25Þ

f3ðx; y; zÞ ¼ Z3ðx; y; zÞ þ pð1=Fðx; y; zÞ À 1=Fð1; 1; 1ÞÞ ¼ 0; x; y; z 2 R;

7520

H. Vazquez-Leal et al. / Applied Mathematics and Computation 219 (2013) 7514–7532

where p is an adjustment parameter; Fðx; y; zÞ is the equation deﬁning the 3D obstacles set. Hereafter, equation f3 will be

known as restriction equation.

Now, we deﬁne Fðx; y; zÞ as

Y i¼k Fðx; y; zÞ ¼ Oiðx; y; zÞ;

ð26Þ

i¼1

being k the number of obstacles and Oiðx; y; zÞ represents (21) and (22) for the i-th obstacle. Now, for the 3D version of EHPPM method, the NAES formulation process is

f1ðx; y; zÞ ¼ Z1ðx; y; zÞ ¼ 0; x; y; z 2 R;

f2ðx; y; zÞ ¼ Z2ðx; y; zÞ ¼ 0; x; y; z 2 R;

ð27Þ

f3ðx; y; zÞ ¼ Z3ðx; y; zÞ þ Wðx; y; zÞ À Wð1; 1; 1Þ ¼ 0; x; y; z 2 R;

where Wðx; y; zÞ is

X i¼k Wðx; y; zÞ ¼

pi

;

i¼1 Oiðx; y; zÞ

ð28Þ

here k is the number of obstacles, pi represents the repulsion parameter for the i-th obstacle, and Oiðx; y; zÞ represents obstacles (21) and (22).
The homotopy map (14) is extended to three dimensions as follows

H1ðx; y; z; kÞ ¼ f1ðx; y; zÞ À ð1 À kÞf1ðx0; y0; z0Þ ¼ 0; H2ðx; y; z; kÞ ¼ f2ðx; y; zÞ À ð1 À kÞf2ðx0; y0; z0Þ ¼ 0; H3ðx; y; z; kÞ ¼ f3ðx; y; zÞ À ð1 À kÞf3ðx0; y0; z0Þ ¼ 0;

ð29Þ

where x0; y0, and z0 are the coordinates of initial point A of the homotopy path and k is the homotopy parameter. The homotopy trajectory of (29) can be traced using numerical continuation techniques like the ones reported in [62,51,63–
65,37,38,29,30].

6. Numerical simulations

6.1. Two circular obstacles of different ratio by HPPM

Using (7), we deﬁne the equations of circular obstacles as
O1ðx; yÞ ¼ ðx À 0:35Þ2 þ ðy À 0:65Þ2 À 0:01 ¼ 0; O2ðx; yÞ ¼ ðx À 0:7Þ2 þ ðy À 0:6Þ2 À 0:04 ¼ 0:

ð30Þ

Next, we choose an auxiliary linear system as

l1ðx; yÞ ¼ Ày À 2x þ 3 ¼ 0;

ð31Þ

l2ðx; yÞ ¼ À2y À x þ 3 ¼ 0;

that has a solution at ð1; 1Þ. Next, we apply (30) and (31) to (11), resulting

f1ðx; yÞ ¼ Ày À 2x þ 3 ¼ 0;

p

f2ðx; yÞ ¼ À2y À x þ 3 þ d À 8:900756564p ¼ 0;

ð32Þ

d ¼ ½ðx À 0:7Þ2 þ ðy À 0:6Þ2 À 0:04½ðx À 0:35Þ2 þ ðy À 0:65Þ2 À 0:01;

where system satisﬁes f1ð1; 1Þ ¼ 0 and f2ð1; 1Þ ¼ 0. The above equation is the nonlinear algebraic equation system that represents the conﬁguration space. Moreover, using
(32) and considering the initial position of the robot at x0 ¼ y0 ¼ 0, we can proceed to establish the homotopy map as

H1ðx; y; kÞ ¼ Ày À 2x þ 3 À 3ð1 À kÞ ¼ 0;

p

ð33Þ

H2ðx; y; kÞ ¼ À2y À x þ 3 þ d À 8:900756564p À ð1 À kÞð3 À 6:593153011pÞ ¼ 0:

We use the Euler-predictor and Newton-corrector scheme described in [37], that is based on other reports of literature [64,65], resulting the collision free homotopy paths shown in Fig. 3(a). Considering that the simulation was performed using Maple 13 in an Intel Dual Core of 2.6 GHz CPU, the execution time and iterations were [0:252 seconds, 90 steps] and [0.308 s, 100 steps] (using a step size of value 0:02) for T1 ¼ ½p ¼ 1eðÀ5Þ and T2 ¼ ½p ¼ 7eðÀ3Þ, respectively. For the rest of examples of this work, we will use the same numerical continuation method, software, and hardware.

H. Vazquez-Leal et al. / Applied Mathematics and Computation 219 (2013) 7514–7532

7521

Fig. 3. Two different collision free paths (T1 and T2) for HPPM method. Solid line represents obstacles. The number inside the obstacle represents the number of object.

In order to visualize the isolate homotopy paths, we calculate the implicit polynomial (15), resulting
À 2:400606570x2y2 À 2:009338047x2y À 1:469173878xy2 þ 2:273747746xy þ 12:00026373x2y3 þ 2:399063772xy3 þ 6:000131863yx4 þ 2:399063772yx3 À 11:99947255x3y2 À 5:999736274xy4 þ 7:895974847x2 À 10:16982129y2 þ 12:59958463x4 À 13:94967759x3 À 15:00019120y4 þ 17:43003692y3 þ 6:000131863y5 À 5:999736274x5 À 2:600167923x þ 2:599922460y À 1:844700000 Â 10À14 ¼ 0

ð34Þ

and

À 2:824599054x2y2 À 1:546633206x2y À 0:8917145494xy2 þ 2:097422176xy þ 12:18460828x2y3

þ 1:744640591xy3 þ 6:092304142yx4 þ 1:744640591yx3 À 11:63078343x3y2 À 5:815391716xy4

þ 7:878392985x2 À 10:04490481y2 þ 12:30924195x4 À 13:72431637x3 À 15:13384101y4 þ 17:45584516y3

þ 6:092304142y5 À 5:815391716x5 À 2:647645864x þ 2:475821703y À 1:291290000 Â 10À11 ¼ 0

ð35Þ

for T1 and T2 trajectories, respectively. Then, we use ‘‘implicitplot’’ built-in command from Maple 13 to trace (34) and (35), resulting in Fig. 3(b). In
this Figure, we can notice internal isolated paths (IIP) and external isolated paths (EIP) related to the contour of the obstacles.

7522

H. Vazquez-Leal et al. / Applied Mathematics and Computation 219 (2013) 7514–7532

6.2. Two circular obstacles of different radius by EHPPM

First, we use the same obstacles (30) and auxiliary linear system (31) from last example. Then, we apply (30) and (31) to (16), resulting

f1ðx; yÞ ¼ Ày À 2x f2ðx; yÞ ¼ À2y À x d1 ¼ ½ðx À 0:7Þ2 þ

þ 3 ¼ 0;

þ ðy

3Àþ0:pd611Þ2þÀpd220:À044:;761904762p1

À

1:869158878p2

¼

0;

ð36Þ

d2 ¼ ½ðx À 0:35Þ2 þ ðy À 0:65Þ2 À 0:01;

where system satisﬁes f1ð1; 1Þ ¼ 0 and f2ð1; 1Þ ¼ 0. Above equation is the nonlinear algebraic equation system that represents the conﬁguration space. Moreover, using (36)
and considering the initial position of the robot at x0 ¼ y0 ¼ 0, we can proceed to establish the homotopy map as

H1ðx; yÞ ¼ Ày À 2x þ 3 À 3ð1 À kÞ ¼ 0;

H2ðx;

yÞ

¼

À2y

À

x

þ

3

þ

p1 d1

þ

p2 d2

À

4:761904762p1

À

1:869158878p2

À

ð1

À

kÞð3

À

3:527336861p1Þ

¼

0:

ð37Þ

Considering a step size with value of 0:02, the execution time and iterations of numerical continuation were [0.288 s, 89
steps] and [0.376 s, 101 steps] for T1 ¼ ½p1 ¼ 0:001; p2 ¼ 0:0001 and T2 ¼ ½p1 ¼ 0:01; p2 ¼ 0:001, respectively (see Fig. 4). In order to visualize the isolate homotopy paths, we calculate the implicit polynomial (20), resulting

À 0:2600169750x þ 0:2597220652y þ 0:7890661798x2 À 1:016378121y2 À 0:2430208508x2y2

À 0:1977389276x2y À 0:1428157609xy2 þ 0:2263487587xy þ 1:201410935x2y3 þ 0:2349911817xy3

þ 0:6007054674yx4 þ 0:2349911817yx3 À 1:197178131x3y2 À 0:5985890653xy4 þ 1:257889928x4

À 1:393510646x3 À 1:500910778y4 þ 1:742917157y3 þ 0:6007054674y5 À 0:5985890653x5

À 7:411200000 Â 10À14 ¼ 0

ð38Þ

and

À 0:2600797503x þ 0:2571306527y þ 0:7842617976x2 À 1:010781209y2 À 0:2702085084x2y2

À 0:1683892762x2y À 0:1051576093xy2 þ 0:2168875868xy þ 1:214109347x2y3 þ 0:1899118166xy3

þ 0:6070546737yx4 þ 0:1899118166yx3 À 1:171781305x3y2 À 0:5858906526xy4 þ 1:238899273x4

À 1:380106463x3 À 1:509107782y4 þ 1:742171570y3 þ 0:6070546737y5 À 0:5858906526x5

À 7:411200000 Â 10À13 ¼ 0

ð39Þ

for T1 and T2 trajectories, respectively. Then, we use ‘‘implicitplot’’ built-in command from Maple 13 to trace (38) and (39), resulting in Fig. 4(b). Now, EIP and IIP
paths are visible.

6.3. Curve jumping

From the last examples, we presented two successful study cases of collision free paths obtained by HPPM and EHPPM methods. However, for both study cases, as we increase the value of the step size of the numerical continuation method, the probability of occurring a curve-jumping increases too. It means that the numerical continuation can jump accidentally from the main path into an IIP path (see Figs. 3 and 4). This problem can potentially create undesirable collision paths.
Increasing the step size will produce less iterations as depicted in Fig. 5(a) and (b) for HPPM and EHPPM methods. Using Dk ¼ 0:03 HPPM method required 60 iterations and took 0.216 s, while for EHPPM method using Dk ¼ 0:09, required 19 iterations and 0.070 s. Reducing simulation times is an attractive idea. Nevertheless, we cannot continue increasing step size without taking the risk of a curve-jumping from the main path into an IIP path. For instance, in Fig. 5(c) and (d) we can see two collision paths for HPPM (Dk ¼ 0:04) and EHPPM (Dk ¼ 0:10), respectively. For both methods, the IIP path of obstacle 2 attracted the Newton corrector step of the numerical continuation routing, inducing the jump from the main path into the IIP path. In fact, the error occurred twice, ﬁrst from the main path into the IIP path and ﬁnally from the IIP path into the main path. EHPPM method was more tolerant to step size increasing, however, sooner or later, both methods tend to fail. Then, until we use and adapt strategies like the ones reported in [29,30], a safe strategy for numerical continuation will be the use of small step sizes.

6.4. A 3D conﬁguration space using EHPPM

Using (21), we deﬁne the equations of three spherical obstacles as

O1ðx; y; zÞ ¼ ðx À 0:3Þ2 þ ðy À 0:4Þ2 þ ðz À 0:7Þ2 À 0:04 ¼ 0;

O2ðx; y; zÞ ¼ ðx À 0:3Þ2 þ ðy À 0:2Þ2 þ ðz À 0:2Þ2 À 0:04 ¼ 0;

ð40Þ

O3ðx; y; zÞ ¼ ðx À 0:8Þ2 þ ðy À 0:7Þ2 þ ðz À 0:8Þ2 À 0:04 ¼ 0;

H. Vazquez-Leal et al. / Applied Mathematics and Computation 219 (2013) 7514–7532

7523

Fig. 4. Two different collision free paths (T1 and T2) for EHPPM method. Solid line represents obstacles. The number inside the obstacle represent the number of object.

where each object is enumerated in Fig. 6. Next, we choose an auxiliary system as

Z1ðx; y; zÞ ¼ x þ y þ z À 3 ¼ 0;

Z2ðx; y; zÞ ¼ 3x À 2y þ z À 2 ¼ 0;

ð41Þ

Z3ðx; y; zÞ ¼ 2x þ y À z À 2 ¼ 0;

that has a solution at ð1; 1; 1Þ. Resorting to (28), we apply (40) and (41) to (27), resulting

f1ðx; y; zÞ ¼ x þ y þ z À 3 ¼ 0;

f2ðx; y; zÞ ¼ 3x À 2y þ z À 2 ¼ 0;

f3ðx;

y;

zÞ

¼

2x

þ

y

À

z

À

2

þ

p1 d1

þ

p2 d2

þ

p3 d3

À

1:11111111p1

À

0:57803468p2

À

7:69230769p3

¼

0;

d1 ¼ ðx À 0:3Þ2 þ ðy À 0:4Þ2 þ ðz À 0:7Þ2 À 0:04;

d2 ¼ ðx À 0:3Þ2 þ ðy À 0:2Þ2 þ ðz À 0:2Þ2 À 0:04;

d3 ¼ ðx À 0:8Þ2 þ ðy À 0:7Þ2 þ ðz À 0:8Þ2 À 0:04;

ð42Þ

where system satisﬁes f1ð1; 1; 1Þ ¼ 0; f 2ð1; 1; 1Þ ¼ 0, and f3ð1; 1; 1Þ ¼ 0. Above equation is the nonlinear algebraic equation system representing the 3D conﬁguration space. Moreover, using (42)
and considering the initial position of the robot at x0 ¼ y0 ¼ z0 ¼ 0, we can proceed to establish the homotopy map as

7524

H. Vazquez-Leal et al. / Applied Mathematics and Computation 219 (2013) 7514–7532

Fig. 5. (a) and (b) Represents successful collision free trajectories for HPPM (p ¼ 1eðÀ5Þ) and EHPPM (½p1 ¼ 0:001; p2 ¼ 0:0001), respectively. (c) and (d) Represents collision trajectories (using different step size) for HPPM and EHPPM, respectively. Solid line represents obstacles and trajectories are represented by dots. The number inside the obstacle represents the number of object. Each dot represents an iteration step from the numerical continuation.

H1ðx; y; zÞ ¼ x þ y þ z À 3 þ 3ð1 À kÞ ¼ 0;

H2ðx; y; zÞ ¼ 3x À 2y þ z À 2 þ 2ð1 À kÞ ¼ 0;

H3ðx;

y;

zÞ

¼

2x

þ

y

À

z

À

2

þ

p1 d1

þ

p2 d2

þ

p3 d3

À

1:11111111p1

À

0:57803468p2

À

7:69230769p3

ð43Þ

À ð1 À kÞðÀ2 þ 0:317460317460p1 þ 7:114273010227p2 À 7:114273010227p3Þ ¼ 0:

Considering a step size with value of Dk ¼ 0:02, the execution time and iterations of numerical continuation were [0.444 s, 112 steps] and [0.544 s, 128 steps] for T1 and T2 trajectories, respectively. The resulting collision free trajectories are shown in Fig. 6.

6.5. Several conﬁguration spaces with several obstacles

In order to show the collision free trajectories and isolate paths, we will use implicitplot command from Maple 13 for the rest of case studies of this section.
Figs. 7–9 show several conﬁguration spaces (with several obstacles depicted as solid black lines) and collision free trajectories from point A to B. The conﬁguration parameters are presented in Tables 1 and 2.
On one side, Fig. 7(a) and (b) present two different scenarios successfully treated by the HPPM method. On the other side, the scenario in Fig. 8 was resolved using the EHPPM method. In Fig. 7(a) it can be seen that T1 path is the optimum (shortest path) having the lowest value for p; in general terms, lower values of p makes straight paths, and higher values creates curved paths.

H. Vazquez-Leal et al. / Applied Mathematics and Computation 219 (2013) 7514–7532

7525

Fig. 6. 3D conﬁguration space for paths T1 ¼ ½p1 ¼ 0:001; p2 ¼ 0:01; p3 ¼ 0:01 and T2 ¼ ½p1 ¼ 0:01; p2 ¼ 0:01; p3 ¼ 0:01, from two viewpoints ((a) and (b)). Resolved by using EHPPM method.
For the EHPPM method, the control is more precise given the fact that each ith obstacle has its own repulsive parameter pi; therefore, it is possible to regulate, individually, the repulsion level for each obstacle (see Fig. 8). In Fig. 7(a) we can see EIP paths (obstacles 1, 2, 3, 4, and 5) and IIP paths (obstacles 6 and 7). In addition, Figs. 7(b) and 8 show their corresponding EIP and IIP paths. EIP paths serve to create new connections, thus, new paths as we modify the value of p. For instance, in Fig. 7(a) objects 2 and 5 have their own contour and EIP path which belongs to the T1 path; when the value of p is increased to obtain T2 path, the EIP path aforementioned connects to the main path and becomes part of the T2 path. Moreover, IIP paths do not create connections, for instance, the IIP for object 6 in Fig. 7(a) does not play a relevant role for the creation of new paths. Hence, it is necessary to perform deeper study to determine how to eliminate or ﬁnd a use for IIP paths.
Fig. 9(a) and (b), show a conﬁguration space treated with HPPM method. The value of p parameters is the same for both cases. Nevertheless, an interchange of auxiliary equations l1ðxÞ and l2ðxÞ, unchained a drastic change of behavior of the collision free homotopy paths. In fact, the EIP and IIP paths interchanged roles, creating a new set of trajectories. Therefore, this phenomenon deserves deeper investigation in order to take advantage of this characteristic.

7526

H. Vazquez-Leal et al. / Applied Mathematics and Computation 219 (2013) 7514–7532

Fig. 7. Different scenarios for collision free paths resolved by using HPPM method. The number inside the obstacle represents the number of object.
Fig. 8. Scenario with seven obstacles resolved by using EHPPM method. The number inside the obstacle represents the number of object.
7. Discussion The HPPM and EHPPM methods in two and three dimensions are a novelty path planning tool, capable to provide colli-
sion-free trajectories for different possible conﬁguration spaces having obstacles of different: position, shape, and dimensions. Here, the parameter p plays a fundamental role, affecting the behavior of the collision free homotopy paths. In addition, auxiliary Eqs. (10) and (24) can affect the fundamental behavior of the IIP and EIP paths as shown in study cases of Fig. 9.

H. Vazquez-Leal et al. / Applied Mathematics and Computation 219 (2013) 7514–7532
(a)

7527

(b)
Fig. 9. Scenario with two inverted sets of straight lines and the same set of p parameters. Resolved by using HPPM method. See Table 2 for conﬁguration space. The number inside the obstacle represents the number of object.
In general, the average time of simulation for the ﬁrst three examples was less than 0.5 s using Maple 13. Nevertheless, other programming languages like C, FORTRAN, among others, are signiﬁcantly faster than MAPLE language. Moreover, the Maple code used was implemented only as proof of concept [37]; in fact, there are more advanced, faster, and powerful packages like: PHCpack [69], Bertini [70], HOMPACK [62], HOM4PS [71,72], Homlab [73], and PHoM [74]. Then, the properly use of this packages may lead to real time implementations capable of handling dynamical complex environment maps.
As have been described in this paper, homotopy path planning has demonstrated to be a powerful alternative to the current methods used in mobile robotics community. While graph-based methods are very fast, the collision-free path that they provide is a sparse distribution of points in the conﬁguration space. It makes necessary to reconstruct the speed proﬁle for the whole trajectory, which in turn is going to be provided to the robot in the path following process. As discussed early, methods based on artiﬁcial potential ﬁelds provide paths that can be converted easily to a speed proﬁle, however the problem of local minimums is a constraint. Homotopy collision-free path can be converted easily to a speed proﬁle, while it is possible to adapt or select a path considering the holonomic restrictions of the robot.
The proposed methods require further work in aspects such as:
1. It is important to establish a way to correlate the holonomic restrictions [1] of the robot to the homotopy path that will follow to reach its objective; it would allow to deal with the problem of path tracking. From (15) and (20) is possible to calculate the slope of the tangent for the homotopy path as well as their curvature radius. It would be a ﬁrst step to reach the goal of connect the present path planning technique to the holonomic restrictions. In addition, a real robot possesses dimensions, then, it will be necessary to add a tolerance space to the equations of the obstacles that can guarantee a effective collision free path. If the robot is circular with radius r, the tolerance space will be the radius of the robot as depicted in Fig. 10.
2. The p parameter for the HPPM method or the set of p parameters for the EHPPM method play an important inﬂuence in the behavior of the homotopy paths. Therefore, it is important to perform a research in order to create a systematic method to establish values for p to create an optimum collision free path. A ﬁrst step would be the calculation by numerical or analytical methods of the trajectory length, as means to optimize the travelled distance.

7528

H. Vazquez-Leal et al. / Applied Mathematics and Computation 219 (2013) 7514–7532

Table 1 Environment maps and simulation parameters treated with HPPM and EHPPM methods. For EHPPM method each value from p set corresponds to an obstacle.

Fig. 7(a) HPPM
Obstacle #
1 2 3 4 5 6 7
Fig. 7(b) HPPM
1 2 3 4 5 6 7
Fig. 8 EHPPM
1 2 3 4 5 6 7

p = [3EÀ9, 2EÀ8, 1.5EÀ7, 6EÀ7, 3.8EÀ6, 9EÀ6] l1ðxÞ ¼ Ày þ 8x À 7 ¼ 0; l2ðxÞ ¼ Ày À x þ 2 ¼ 0

Obstacle type
Circle Circle Circle Circle Circle Circle Circle

xi
0.75 0.5 0.1 0.2 0.5 0.6 0.8

yi
1.1 0.75 0.3 0.7 0.5 0.2 0.64

p = [1EÀ7, 9.9EÀ7, 8EÀ4, 1EÀ1, 7EÀ1, 3] l1ðxÞ ¼ Ày þ 8x À 7 ¼ 0; l2ðxÞ ¼ Ày À x þ 2 ¼ 0

Rectangle Circle Circle Rectangle Circle Circle Circle

0.76 0.5 0.1 0.2 0.48 0.6 0.8

0.39 0.75 0.3 0.7 0.5 0.2 0.64

Set p [1EÀ5, 1EÀ3, 3EÀ3, 1EÀ7, 1EÀ7, 1EÀ7, 2EÀ4] l1ðxÞ ¼ Ày À 2x þ 3 ¼ 0; l2ðxÞ ¼ Ày þ 0:1x þ 0:9 ¼ 0

Circle Circle Circle Circle Circle Circle Circle

0.8 0.8 0.8 0.28 0.44 0.6 0.8

0.3 0.46 0.62 0.75 0.75 0.75 0.8

r
0.04 0.1 0.1 0.1 0.1 0.06 0.08
– 0.1 0.1 – 0.1 0.06 0.08
0.08 0.08 0.08 0.08 0.08 0.08 0.1

a
– – – – – – –
0.13 – – 0.13 – – –
– – – – – – –

b
– – – – – – –
0.13 – – 0.13 – – –
– – – – – – –

Table 2 Conﬁguration space and simulation parameters of Fig. 9(a) and (b), treated with EHPPM method.

Fig. 9(a)

p = [1EÀ15, 7EÀ10, 1EÀ7, 1EÀ6, 1EÀ5, 2EÀ5] l1ðxÞ ¼ Ày À 2x þ 3 ¼ 0; l2ðxÞ ¼ Ày þ 0:1x þ 0:9 ¼ 0

Obstacle #

Obstacle type

xi

yi

r

a

b

1

Circle

0.8

0.3

0.08

–

–

2

Circle

0.8

0.46

0.08

–

–

3

Circle

0.8

0.62

0.08

–

–

4

Circle

0.28

0.75

0.08

–

–

5

Circle

0.44

0.75

0.08

–

–

6

Circle

0.6

0.75

0.08

–

–

7

Circle

0.93

0.85

0.07

–

–

Fig. 9(b)

p = [1EÀ15, 7EÀ10, 1EÀ7, 1EÀ6, 1EÀ5, 2EÀ5] l1ðxÞ ¼ Ày þ 0:1x þ 0:9 ¼ 0; l2ðxÞ ¼ Ày À 2x þ 3 ¼ 0

1

Circle

0.8

0.3

0.08

–

–

2

Circle

0.8

0.46

0.08

–

–

3

Circle

0.8

0.62

0.08

–

–

4

Circle

0.28

0.75

0.08

–

–

5

Circle

0.44

0.75

0.08

–

–

6

Circle

0.6

0.75

0.08

–

–

7

Circle

0.93

0.85

0.07

–

–

3. One problem for the homotopy methods is the design of numerical continuation techniques. This technique can be implemented using some benchmark reports of literature [62,73,51,63–65,38,29,30]. In particular, accidental jumping from the main path into IIP paths is a real issue in this method that needs to be handled. In Section 6.3, we presented a case of collision paths due to curve jumping from the main path into the IIP path of obstacle 2. The numerical results from that Section show that EHPPM can be more tolerant to step size increasing; indicating that EHPPM is superior to HPPM. Moreover, as explained in Section 2, [29,30] reported a strategy to deal with this issue. In this paper, we assume that the step size is small enough to reduce near to zero the probability of curve jumping. However, further work will address this problem using as starting point the report [71].

H. Vazquez-Leal et al. / Applied Mathematics and Computation 219 (2013) 7514–7532

7529

Fig. 10. Considering holonomic restrictions: circular robot of radius r.

Fig. 11. Single collision free trajectory considering multiple objectives.

7530

H. Vazquez-Leal et al. / Applied Mathematics and Computation 219 (2013) 7514–7532

4. HCM methods are capable to locate in just one path more than one solution for the nonlinear equation [62,71,36,39]. Therefore, one possible future research line would be the proposal of a HPPM method capable to generate, in just one path, a trajectory that goes from A through different goal points/solutions (B, C and D) as depicted in Fig. 11. The new NAES possesses three solutions B, C, and D.
5. There are several HCM methods that can be applied to obtain different collision free paths like: polyhedral [74], ﬁxed point [39], variable dimension [40], threading [41], multiple parameters [42], DBPH homotopy [36], and constructive homotopy [43], multiparameter DBPH [75], among many others. The application of other HCM methods may lead to optimal collision free trajectories.
6. This work proposed a way to establish the restriction equation; nevertheless, this is not the only way. As long as the restriction equation possesses a singularity around the obstacles as (11) or (16), it can be considered as a potential restriction equation. One possible future research line may be the formulation of new restriction equations to create optimized paths.
7. Auxiliary Eqs. (10) and (24) modify the behavior of the collision free paths, EIP paths, and IIP paths (see Fig. 9). Therefore, deeper research should be done in order to propose a methodology to formulate auxiliary equations that helps to create optimized paths.

8. Conclusions

This paper presented a method for planning collision free paths based on the HCM methods. Such method was presented in two versions, HPPM and EHPPM, which serve to solve problems in two and three dimensions. A series of simulations demonstrated that the proposed methods might effectively establish collision free paths in two and three dimensions taking acceptable short times for the generation of paths. Finally, it was discussed a series of future research lines that emerge from this work; among them stands out the establishment of a link between the generation of the homotopy collision free path and the holonomic restrictions of the robot.

Acknowledgments

We gratefully acknowledge the ﬁnancial support of the National Council for Science and Technology of Mexico (CONACyT) through Grant CB-2010-01 #157024. The author would like to acknowledge Rogelio-Alejandro Callejas-Molina and Roberto Ruiz-Gomez for their contribution to this project.

References
[1] R. Siegwart, I. Nourbakhsh, Introduction to Autonomous Mobile Robots, The MIT Press, Cambridge, 2004. [2] H. Durrant-Whyte, T. Bailey, Simultaneous localization and mapping: Part I, IEEE Robotics Automation Magazine 13 (2) (2006) 99–110, http://
dx.doi.org/10.1109/MRA.2006.1638022. [3] Q. Zhao, S. Yan, Collision-free path planning for mobile robots using chaotic particle swarm optimization, Lecture Notes in Computer Science 3612
(2005) 632–635. [4] N. Bourbakis, Heuristic collision-free path planning for an autonomous platform, Journal of Intelligent and Robotic Systems 1 (4) (1989) 375–387. [5] I. Namgung, A global collision-free path planning using parametric parabola through geometry mapping of obstacles in robot work space, KSME Journal
10 (4) (1996) 443–449. [6] A. Adamatzky, B. de Lacy Costello, Collision-free path planning in the Belousov–Zhabotinsky medium assisted by a cellular automation,
Naturwissenschaften 89 (2002) 474–478. [7] K.-S. Hwang, M.-Y. Ju, 3D collision-free motion based on collision index, Journal of Intelligent and Robotic Systems 33 (2002) 45–60. [8] Q. Xue, Y.-P. Chien, Fast collision-free path planning of tightly coordinated two planar robots, Engineering Applications of Artiﬁcial Intelligence 7 (3)
(1994) 267–277, http://dx.doi.org/10.1016/0952-1976(94)90054-X. [9] S. Lahouar, E. Ottaviano, S. Zeghoul, L. Romdhane, M. Ceccarelli, Collision free path-planning for cable-driven parallel robots, Robotics and Autonomous
Systems 57 (11) (2009) 1083–1093, http://dx.doi.org/10.1016/j.robot.2009.07.006. [10] M. Givehchi, A. Ng, L. Wang, Evolutionary optimization of robotic assembly operation sequencing with collision-free paths, Journal of Manufacturing
Systems 30 (4) (2011) 196–203, http://dx.doi.org/10.1016/j.jmsy.2011.08.00 (Selected papers of 39th North American Manufacturing Research Conference). [11] G. Conte, S. Longhi, R. Zulli, Cad-based generation of collision-free paths for robotic manipulators, Control Engineering Practice 1 (6) (1993) 1069–1074, http://dx.doi.org/10.1016/0967-0661(93)90019-N. [12] K.-Y. Young, C.-Y. Huang, Collision-free path planning and modiﬁcation based on task requirements, Mechanism and Machine Theory 32 (1) (1997) 21– 37, http://dx.doi.org/10.1016/0094-114X(96)00042-0. [13] C.E. Campbell Jr., Collision-free path planning for a three-degree-of-freedom robot, Computers & Electrical Engineering 17 (3) (1991) 163–172, http:// dx.doi.org/10.1016/0045-790(91)90032-U (Special issue Robotics Research at the NASA/Goddard Space Flight Center). [14] A. Sorgen, H. Holm, A new heuristic approach to the robot free-path problem by stepwise path improvement, Engineering Applications of Artiﬁcial Intelligence 6 (1) (1993) 3–19, http://dx.doi.org/10.1016/0952-1976(93)90036-W. [15] Lirov Yuval, Kth shortest collision-free path planning, Applied Mathematics Letters 1 (1) (1988) 61–64, http://dx.doi.org/10.1016/08939659(88)90177-2. [16] Wang Dajin, A linear-time algorithm for computing collision-free path on reconﬁgurable mesh, Parallel Computing 34 (9) (2008) 487–496, http:// dx.doi.org/10.1016/j.parco.2008.03.002. [17] A. Gonzalez-Rodriguez, A. Gonzalez-Rodriguez, Collision-free motion planning and scheduling, Robotics and Computer-Integrated Manufacturing 27 (3) (2011) 657–665, http://dx.doi.org/10.1016/j.rcim.2010.11.006. [18] H. Yu, R. Beard, J. Byrne, Vision-based navigation frame mapping and planning for collision avoidance for miniature air vehicles, Control Engineering Practice 18 (7) (2010) 824–836, http://dx.doi.org/10.1016/j.conengprac.2010.02.00 (Special issue on Aerial, Robotics). [19] K. Ioannidis, G. Sirakoulis, I. Andreadis, Cellular ants: a method to create collision free trajectories for a cooperative robot team, Robotics and Autonomous Systems 59 (2) (2011) 113–127, http://dx.doi.org/10.1016/j.robot.2010.10.004.

H. Vazquez-Leal et al. / Applied Mathematics and Computation 219 (2013) 7514–7532

7531

[20] R. Kala, A. Shukla, R. Tiwari, Robotic path planning in static environment using hierarchical multi-neuron heuristic search and probability based ﬁtness, Neurocomputing 74 (1415) (2011) 2314–2335, http://dx.doi.org/10.1016/j.neucom.2011.03.006.
[21] J. Craig, Introduction to Robotics: Mechanics and Control, Pearson Prentice Hall, Upper Saddle River, 2005. [22] R. Brooks, Solving the ﬁnd-path problem by good representation of free space, IEEE Transactions on Systems, Man and Cybernetics SMC-13 (1983)
190–197. [23] O. Khatib, Real-time obstacle avoidance for manipulators and mobile robots, The International Journal of Robotics Research 5 (1) (1986) 90–98. [24] O. Brock, O. Khatib, Real-time replanning in high-dimensional conﬁguration spaces using sets of homotopic paths, in: Proc. of the International
Conference on Advanced Robotics, San Francisco, USA, 2000, pp. 550–555. [25] E. Lee, C. Mavroidis, Solving the geometric design problem of spatial 3r robot manipulators using polynomial homotopy continuation, ASME Journal of
Mechanical Design 124 (2002) 652–661. [26] T. Wu, Searching all the roots of inverse kinematics problem of robot by homotopy continuation method, Journal of Applied Sciences 5 (4) (2005) 666–
673. [27] T. Wu, The inverse kinematics problem of spatial 4p3r robot manipulator by the homotopy continuation method with an adjustable auxiliary
homotopy function, Nonlinear Analysis 64 (2006) 2373–2380. [28] L.T. Watson, Globally convergent homotopy algorithms for nonlinear systems of equations, Nonlinear Dynamics 1 (1990) 143–191. [29] D.J. Bates, J.D. Hauenstein, A.J. Sommese, C.W. Wampler II, Adaptive multiprecision path tracking, SIAM Journal on Numerical Analysis 46 (2) (2008)
722–746. [30] D.-J. Bates, J.-D. Hauenstein, A.-J. Sommese, C.-W. Wampler, Stepsize control for adaptive multiprecision path tracking, Contemporary Mathematics
496 (2009) 21–31. [31] A. Morgan, A. Sommese, Computing all solutions to polynomial systems using homotopy continuation, Applied Mathematics and Computation 24 (2)
(1987) 115–138. [32] H. Vazquez-Leal, R. Castaneda-Sheissa, A. Yildirim, Y. Khan, A. Sarmiento-Reyes, V. Jimenez-Fernandez, A. Herrera-May, U. Filobello-Nino, F. Rabago-
Bernal, C. Hoyos-Reyes, Biparameter homotopy-based direct current simulation of multistable circuits, Journal of Mathematics & Computer Science 2 (3) (2012) 137–150. [33] A. Ushida, Y. Yamagami, Y. Nishio, I. Kinouchi, Y. Inoue, An efﬁcient algorithm for ﬁnding multiple dc solutions based on the spice-oriented newton homotopy method, IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems 21 (3) (2002) 337–348. [34] L.T. Watson, Probability-one homotopies in computational science, Journal of Computational and Applied Mathematics 140 (1–2) (2002) 785–807. [35] R.-C. Melville, L. Trajkovic, S.-C. Fang, L.-T. Watson, Artiﬁcial parameter homotopy methods for the dc operating point problem, IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems 12 (6) (1993) 861–877. [36] H. Vazquez-Leal, L. Hernandez-Martinez, A. Sarmiento-Reyes, R. Castaneda-Sheissa, A. Gallardo-Del-Angel, Homotopy method with a formal stop criterion applied to circuit simulation, IEICE Electronic Express 8 (21) (2011) 1808–1815. [37] H. Vazquez-Leal, L. Hemandez-Martinez, A. Sarmiento-Reyes, R. Castaneda-Sheissa, Numerical continuation scheme for tracing the double bounded homotopy for analysing nonlinear circuits, in: Proc. 2005 International Conference on Communications, Circuits and Systems, Hong Kong, China, 2005, pp. 1122–1126. [38] H. Vazquez-Leal, R. Castaneda-Sheissa, F. Rabago-Bernal, L. Hernandez-Martinez, A. Sarmiento-Reyes, U. Filobello-Nino, Powering multiparameter homotopy-based simulation with a fast path-following technique, ISRN Applied Mathematics 2011 (2011). 7p (Article ID 610637). [39] K. Yamamura, T. Sekiguchi, Y. Inuoe, A ﬁxed-point homotopy method for solving modiﬁed nodal equations, IEEE Transactions on Circuits and SystemsI: Fundamental Theory and Applications 46 (6) (1999) 654–664. [40] L. Vandenberghe, J. Vandewalle, Variable dimension algorithms for solving resistive circuits, International Journal of Circuit Theory and Applications 18 (5) (1990) 443–474. [41] R. Geoghgan, J. Lagarias, R. Melville, Threading homotopies and dc operating points of nonlinear circuits, Society for Industrial and Applied Mathematics 9 (1) (1998) 159–178. [42] D. Wolf, S.R. Sanders, Multiparameter homotopy methods for ﬁnding dc operating points of nonlinear circuits, IEEE Transactions on Circuits and Systems-I: Fundamental Theory and Applications 43 (10) (1996) 824–837. [43] J. Lee, H.-D. Chiang, Constructive homotopy methods for ﬁnding all or multiple dc operating points of nonlinear circuits and systems, IEEE Transactions on Circuits and Systems-I: Fundamental Theory and Applications 48 (1) (2001) 51–66. [44] K. Reif, K. Weinzierl, A. Zell, R. Unbehauen, A homotopy approach for nonlinear control synthesis, IEEE Transactions on Automatic Control 43 (9) (1998) 1311–1318. [45] F. Kubler, K. Schmedders, Computing equilibria in stochastic ﬁnance economies, Computational Economics 15 (1–2) (2000) 145–172. [46] H.-C. Chen, L.-Y. Chung, Load ﬂow solution for ill-conditioned by homotopy continuation method, International Journal of Power and Energy Systems 28 (1) (2000) 99–106. [47] E. Dratman, G. Matera, On the solution of the polynomial systems arising in the discretization of certain odes, Computing 85 (4) (2009) 301–337. [48] L.T. Watson, R.T. Haftka, Modern homotopy methods in optimization, Computer Methods in Applied Mechanics and Engineering 74 (3) (1989) 289– 305. [49] V. Pérez, J. Renaud, L. Watson, Homotopy curve tracking in approximate interior point optimization, Optimization and Engineering 10 (2009) 91–108. [50] M. Kuno, J.-D. Seader, Computing all real solutions to systems of nonlinear equations with a global ﬁxed-point homotopy, Industrial & Engineering Chemistry Research 27 (1988) 1320–1329. [51] L.T. Watson, Numerical linear algebra aspects of globally convergent homotopy methods, SIAM Review 28 (4) (1986) 529–545. [52] M. Sosonkina, L.T. Watson, D.E. Stewart, Note on the end game in homotopy zero curve tracking, ACM Transactions on Mathematical Software 22 (3) (1996) 281–287. [53] L.T. Watson, S.M. Holzer, M.C. Hansen, Tracking nonlinear equilibrium paths by a homotopy method, Nonlinear Analysis: Theory, Methods and Applications 7 (11) (1983) 1271–1282. [54] L.T. Watson, Globally convergent homotopy methods: a tutorial, Applied Mathematics and Computation 31 (1989) 369–396. [55] K. Ahuja, L. Watson, S. Billups, Probability-one homotopy maps for mixed complementarity problems, Computational Optimization and Applications 41 (2008) 363–375. [56] L.T. Watson, Globally convergent homotopy methods, in: C.A. Floudas, P.M. Pardalos (Eds.), Encyclopedia of Optimization, Springer, US, 2009, pp. 1272–1277. [57] T. Wu, A technique to avoid divergence for planar and spatial newton-homotopy continuation method, Journal of Applied Sciences 5 (6) (2005) 1036– 1040. [58] T. Wu, A modiﬁed formula of ancient chinese algorithm by the homotopy continuation technique, Applied Mathematics and Computation 165 (2005) 31–35. [59] T. Wu, Solving the nonlinear equations by the newton-homotopy continuation method with adjustable auxiliary homotopy function, Applied Mathematics and Computation 173 (2006) 383–388. [60] T. Wu, The secant-homotopy continuation method, Chaos, Solitons & Fractals 32 (2007) 888–892. [61] S. Abbasbandy, Y. Tan, S. Liao, Newton-homotopy analysis method for nonlinear equations, Applied Mathematics and Computation 188 (2007) 1794– 1800. [62] L.T. Watson, S.C. Billups, A.P. Morgan, Algorithm 652: hompack: a suite of codes for globally convergent homotopy algorithms, ACM Transactions on Mathematical Software (1987) 281–310. [63] D. Bates, J. Hauenstein, A. Sommese, Efﬁcient path tracking methods, Numerical Algorithms 58 (2011) 451–459.

7532

H. Vazquez-Leal et al. / Applied Mathematics and Computation 219 (2013) 7514–7532

[64] E.L. Allgower, K. Georg, Numerical Path Following, Acta Numerica 2 (1993) 1–64. [65] E.L. Allgower, K. Georg, Continuation and Path Following, Handbook of Numerical Analysis 5 (1997). [66] K.S. Gritton, J. Seader, W.-J. Lin, Global homotopy continuation procedures for seeking all roots of a nonlinear equation, Computers & Chemical
Engineering 25 (78) (2001) 1003–1019. [67] L. Trajkovic, R.-C. Melville, S.-C. Fang, Passivity and no-gain properties establish global convergence of a homotopy method for dc operating points, in:
IEEE International Symposium on Circuits and Systems, vol. 2, 1990, pp. 914–917. [68] D. Wolf, S. Sanders, Multiparameter homotopy methods for ﬁnding dc operating points of nonlinear circuits, IEEE Transactions on Circuits and Systems
I: Fundamental Theory and Applications 43 (10) (1996) 824–838. [69] J. Verschelde, Polynomial homotopy continuation with PHCpack, ACM Communications in Computer Algebra 44 (3/4) (2011) 217–220, http://
dx.doi.org/10.1145/1940475.1940524. <http://doi.acm.org/10.1145/1940475.1940524>. [70] D. Bates, J. Hauenstein, A. Sommese, C. Wampler, Bertini: software for numerical algebraic geometry, Available at <http://www.nd.edu/sommese/
bertini>. [71] T.L. Lee, T.Y. Li, C.H. Tsai, Hom4ps-2.0: a software package for solving polynomial systems by the polyhedral homotopy continuation method,
Computing 83 (2–3) (2008) 109–133. [72] T.-Y. Li, C.-H. Tsai, Hom4ps-2.0para: parallelization of hom4ps-2.0 for solving polynomial systems, Parallel Computing 35 (4) (2009) 226–238. [73] A.J. Sommese, C.W. Wampler II, The Numerical Solution of Systems of Polynomials: Arising in Engineering And Science, World Scientiﬁc Pub Co Inc,
2005. [74] T. Gunji, S. Kim, M. Kojima, A. Takeda, K. Fujisawa, T. Mizutani, Phom – a polyhedral homotopy continuation method for polynomial systems,
Computing 73 (2003) 2004. [75] H. Vazquez-Leal, R. Castaneda-Sheissa, A. Yldrm, Y. Khan, A. Sarmiento-Reyes, V. Jimenez-Fernandez, A. Herrera-May, U. Filobello-Nino, F. Rabago-
Bernal, C. Hoyos-Reyes, Biparameter homotopy-based direct current simulation of multistable circuits, British Journal of Mathematics & Computer Science 2 (3) (2012) 137–150.

