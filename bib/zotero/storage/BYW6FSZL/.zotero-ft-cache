IEEE websites place cookies on your device to give you the best user experience. By using our websites, you agree to the placement of these cookies. To learn more, read our Privacy Policy.
Accept & Close
Loading [MathJax]/extensions/MathZoom.js

Skip to Main Content
Scheduled Maintenance: On Tuesday, April 19, IEEE Xplore will undergo scheduled maintenance from 1:00-5:00pm ET. During this time, there may be intermittent impact on performance. We apologize for any inconvenience.

    IEEE.org
    IEEE Xplore
    IEEE-SA
    IEEE Spectrum
    More Sites 

    Cart 
    Create Account
    Personal Sign In

IEEE Xplore logo - Link to home

    Browse
    My Settings
    Help

Access provided by:
Technische Hochschule Ingolstadt
Sign Out
IEEE logo - Link to IEEE main site homepage
Access provided by:
Technische Hochschule Ingolstadt
Sign Out
ADVANCED SEARCH
Journals & Magazines > IEEE Robotics & Automation Ma... > Volume: 13 Issue: 3
Simultaneous localization and mapping (SLAM): part II
Publisher: IEEE
Cite This
PDF
  << Results   
T. Bailey ; H. Durrant-Whyte
All Authors
View Document
1328
Paper
Citations
41
Patent
Citations
44005
Full
Text Views

    Alerts
    Alerts
    Manage Content Alerts
    Add to Citation Alerts

Abstract
Document Sections

    Computational Complexity
    Data Association
    Environment Representation
    SLAM: Where to Next?

Authors
Figures
References
Citations
Keywords
Metrics
More Like This

    Download PDF
    View References
    Request Permissions
    Save to
    Alerts 

Abstract: This paper discusses the recursive Bayesian formulation of the simultaneous localization and mapping (SLAM) problem in which probability distributions or estimates of abs... View more
Metadata
Abstract:
This paper discusses the recursive Bayesian formulation of the simultaneous localization and mapping (SLAM) problem in which probability distributions or estimates of absolute or relative locations of landmarks and vehicle pose are obtained. The paper focuses on three key areas: computational complexity; data association; and environment representation.
Published in: IEEE Robotics & Automation Magazine ( Volume: 13 , Issue: 3 , Sept. 2006 )
Page(s): 108 - 117
Date of Publication: 21 August 2006
ISSN Information:
INSPEC Accession Number: 9056731
DOI: 10.1109/MRA.2006.1678144
Publisher: IEEE
Contents

Simultaneous localization and mapping (SLAM) is the process by which a mobile robot can build a map of the environment and, at the same time, use this map to compute its location. The past decade has seen rapid and exciting progress in solving the SLAM problem together with many compelling implementations of SLAM methods. The great majority of work has focused on improving computational efficiency while ensuring consistent and accurate estimates for the map and vehicle pose. However, there has also been much research on issues such as nonlinearity, data association, and landmark characterization, all of which are vital in achieving a practical and robust SLAM implementation.

This tutorial focuses on the recursive Bayesian formulation of the SLAM problem in which probability distributions or estimates of absolute or relative locations of landmarks and vehicle pose are obtained. Part I of this tutorial (IEEE Robotics & Auomation Magazine, vol. 13, no. 2) surveyed the development of the essential SLAM algorithm in state-space and particle-filter form, described a number of key implementations, and cited locations of source code and real-world data for evaluation of SLAM algorithms. Part II of this tutorial (this article), surveys the current state of the art in SLAM research with a focus on three key areas: computational complexity, data association, and environment representation. Much of the mathematical notation and essential concepts used in this article are defined in Part I of this tutorial and, therefore, are not repeated here.

SLAM, in its naive form, scales quadratically with the number of landmarks in a map. For real-time implementation, this scaling is potentially a substantial limitation in the use of SLAM methods. The complexity section surveys the many approaches that have been developed to reduce this complexity. These include linear-time state augmentation, sparsification in information form, partitioned updates, and submapping methods. A second major hurdle to overcome in the implementation of SLAM methods is to correctly associate observations of landmarks with landmarks held in the map. Incorrect association can lead to catastrophic failure of the SLAM algorithm. Data association is particularly important when a vehicle returns to a previously mapped region after a long excursion, the so-called loop-closure problem. The data association section surveys current data association methods used in SLAM. These include batch-validation methods that exploit constraints inherent in the SLAM formulation, appearance-based methods, and multihypothesis techniques. The third development discussed in this tutorial is the trend towards richer appearance-based models of landmarks and maps. While initially motivated by problems in data association and loop closure, these methods have resulted in qualitatively different methods of describing the SLAM problem, focusing on trajectory estimation rather than landmark estimation. The environment representation section surveys current developments in this area along a number of lines, including delayed mapping, the use of nongeometric landmarks, and trajectory estimation methods.

SLAM methods have now reached a state of considerable maturity. Future challenges will center on methods enabling large-scale implementations in increasingly unstructured environments and especially in situations where GPS-like solutions are unavailable or unreliable: in urban canyons, under foliage, under water, or on remote planets.
Computational Complexity

The state-based formulation of the SLAM problem involves the estimation of a joint state composed of a robot pose and the locations of observed stationary landmarks. This problem formulation has a peculiar structure; the process model only affects vehicle pose states and the observation model only makes reference to a single vehicle-landmark pair. A wide range of techniques have been developed to exploit this special structure in limiting the computational complexity of the SLAM algorithm.

Techniques aimed at improving computational efficiency may be characterized as being optimal or conservative. Optimal algorithms aim to reduce required computation while still resulting in estimates and covariances that are equal to the full-form SLAM algorithm (as presented in Part I of this tutorial). Conservative algorithms result in estimates that have larger uncertainty or covariance than the optimal result. Usually, conservative algorithms, while less accurate, are computationally more efficient and, therefore, of value in real implementations. Algorithms with uncertainties or covariances less than those of the optimal solution are termed inconsistent and are considered invalid solutions to the SLAM (or any estimation) problem.

The direct approach to reducing computational complexity involves exploiting the structure of the SLAM problem in re-formulating the essential time- and observation-update equations to limit required computation. The time-update computation can be limited using state-augmentation methods. The observation-update computation can be limited using a partitioned form of the update equations. Both these steps result in an optimal SLAM estimate with reduced computation. Re-formulation of the standard space-space SLAM representation into information form allows sparsification of the resulting information matrix to be exploited in reducing computation. The resulting algorithms are usually conservative but still yield good estimates with much reduced computational effort. Submapping methods exploit the idea that a map can be broken up into regions with local coordinate systems and arranged in a hierarchical manner. Updates can occur in a local frame with periodic interframe updates. Submapping techniques generally provide a conservative estimate in the global frame.
State Augmentation

At a time k , the joint SLAM state vector x k = [ x T v k , m T ] T comprises two parts: the robot pose x v k and the set of map landmark locations m . The vehicle model propagates only the pose states according to a set of control inputs u k while leaving the map states unchanged
x k = f ( x k − 1 , u k ) = [ f v ( x v k − 1 , u k ) m ] , (1)
View Source Right-click on figure for MathML and additional features. \eqalignno{ {\bf x}_{k} & = {\bf f}({\bf x}_{k-1}, {\bf u}_{k})\cr & =\left[\matrix{ {\bf f}_{v}({\bf x}_{vk-1},{\bf u}_{k})\cr m}\right],&\hbox{(1)}} In a naive implementation of the extended Kalman filter (EKF) for SLAM, the covariance prediction is computed from
P k | k − 1 = ∇ f x P k − 1 | k − 1 ∇ f T x + ∇ f u U k ∇ f T u , (2)
View Source Right-click on figure for MathML and additional features. {\bf P}_{k\vert k-1}=\nabla {\bf f}_{{\bf x}}{\bf P}_{k-1\vert k-1} \nabla {\bf f}_{{\bf x}}^{T}+\nabla {\bf f}_{{\bf u}}{\bf U}k \nabla {\bf f}_{{\bf u}}^{T},\eqno{\hbox{(2)}} where ∇ f x = ∂ f / ∂ x k − 1 , ∇ f u = ∂ f / ∂ u k and U k is a covariance characterising uncertainty on the control vector. This operation has cubic complexity in the number of landmarks due to matrix multiplication of the Jacobian ∇ f x and the covariance matrix P k − 1 | k − 1 . However, as only the pose states are affected by the vehicle model, the covariance prediction can be re-written in a form which has linear complexity in the number of landmarks [53, Sec. 2.4.1]
P k | k − 1 = [ ∇ f v x P v v ∇ f T v x + ∇ f v u U k ∇ f T v u P T v m ∇ f T v x ∇ f v x P v m P m m ] , (3)
View Source Right-click on figure for MathML and additional features. {\bf P}_{k\vert k-1}= \left[\matrix{ \nabla {\bf f}_{v_{{\bf x}}}{\bf P}_{vv} \nabla {\bf f}_{v_{{\bf x}}}^{T}+\nabla{\bf f}_{v_{\bf u}}{\bf U}_{k}\nabla {\bf f}_{v_{\bf u}}^{T} & \nabla {\bf f}_{v_{\bf x}}{\bf P}_{vm}\cr {\bf P}_{vm}^{T}\nabla {\bf f}_{v_{\bf x}}^{T} & {\bf P}_{mm}}\right], \eqno{\hbox{(3)}} where ∇ f v x = ∂ f v / ∂ x v k − 1 , ∇ f v u = ∂ f v / ∂ u k and where
P k − 1 | k − 1 = [ P v v P T v m P v m P m m ] .
View Source Right-click on figure for MathML and additional features. {\bf P}_{k-1\vert k-1}=\left[\matrix{ {\bf P}_{vv} & {\bf P}_{vm}\cr {\bf P}_{vm}^{T} & {\bf P}_{mm} }\right].

The process of adding a new landmark to the state vector has a similar form. A new map landmark is initialized as a function of the robot pose and an observation z k
m n e w = g ( x v k , z k ) . (4)
View Source Right-click on figure for MathML and additional features. {\bf m}_{new}={\bf g}({\bf x}_{vk}, {\bf z}_{k}). \eqno{\hbox{(4)}} The augmented states are then a function of only a small number of existing states
x + k = ⎡ ⎣ ⎢ x v k m g ( x v k , z k ) ⎤ ⎦ ⎥ . (5)
View Source Right-click on figure for MathML and additional features. {\bf x}_{k}^{+}=\left[\matrix{ {\bf x}_{v_{k}}\cr {\bf m}\cr {\bf g}({\bf x}_{v_{k}},{\bf z}_{k})}\right].\eqno{\hbox{(5)}}

The general idea of state augmentation can be applied whenever new states are a function of a subset of existing states
⎡ ⎣ ⎢ x 1 x 2 f ( x 2 , q ) ⎤ ⎦ ⎥ , ⎡ ⎣ ⎢ ⎢ P 11 P T 12 ∇ f x 2 P T 12 P 12 P 22 ∇ f x 2 P 22 P 12 ∇ f T x 2 P 22 ∇ f T x 2 ∇ f x 2 P 22 ∇ f T x 2 + ∇ f q Q ∇ F T q ⎤ ⎦ ⎥ ⎥ . (6) (7)
View Source Right-click on figure for MathML and additional features. \eqalignno{ & \qquad\qquad\qquad\qquad\qquad \left[\matrix{ {\bf x}_{1}\cr {\bf x}_{2}\cr {\bf f}({\bf x}_{2},{\bf q})}\right],&\hbox{(6)}\cr & \left[\matrix{ {\bf P}_{11} & {\bf P}_{12} & {\bf P}_{12}\nabla {\bf f}_{{\bf x}_{2}}^{T}\cr {\bf P}_{12}^{T} & {\bf P}_{22} & {\bf P}_{22} \nabla {\bf f}_{{\bf x}_{2}}^{T}\cr \nabla {\bf f}_{{\bf x}_{2}}{\bf P}_{12}^{T} & \nabla {\bf f}_{{\bf x}_{2}}{\bf P}_{22} & \nabla {\bf f}_{{\bf x}_{2}} {\bf P}_{22}\nabla {\bf f}_{{\bf x}_{2}}^{T}+ \nabla {\bf f}_{{\bf q}}{\bf Q}\nabla {\bf F}_{\bf q}^{T}}\right]. &\hbox{(7)}} A comparison of (1) and (3) with (6) and (7) shows that the SLAM prediction step is a special case of state augmentation in which the state is augmented by the new pose x ν k and where the previous pose x ν k − 1 is removed by marginalization. In this form, both the EKF prediction step and the process of adding new landmarks can be reduced to calculations that are linear in the number of landmarks. The predictions made are clearly optimal.

Partitioned Updates

A naive implementation of the SLAM observation-update step updates all vehicle and map states every time a new measurement is made. For an EKF update, the computational effort scales quadratically with the number of landmarks held in the map. A number of partitioned update methods have been devised to reduce this computational effort. These confine sensor-rate updates to a small local region and update the global map only at a much lower frequency. These partition methods all produce optimal estimates.

There are two basic types of partitioned update. The first operates in a local region of the global map and maintains globally referenced coordinates. This approach is taken by the compressed EKF (CEKF) [21] and the postponement algorithm [28] . The second generates a short-term submap with its own local coordinate frame. This is the approach of the constrained local submap filter (CLSF) [53] and the local map sequencing algorithm [45] . We focus on this latter approach as it is simpler and, by performing high-frequency operations in a local coordinate frame, it avoids very large global covariances and, therefore, is more numerically stable and less affected by linearization errors.

The local submap algorithm maintains at all times two independent SLAM estimates
x G = [ x G F m G ] , x R = [ x R v m R ] , (8)
View Source Right-click on figure for MathML and additional features. {\bf x}_{G}=\left[\matrix{ {\bf x}_{{\bf F}}^{\bf G}\cr {\bf m}_{G}}\right],\quad {\bf x}_{R}=\left[\matrix{ {\bf x}_{v}^{R}\cr {\bf m}_{R}}\right],\eqno{\hbox{(8)}} where x G is a map composed of a set of globally referenced landmarks m G , together with the global reference pose of a submap coordinate frame x G F , and where x R is the local submap with a locally referenced vehicle pose x R v and locally referenced landmarks m R as shown in Figure 1(a) and (b) , respectively.

Figure 1. - The constrained local submap filter. The SLAM frontier is constructed in (b) a local map, which periodically registers with (a) a global map to produce (c) an optimal global estimate.
Figure 1.

The constrained local submap filter. The SLAM frontier is constructed in (b) a local map, which periodically registers with (a) a global map to produce (c) an optimal global estimate.

Show All

As observations are made, conventional SLAM updates are performed entirely within the local submap and with only those landmarks held in the local submap. It is possible to obtain a global vehicle pose estimate at any time by simple vector summation of the locally referenced pose and the global estimate of the submap coordinate frame. An optimal global estimate is obtained periodically by registering the submap with the global map, see Figure 1(c) , and applying constraint updates upon any features common to both maps. At this point a new submap is created and the process continues.

The submap method has a number of advantages. First, the number of landmarks that must be updated at any one time is limited to only those that are described in the local submap coordinate frame. Thus, the observation-rate update is independent of the total map size. The full update, and the propagation of local estimates, can be carried out as a background task at a much lower update rate while still permitting observation-rate global localzation. A second advantage is that there is lower uncertainty in a locally referenced frame, so approximations due to linearization are reduced. Finally, submap registration can use batch-validation gating, thereby improving association robustness.
Sparsification

Conventional EKF-SLAM produces a state estimate x ^ k and covariance matrix P k , which implicitly describe the first two central moments of a Gaussian probability density on the true state x k . An alternative representation for this same Gaussian is in canonical or information form using the information vector y ^ k and information matrix Y k . These are related to the moment form parameters as
Y k y ^ k = P − 1 k , = Y k x ^ k . (9) (10)
View Source Right-click on figure for MathML and additional features. \eqalignno{ {\bf Y}_{k} & ={\bf P}_{k}^{-1},&\hbox{(9)}\cr \hat{{\bf y}}_{k}& ={\bf Y}_{k}\hat{{\bf x}}_{k}.&\hbox{(10)}} The advantage of the information form for SLAM is that, for large-scale maps, many of the off-diagonal components of the normalized information matrix are very close to zero. Thrun et al. [47] , [48] have exploited this observation to propose a sparsification procedure that allows near-zero elements of the normalized information matrix to be set to zero. With the information matrix now sparse, very efficient update procedures for information estimates can be obtained with relatively little loss in optimality of the maps produced. Although this initial solution was subsequently shown not to be consistent by Eustice et al. [17] , the idea of sparsification has sparked considerable interest in the information-form SLAM problem and several consistent sparse solutions [12] , [18] , [19] , [42] , [50] , [52] have been presented. Of particular note are those solutions that are optimal and exactly sparse [12] , [18] , [19] .

The key to exact sparsification of the information form of the SLAM problem is to notice that state augmentation is a sparse operation. Consider the moment-form augmentation identity in (6) and (7) . These have an equivalent information -form identity
⎡ ⎣ ⎢ ⎢ y 1 Y 2 ∇ f T x 2 Q − 1 [ f x 2 − ∇ f T x 2 x 2 Q − 1 [ f x 2 − ∇ f x 2 x 2 ] ⎤ ⎦ ⎥ ⎥ , (11) ⎡ ⎣ ⎢ ⎢ y 11 Y T 12 0 Y 12 Y 22 + ∇ f T x 2 Q − 1 ∇ f x 2 − Q − 1 ∇ f x 2 0 − ∇ f T x 2 Q − 1 Q − 1 , ⎤ ⎦ ⎥ ⎥ , (12)
View Source Right-click on figure for MathML and additional features. \eqalignno{\left[\matrix{ {\bf y}_{1}\cr {\bf Y}_{2} \nabla {\bf f}_{{\bf x}_{2}}^{T}{\bf Q}^{-1}[{\bf f}_{{\bf x}_{2}} - \nabla{\bf f}_{{\bf x}_{2}}^{T}{\bf x}_{2}\cr {\bf Q}^{-1}[{\bf f}_{{\bf x}_{2}}-\nabla {\bf f}_{{\bf x}_{2}}{\bf x}_{2}]}\right], {\hbox{(11)}}\cr \left[\matrix{ {\bf y}_{11} & {\bf Y}_{12} & 0 \cr {\bf Y}_{12}^{T} & {\bf Y}_{22}+\nabla {\bf f}_{{\bf x}_{2}}^{T}{\bf Q}^{-1}\nabla {\bf f}_{{\bf x}_{2}} & - \nabla{\bf f}_{{\bf x}_{2}}^{T}{\bf Q}^{-1}\cr 0 & -{\bf Q}^{-1}\nabla {\bf f}_{{\bf x}_{2}} & {\bf Q}^{-1},}\right],{\hbox{(12)}}} where, for simplicity, it is assumed that noise is zero-mean additive f ( x 2 , q ) = f ( x 2 ) + q . Assuming the subset of states x 1 comprises the bulk of the map states, then (12) is sparse and has constant-time complexity compared to (7) , which has linear complexity in the dimension of x 1 .

Therefore, in the information-form SLAM problem, an exactly sparse solution can be obtained by augmenting the state with the new vehicle pose estimate at each time step and retaining all past robot poses,
x k = [ x T v k , x T v k − 1 , … , x T v 1 , m T ] T . (13)
View Source Right-click on figure for MathML and additional features. {\bf x}_{k}=\left[{\bf x}_{v_{k}}^{T}, {\bf x}_{v_{k-1}}^{T}, \ldots, {\bf x}_{v_{1}}^{T}, {\bf m}^{T}\right]^{T}. \eqno{\hbox{(13)}}

In this way, the off-diagonal terms of the information matrix are nonzero only for poses and landmarks that are directly related by measurement data [see Figure 2(a) ]. Observation updates are also a sparse operation, producing links only between measured states.
Figure 2. - Exact information matrix SLAM: These information matrices all represent optimal map estimates but show the tradeoff between the number of retained pose states and matrix sparsity; (b) keeps just four out of 20 of past poses (i.e., 20%) while remaining quite sparse.
Figure 2.

Exact information matrix SLAM: These information matrices all represent optimal map estimates but show the tradeoff between the number of retained pose states and matrix sparsity; (b) keeps just four out of 20 of past poses (i.e., 20%) while remaining quite sparse.

Show All

However, marginalization, which is necessary to remove past pose states, introduces links between all state elements connected to the removed states. Marginalizing all past states produces a dense information matrix as shown in Figure 2(c) . Nevertheless, it is possible to retain a reasonably sparse estimate without having to keep an entire pose history [19] . By judicious selection of anchoring poses to decouple different regions of the map, a great proportion of poses can be marginalized away without inducing excessive density as shown in Figure 2(b) .

Despite the attraction of its sparse representation, there remain serious caveats with regard to practical implementation of information-form SLAM. For realistic use, it is necessary to recover the mean and covariance of the state at every time step. This is potentially very expensive. The mean estimate is required to perform linearization of the process and observation models. It can be recovered fairly efficiently using the conjugate gradients method [16] . The mean and covariance are both required to compute validation gates for data association. While efficient solutions have been devised for simple gating [16] , [48] , the robust batch gating methods, described in the following data association section, potentially involve recovery of the full covariance matrix, which has a cubic complexity in the number of landmarks.
Global Submaps

Submap methods are another means of addressing the issue of computation scaling quadratically with the number of landmarks during measurement updates. Submap methods come in two fundamental varieties: globally referenced and locally referenced, as shown in Figure 3 . The common thread to both types is that the submap defines a local coordinate frame and nearby landmarks are estimated with respect to the local frame. The local submap estimates are obtained using the standard, optimal SLAM algorithm using only the locally referenced landmarks. The resulting submap structures are then arranged in a hierarchy leading to computational efficiency but also lack of optimality.
Figure 3. - Global and relative submaps.
Figure 3.

Global and relative submaps.

Show All

Global submap methods estimate the global locations of submap coordinate frames relative to a common base frame. This is the approach adopted in the relative landmark representation (RLR) [22] , hierarchical SLAM [15] , and constant time SLAM (CTS) [30] methods. These approaches reduce computation from a quadratic dependence on the number of landmarks to a linear or constant time dependence by maintaining a conservative estimate of the global map. However, as submap frames are located relative to a common base coordinate frame, global submaps do not alleviate linearization issues arising from large pose uncertainties.
Relative Submaps

Relative submap methods differ from global submaps in that there is no common coordinate frame. The location of any given submap is recorded only by its neighboring submaps, and these are connected in a graphical network. Global estimates can be obtained by vector summation along a path in the network. By eschewing any form of global-level data fusion, relative submaps address both computation and nonlinearity issues.

The original notion of relative submaps was introduced by Chong and Kleeman [8] . This was further developed by Williams [53] in the form of the constrained relative submap filter (CRSF). However, CRSF does not exhibit global-level convergence without forfeiting the decoupled submap structure. The Atlas framework [6] , [7] and network coupled feature maps (NCFM) [2] rectified this problem by realizing that conservative global convergence could be achieved using the covariance intersect algorithm [26] for estimating connections. These algorithms result in a network of optimal SLAM submaps connected by conservative links.
Future challenges will center on methods enabling large-scale implementations in increasingly unstructured environments and especially in situations where GPS-like solutions are unavailable or unreliable

The relative submap framework has a number of advantages. In particular, it produces locally optimal maps with computational complexity independent of the size of the compete map. Further, by treating updates locally, it is numerically very stable, allows batch association between frames, and minimizes problems arising from linearization in a global frame.
Data Association

Data association has always been a critical issue for practical SLAM implementations. Before fusing data into the map, new measurements are associated with existing map landmarks, and, after fusion, these associations cannot be revised. The problem is that a single incorrect data association can induce divergence into the map estimate, often causing catastrophic failure of the localization algorithm. SLAM algorithms will be fragile when 100% correct associations are mandated for correct operation.
Batch Validation

Almost all SLAM implementations perform data association using only statistical validation gating, a method inherited from the target-tracking literature for culling unlikely associations [4] . Early SLAM implementations considered each measurement-to-landmark association individually by testing whether an observed landmark is close to a predicted location. Individual gating is extremely unreliable if the vehicle pose is very uncertain and fails in all but the most sparsely populated and structured environments.

An important advance was the concept of batch gating, where multiple associations are considered simultaneously. Mutual association compatibility exploits the geometric relationship between landmarks. The two existing forms of batch gating are the joint compatibility branch and bound (JCBB) [37] method, which is a tree-search, and combined constraint data association (CCDA) [2] , which is a graph search (see Figure 4 ). The latter (and also a randomized variant of JCBB [38] ) is able to perform reliable association with no knowledge of vehicle pose whatsoever.
Figure 4. - Combined constraint data association (CCDA) performs batch-validation gating by constructing and searching a correspondence graph. The graph nodes represent associations that are possible when considered individually. The edges indicate compatible associations, and a clique is a set of mutually compatible associations (e.g., the clique 2, 6, 10 implies that associations $a_{1}\rightarrow b_{2}, a_{2}\rightarrow b_{3}, a_{4}\rightarrow b_{1}$ may coexist).
Figure 4.

Combined constraint data association (CCDA) performs batch-validation gating by constructing and searching a correspondence graph. The graph nodes represent associations that are possible when considered individually. The edges indicate compatible associations, and a clique is a set of mutually compatible associations (e.g., the clique 2, 6, 10 implies that associations a 1 → b 2 , a 2 → b 3 , a 4 → b 1 may coexist).

Show All

Batch gating alone is often sufficient to achieve reliable data association: If the gate is sufficiently constrained, association errors have an insignificant effect [5] , and if a false association is made with an incorrect landmark that is physically close to the right one, then the inconsistency is minor. This may not always be valid and, especially in large complex environments, more comprehensive data association mechanisms (such as multihypohesis tracking [4] ) may be necessary.
Appearance Signatures

Gating on geometric patterns alone is not the only avenue for reliable data association. Many sensing modalities, such as vision, provide rich information about shape, color, and texture, all of which may be used to find a correspondence between two data sets. For SLAM, appearance signatures are useful to predict a possible association, such as closing a loop, or for assisting conventional gating by providing additional discrimination information.

Historically, appearance signatures and image similarity metrics have been developed for indexing image databases [43] and for recognizing places in topological mapping [1] , [49] . More recently, appearance measures have been applied to detecting loops in SLAM [23] , [39] . The work on visual appearance signatures for loop detection by Newman et al. [39] introduces two significant innovations. A similarity metric over a sequence of images, rather than a single image, is computed, and an eigenvalue technique is employed to remove common-mode similarity. This approach considerably reduces the occurrence of false positives by considering only matches that are interesting or uncommon.
Multihypothesis Data Association

Multihypothesis data association is essential for robust target tracking in cluttered environments [4] . It resolves association ambiguities by generating a separate track estimate for each association hypothesis, creating over time an ever-branching tree of tracks. The number of tracks is typically limited by the available computational resources, and low-likelihood tracks are pruned from the hypothesis tree.

Multihypothesis tracking (MHT) is also important for robust SLAM implementation, particularly in large complex environments. For example, in loop closure, a robot should ideally maintain separate hypotheses for suspected loops and also a “no-loop” hypothesis for cases where the perceived environment is structurally similar. While MHT has been applied to mapping problems [9] , this has yet to be applied in the SLAM context. A major hurdle is the computational overhead of maintaining separate map estimates for each hypothesis. Tractable solutions may be possible using sparsification or submap methods. The FastSLAM algorithm is inherently a multihypothesis solution, with each particle having its own map estimate. A significant attribute of the FastSLAM algorithm is its ability to perform per-particle data association [36] .
Environment Representation

Early work in SLAM assumed that the world could reasonably be modeled as a set of simple discrete landmarks described by geometric primitives such as points, lines, or circles. In more complex and unstructured environments-outdoor, underground, subsea-this assumption often does not hold.
Partial Observability and Delayed Mapping

Environment modeling depends both on the complexity of the environment and on the limitations of the sensing modality. Two common examples are sonar and vision. Sonar sensors typically produce accurate range measurements but often have large beam width and side lobes, making the bearing estimate unusable [31] . Measurements from a single camera, on the other hand, provide bearing information without an accurate indication of range.

SLAM with range-only sensors [32] , [33] and bearing-only sensors [3] , [11] shows that a single measurement is insufficient to constrain a landmark location. Rather, it must be observed from multiple vantage points as shown in Figure 5 . More precisely, a single measurement generates a non-Gaussian distribution over landmark location, and multiple measurements are needed to obtain an estimate. Generalized distributions, such as mixture models, permit immediate, nondelayed landmark tracking [44] . One way to obtain a Gaussian landmark estimate is to delay initialization and, instead, accumulate raw measurement data. To permit consistent delayed fusion, it is necessary to record the vehicle pose for each deferred measurement. Thus, the SLAM state is augmented with recorded pose estimates
x k = [ x T v k , x T v k − 1 , … , x T v k − n , m T ] T , (14)
View Source Right-click on figure for MathML and additional features. {\bf x}_{k}=\left[{\bf x}_{v_{k}}^{T}, {\bf x}_{v_{k-1}}^{T}, \ldots, {\bf x}_{v_{k-n}}^{T}, {\bf m}^{T}\right]^{T}, \eqno{\hbox{(14)}} and the corresponding measurements are stored in an auxiliary list { z k , … , z k − n } . Once sufficient information over a period n has been collected, a landmark is initialized by a batch update. Recorded poses that do not have any other associated measurements are then simply removed from the state.

Figure 5. - Partial observation. Some sensing modalities cannot directly observe a landmark location and require observations from multiple vantage points.
Figure 5.

Partial observation. Some sensing modalities cannot directly observe a landmark location and require observations from multiple vantage points.

Show All

Delayed fusion addresses far more than just partial observability. It is a general concept for increasing robustness by accumulating information and permitting delayed decision making. Given an accumulated data set, an improved estimate can be obtained by performing a batch update, such as bundle adjustment [11] or iterated smoothing, which dramatically reduces linearization errors. Deferred data also facilitate batch validation gating and, therefore, aid reliable data association.
Nongeometric Landmarks

While EKF-SLAM is usually applied to geometric landmarks (often misnamed point landmarks) , the simple expedient of attaching a coordinate frame to an arbitrary object allows the same methods to be applied to much more general landmark descriptions. A recent contribution by Nieto et al. [40] shows that landmarks of arbitrary shape may be dealt with by using EKF-SLAM to reconcile landmark locations separately from the estimation of shape parameters.

A landmark is described by a shape model which has an embedded coordinate frame defining the landmark origin as shown in Figure 6(a) . This model is auxiliary to the SLAM process and may have any representation that permits data alignment (e.g., a grid). When the robot observes the landmark, the shape model is aligned with the measurement data as shown in Figure 6(b) . Assuming this alignment is approximately Gaussian, the vehicle-centric estimate of the model coordinate frame is an observation suitable for an EKF-SLAM update, where the map is composed of landmark frame locations as in Figure 6(c) .
Figure 6. - SLAM with arbitrary shaped landmarks. Aligning a shape model with sensed data produces a suitable observation model for SLAM.
Figure 6.

SLAM with arbitrary shaped landmarks. Aligning a shape model with sensed data produces a suitable observation model for SLAM.

Show All

3-D SLAM

Implementing SLAM in three dimensions is, in principle, a straightforward extension of the two-dimensional (2-D) case. However, it involves significant added complexity due to the more general vehicle motion model and, most importantly, greatly increased sensing and feature modeling complexity.

Three essential forms of three-dimensional (3-D) SLAM exist. The first is simply 2-D SLAM with additional map building capabilities in the third dimension, for example, horizontal laser-based SLAM with a second orthogonal laser mapping vertical slices [35] , [46] . This approach is appropriate when the vehicle motion is confined to a plane. The second form is a direct extension of 2-D SLAM to three dimensions, with the extraction of discrete landmarks and joint estimation of the map and vehicle pose. This has been implemented with monocular vision sensing by Davison et al. [10] and permits full six degree-of-freedom motion (see also [27] for an airborne application). The third form involves an entirely different SLAM formulation, where the joint state is composed of a history of past vehicle poses [16] , [39] . At each pose, the vehicle obtains a 3-D scan of the environment, and the pose estimates are aligned by correlating the scans.
Trajectory-Oriented SLAM

The standard SLAM formulation, as described in Part I of this tutorial, defines the estimated state as the vehicle pose and a list of observed landmarks
x k = [ x T v k , m T ] T (15)
View Source Right-click on figure for MathML and additional features. {\bf x}_{k}=\left[{\bf x}_{v_{k}}^{T}, {\bf m}^{T}\right]^{T} \eqno{\hbox{(15)}} An alternative formulation of the SLAM problem that has gained recent popularity is to estimate the vehicle trajectory instead
x k = [ x T v k , x T v k − 1 , … , x T v 1 ] T . (16)
View Source Right-click on figure for MathML and additional features. {\bf x}_{k}=\left[{\bf x}_{v_{k}}^{T}, {\bf x}_{v_{k-1}}^{T}, \ldots, {\bf x}_{v_{1}}^{T}\right]^{T}. \eqno{\hbox{(16)}} This formulation is particularly suited to environments where discrete identifiable landmarks are not easily discerned and direct alignment of sensed data is simpler or more reliable. Notice that the map is no longer part of the state to be estimated but instead forms an auxiliary data set. Indeed, this formulation of the SLAM problem has no explicit map; rather, each pose estimate has an associated scan of sensed data, and these are aligned to form a global map. Figure 7 shows an example of this approach from [39] .

Figure 7. - Trajectory-based SLAM. Scans taken at each pose are aligned according to their pose estimate to form a global map. (Picture courtesy of [39].)
Figure 7.

Trajectory-based SLAM. Scans taken at each pose are aligned according to their pose estimate to form a global map. (Picture courtesy of [39] .)

Show All

The FastSLAM algorithm may also be considered an example of trajectory estimation, with each particle defining a particular trajectory hypothesis. Several recent FastSLAM hybrids use pose-aligned scans or grids in place of a landmark map [14] , [20] , [24] . Another variation of trajectory-based SLAM has developed from topological mapping [34] , where poses are connected in a graphical network rather than a joint state vector. This framework, known as consistent pose estimation (CPE) [23] , [29] , is a promising alternative to state-space SLAM and is capable of producing large-scale maps. The advent of sparse-information-form SLAM has led to a third type of trajectory-based SLAM [12] , [18] , [39] , with sparse estimation of (16) .

While trajectory SLAM has many positive characteristics, these come with caveats. Most importantly, its state-space grows unbounded with time, as does the quantity of stored measurement data. For very long-term SLAM, it will eventually become necessary to coalesce data into a format similar to the traditional SLAM map to bound storage costs.
Embedded Auxiliary Information

Trajectory-based SLAM lends itself to representing spatially located information. Besides scan data for mapping, it is possible to associate auxiliary information with each pose, soil salinity, humidity, temperature, or terrain characteristics, for example. The associated information may be used to assist mapping, to aid data association, or for purposes unrelated to the mapping task, such as path planning or data gathering.

This concept of embedding auxiliary data is more difficult to incorporate within the traditional SLAM framework. The SLAM state is composed of discrete landmark locations and is ill suited to the task of representing dense spatial information. Nieto et al. [41] have devised a method called DenseSLAM to permit such an embedding. As the robot moves through the environment, auxiliary data is stored in a suitable data structure, such as an occupancy grid, and the region represented by each grid cell is determined by a set of local landmarks in the SLAM map. As the map evolves, and the landmarks move, the locality of the grid region is shifted and warped accordingly. The result is an ability to consistently maintain spatial locality of dense auxiliary information using the SLAM landmark estimates.
Dynamic Environments

Real-world environments are not static. They contain moving objects, such as people, and temporary structures that appear static for a while but are later moved, such as chairs and parked cars. In dynamic environments, a SLAM algorithm must somehow manage moving objects. It can detect and ignore them; it can track them as moving landmarks, but it must not add a moving object to the map and assume it is stationary.
The past decade, in particular, has seen substantial progress in our understanding of the SLAM problem and in the development of efficient, consistent, and robust SLAM algorithms.

The conventional SLAM solution is highly redundant. Landmarks can be removed from the map without loss of consistency, and it is often possible to remove large numbers of landmarks with little change in convergence rate [13] . This property has been exploited to maintain a contemporaneous map by removing landmarks that have become obsolete due to changes in the environment [2, Sec. 5.1] . To explicitly manage moving objects, Hähnel et al. [25] implement an auxiliary identification routine and then remove the dynamic information from a data scan before sending it to their SLAM algorithm. Conversely, Wang et al. [51] add moving objects to their estimated state and provide models for tracking both stationary and dynamic targets. Simultaneous estimation of moving and stationary landmarks is very costly due to the added predictive model. For this reason, the implemented solution first involves a stationary SLAM update followed by separate tracking of moving targets.
SLAM: Where to Next?

The SLAM method provides a solution to the key competency of mapping and localization for any autonomous robot. The past decade, in particular, has seen substantial progress in our understanding of the SLAM problem and in the development of efficient, consistent, and robust SLAM algorithms. The standard state-space approach to SLAM is now well understood, and the main issues in representation, computation, and association appear to be resolved. The information form of the SLAM problem has significant unexplored potential in large-scale mapping, problems involving many vehicles and potentially in mixed environments with sensor networks and dynamic landmarks. The delayed data-fusion concept complements batch association and iterative smoothing to improve estimation quality and robustness. Appearance- and pose-based SLAM methods offer a radically new paradigm for mapping and location estimation without the need for strong geometric landmark descriptions. These methods are opening up new directions and making links back to fundamental principles in robot perception.

The key challenges for SLAM are in larger and more persuasive implementations and demonstrations. While progress has been substantial, the scale and structure of many environments are limited. The challenge now is to demonstrate SLAM solutions to large problems where robotics can truly contribute: driving hundreds of kilometers under a forest canopy or mapping a whole city without recourse to global positioning system (GPS) and to demonstrate true autonomous localization and mapping of structures such as the Barrier Reef or the surface of Mars. SLAM has brought these possibilities closer.

Authors
Figures
References
Citations
Keywords
Metrics
   Back to Results   
More Like This
Nonholonomic mobile robot path planning with linear computational complexity graph searching algorithm

2015 10th International Workshop on Robot Motion and Control (RoMoCo)

Published: 2015
Path planning of mobile robot using integer GA with considering terrain conditions

2008 IEEE International Conference on Systems, Man and Cybernetics

Published: 2008
Show More
References
1. S. Argamon-Engelson, "Using image signatures for place recognition", Pattern Recognit. Lett. , vol. 19, no. 4, pp. 941-951, 1998.
Show in Context CrossRef Google Scholar
2. T. Bailey, Mobile robot localisation and mapping in extensive outdoor environments , 2002.
Show in Context Google Scholar
3. T. Bailey, "Constrained initialisation for bearing-only SLAM", Proc. IEEE Int. Conf. Robotics Automation , pp. 1966-1971, 2003.
Show in Context View Article Full Text: PDF (395KB) Google Scholar
4. Y. Bar-Shalom and T.E. Fortmann, Tracking and Data Association, New York:Academic, 1988.
Show in Context Google Scholar
5. S.S. Blackman and R. Popoli, Design and Analysis of Modern Tracking Systems, MA, Norwood:Artech, 1999.
Show in Context Google Scholar
6. M. Bosse, P. Newman, J. Leonard, M. Soika, W. Feiten and S. Teller, "An Atlas framework for scalable mapping", Proc. IEEE Int. Conf. Robotics Automation , pp. 1899-1906, 2003.
Show in Context View Article Full Text: PDF (526KB) Google Scholar
7. M. Bosse, P. Newman, J. Leonard and S. Teller, "Simultaneous localization and map building in large-scale cyclic environments using the Atlas framework", Int. J. Robot. Res. , vol. 23, no. 12, pp. 1113-1140, 2004.
Show in Context CrossRef Google Scholar
8. K.S. Chong and L. Kleeman, "Feature-based mapping in real large scale environments using an ultrasonic array", Int. J. Robot. Res. , vol. 18, no. 1, pp. 3-19, 1999.
Show in Context CrossRef Google Scholar
9. I.J. Cox and J.J. Leonard, "Modeling a dynamic environment using a bayesian multiple hypothesis approach", Artif. Intell. , vol. 66, no. 2, pp. 311-344, 1994.
Show in Context CrossRef Google Scholar
10. A.J. Davison, Y.G. Cid and N. Kita, "Real-time 3D SLAM with wide-angle vision", Proc. IFAC/EURON Symp. Intelligent Autonomous Vehicles , 2004.
Show in Context Google Scholar
11. M. Deans and M. Hebert, "Experimental comparison of techniques for localization and mapping using a bearing-only sensor" in Experimental Robotics VII, New York:Springler Verlag, 2001.
Show in Context Google Scholar
12. F. Dellaert, "Square root SAM: Simultaneous location and mapping via square root information smoothing", Proc. Robotics: Science and Systems , 2005.
Show in Context CrossRef Google Scholar
13. G. Dissanayake, H. Durrant-Whyte and T. Bailey, "A computationally efficient solution to the simultaneous localisation and map building (SLAM) problem", Proc. IEEE Int. Conf. Robotics Automation , vol. 2, pp. 1009-1014, 2000.
Show in Context View Article Full Text: PDF (537KB) Google Scholar
14. A.I. Eliazar and R. Parr, "DP-SLAM 2.0", Proc. IEEE Int. Conf. Robotics Automation , pp. 1314-1320, 2004.
Show in Context View Article Full Text: PDF (703KB) Google Scholar
15. C. Estrada, J. Neira and J.D. Tardós, "Hierarchical SLAM: Realtime accurate mapping of large environments", IEEE Trans. Robot. , vol. 21, no. 4, pp. 588-596, 2005.
Show in Context View Article Full Text: PDF (447KB) Google Scholar
16. R. Eustice, H. Singh, J. Leonard, M. Walter and R. Ballard, "Visually navigating the RMS Titanic with SLAM information filters", Proc. Robotics: Science and Systems , 2005.
Show in Context Google Scholar
17. R. Eustice, M. Walter and J. Leonard, "Sparse extended information filters: Insights into sparsification", Proc. IEEE/RSJ Int. Conf. Intelligent Robots Systems , pp. 3281-3288, 2005.
Show in Context View Article Full Text: PDF (413KB) Google Scholar
18. R.M. Eustice, H. Singh and J.J. Leonard, "Exactly sparse delayed-state filters", Proc. IEEE Int. Conf. Robotics Automation , pp. 2417-2424, 2005.
Show in Context View Article Full Text: PDF (334KB) Google Scholar
19. J. Folkesson and H.I. Christensen, "Graphical SLAM—a selfcorrecting map", Proc. IEEE Int. Conf. Robotics Automation , pp. 791-798, 2004.
Show in Context View Article Full Text: PDF (593KB) Google Scholar
20. G. Grisetti, C. Stachniss and W. Burgard, "Improving gridbased SLAM with Rao-Blackwellized particle filters by adaptive proposals and selective resampling", Proc. IEEE Int. Conf. Robotics Automation , pp. 667-672, 2005.
Show in Context View Article Full Text: PDF (292KB) Google Scholar
21. J. Guivant and E. Nebot, "Optimization of the simultaneous localization and map building algorithm for real time implementation", IEEE Trans. Robot. Automat. , vol. 17, no. 3, pp. 242-257, 2001.
Show in Context View Article Full Text: PDF (422KB) Google Scholar
22. J. Guivant and E. Nebot, "Improving computational and memory requirements of simultaneous localization and map building algorithms", Proc. IEEE Int. Conf. Robotics Automation , pp. 2731-2736, 2002.
Show in Context View Article Full Text: PDF (617KB) Google Scholar
23. J.S. Gutmann and K. Konolige, "Incremental mapping of large cyclic environments", Proc. IEEE Int. Symp. Computational Intelligence Robotics Automation , pp. 318-325, 1999.
Show in Context View Article Full Text: PDF (782KB) Google Scholar
24. D. Hähnel, W. Burgard, D. Fox and S. Thrun, "An efficient fast-SLAM algorithm for generating maps of large-scale cyclic environments from raw laser range measurements", Proc. IEEE/RSJ Int. Conf. Intelligent Robots Systems , pp. 206-211, 2003.
Show in Context View Article Full Text: PDF (528KB) Google Scholar
25. D. Hähnel, R. Triebel, W. Burgard and S. Thrun, "Map building with mobile robots in dynamic environments", Proc. IEEE Int. Conf. Robotics Automation , pp. 1557-1563, 2003.
Show in Context View Article Full Text: PDF (497KB) Google Scholar
26. S.J. Julier and J.K. Uhlmann, "A nondivergent estimation algorithm in the presence of unknown correlations", Proc. American Control Conf. , vol. 4, pp. 2369-2373, 1997.
Show in Context View Article Full Text: PDF (503KB) Google Scholar
27. J. Kim and S. Sukkarieh, "Autonomous airborne navigation in unknown terrain environments", IEEE Trans. Aerosp. Electron. Syst. , vol. 40, no. 3, pp. 1031-1045, 2004.
Show in Context View Article Full Text: PDF (2193KB) Google Scholar
28. J. Knight, A. Davison and I. Reid, "Towards constant time SLAM using postponement", Proc. IEEE/RSJ Int. Conf. Intelligent Robots Syst. , pp. 405-413, 2001.
Show in Context View Article Full Text: PDF (1208KB) Google Scholar
29. K. Konolige, "Large-scale map-making", Proc. Nat. Conf. AI (AAAI) , pp. 457-463, 2004.
Show in Context Google Scholar
30. J. Leonard and P. Newman, "Consistent convergent and constant-time SLAM", Proc. Int. Joint Conf. Artificial Intelligence , 2003.
Show in Context Google Scholar
31. J.J. Leonard and H.F. Durrant-Whyte, Directed Sonar Sensing for Mobile Robot Navigation, MA, Norwell:Kluwer, 1992.
Show in Context CrossRef Google Scholar
32. J.J. Leonard and R.J. Rikoski, "Incorporation of delayed decision making into stochastic mapping" in Experimental Robotics VII, New York:Springler Verlag, 2001.
Show in Context CrossRef Google Scholar
33. J.J. Leonard, R.J. Rikoski, P.M. Newman and M.C. Bosse, "Mapping partially observable features from multiple uncertain vantage points", Int. J. Robot. Res. , vol. 21, no. 10-11, pp. 943-975, 2002.
Show in Context CrossRef Google Scholar
34. F. Lu and E. Milios, "Globally consistent range scan alignment for environment mapping", Autom. Robots , vol. 4, no. 6, pp. 333-349, 1997.
Show in Context CrossRef Google Scholar
35. I. Mahon and S. Williams, "Three-dimensional robotic mapping", Proc. Australasian Conf. Robotics Automation , 2003.
Show in Context Google Scholar
36. M. Montemerlo and S. Thrun, "Simultaneous localization and mapping with unknown data association using FastSLAM", Proc. IEEE Int. Conf. Robotics Automation , pp. 1985-1991, 2003.
Show in Context View Article Full Text: PDF (486KB) Google Scholar
37. J. Neira and J.D. Tardós, "Data association in stochastic mapping using the joint compatibility test", IEEE Trans. Robot. Automat. , vol. 17, no. 6, pp. 890-897, 2001.
Show in Context View Article Full Text: PDF (198KB) Google Scholar
38. J. Neira, J.D. Tardós and J.A. Castellanos, "Linear time vehicle relocation in SLAM", Proc. IEEE Int. Conf. Robotics Automation , 2003.
Show in Context View Article Full Text: PDF (472KB) Google Scholar
39. P. Newman, D. Cole and K. Ho, "Outdoor SLAM using visual appearance and laser ranging", Proc. IEEE Int. Conf. Robotics Automation , 2006.
Show in Context View Article Full Text: PDF (1445KB) Google Scholar
40. J. Nieto, T. Bailey and E. Nebot, "Scan-SLAM: Combining EKFSLAM and scan correlation", Proc. Int. Conf. Field Service Robotics , 2005.
Show in Context Google Scholar
41. J. Nieto, J. Guivant and E. Nebot, "The hybrid metric maps (HYMMs): A novel map representation for DenseSLAM", Proc. IEEE Int. Conf. Robotics Automation , pp. 391-396, 2004.
Show in Context View Article Full Text: PDF (486KB) Google Scholar
42. M.A. Paskin, Thin junction tree filters for simultaneous localization and mapping , 2002.
Show in Context Google Scholar
43. Y. Rubner, C. Tomasi and L.J. Guibas, "A metric for distributions with applications to image databases", Proc. IEEE Int. Conf. Computer Vision , 1998.
Show in Context View Article Full Text: PDF (1196KB) Google Scholar
44. J. Solà, A. Monin, M. Devy and T. Lemaire, "Undelayed initialization in bearing only SLAM", Proc. IEEE/RSJ Int. Conf. Intelligent Robots Systems , pp. 2751-2756, 2005.
Show in Context View Article Full Text: PDF (261KB) Google Scholar
45. J.D. Tardós, J. Neira, P.M. Newman and J.J. Leonard, "Robust mapping and localization in indoor environments using sonar data", Int. J. Robot. Res. , vol. 21, no. 4, pp. 311-330, 2002.
Show in Context CrossRef Google Scholar
46. S. Thrun, W. Bugard and D. Fox, "A real-time algorithm for mobile robot mapping with applications to multi-robot and 3D mapping", Proc. Int. Conf. Robotics Automation , pp. 321-328, 2000.
Show in Context View Article Full Text: PDF (713KB) Google Scholar
47. S. Thrun, D. Koller, Z. Ghahmarani, H. Durrant-Whyte and A. Ng, Simultaneous localization and mapping with sparse extended information filters: Theory and initial results , 2002.
Show in Context Google Scholar
48. S. Thrun, Y. Liu, D. Koller, A. Ng and H. Durrant-Whyte, "Simultaneous localisation and mapping with sparse extended information filters", Int. J. Robot. Res. , vol. 23, no. 7-8, pp. 693-716, 2004.
Show in Context CrossRef Google Scholar
49. I. Ulrich and I. Nourbakhsh, "Appearance-based place recognition for topological localization", Proc. IEEE Int. Conf. Robotics Automation , pp. 1023-1029, 2000.
Show in Context View Article Full Text: PDF (760KB) Google Scholar
50. M. Walter, R. Eustice and J. Leonard, "A provably consistent method for imposing sparsity in feature-based SLAM information filters", Proc. Int. Symp. Robotics Research , 2005.
Show in Context CrossRef Google Scholar
51. C.C. Wang, C. Thorpe and S. Thrun, "On-line simultaneous localisation and mapping with detection and tracking of moving objects", Proc. IEEE Int. Conf. Robotics Automation , pp. 2918-2924, 2003.
Show in Context Google Scholar
52. Z. Wang, S. Huang and G. Dissanayake, "Implementation issues and experimental evaluation of D-SLAM", Proc. Int. Conf. Field Service Robotics , 2005.
Show in Context CrossRef Google Scholar
53. S.B. Williams, Efficient solutions to autonomous mapping and navigation problems , 2001.
Show in Context Google Scholar
IEEE Personal Account

    Change username/password 

Purchase Details

    Payment Options
    View Purchased Documents 

Profile Information

    Communications Preferences
    Profession and Education
    Technical interests 

Need Help?

    US & Canada: +1 800 678 4333
    Worldwide: +1 732 981 0060
    Contact & Support 

Follow

About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | Privacy & Opting Out of Cookies

A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity.

© Copyright 2022 IEEE - All rights reserved.
IEEE Account

    Change Username/Password
    Update Address

Purchase Details

    Payment Options
    Order History
    View Purchased Documents

Profile Information

    Communications Preferences
    Profession and Education
    Technical Interests

Need Help?

    US & Canada: +1 800 678 4333
    Worldwide: +1 732 981 0060
    Contact & Support

    About IEEE Xplore
    Contact Us
    Help
    Accessibility
    Terms of Use
    Nondiscrimination Policy
    Sitemap
    Privacy & Opting Out of Cookies

A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity.
© Copyright 2022 IEEE - All rights reserved. Use of this web site signifies your agreement to the terms and conditions.
