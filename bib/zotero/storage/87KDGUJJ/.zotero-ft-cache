IEEE websites place cookies on your device to give you the best user experience. By using our websites, you agree to the placement of these cookies. To learn more, read our Privacy Policy.
Accept & Close

Skip to Main Content

    IEEE.org
    IEEE Xplore
    IEEE SA
    IEEE Spectrum
    More Sites 

    Cart 
    Create Account
    Personal Sign In

IEEE Xplore logo - Link to home

    Browse
    My Settings
    Help

Access provided by:
Technische Hochschule Ingolstadt
Sign Out
IEEE logo - Link to IEEE main site homepage
ADVANCED SEARCH
Conferences > 2021 IEEE/RSJ International C...
Variable-Speed Traveling Salesman Problem for Vehicles with Curvature Constrained Trajectories
Publisher: IEEE
Cite This
PDF
Kristýna Kučerová ; Petr Váňa ; Jan Faigl
All Authors
63
Full
Text Views

    Alerts

Abstract
Document Sections

    I.
    Introduction
    II.
    Related Work
    III.
    Problem Statement
    IV.
    Proposed Solution to the VS-TSP
    V.
    Computational Results

Show Full Outline
Authors
Figures
References
Keywords
Metrics
Footnotes
Abstract:
This paper presents a novel approach to the multigoal trajectory planning for vehicles with curvature-constrained trajectories such as fixed-wing aircraft. In the existing formulation called the Dubins Traveling Salesman Problem (DTSP), the vehicle speed is assumed to be constant over the whole trajectory, and that does not allow adaptation of the turning radius of the trajectory between the target locations. It does not support optimization of the overall flight time of the multi-goal trajectory by exploiting higher speeds for longer turning radii. Therefore, we propose a novel problem formulation called the Variable-Speed Traveling Salesman Problem (VS-TSP) that employs time-efficient trajectories with variable speed based on a generalization of the Dubins vehicle model, allowing multiple turning radii and change of the forward speed of the vehicle. The VS-TSP allows the vehicle to slow down if high maneuverability is necessary and speed up if high-speed turns with a large radius are beneficial to the overall tour cost. Based on the evaluation results for Cessna 172 aircraft model, the proposed VNS-based algorithm with variable speed provides up to about 20 % faster trajectories than a solution of the DTSP with a single turning radius.
Published in: 2021 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)
Date of Conference: 27 Sept.-1 Oct. 2021
Date Added to IEEE Xplore : 16 December 2021
ISBN Information:
ISSN Information:
INSPEC Accession Number: 21503993
DOI: 10.1109/IROS51168.2021.9636762
Publisher: IEEE
Conference Location: Prague, Czech Republic
Funding Agency:
SECTION I.
Introduction

Multi-goal trajectory planning for a vehicle with the minimum turning radius and fixed forward velocity is known as the Dubins Traveling Salesman Problem (DTSP) [1] with several existing approaches such as [2] , [3] . The Dubins vehicle model [4] constrains the vehicle to move forward at a constant speed, and individual point-to-point shortest paths can be found analytically. Furthermore, the cost of the multi-goal tour can be further bounded by the lower bound estimation of the optimal solution value [5] . However, the fixed speed prevents the vehicle’s acceleration capabilities from using the variable speed that directly influences the minimum turning radius. Therefore, the model is not sufficient for planning time-optimal trajectories for a vehicle that can change its speed.

In this paper, we propose to generalize the DTSP for optimizing the vehicle speed to determine faster trajectories than those with a fixed speed and a minimum turning radius. The newly introduced problem formulation is called the Variable-Speed Traveling Salesman Problem (VS-TSP), and an example of its solution is depicted in Fig. 1 .
Fig. 1.

An example of the VS-TSP instance with eight target locations (small black disks). The variable-speed trajectory (blue) found by the proposed VNS-based algorithm provides superior travel time T VS - TSP = 95 s compared to fixed minimum (green) and maximum (orange) speed trajectories the with costs T v min = 116 s and T v max = 100 s , respectively.

Show All

The VS-TSP formulation enables determining the optimal speed according to the mutual distance between the target locations. The minimum speed allows the vehicle to take advantage of its maximum possible maneuverability for very close locations. On the other hand, the maximum speed reduces the overall travel time on a trajectory between mutually distant locations.

The introduced VS-TSP formulation allows reducing the total time needed to travel the whole multi-goal trajectory. Contrary to the solution of the DTSP, a solution of the VS-TSP requires determining the speed problem between the target locations that, however, depends on the sequence of targets being found as a solution of the underlying TSP. The VS-TSP also contains two main optimization parts, as in the DTSP. First, a combinatorial part to determine the optimal sequence of visits to the given set of target locations. The second is a continuous optimization to find the fastest trajectory to visit the locations in the sequence.

We propose to solve the VS-TSP by the Variable Neighbourhood Search (VNS) based algorithm [6] initially developed for the DTSP, which faces the computational challenges with fast sequence rejection. The extended Dubins vehicle model [7] with time-efficient trajectories is employed in the proposed solution of the continuous part of the VS-TSP. Based on the reported evaluation results, the proposed combination of the approaches [6] and [7] represents an efficient solution of the introduced VS-TSP. The method allows exploiting capabilities of the vehicle better than for the DTSP formulation. Hence, more time-efficient trajectories are determined by the solution of the VS-TSP than the DTSP.

The paper is organized as follows. Related work is summarized in the following section. The VS-TSP formulation is introduced in Section III , and the proposed VNS-based method using time-efficient trajectories is described in Section IV . The computational results are reported in Section V . Conclusion and final remarks are in Section VI .
SECTION II.
Related Work

The most related problem to the proposed Variable-Speed Traveling Salesman Problem (VS-TSP) is the Dubins TSP (DTSP) [8] . The DTSP stands to determine the shortest closed-loop path that visits the given set of target locations while the minimum turning radius constraint of Dubins vehicle is met. The turning radius limits the vehicle speed, and thus a larger radius might allow faster speed at the cost of a prolonged path. A longer path might not necessarily result in a longer traveling time because of a higher allowed speed. Even though the DTSP formulation does not provide a direct way to optimize the vehicle speed according to variable turning radius, it provides a way to solve the addressed problem. Therefore, a brief overview of the DTSP and the most related approaches are presented here.

A solution of the DTSP consists of combinatorial optimization to select the optimal sequence of visits to the target locations and continuous optimization to find a curvature-constrained path for Dubins vehicle [4] . Explicit separation of these subproblems is utilized in decoupled approaches [8] [9] – [10] , where a sequence of visits is determined before finding the final Dubins tour. The sequence is determined as a solution of the Euclidean TSP, which does not consider the minimum turning radius. Both optimization parts need to be addressed simultaneously to find a near-optimal solution, e.g., using genetic algorithm [11] , memetic algorithm with local optimization [12] , unsupervised learning [3] , or sampling heading angles and transformation to the TSP [2] .

The currently best performing DTSP algorithm is based on the pre-learned surrogate model to estimate the Dubins tour cost employed in an evolutionary algorithm [13] . The generalization of the surrogate model to an arbitrarily long sequence of visits is based on a sliding window scheme that allows estimating the cost of the final trajectory using short trajectory segments called windows. Short windows enable efficient reuse of already computed trajectory segments because trajectories near the optimum often share some subsequences. The sliding window scheme has been utilized in the Variable Neighbourhood Search (VNS) based algorithm for the DTSP [6] , where a fast sequence rejection steers the search towards the optimum by quick sequence assessment. The VNS is a combinatorial meta-heuristic, which searches the neighborhood of the current solution using local search and shaking operators [14] .

The optimization of the vehicle speed has been addressed in finding time-optimal trajectories [15] that provides a list of all candidates to the optimal solution. However, the approach allows discontinuities in the vehicle speed. The authors of [7] address the acceleration limits in Dubins path that is further generalized using two different radii for the turn ends with the allowed acceleration/deceleration on the straight part of Dubins maneuver. Thus, a time-optimized speed profile is computed, and faster, albeit longer, trajectories than Dubins path with the minimum turning radius are reported.

Despite multi-goal trajectory planning with variable vehicle speeds have been proposed for multi-rotor drones [16] , [17] , there is not (to the best of the authors' knowledge) an approach for multi-goal variable-speed trajectory planning with a minimum turning radius constraint that fit motion constraints of fixed-wing vehicles. Based on the computational efficiency of the VNS-based algorithm [6] , we propose to combine it with the time-efficient trajectories [7] in the solution of the VS-TSP.
SECTION III.
Problem Statement

The Variable-Speed Traveling Salesman Problem (VS-TSP) stands to find the fastest curvature-constrained trajectory visiting a given set of target locations. The problem can be seen as a generalization of the DTSP [8] where a vehicle with a constraint on the path curvature, such as a fixed-wing aircraft, has to visit a set of target locations with a constant speed and limited minimum turning radius. Unlike in the DTSP, a variable speed in the VS-TSP combines the benefit of the high maneuverability at low vehicle speed with highspeed trajectories for mutually distant target locations.

The employed vehicle model originates from the Dubins vehicle [4] for which a variable speed is allowed. The state of the vehicle q = ( x, y, θ, v ) consists of its location ( x, y ), the heading angle θ , and speed v , i.e., q ∈ SE (2) × ℝ. The vehicle motion can be described by the equation
q ˙ = ⎡ ⎣ ⎢ ⎢ ⎢ ⎢ x ˙ y ˙ θ ˙ v ˙ ⎤ ⎦ ⎥ ⎥ ⎥ ⎥ = ⎡ ⎣ ⎢ ⎢ ⎢ v cos θ v sin θ v κ a ⎤ ⎦ ⎥ ⎥ ⎥ , (1)
View Source \begin{equation*}{\mathbf{\dot q}} = \left[ {\begin{array}{c} {\dot x} \\ {\dot y} \\ {\dot {\theta} } \\ {\dot v} \end{array}} \right] = \left[ {\begin{array}{c} {v\cos \theta } \\ {v\sin \theta } \\ {v\kappa } \\ a \end{array}} \right],\tag{1}\end{equation*} where κ is a control input representing the current curvature of the trajectory, and a representing acceleration. The curvature κ can be computed at any given point of the trajectory as
κ = x ˙ y ¨ − y ˙ x ¨ ( x ˙ 2 + y ˙ 2 ) 3 2 . (2)
View Source \begin{equation*}\kappa = \frac{{\dot x\ddot y - \dot y\ddot x}}{{{{\left( {{{\dot x}^2} + {{\dot y}^2}} \right)}^{\frac{3}{2}}}}}.\tag{2}\end{equation*}

The speed of the vehicle is limited by its minimum and maximum value
v ∈ [ v min , v max ] , (3)
View Source \begin{equation*}v \in \left[ {{v_{\min }},{v_{\max }}} \right],\tag{3}\end{equation*} and minimum/maximum acceleration
a ∈ [ a min , a max ] . (4)
View Source \begin{equation*}a \in \left[ {{a_{\min }},{a_{\max }}} \right].\tag{4}\end{equation*}

In the addressed problem, a high speed is possible only when the curvature is low, and therefore, the speed is also limited by the curvature of the trajectory κ
v ≤ K v | κ | − − − √ , (5)
View Source \begin{equation*}v \leq \sqrt {\frac{{{K_v}}}{{\left| \kappa \right|}}} ,\tag{5}\end{equation*}

where K v is a constant determining turning capability of the specific vehicle. Alternatively, the constraint might be seen such that the curvature is influenced by the speed. For fixed-wing vehicles, such as Cessna 172, the constant can be determined based on the maximum bang angle φ max and gravitational acceleration g ,
K v = g tan φ max . (6)
View Source \begin{equation*}{K_v} = g\tan {\varphi _{\max }}.\tag{6}\end{equation*}

Having the model of the vehicle and constraints on the vehicle trajectory, the VS-TSP can formally be defined as a problem to find cost-efficient tour visiting a given set of n target locations P = { p 1 , … , p n } , p i ∈ R 2 . It is an optimization problem to find the fastest trajectory Γ consisting of n trajectory segments ⟨ Γ 1 , … , Γ n ⟩ , Γ i : [ 0 , T i ] → S E ( 2 ) × R , where T i is the travel time of the i -th segment. The trajectory segments are connected into a closed-loop. Each connection between two consecutive trajectory segments is located at the one target location, i.e., each trajectory starts (ends) at one target location. The sequence of target locations visits is denoted Σ = 〈 σ 1 , …, σ n 〉 and the visiting configurations to the target locations are denoted Q = 〈q 1 , …, q n 〉. The VS-TSP thus stands to determine the optimal sequence of visiting the targets Σ, individual visiting configurations Q , and trajectory Γ with the minimum total travel time cost T . The problem is formally defined as Problem 1.

Problem 1 (Variable-Speed TSP (VS-TSP)):
min Σ , Q , Γ T = ∑ i = 1 n T i , (7)
View Source \begin{equation*}\mathop {\min }\limits_{{\Sigma },Q,{\Gamma }} \mathcal{T} = \sum\limits_{i = 1}^n {\mathcal{T}_i},\tag{7}\end{equation*}

s.t.
Γ = ⟨ Γ 1 , … , Γ n ⟩ , Γ i : [ 0 , T i ] → S E ( 2 ) × R , Γ i ( 0 ) = q i , Γ i ( T i ) = q i + 1 , q i = ( p σ i , θ i , v i ) Constraints   ( 1 ) − ( 5 )   are   met, (8) (9) (10) (11) (12)
View Source \begin{align*} & {\Gamma } = \left\langle {{{\Gamma }_1}, \ldots ,{{\Gamma }_n}} \right\rangle ,\tag{8} \\ & {{\Gamma }_i}:\left[ {0,{\mathcal{T}_i}} \right] \to SE(2) \times \mathbb{R},\tag{9}\\ &{{\Gamma }_i}(0) = {{\mathbf{q}}_{\mathbf{i}}},\quad {{\Gamma }_i}\left( {{\mathcal{T}_i}} \right) = {{\mathbf{q}}_{{\mathbf{i}} + 1}},\tag{10}\\ &{{\mathbf{q}}_{\mathbf{i}}} = \left( {{{\mathbf{p}}_{{\sigma _{\mathbf{i}}}}},{\theta _i},{v_i}} \right)\tag{11}\\ &{\text{Constraints}}\ (1) - (5)\ {\text{are}}\ {\text{met,}}\tag{12}\end{align*} where q n + 1 = def q 1 to close the trajectory into a loop.

SECTION IV.
Proposed Solution to the VS-TSP

The proposed method for solving the newly introduced Variable-Speed TSP (VS-TSP) is based on the VNS [18] for the DTSP [6] where time-efficient trajectories [7] reduce the travel time to visit the targets by selecting an appropriate turning radius separately for each turn in comparison to a single fixed radius of the DTSP. The method is summarized in Algorithm 1 , and it works as follows.

First, individual trajectories connecting the n target locations are determined for discretized vehicle states at each target location. Let have k heading angles and l speeds for each target location; then, there are nkl samples in the total. For a target location p σ i , the samples are denoted by the specific heading angle θ a i and speed v b i , where a ∈ {1, …, k }, b ∈ {1, …, l }. The mutual connections between samples are determined in computeTrajectories ( P ) as the costefficient trajectories [7] . The trajectories are computed by the closed-form solution of the generalized Dubins vehicle model with different turning radii at the initial and final endpoint of the particular trajectory segment, allowing two different speeds, the initial v I and terminal speed v F , see Fig. 2 . In the total, Θ( n 2 k 2 l 2 ) connections are possible.
Algorithm 1: Proposed VNS-based solver to the VS-TSP
Fig. 2.

Speed profiles (bottom) with different initial and terminal speed for the corresponding trajectories with different turning radius at the initial and terminal endpoint of the trajectory segment (top).

Show All

The maximum curvature (or the minimum turning radius) can be determined based on the actual speed using (5) . The vehicle speed is increased for the straight segment, if possible, to reduce the final travel time. An example of sampling for the VS-TSP is depicted in Fig. 3 .
Fig. 3.

An example of sampling possible vehicle states in the VS-TSP with k = 8 heading samples and l = 3 speed samples for each target location. Computed candidate trajectories are represented by blue curves for a single selected heading angle. The dotted circles represent turning radii corresponding to the examined speeds.

Show All

The computed costs of the trajectories between the sampled states are stored in a graph G , and a solution of the VS-TSP is found by searching for the best sequence of visits to the target locations among possible sequences. For a selected sequence Σ, the fastest trajectory is determined using dynamic programming that takes O ( n k 3 l 3 ) time because the trajectory is closed-loop. The structure of the search is depicted in Fig. 4 .

The initial sequence Σ is determined using the best insertion method [19] in initialization() (Line 2, Algorithm l). It randomly inserts the first three locations into the sequence. The remaining locations are gradually inserted into the best possible place to minimize the cost.

The initial solution is then improved by the VNS-based algorithm using the shake and local search procedures. For each iteration, the current sequence Σ is randomly changed to Σ′ in shake to try to escape from a local minimum. Then, the local search procedure improves Σ′ via searching the sequence neighborhood. A systematic search would be too expensive, and therefore, a randomized VNS [20] is utilized that examines n 2 randomly selected changes in Σ′, and applies each change that is found to be beneficial. The same neighborhood operators as in [6] are used.

The local search procedure is the most demanding part of the algorithm because, at each iteration, n 2 candidate sequences are examined to test if such a sequence is better than the current sequence Σ′. The computational burden is reduced by applying the fast rejection scheme [6] . It takes advantage of two principles to assess sequence quality using results of the short subtours quickly. First, determining the fastest trajectory for an open-loop subtour takes only O ( w k 2 l 2 ) where w is the length of the subtour. Secondly, there is an increased probability that a specific subtour is queried repetitively, and thus the already computed results are saved and reused later, which provides significant speedup, see [6] for further details.
Fig. 4.

Search graph structure to determine the fastest trajectory with cost T ( Σ ) for the utilized discretization of heading angles and vehicle speeds.

Show All
SECTION V.
Computational Results

The introduced VS-TSP formulation of the multi-goal trajectory planning is expected to reduce the travel time compared to the DTSP with a fixed speed that has been empirically evaluated in several test scenarios. The performance of the employed VNS-based algorithm is compared in generating both the constant and variable speed trajectories. Then, the scalability of the proposed approach in terms of density of the target locations ρ , the number of locations n , and the number of heading samples k is reported. Finally, the effect of the fast sequence rejection scheme [6] is examined.

All the test instances are based on the model of the Cessna l72 aircraft to evaluate the VS-TSP formulation in realistic scenarios. The vehicle speed is limited to v min = 30 ms –1 , v max = 67 ms –1 , and based on the maximum banking angle φ max = π 3 , the minimum and maximum turning radii are r min = 65.7 m and r max = 264.2 m, respectively. The acceleration limits are a min = –3 ms –2 and a max = 2 m s –2 .

The test instances have been randomly generated, and n target locations are distributed randomly in a square area with the side D according to the density ρ as
D = r min n ρ − − √ . (13)
View Source \begin{equation*}D = {r_{\min }}\sqrt {\frac{n}{\rho }}.\tag{13}\end{equation*}

For each testing scenario defined by ρ, n , and k , twenty random instances have been generated, and the median value is reported with its 60 % non-parametric confidence interval.

All the optimization methods have been implemented in Julia v1.5 and executed on a single core of the Intel Xeon Gold 6146 running at 3. 2 GHz. The computational time for solving each interval by a partial algorithm has been limited to t max = 3600 s. The speed is sampled into l discrete values from the range [ v min , v max ], and both speed limits are always part of the speed set for l > 2. The heading angles are sampled into k values uniformly from [0, 2 π ). If not specified, k = 10.
A. Influence of Variable-Speed Trajectories

The effect of variable-speed trajectories on the solution cost is examined for five different speed settings. Using only fixed speed v min or v max might be seen as the solution of the DTSP, but acceleration/deceleration is allowed during straight segments for the v min case. The variable-speed variant is computed for l ∈ {3, 5, 10} speed samples.
Fig. 5.

Evolution of the solution cost with increasing computational time for various speed samples for n = 30, ρ = 0.05, and k = 10. The bold curves represent median over twenty random instances, the semi-transparent area represent 60 % confidence interval around the median.

Show All
Fig. 6.

Best found trajectories (top) for the VS-TSP instances with n = 30, ρ = 0.05, and k = 10. The trajectories are accompanied with corresponding speed profiles (bottom) from which the solution cost T is computed together with the trajectory length ℒ.

Show All

Evolution of the solution cost with increasing computational time t max for n = 30 with the density ρ = 0.05 is depicted in Fig. 5 . The results indicate that a single-speed does not need a significant time to pre-compute all possible trajectories. However, once the trajectories are computed, the variable speed benefits from faster trajectories, and the overall solution cost is significantly better than for the solution of the DTSP with the fixed speed v min or v max .

An example of the best-found solutions together with the corresponding speed profiles are depicted in Fig. 6 . Although the minimum-speed trajectory v = v min is the shortest one ℒ = 8065m, it requires the longest time to travel T = 224 s . For the maximum-speed trajectory v = v max , the travel time is only slightly lower T = 213 s because the trajectory is almost twice longer than for v = v min . On the other hand, the variable-speed model provides significantly better results even for l = 3 because it can utilize slower and faster speeds in one multi-goal trajectory.
B. Influence of Heading Angles Sampling

The influence of the number of heading samples k is studied for k ∈ {4, 6, 8, 10, 12, 16, 20} and l = 5 in twenty random instances with n = 30, ρ = 0.05. The computational time has been limited to t max = 10 000 s, and the solution cost for the selected time stamps of the execution time is depicted in Fig. 7 . The results suggest that increasing number of heading samples improves the solution quality. A small improvement in the solution cost can be seen from k = 16 to k = 20 compared to k = 4 and k = 6, because more samples are more computationally demanding.
C. Influence of the Target Density

An influence of the target density ρ is shown in Fig. 8 . In all scenarios, the variable-speed approach yields better results than using a single speed. For sparse instances, v max leads to better solutions than v min , which is reverted for denser instances. For ρ = 0.05, the solution cost of the both v min and v max is almost identical, which explains the results for v min and v max presented in Fig. 5 .
Fig. 7.

Solution cost over 20 random instances with n = 30, ρ = 0.05, l = 5, and increasing number of heading samples k. A solution is not found within the given time limit for k = 20 and t max = 100 s, which is represented by the unbounded bar.

Show All
Fig. 8.

Solution cost in 20 random instances with n = 30 for increasing target density ρ .

Show All
D. Scalability with the Number of Targets

Results on the scalability of the proposed VNS-based solver to the VS-TSP are depicted in Fig. 9 for n ∈ {10, 20, 30, 40} targets. The improvement in the solution cost by exploiting variable speed is noticeable for all test cases. It is expected behavior because even for a small number of targets, the mutual distances between locations vary, and there is a potential for improvement when using multiple speeds, i.e., multiple turning radii. Therefore, the results can be generalized for instances with different n .
Fig. 9.

Scalability of the proposed VS-TSP solver with an increasing number of targets n. The results are summarized from 20 random instances.

Show All
E. Iterations Over Time

The effect of fast sequence rejection [6] on average computational time per a single comparison between the best solution found so far and newly examined solution is depicted in Fig. 10 . The comparison is less demanding with increasing runtime because more results on short subsequences are reused. Hence, the computational time is spent in examining more sequences and thus finding a better solution.
Fig. 10.

Average time per single comparison of two candidate sequences.

Show All
SECTION VI.
CONCLUSION

In the paper, a novel problem formulation called the Variable-Speed Traveling Salesman Problem (VS-TSP) is introduced as a generalization of the existing DTSP to utilize variable vehicle speed and thus determine faster trajectories by an efficient selection of turning radius according to the density of target locations. The proposed VNS-based method utilizes discretization of the possible vehicle speed utilized in the multi-radius extension of the Dubins vehicle model to find time-efficient trajectories. Based on the presented computational results, a relatively high number of speed samples are needed to significantly improve the solution of the herein addressed multi-goal trajectory planning with curvature-constrained trajectories. However, the employed fast sequence rejection method based on the sliding window scheme reduces the computational load. It thus enables searching a larger search space than for a single-vehicle speed of the regular DTSP. Overall, the proposed VS-TSP-based method produces up to about 20 % faster trajectories compared to the utilization of a single constant speed.

Authors
Figures
References
Keywords
Metrics
Footnotes
   Back to Results   
More Like This
A Review of Firefly Algorithms for Path Planning, Vehicle Routing and Traveling Salesman Problems

2018 2nd International Conference on Electrical Engineering and Informatics (ICon EEI)

Published: 2018
Coverage Path Planning for Decomposition Reconfigurable Grid-Maps Using Deep Reinforcement Learning Based Travelling Salesman Problem

IEEE Access

Published: 2020
Show More
References
References is not available for this document.
IEEE Personal Account

    Change username/password 

Purchase Details

    Payment Options
    View Purchased Documents 

Profile Information

    Communications Preferences
    Profession and Education
    Technical interests 

Need Help?

    US & Canada: +1 800 678 4333
    Worldwide: +1 732 981 0060
    Contact & Support 

Follow

About IEEE Xplore | Contact Us | Help | Accessibility | Terms of Use | Nondiscrimination Policy | IEEE Ethics Reporting | Sitemap | Privacy & Opting Out of Cookies

A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity.

© Copyright 2022 IEEE - All rights reserved.
